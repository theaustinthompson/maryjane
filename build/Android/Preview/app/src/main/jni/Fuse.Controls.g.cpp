// This file was generated based on '(multiple files)'.
// WARNING: Changes might be lost if you edit this file directly.

#include <_root.FuseControlsNav-a8c01cdb.h>
#include <_root.FuseControlsPri-3832896e.h>
#include <_root.FuseControlsPri-38e137c8.h>
#include <_root.FuseControlsPri-3bbae333.h>
#include <_root.FuseControlsPri-5e35c2db.h>
#include <_root.FuseControlsPri-7b4ecfe6.h>
#include <_root.FuseControlsPri-8507d6ea.h>
#include <_root.FuseControlsPri-accbb5bd.h>
#include <_root.FuseControlsPri-ca138e33.h>
#include <_root.FuseControlsPri-ce42971.h>
#include <_root.FuseControlsPri-d52a5a11.h>
#include <_root.FuseControlsPri-d9ada289.h>
#include <_root.FuseControlsPri-e9d2ee5b.h>
#include <_root.FuseControlsScr-48813899.h>
#include <_root.FuseControlsScr-f1bcb258.h>
#include <Android.Base.Wrappers.JWrapper.h>
#include <Android.Base.Wrappers-88f7a41f.h>
#include <Fuse.Android.Controls.WebView.h>
#include <Fuse.Animations.Animator.h>
#include <Fuse.Animations.Change-1.h>
#include <Fuse.Animations.Easing.h>
#include <Fuse.Animations.Keyframe.h>
#include <Fuse.Animations.Move.h>
#include <Fuse.Animations.Scale.h>
#include <Fuse.Animations.TrackAnimator.h>
#include <Fuse.Animations.Trans-997c8373.h>
#include <Fuse.AppBase.h>
#include <Fuse.Binding.h>
#include <Fuse.Common.Blitter.h>
#include <Fuse.Controls.Arc.h>
#include <Fuse.Controls.AutoCap-526a856d.h>
#include <Fuse.Controls.AutoCorrectHint.h>
#include <Fuse.Controls.BackButton.h>
#include <Fuse.Controls.BottomB-f0a90651.h>
#include <Fuse.Controls.BottomF-14cf09.h>
#include <Fuse.Controls.Buffere-2ce2abf.h>
#include <Fuse.Controls.Button.h>
#include <Fuse.Controls.Button.Template.h>
#include <Fuse.Controls.Button.Template1.h>
#include <Fuse.Controls.Button.Template2.h>
#include <Fuse.Controls.ButtonBase.h>
#include <Fuse.Controls.Circle.h>
#include <Fuse.Controls.ClientPanel.h>
#include <Fuse.Controls.Container.h>
#include <Fuse.Controls.ContentControl.h>
#include <Fuse.Controls.Control.h>
#include <Fuse.Controls.Curve.h>
#include <Fuse.Controls.CurveClose.h>
#include <Fuse.Controls.CurveExtrude.h>
#include <Fuse.Controls.CurvePo-af310e85.h>
#include <Fuse.Controls.CurvePoint.h>
#include <Fuse.Controls.CurveStyle.h>
#include <Fuse.Controls.DatePic-ba52db1c.h>
#include <Fuse.Controls.DatePic-bee48351.h>
#include <Fuse.Controls.DatePic-d25c7d4b.h>
#include <Fuse.Controls.DatePicker.h>
#include <Fuse.Controls.DatePickerBase.h>
#include <Fuse.Controls.Default-2aa05aed.h>
#include <Fuse.Controls.DockPanel.h>
#include <Fuse.Controls.EdgeNav-d57668f.h>
#include <Fuse.Controls.EdgeNavigator.h>
#include <Fuse.Controls.Element-32c554a5.h>
#include <Fuse.Controls.Ellipse.h>
#include <Fuse.Controls.EllipticalShape.h>
#include <Fuse.Controls.Extensions.h>
#include <Fuse.Controls.Fallbac-2048a2c7.h>
#include <Fuse.Controls.Fallbac-cc306b75.h>
#include <Fuse.Controls.FileVideoSource.h>
#include <Fuse.Controls.FitMode.h>
#include <Fuse.Controls.Graphic-a81f3443.h>
#include <Fuse.Controls.Graphic-a9e50d2e.h>
#include <Fuse.Controls.GraphicsView.h>
#include <Fuse.Controls.Grid.h>
#include <Fuse.Controls.HTML.h>
#include <Fuse.Controls.IDatePickerView.h>
#include <Fuse.Controls.Image.h>
#include <Fuse.Controls.ImageElementDraw.h>
#include <Fuse.Controls.INativeViewRoot.h>
#include <Fuse.Controls.IProxyH-158e5dc.h>
#include <Fuse.Controls.IProxyHost.h>
#include <Fuse.Controls.ISourceReceiver.h>
#include <Fuse.Controls.ITextEditControl.h>
#include <Fuse.Controls.ITextRenderer.h>
#include <Fuse.Controls.ITimePickerView.h>
#include <Fuse.Controls.IWebView.h>
#include <Fuse.Controls.JavaScriptCall.h>
#include <Fuse.Controls.Keyfram-45465401.h>
#include <Fuse.Controls.LayoutC-4864ea29.h>
#include <Fuse.Controls.LayoutControl.h>
#include <Fuse.Controls.LoadHtmlCall.h>
#include <Fuse.Controls.MobileT-379acadf.h>
#include <Fuse.Controls.MobileT-6fc61ba9.h>
#include <Fuse.Controls.MobileTextEdit.h>
#include <Fuse.Controls.MultiLayout.h>
#include <Fuse.Controls.MultiLayoutPanel.h>
#include <Fuse.Controls.Native.-11768b55.h>
#include <Fuse.Controls.Native.-143c1647.h>
#include <Fuse.Controls.Native.-144a8301.h>
#include <Fuse.Controls.Native.-20f6897.h>
#include <Fuse.Controls.Native.-3800373f.h>
#include <Fuse.Controls.Native.-454aa827.h>
#include <Fuse.Controls.Native.-51b6e8e5.h>
#include <Fuse.Controls.Native.-56f4c151.h>
#include <Fuse.Controls.Native.-5999be91.h>
#include <Fuse.Controls.Native.-5b6a09a7.h>
#include <Fuse.Controls.Native.-65e8a589.h>
#include <Fuse.Controls.Native.-737f180b.h>
#include <Fuse.Controls.Native.-7ba51662.h>
#include <Fuse.Controls.Native.-92d9dd5d.h>
#include <Fuse.Controls.Native.-9abb3393.h>
#include <Fuse.Controls.Native.-a0a2bb3d.h>
#include <Fuse.Controls.Native.-a1ee0915.h>
#include <Fuse.Controls.Native.-a5b5d1b.h>
#include <Fuse.Controls.Native.-ada75d53.h>
#include <Fuse.Controls.Native.-ae84b26e.h>
#include <Fuse.Controls.Native.-b1307a12.h>
#include <Fuse.Controls.Native.-b2e724e6.h>
#include <Fuse.Controls.Native.-b47aa7c0.h>
#include <Fuse.Controls.Native.-ba5282a0.h>
#include <Fuse.Controls.Native.-bda9e869.h>
#include <Fuse.Controls.Native.-be81896e.h>
#include <Fuse.Controls.Native.-c20be635.h>
#include <Fuse.Controls.Native.-c67cabe.h>
#include <Fuse.Controls.Native.-cb7bb609.h>
#include <Fuse.Controls.Native.-ce8863c0.h>
#include <Fuse.Controls.Native.-d04e9e71.h>
#include <Fuse.Controls.Native.-dcf1df13.h>
#include <Fuse.Controls.Native.-dd7dd49d.h>
#include <Fuse.Controls.Native.-e48daf2f.h>
#include <Fuse.Controls.Native.-e502cdf1.h>
#include <Fuse.Controls.Native.-eb2a3c99.h>
#include <Fuse.Controls.Native.-f43d469d.h>
#include <Fuse.Controls.Native.-f67615b8.h>
#include <Fuse.Controls.Native.-f8b7cf50.h>
#include <Fuse.Controls.Native.-fbe3e9f9.h>
#include <Fuse.Controls.Native.ITextEdit.h>
#include <Fuse.Controls.Native.ITextView.h>
#include <Fuse.Controls.Native.IView.h>
#include <Fuse.Controls.Native.IViewHost.h>
#include <Fuse.Controls.NativeV-69528fb8.h>
#include <Fuse.Controls.NativeV-7619342.h>
#include <Fuse.Controls.NativeV-dd06d507.h>
#include <Fuse.Controls.NativeViewHost.h>
#include <Fuse.Controls.Navigat-11660598.h>
#include <Fuse.Controls.Navigat-1f9018a.h>
#include <Fuse.Controls.Navigat-2fbffbd2.h>
#include <Fuse.Controls.Navigat-325d320d.h>
#include <Fuse.Controls.Navigat-340a5907.h>
#include <Fuse.Controls.Navigat-3abd94bc.h>
#include <Fuse.Controls.Navigat-4da4086.h>
#include <Fuse.Controls.Navigat-5c3cda6.h>
#include <Fuse.Controls.Navigat-70e90308.h>
#include <Fuse.Controls.Navigat-72feefa7.h>
#include <Fuse.Controls.Navigat-830df8a4.h>
#include <Fuse.Controls.Navigat-831df711.h>
#include <Fuse.Controls.Navigat-8b5bc4f.h>
#include <Fuse.Controls.Navigat-8c78e52a.h>
#include <Fuse.Controls.Navigat-9705f33a.h>
#include <Fuse.Controls.Navigat-9f619694.h>
#include <Fuse.Controls.Navigat-bf837724.h>
#include <Fuse.Controls.Navigat-c123d44e.h>
#include <Fuse.Controls.Navigat-cbc78797.h>
#include <Fuse.Controls.Navigat-d377da72.h>
#include <Fuse.Controls.Navigat-d5b6859a.h>
#include <Fuse.Controls.Navigat-dfe8cc6e.h>
#include <Fuse.Controls.Navigat-e43a213c.h>
#include <Fuse.Controls.Navigat-fe23abf3.h>
#include <Fuse.Controls.NavigationBar.h>
#include <Fuse.Controls.Navigator.h>
#include <Fuse.Controls.NavigatorSwipe.h>
#include <Fuse.Controls.Number.h>
#include <Fuse.Controls.Page.h>
#include <Fuse.Controls.PageCon-1b4c5138.h>
#include <Fuse.Controls.PageCon-d20d0563.h>
#include <Fuse.Controls.PageControl.h>
#include <Fuse.Controls.PageFreeze.h>
#include <Fuse.Controls.PageInd-b9aff4dc.h>
#include <Fuse.Controls.PageIndicator.h>
#include <Fuse.Controls.PageIndicatorDot.h>
#include <Fuse.Controls.PagePrepareBusy.h>
#include <Fuse.Controls.PageView.h>
#include <Fuse.Controls.Panel.h>
#include <Fuse.Controls.Path.h>
#include <Fuse.Controls.Path.Positioning.h>
#include <Fuse.Controls.PathExp-dec22dbc.h>
#include <Fuse.Controls.PathExpression.h>
#include <Fuse.Controls.PathMeasureMode.h>
#include <Fuse.Controls.PathPoi-36c103d6.h>
#include <Fuse.Controls.PathPointAtTime.h>
#include <Fuse.Controls.PathTan-291358e6.h>
#include <Fuse.Controls.PathTan-7b2c5e88.h>
#include <Fuse.Controls.Placeholder.h>
#include <Fuse.Controls.Primiti-9017cc31.h>
#include <Fuse.Controls.RangeControl.h>
#include <Fuse.Controls.RangeControl2D.h>
#include <Fuse.Controls.Rectangle.h>
#include <Fuse.Controls.RegularPolygon.h>
#include <Fuse.Controls.RemoveType.h>
#include <Fuse.Controls.ReuseType.h>
#include <Fuse.Controls.RightFr-bdb2888a.h>
#include <Fuse.Controls.Router_-99c7a92d.h>
#include <Fuse.Controls.ScrollDirections.h>
#include <Fuse.Controls.ScrollP-640a7167.h>
#include <Fuse.Controls.ScrollP-f741d328.h>
#include <Fuse.Controls.ScrollV-56310436.h>
#include <Fuse.Controls.ScrollV-608d9933.h>
#include <Fuse.Controls.ScrollV-8441b02b.h>
#include <Fuse.Controls.ScrollV-9171ed6c.h>
#include <Fuse.Controls.ScrollV-ab3d9aaf.h>
#include <Fuse.Controls.ScrollV-b691622.h>
#include <Fuse.Controls.ScrollV-dc7470e7.h>
#include <Fuse.Controls.ScrollView.h>
#include <Fuse.Controls.ScrollViewBase.h>
#include <Fuse.Controls.ScrollViewPager.h>
#include <Fuse.Controls.SegmentedShape.h>
#include <Fuse.Controls.Shadow.-722079e.h>
#include <Fuse.Controls.Shadow.h>
#include <Fuse.Controls.Shape.h>
#include <Fuse.Controls.Shape.R-4809cb74.h>
#include <Fuse.Controls.SingleV-2af5ef98.h>
#include <Fuse.Controls.SingleV-744211cd.h>
#include <Fuse.Controls.SingleV-9df3d9e5.h>
#include <Fuse.Controls.SingleViewHost.h>
#include <Fuse.Controls.Slider.h>
#include <Fuse.Controls.Slider.Template.h>
#include <Fuse.Controls.Slider.Template1.h>
#include <Fuse.Controls.Slider.Template2.h>
#include <Fuse.Controls.StackPanel.h>
#include <Fuse.Controls.Star.h>
#include <Fuse.Controls.StatusB-d3f2d898.h>
#include <Fuse.Controls.Switch.h>
#include <Fuse.Controls.Switch.Template.h>
#include <Fuse.Controls.Switch.Template1.h>
#include <Fuse.Controls.Switch.Template2.h>
#include <Fuse.Controls.Text.h>
#include <Fuse.Controls.TextAlignment.h>
#include <Fuse.Controls.TextBlock.h>
#include <Fuse.Controls.TextBox.h>
#include <Fuse.Controls.TextCon-f0b9bb41.h>
#include <Fuse.Controls.TextCon-fc687c10.h>
#include <Fuse.Controls.TextControl.h>
#include <Fuse.Controls.TextEdi-1dd967ae.h>
#include <Fuse.Controls.TextEdit.h>
#include <Fuse.Controls.TextEditRenderer.h>
#include <Fuse.Controls.TextInp-90db19ac.h>
#include <Fuse.Controls.TextInp-cfb86f57.h>
#include <Fuse.Controls.TextInp-e41606bc.h>
#include <Fuse.Controls.TextInp-fdd74153.h>
#include <Fuse.Controls.TextInput.h>
#include <Fuse.Controls.TextInputControl.h>
#include <Fuse.Controls.TextInputHint.h>
#include <Fuse.Controls.TextTruncation.h>
#include <Fuse.Controls.TextView.h>
#include <Fuse.Controls.TextWrapping.h>
#include <Fuse.Controls.TimePic-2c227a32.h>
#include <Fuse.Controls.TimePic-e1c8f2c.h>
#include <Fuse.Controls.TimePic-f612ecfd.h>
#include <Fuse.Controls.TimePicker.h>
#include <Fuse.Controls.TimePickerBase.h>
#include <Fuse.Controls.ToggleControl.h>
#include <Fuse.Controls.TopFram-291f3101.h>
#include <Fuse.Controls.TreeRen-26cd82a8.h>
#include <Fuse.Controls.TreeRen-789810ec.h>
#include <Fuse.Controls.TreeRenderer.h>
#include <Fuse.Controls.URISche-2ed3a615.h>
#include <Fuse.Controls.UrlVideoSource.h>
#include <Fuse.Controls.VectorLayer.h>
#include <Fuse.Controls.Video.h>
#include <Fuse.Controls.VideoIm-b5ceac8f.h>
#include <Fuse.Controls.VideoSource.h>
#include <Fuse.Controls.Viewbox.h>
#include <Fuse.Controls.WebView.h>
#include <Fuse.Controls.WrapPanel.h>
#include <Fuse.Diagnostics.h>
#include <Fuse.DrawContext.h>
#include <Fuse.Drawing.Brush.h>
#include <Fuse.Drawing.DrawObjectWatcher.h>
#include <Fuse.Drawing.DynamicBrush.h>
#include <Fuse.Drawing.FillRule.h>
#include <Fuse.Drawing.IDrawObj-d34d045e.h>
#include <Fuse.Drawing.ISolidColor.h>
#include <Fuse.Drawing.ISurfaceDrawable.h>
#include <Fuse.Drawing.LineMetrics.h>
#include <Fuse.Drawing.LineParser.h>
#include <Fuse.Drawing.LineSegment.h>
#include <Fuse.Drawing.LineSegmentFlags.h>
#include <Fuse.Drawing.LineSegments.h>
#include <Fuse.Drawing.LineSegmentType.h>
#include <Fuse.Drawing.LineSplitter.h>
#include <Fuse.Drawing.Primitiv-8e6a7ca2.h>
#include <Fuse.Drawing.Primitives.Circle.h>
#include <Fuse.Drawing.Primitives.Wedge.h>
#include <Fuse.Drawing.ResampleMode.h>
#include <Fuse.Drawing.SolidColor.h>
#include <Fuse.Drawing.StaticSolidColor.h>
#include <Fuse.Drawing.Stroke.h>
#include <Fuse.Drawing.StrokeAlignment.h>
#include <Fuse.Drawing.Surface.h>
#include <Fuse.Drawing.SurfaceManager.h>
#include <Fuse.Drawing.SurfacePath.h>
#include <Fuse.Drawing.SurfaceUtil.h>
#include <Fuse.Effects.DropShadow.h>
#include <Fuse.Elements.Alignment.h>
#include <Fuse.Elements.AlignmentHelpers.h>
#include <Fuse.Elements.BoxSizing.h>
#include <Fuse.Elements.Element.h>
#include <Fuse.Elements.Element-bd497d56.h>
#include <Fuse.Elements.HitTestMode.h>
#include <Fuse.Elements.Interna-78588865.h>
#include <Fuse.Elements.ITreeRenderer.h>
#include <Fuse.Elements.LayoutM-516f33ff.h>
#include <Fuse.Elements.StretchDirection.h>
#include <Fuse.Elements.StretchMode.h>
#include <Fuse.Elements.StretchSizing.h>
#include <Fuse.Elements.Visibility.h>
#include <Fuse.FastMatrix.h>
#include <Fuse.FastProperty2.h>
#include <Fuse.Font.h>
#include <Fuse.FramebufferPool.h>
#include <Fuse.FrustumViewport.h>
#include <Fuse.Gestures.KeepFocusInView.h>
#include <Fuse.Gestures.LinearR-c00ebdcf.h>
#include <Fuse.Gestures.Scroller.h>
#include <Fuse.Gestures.Swiped.h>
#include <Fuse.Gestures.SwipedHow.h>
#include <Fuse.Gestures.SwipeDirection.h>
#include <Fuse.Gestures.SwipeGesture.h>
#include <Fuse.Gestures.SwipeType.h>
#include <Fuse.Gestures.SwipingAnimation.h>
#include <Fuse.Gestures.Tapped.h>
#include <Fuse.Gestures.TappedArgs.h>
#include <Fuse.Gestures.TappedHandler.h>
#include <Fuse.Gestures.WhilePressed.h>
#include <Fuse.HitTestContext.h>
#include <Fuse.IArray.h>
#include <Fuse.ICommonViewport.h>
#include <Fuse.IFrustum.h>
#include <Fuse.ILoading.h>
#include <Fuse.ILoadingStatic.h>
#include <Fuse.Input.Focus.h>
#include <Fuse.Input.FocusDelegator.h>
#include <Fuse.Input.FocusNavig-66c283ba.h>
#include <Fuse.Input.GesturePriority.h>
#include <Fuse.Input.PointerEventArgs.h>
#include <Fuse.Internal.Curves.h>
#include <Fuse.Internal.Drawing-d2380448.h>
#include <Fuse.Internal.DrawManager.h>
#include <Fuse.Internal.IImageC-c450902.h>
#include <Fuse.Internal.ImageContainer.h>
#include <Fuse.Internal.SizingContainer.h>
#include <Fuse.InvalidateLayoutReason.h>
#include <Fuse.IObject.h>
#include <Fuse.ITranslationMode.h>
#include <Fuse.IViewport.h>
#include <Fuse.Json.h>
#include <Fuse.Layer.h>
#include <Fuse.LayoutDependent.h>
#include <Fuse.LayoutParams.h>
#include <Fuse.LayoutPriority.h>
#include <Fuse.LayoutRole.h>
#include <Fuse.Layouts.Column.h>
#include <Fuse.Layouts.Dock.h>
#include <Fuse.Layouts.DockLayout.h>
#include <Fuse.Layouts.FlowDirection.h>
#include <Fuse.Layouts.GridChildOrder.h>
#include <Fuse.Layouts.GridLayout.h>
#include <Fuse.Layouts.Layout.h>
#include <Fuse.Layouts.Layouts.h>
#include <Fuse.Layouts.Orientation.h>
#include <Fuse.Layouts.Row.h>
#include <Fuse.Layouts.StackLayout.h>
#include <Fuse.Layouts.StackLayoutMode.h>
#include <Fuse.Layouts.WrapLayout.h>
#include <Fuse.Marshal.h>
#include <Fuse.Motion.MotionConfig.h>
#include <Fuse.Motion.ScrollViewMotion.h>
#include <Fuse.Navigation.Activ-5bc1c951.h>
#include <Fuse.Navigation.Activ-7d976650.h>
#include <Fuse.Navigation.Allow-1def7c6f.h>
#include <Fuse.Navigation.Child-aa7f773f.h>
#include <Fuse.Navigation.Dynam-e172a191.h>
#include <Fuse.Navigation.EdgeNavigation.h>
#include <Fuse.Navigation.EndSeekArgs.h>
#include <Fuse.Navigation.Enter-a69250fd.h>
#include <Fuse.Navigation.Expli-27e79c7b.h>
#include <Fuse.Navigation.Histo-b65f239b.h>
#include <Fuse.Navigation.IBase-84e3f965.h>
#include <Fuse.Navigation.INavigation.h>
#include <Fuse.Navigation.IRouterOutlet.h>
#include <Fuse.Navigation.ModifyRouteHow.h>
#include <Fuse.Navigation.Navig-11678f15.h>
#include <Fuse.Navigation.Navig-32ba495d.h>
#include <Fuse.Navigation.Navig-3e3f6fb9.h>
#include <Fuse.Navigation.Navig-4be788bd.h>
#include <Fuse.Navigation.Navigation.h>
#include <Fuse.Navigation.NavigationArgs.h>
#include <Fuse.Navigation.NavigationEdge.h>
#include <Fuse.Navigation.NavigationMode.h>
#include <Fuse.Navigation.Navig-b94564f6.h>
#include <Fuse.Navigation.Navig-c3ed68c1.h>
#include <Fuse.Navigation.Navig-f3bd6778.h>
#include <Fuse.Navigation.OutletType.h>
#include <Fuse.Navigation.PageData.h>
#include <Fuse.Navigation.PagesMap.h>
#include <Fuse.Navigation.Route-2abd492c.h>
#include <Fuse.Navigation.Route-5749b2f4.h>
#include <Fuse.Navigation.Route-6d1e2248.h>
#include <Fuse.Navigation.Route-8eb7c589.h>
#include <Fuse.Navigation.Route-95c34204.h>
#include <Fuse.Navigation.Route-ee33f311.h>
#include <Fuse.Navigation.Router.h>
#include <Fuse.Navigation.RouterModify.h>
#include <Fuse.Navigation.RouterPage.h>
#include <Fuse.Navigation.RouterRequest.h>
#include <Fuse.Navigation.Routi-30764b7e.h>
#include <Fuse.Navigation.RoutingResult.h>
#include <Fuse.Navigation.SwipeDirection.h>
#include <Fuse.Navigation.SwipeNavigate.h>
#include <Fuse.Navigation.UpdateSeekArgs.h>
#include <Fuse.Navigation.Visua-f5708ad5.h>
#include <Fuse.Node.ContextDataResult.h>
#include <Fuse.Node.DataType.h>
#include <Fuse.Node.h>
#include <Fuse.NodeGroupBase.Co-a2bdc185.h>
#include <Fuse.NodeGroupBase.h>
#include <Fuse.OrthographicFrustum.h>
#include <Fuse.Platform.ApplicationState.h>
#include <Fuse.Platform.Lifecycle.h>
#include <Fuse.Platform.SystemU-2024c55a.h>
#include <Fuse.Platform.SystemUI.h>
#include <Fuse.Properties.h>
#include <Fuse.PropertyHandle.h>
#include <Fuse.Ray.h>
#include <Fuse.Reactive.BindingMode.h>
#include <Fuse.Reactive.Constan-264ec80.h>
#include <Fuse.Reactive.Constant.h>
#include <Fuse.Reactive.DataBinding.h>
#include <Fuse.Reactive.Each.h>
#include <Fuse.Reactive.Express-2cf41af6.h>
#include <Fuse.Reactive.Express-46994d37.h>
#include <Fuse.Reactive.Express-bdb0a595.h>
#include <Fuse.Reactive.Expression.h>
#include <Fuse.Reactive.IContext.h>
#include <Fuse.Reactive.IExpression.h>
#include <Fuse.Reactive.IListener.h>
#include <Fuse.Reactive.Instantiator.h>
#include <Fuse.Reactive.IObservableArray.h>
#include <Fuse.Reactive.ObserverMap-1.h>
#include <Fuse.Reactive.Property.h>
#include <Fuse.Resources.Exif.I-cf73dc79.h>
#include <Fuse.Resources.ImageS-355caaa1.h>
#include <Fuse.Resources.ImageS-a985306c.h>
#include <Fuse.Resources.ImageS-d58bb329.h>
#include <Fuse.Resources.ImageSource.h>
#include <Fuse.Resources.MemoryPolicy.h>
#include <Fuse.Scripting.BoolChangedArgs.h>
#include <Fuse.Scripting.Context.h>
#include <Fuse.Scripting.Double-14a48a40.h>
#include <Fuse.Scripting.IEvent-434826af.h>
#include <Fuse.Scripting.ScriptClass.h>
#include <Fuse.Scripting.ScriptMember.h>
#include <Fuse.Scripting.ScriptMethod1-1.h>
#include <Fuse.Scripting.String-a37c2db8.h>
#include <Fuse.Time.h>
#include <Fuse.Translation.h>
#include <Fuse.TranslationModes.h>
#include <Fuse.Triggers.Actions.Toggle.h>
#include <Fuse.Triggers.Actions-b3c1f4a1.h>
#include <Fuse.Triggers.Actions-b5190bae.h>
#include <Fuse.Triggers.Actions-fcab7e57.h>
#include <Fuse.Triggers.BusyTask.h>
#include <Fuse.Triggers.BusyTaskActivity.h>
#include <Fuse.Triggers.BusyTaskMatch.h>
#include <Fuse.Triggers.Progres-182f6b55.h>
#include <Fuse.Triggers.Transition.h>
#include <Fuse.Triggers.Trigger.h>
#include <Fuse.Triggers.WhileBool.h>
#include <Fuse.Triggers.WhileDisabled.h>
#include <Fuse.Triggers.WhileFocused.h>
#include <Fuse.Triggers.WhileFocusWithin.h>
#include <Fuse.UpdateManager.h>
#include <Fuse.UpdateStage.h>
#include <Fuse.ViewportHelpers.h>
#include <Fuse.Visual.h>
#include <Fuse.VisualBounds.h>
#include <Fuse.VisualContext.h>
#include <Java.Object.h>
#include <jni.h>
#include <Uno.Action.h>
#include <Uno.Action1-1.h>
#include <Uno.Action2-2.h>
#include <Uno.ArgumentException.h>
#include <Uno.Bool.h>
#include <Uno.Collections.Dicti-d1699346.h>
#include <Uno.Collections.Dictionary-2.h>
#include <Uno.Collections.Enume-8ddd045.h>
#include <Uno.Collections.ICollection-1.h>
#include <Uno.Collections.IEnumerator.h>
#include <Uno.Collections.IEnumerator1-1.h>
#include <Uno.Collections.IList-1.h>
#include <Uno.Collections.KeyValuePair-2.h>
#include <Uno.Collections.List-1.h>
#include <Uno.Collections.RootableList-1.h>
#include <Uno.Color.h>
#include <Uno.Compiler.ExportTa-39be7c2b.h>
#include <Uno.Delegate.h>
#include <Uno.Diagnostics.Debug.h>
#include <Uno.Diagnostics.Debug-5d778620.h>
#include <Uno.Double.h>
#include <Uno.EventArgs.h>
#include <Uno.EventHandler.h>
#include <Uno.EventHandler1-1.h>
#include <Uno.Exception.h>
#include <Uno.Float.h>
#include <Uno.Float2.h>
#include <Uno.Float3.h>
#include <Uno.Float3x3.h>
#include <Uno.Float4.h>
#include <Uno.Float4x4.h>
#include <Uno.Func1-2.h>
#include <Uno.Func3-4.h>
#include <Uno.Graphics.Framebuffer.h>
#include <Uno.Graphics.PolygonFace.h>
#include <Uno.Graphics.SamplerState.h>
#include <Uno.Graphics.Texture2D.h>
#include <Uno.IDisposable.h>
#include <Uno.Int.h>
#include <Uno.Int2.h>
#include <Uno.Math.h>
#include <Uno.Matrix.h>
#include <Uno.Object.h>
#include <Uno.Predicate-1.h>
#include <Uno.Rect.h>
#include <Uno.Recti.h>
#include <Uno.Runtime.Implement-eca777ec.h>
#include <Uno.String.h>
#include <Uno.Threading.Monitor.h>
#include <Uno.Type.h>
#include <Uno.UInt.h>
#include <Uno.UX.FileSource.h>
#include <Uno.UX.IPropertyListener.h>
#include <Uno.UX.Property.h>
#include <Uno.UX.Property1-1.h>
#include <Uno.UX.PropertyAccessor.h>
#include <Uno.UX.PropertyObject.h>
#include <Uno.UX.Selector.h>
#include <Uno.UX.Size.h>
#include <Uno.UX.Size2.h>
#include <Uno.UX.Template.h>
#include <Uno.UX.Unit.h>
#include <Uno.UX.ValueChangedArgs-1.h>
#include <Uno.UX.ValueChangedHandler-1.h>
#include <Uno.Vector.h>
#include <Uno/JNIHelper.h>
static uString* STRINGS[150];
static uType* TYPES[111];

namespace g{
namespace Fuse{
namespace Controls{

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\PageControl.Pages.uno
// --------------------------------------------------------------------------------------------------------

// private sealed class PageControl.AddedPage :85
// {
static void PageControl__AddedPage_build(uType* type)
{
    type->SetFields(0,
        ::g::Uno::String_typeof(), offsetof(PageControl__AddedPage, Template), 0,
        ::g::Fuse::Visual_typeof(), offsetof(PageControl__AddedPage, Visual), 0,
        uObject_typeof(), offsetof(PageControl__AddedPage, Data), 0,
        ::g::Fuse::Navigation::RouterPage_typeof(), offsetof(PageControl__AddedPage, Page), 0);
}

uType* PageControl__AddedPage_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 4;
    options.ObjectSize = sizeof(PageControl__AddedPage);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.PageControl.AddedPage", options);
    type->fp_build_ = PageControl__AddedPage_build;
    type->fp_ctor_ = (void*)PageControl__AddedPage__New1_fn;
    return type;
}

// public generated AddedPage() :85
void PageControl__AddedPage__ctor__fn(PageControl__AddedPage* __this)
{
    __this->ctor_();
}

// public generated AddedPage New() :85
void PageControl__AddedPage__New1_fn(PageControl__AddedPage** __retval)
{
    *__retval = PageControl__AddedPage::New1();
}

// public generated AddedPage() [instance] :85
void PageControl__AddedPage::ctor_()
{
}

// public generated AddedPage New() [static] :85
PageControl__AddedPage* PageControl__AddedPage::New1()
{
    PageControl__AddedPage* obj1 = (PageControl__AddedPage*)uNew(PageControl__AddedPage_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\MobileTextEdit.uno
// ------------------------------------------------------------------------------------------------------------------

// private sealed class MobileTextEdit.AndroidTemplate :175
// {
static void MobileTextEdit__AndroidTemplate_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::MobileTextEdit_typeof(), offsetof(MobileTextEdit__AndroidTemplate, _parent), uFieldFlagsWeak);
}

::g::Uno::UX::Template_type* MobileTextEdit__AndroidTemplate_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 3;
    options.ObjectSize = sizeof(MobileTextEdit__AndroidTemplate);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.MobileTextEdit.AndroidTemplate", options);
    type->fp_build_ = MobileTextEdit__AndroidTemplate_build;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))MobileTextEdit__AndroidTemplate__New1_fn;
    return type;
}

// public AndroidTemplate(Fuse.Controls.MobileTextEdit parent) :180
void MobileTextEdit__AndroidTemplate__ctor_1_fn(MobileTextEdit__AndroidTemplate* __this, ::g::Fuse::Controls::MobileTextEdit* parent)
{
    __this->ctor_1(parent);
}

// public override sealed extern object New() :185
void MobileTextEdit__AndroidTemplate__New1_fn(MobileTextEdit__AndroidTemplate* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit.AndroidTemplate", "New()");
    return *__retval = ::g::Fuse::Controls::Native::Android::TextEdit::New8((uObject*)__this->_parent, uPtr(__this->_parent)->_isMultiline1), void();
}

// public AndroidTemplate New(Fuse.Controls.MobileTextEdit parent) :180
void MobileTextEdit__AndroidTemplate__New2_fn(::g::Fuse::Controls::MobileTextEdit* parent, MobileTextEdit__AndroidTemplate** __retval)
{
    *__retval = MobileTextEdit__AndroidTemplate::New2(parent);
}

// public AndroidTemplate(Fuse.Controls.MobileTextEdit parent) [instance] :180
void MobileTextEdit__AndroidTemplate::ctor_1(::g::Fuse::Controls::MobileTextEdit* parent)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    _parent = parent;
}

// public AndroidTemplate New(Fuse.Controls.MobileTextEdit parent) [static] :180
MobileTextEdit__AndroidTemplate* MobileTextEdit__AndroidTemplate::New2(::g::Fuse::Controls::MobileTextEdit* parent)
{
    MobileTextEdit__AndroidTemplate* obj1 = (MobileTextEdit__AndroidTemplate*)uNew(MobileTextEdit__AndroidTemplate_typeof());
    obj1->ctor_1(parent);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Arc.uno
// -------------------------------------------------------------------------------------------------

// public partial sealed class Arc :16
// {
static void Arc_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface18));
    type->SetFields(123);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Arc__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Shape_type* Arc_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::EllipticalShape_typeof();
    options.FieldCount = 123;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(Arc);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.Arc", options);
    type->fp_build_ = Arc_build;
    type->fp_ctor_ = (void*)Arc__New3_fn;
    type->fp_CreateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::Drawing::Surface*, ::g::Fuse::Drawing::SurfacePath**))Arc__CreateSurfacePath_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Arc() :16
void Arc__ctor_8_fn(Arc* __this)
{
    __this->ctor_8();
}

// protected override sealed Fuse.Drawing.SurfacePath CreateSurfacePath(Fuse.Drawing.Surface surface) :33
void Arc__CreateSurfacePath_fn(Arc* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    uStackFrame __("Fuse.Controls.Arc", "CreateSurfacePath(Fuse.Drawing.Surface)");
    return *__retval = __this->CreateEllipticalPath(surface, ::g::Uno::Float2__op_Division1(__this->ActualSize(), 2.0f), ::g::Uno::Float2__op_Division1(__this->ActualSize(), 2.0f), true), void();
}

// public generated Arc New() :16
void Arc__New3_fn(Arc** __retval)
{
    *__retval = Arc::New3();
}

// public generated Arc() [instance] :16
void Arc::ctor_8()
{
    ctor_7();
}

// public generated Arc New() [static] :16
Arc* Arc::New3()
{
    Arc* obj1 = (Arc*)uNew(Arc_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\TextEnums.uno
// --------------------------------------------------------------------------------------------

// public enum AutoCapitalizationHint :50
uEnumType* AutoCapitalizationHint_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.AutoCapitalizationHint", ::g::Uno::Int_typeof(), 4);
    type->SetLiterals(
        "None", 0LL,
        "Characters", 1LL,
        "Words", 2LL,
        "Sentences", 3LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\TextEnums.uno
// --------------------------------------------------------------------------------------------

// public enum AutoCorrectHint :43
uEnumType* AutoCorrectHint_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.AutoCorrectHint", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Default", 0LL,
        "Disabled", 1LL,
        "Enabled", 2LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\BackButton.ux.uno
// ----------------------------------------------------------------------------------------------------

// public partial sealed class BackButton :17
// {
// static BackButton() :7
static void BackButton__cctor_4_fn(uType* __type)
{
    BackButton::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    BackButton::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[2/*"btn"*/]);
}

static void BackButton_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[2] = uString::Const("btn");
    ::STRINGS[3] = uString::Const("Back");
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    type->SetDependencies(
        ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ButtonBase_Text_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Binding>*/], offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(118,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(BackButton, temp_Value_inst), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&BackButton::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&BackButton::__selector1_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)BackButton__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* BackButton_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ButtonBase_typeof();
    options.FieldCount = 121;
    options.InterfaceCount = 18;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(BackButton);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.BackButton", options);
    type->fp_build_ = BackButton_build;
    type->fp_ctor_ = (void*)BackButton__New5_fn;
    type->fp_cctor_ = BackButton__cctor_4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public BackButton() :11
void BackButton__ctor_8_fn(BackButton* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :15
void BackButton__InitializeUX_fn(BackButton* __this)
{
    __this->InitializeUX();
}

// public BackButton New() :11
void BackButton__New5_fn(BackButton** __retval)
{
    *__retval = BackButton::New5();
}

::g::Uno::UX::Selector BackButton::__selector0_;
::g::Uno::UX::Selector BackButton::__selector1_;

// public BackButton() [instance] :11
void BackButton::ctor_8()
{
    uStackFrame __("Fuse.Controls.BackButton", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :15
void BackButton::InitializeUX()
{
    uStackFrame __("Fuse.Controls.BackButton", "InitializeUX()");
    ::g::Fuse::Reactive::Constant* temp1 = ::g::Fuse::Reactive::Constant::New1(this);
    ::g::Fuse::Controls::Text* temp = ::g::Fuse::Controls::Text::New3();
    temp_Value_inst = ::g::FuseControlsPrimitives_FuseControlsTextControl_Value_Property::New1(temp, BackButton::__selector0_);
    ::g::Fuse::Reactive::Property* temp2 = ::g::Fuse::Reactive::Property::New1(temp1, ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ButtonBase_Text::Singleton());
    ::g::Fuse::Controls::Rectangle* temp3 = ::g::Fuse::Controls::Rectangle::New3();
    ::g::Fuse::Reactive::DataBinding* temp4 = ::g::Fuse::Reactive::DataBinding::New1(temp_Value_inst, (uObject*)temp2, 3);
    Text(::STRINGS[3/*"Back"*/]);
    Name(BackButton::__selector1_);
    temp3->Color(::g::Uno::Float4__New2(0.8666667f, 0.8666667f, 0.8666667f, 1.0f));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp3->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    temp->Alignment(10);
    temp->Margin(::g::Uno::Float4__New2(5.0f, 5.0f, 5.0f, 5.0f));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp->Bindings()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp4);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp3);
}

// public BackButton New() [static] :11
BackButton* BackButton::New5()
{
    BackButton* obj1 = (BackButton*)uNew(BackButton_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\Backgrounds\BottomFrameBackground.uno
// --------------------------------------------------------------------------------------------------------------------

// public sealed class BottomBarBackground :31
// {
static void BottomBarBackground_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface16));
    type->SetFields(111);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)BottomBarBackground__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* BottomBarBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::BottomFrameBackground_typeof();
    options.FieldCount = 111;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(BottomBarBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.BottomBarBackground", options);
    type->fp_build_ = BottomBarBackground_build;
    type->fp_ctor_ = (void*)BottomBarBackground__New3_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated BottomBarBackground() :31
void BottomBarBackground__ctor_6_fn(BottomBarBackground* __this)
{
    __this->ctor_6();
}

// public generated BottomBarBackground New() :31
void BottomBarBackground__New3_fn(BottomBarBackground** __retval)
{
    *__retval = BottomBarBackground::New3();
}

// public generated BottomBarBackground() [instance] :31
void BottomBarBackground::ctor_6()
{
    ctor_5();
}

// public generated BottomBarBackground New() [static] :31
BottomBarBackground* BottomBarBackground::New3()
{
    BottomBarBackground* obj1 = (BottomBarBackground*)uNew(BottomBarBackground_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\Backgrounds\BottomFrameBackground.uno
// --------------------------------------------------------------------------------------------------------------------

// public class BottomFrameBackground :34
// {
static void BottomFrameBackground_build(uType* type)
{
    ::TYPES[2] = ::g::Uno::EventHandler1_typeof()->MakeType(::g::Fuse::Platform::SystemUIWillResizeEventArgs_typeof(), NULL);
    type->SetDependencies(
        ::g::Fuse::Platform::SystemUI_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface16));
    type->SetFields(108,
        ::g::Uno::Bool_typeof(), offsetof(BottomFrameBackground, _includesKeyboard), 0,
        ::g::Uno::Float_typeof(), offsetof(BottomFrameBackground, _keyboardVisibleThreshold), 0,
        ::g::Uno::Float_typeof(), offsetof(BottomFrameBackground, _height1), 0);
    type->Reflection.SetFunctions(5,
        new uFunction("get_IncludesKeyboard", NULL, (void*)BottomFrameBackground__get_IncludesKeyboard_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IncludesKeyboard", NULL, (void*)BottomFrameBackground__set_IncludesKeyboard_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_KeyboardVisibleThreshold", NULL, (void*)BottomFrameBackground__get_KeyboardVisibleThreshold_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_KeyboardVisibleThreshold", NULL, (void*)BottomFrameBackground__set_KeyboardVisibleThreshold_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction(".ctor", NULL, (void*)BottomFrameBackground__New2_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* BottomFrameBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 111;
    options.InterfaceCount = 17;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(BottomFrameBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.BottomFrameBackground", options);
    type->fp_build_ = BottomFrameBackground_build;
    type->fp_ctor_ = (void*)BottomFrameBackground__New2_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))BottomFrameBackground__GetContentSize_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))BottomFrameBackground__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))BottomFrameBackground__OnUnrooted_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated BottomFrameBackground() :34
void BottomFrameBackground__ctor_5_fn(BottomFrameBackground* __this)
{
    __this->ctor_5();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :106
void BottomFrameBackground__GetContentSize_fn(BottomFrameBackground* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    return *__retval = ::g::Uno::Float2__New2(lp_.HasX() ? lp_.X() : 0.0f, __this->_height1 / uPtr(::g::Fuse::AppBase::Current2())->PixelsPerPoint()), void();
    return *__retval = ::g::Uno::Float2__New2(0.0f, 0.0f), void();
}

// public bool get_IncludesKeyboard() :42
void BottomFrameBackground__get_IncludesKeyboard_fn(BottomFrameBackground* __this, bool* __retval)
{
    *__retval = __this->IncludesKeyboard();
}

// public void set_IncludesKeyboard(bool value) :43
void BottomFrameBackground__set_IncludesKeyboard_fn(BottomFrameBackground* __this, bool* value)
{
    __this->IncludesKeyboard(*value);
}

// public float get_KeyboardVisibleThreshold() :56
void BottomFrameBackground__get_KeyboardVisibleThreshold_fn(BottomFrameBackground* __this, float* __retval)
{
    *__retval = __this->KeyboardVisibleThreshold();
}

// public void set_KeyboardVisibleThreshold(float value) :57
void BottomFrameBackground__set_KeyboardVisibleThreshold_fn(BottomFrameBackground* __this, float* value)
{
    __this->KeyboardVisibleThreshold(*value);
}

// public generated BottomFrameBackground New() :34
void BottomFrameBackground__New2_fn(BottomFrameBackground** __retval)
{
    *__retval = BottomFrameBackground::New2();
}

// private extern void OnFrameResized(object sender, Fuse.Platform.SystemUIWillResizeEventArgs args) :87
void BottomFrameBackground__OnFrameResized_fn(BottomFrameBackground* __this, uObject* sender, ::g::Fuse::Platform::SystemUIWillResizeEventArgs* args)
{
    __this->OnFrameResized(sender, args);
}

// protected override sealed void OnRooted() :67
void BottomFrameBackground__OnRooted_fn(BottomFrameBackground* __this)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);
    __this->_height1 = ::g::Fuse::Platform::SystemUI::BottomFrame().Size().Y;
    ::g::Fuse::Platform::SystemUI::add_BottomFrameWillResize(uDelegate::New(::TYPES[2/*Uno.EventHandler<Fuse.Platform.SystemUIWillResizeEventArgs>*/], (void*)BottomFrameBackground__OnFrameResized_fn, __this));
}

// protected override sealed void OnUnrooted() :77
void BottomFrameBackground__OnUnrooted_fn(BottomFrameBackground* __this)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "OnUnrooted()");
    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
    ::g::Fuse::Platform::SystemUI::remove_BottomFrameWillResize(uDelegate::New(::TYPES[2/*Uno.EventHandler<Fuse.Platform.SystemUIWillResizeEventArgs>*/], (void*)BottomFrameBackground__OnFrameResized_fn, __this));
}

// public generated BottomFrameBackground() [instance] :34
void BottomFrameBackground::ctor_5()
{
    _includesKeyboard = true;
    _keyboardVisibleThreshold = 150.0f;
    ctor_4();
}

// public bool get_IncludesKeyboard() [instance] :42
bool BottomFrameBackground::IncludesKeyboard()
{
    return _includesKeyboard;
}

// public void set_IncludesKeyboard(bool value) [instance] :43
void BottomFrameBackground::IncludesKeyboard(bool value)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "set_IncludesKeyboard(bool)");

    if (_includesKeyboard != value)
    {
        _includesKeyboard = value;
        InvalidateLayout(2);
    }
}

// public float get_KeyboardVisibleThreshold() [instance] :56
float BottomFrameBackground::KeyboardVisibleThreshold()
{
    return _keyboardVisibleThreshold;
}

// public void set_KeyboardVisibleThreshold(float value) [instance] :57
void BottomFrameBackground::KeyboardVisibleThreshold(float value)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "set_KeyboardVisibleThreshold(float)");

    if (_keyboardVisibleThreshold != value)
    {
        _keyboardVisibleThreshold = value;
        InvalidateLayout(2);
    }
}

// private extern void OnFrameResized(object sender, Fuse.Platform.SystemUIWillResizeEventArgs args) [instance] :87
void BottomFrameBackground::OnFrameResized(uObject* sender, ::g::Fuse::Platform::SystemUIWillResizeEventArgs* args)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "OnFrameResized(object,Fuse.Platform.SystemUIWillResizeEventArgs)");
    float newHeight = uPtr(args)->EndFrame().Size().Y;

    if (IncludesKeyboard() || (newHeight < KeyboardVisibleThreshold()))
    {
        _height1 = newHeight;
        InvalidateLayout(2);
    }
}

// public generated BottomFrameBackground New() [static] :34
BottomFrameBackground* BottomFrameBackground::New2()
{
    BottomFrameBackground* obj1 = (BottomFrameBackground*)uNew(BottomFrameBackground_typeof());
    obj1->ctor_5();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\WebView.uno
// -------------------------------------------------------------------------------------------

// internal abstract interface BufferedWebViewCall :456
// {
uInterfaceType* BufferedWebViewCall_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.BufferedWebViewCall", 0, 0);
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Button.ux.uno
// ------------------------------------------------------------------------------------------------

// public partial sealed class Button :67
// {
// static Button() :97
static void Button__cctor_4_fn(uType* __type)
{
}

static void Button_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(118);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Button__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* Button_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ButtonBase_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(Button);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.Button", options);
    type->fp_build_ = Button_build;
    type->fp_ctor_ = (void*)Button__New5_fn;
    type->fp_cctor_ = Button__cctor_4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Button() :101
void Button__ctor_8_fn(Button* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :105
void Button__InitializeUX_fn(Button* __this)
{
    __this->InitializeUX();
}

// public Button New() :101
void Button__New5_fn(Button** __retval)
{
    *__retval = Button::New5();
}

// public Button() [instance] :101
void Button::ctor_8()
{
    uStackFrame __("Fuse.Controls.Button", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :105
void Button::InitializeUX()
{
    uStackFrame __("Fuse.Controls.Button", "InitializeUX()");
    Button__Template* GraphicsAppearance = Button__Template::New2(this, this);
    Button__Template1* AndroidAppearance = Button__Template1::New2(this, this);
    Button__Template2* iOSAppearance = Button__Template2::New2(this, this);
    HitTestMode(6);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), GraphicsAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iOSAppearance);
}

// public Button New() [static] :101
Button* Button::New5()
{
    Button* obj1 = (Button*)uNew(Button_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\ButtonBase.uno
// -------------------------------------------------------------------------------------------------

// public class ButtonBase :26
// {
static void ButtonBase_build(uType* type)
{
    ::STRINGS[4] = uString::Const("Text");
    ::TYPES[3] = ::g::Fuse::Controls::Native::ILabelView_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Uno::String_typeof(), offsetof(ButtonBase, _text), 0);
    type->Reflection.SetFunctions(4,
        new uFunction(".ctor", NULL, (void*)ButtonBase__New4_fn, 0, true, type, 0),
        new uFunction("SetText", NULL, (void*)ButtonBase__SetText_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Text", NULL, (void*)ButtonBase__get_Text_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Text", NULL, (void*)ButtonBase__set_Text_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

::g::Fuse::Controls::Panel_type* ButtonBase_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(ButtonBase);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.ButtonBase", options);
    type->fp_build_ = ButtonBase_build;
    type->fp_ctor_ = (void*)ButtonBase__New4_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))ButtonBase__PushPropertiesToNativeView_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated ButtonBase() :26
void ButtonBase__ctor_7_fn(ButtonBase* __this)
{
    __this->ctor_7();
}

// private Fuse.Controls.Native.ILabelView get_LabelView() :50
void ButtonBase__get_LabelView_fn(ButtonBase* __this, uObject** __retval)
{
    *__retval = __this->LabelView();
}

// public generated ButtonBase New() :26
void ButtonBase__New4_fn(ButtonBase** __retval)
{
    *__retval = ButtonBase::New4();
}

// protected override sealed void PushPropertiesToNativeView() :53
void ButtonBase__PushPropertiesToNativeView_fn(ButtonBase* __this)
{
    uStackFrame __("Fuse.Controls.ButtonBase", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Control__PushPropertiesToNativeView_fn(__this);
    uObject* l = __this->LabelView();

    if (l != NULL)
        ::g::Fuse::Controls::Native::ILabelView::Text(uInterface(uPtr(l), ::TYPES[3/*Fuse.Controls.Native.ILabelView*/]), __this->Text());
}

// public void SetText(string value, Uno.UX.IPropertyListener origin) :36
void ButtonBase__SetText_fn(ButtonBase* __this, uString* value, uObject* origin)
{
    __this->SetText(value, origin);
}

// public string get_Text() :32
void ButtonBase__get_Text_fn(ButtonBase* __this, uString** __retval)
{
    *__retval = __this->Text();
}

// public void set_Text(string value) :33
void ButtonBase__set_Text_fn(ButtonBase* __this, uString* value)
{
    __this->Text(value);
}

// public generated ButtonBase() [instance] :26
void ButtonBase::ctor_7()
{
    ctor_6();
}

// private Fuse.Controls.Native.ILabelView get_LabelView() [instance] :50
uObject* ButtonBase::LabelView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[3/*Fuse.Controls.Native.ILabelView*/]);
}

// public void SetText(string value, Uno.UX.IPropertyListener origin) [instance] :36
void ButtonBase::SetText(uString* value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ButtonBase", "SetText(string,Uno.UX.IPropertyListener)");

    if (::g::Uno::String::op_Inequality(value, _text))
    {
        _text = value;
        OnPropertyChanged1(::g::Uno::UX::Selector__op_Implicit(::STRINGS[4/*"Text"*/]), origin);
        uObject* l = LabelView();

        if (l != NULL)
            ::g::Fuse::Controls::Native::ILabelView::Text(uInterface(uPtr(l), ::TYPES[3/*Fuse.Controls.Native.ILabelView*/]), value);
    }
}

// public string get_Text() [instance] :32
uString* ButtonBase::Text()
{
    return _text;
}

// public void set_Text(string value) [instance] :33
void ButtonBase::Text(uString* value)
{
    uStackFrame __("Fuse.Controls.ButtonBase", "set_Text(string)");
    SetText(value, NULL);
}

// public generated ButtonBase New() [static] :26
ButtonBase* ButtonBase::New4()
{
    ButtonBase* obj1 = (ButtonBase*)uNew(ButtonBase_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Circle.uno
// ----------------------------------------------------------------------------------------------------

// public partial sealed class Circle :58
// {
static void Circle_build(uType* type)
{
    ::TYPES[4] = ::g::Fuse::Controls::Native::ICircleView_typeof();
    type->SetDependencies(
        ::g::Fuse::Drawing::Primitives::Circle_typeof(),
        ::g::Fuse::Drawing::Primitives::Wedge_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface18));
    type->SetFields(123);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Circle__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Shape_type* Circle_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::EllipticalShape_typeof();
    options.FieldCount = 123;
    options.InterfaceCount = 19;
    options.DependencyCount = 2;
    options.ObjectSize = sizeof(Circle);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.Circle", options);
    type->fp_build_ = Circle_build;
    type->fp_ctor_ = (void*)Circle__New3_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))Circle__CreateNativeView_fn;
    type->fp_CreateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::Drawing::Surface*, ::g::Fuse::Drawing::SurfacePath**))Circle__CreateSurfacePath_fn;
    type->fp_DrawFill = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Brush*))Circle__DrawFill_fn;
    type->fp_DrawStroke = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Stroke*))Circle__DrawStroke_fn;
    type->fp_InvalidateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*))Circle__InvalidateSurfacePath_fn;
    type->fp_get_NeedSurface = (void(*)(::g::Fuse::Controls::Shape*, bool*))Circle__get_NeedSurface_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Circle__OnHitTestLocalVisual_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))Circle__PushPropertiesToNativeView_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Circle() :58
void Circle__ctor_8_fn(Circle* __this)
{
    __this->ctor_8();
}

// private float2 get_CanvasAngles() :17
void Circle__get_CanvasAngles_fn(Circle* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->CanvasAngles();
}

// protected float2 get_Center() :12
void Circle__get_Center_fn(Circle* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Center();
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :73
void Circle__CreateNativeView_fn(Circle* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Circle", "CreateNativeView()");
    return *__retval = (uObject*)::g::Fuse::Controls::Native::Android::Circle::New5(), void();
}

// protected override sealed Fuse.Drawing.SurfacePath CreateSurfacePath(Fuse.Drawing.Surface surface) :115
void Circle__CreateSurfacePath_fn(Circle* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    uStackFrame __("Fuse.Controls.Circle", "CreateSurfacePath(Fuse.Drawing.Surface)");
    return *__retval = __this->CreateEllipticalPath(surface, __this->Center(), ::g::Uno::Float2__New1(__this->Radius()), false), void();
}

// protected override sealed void DrawFill(Fuse.DrawContext dc, Fuse.Drawing.Brush fill) :27
void Circle__DrawFill_fn(Circle* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Brush* fill)
{
    uStackFrame __("Fuse.Controls.Circle", "DrawFill(Fuse.DrawContext,Fuse.Drawing.Brush)");
    ::g::Uno::Float2 angles = __this->CanvasAngles();

    if (__this->UseAngle())
        uPtr(::g::Fuse::Drawing::Primitives::Wedge::Singleton())->Fill(dc, __this, __this->Radius(), fill, __this->Center(), angles.Item(0), angles.Item(1), __this->Smoothness());
    else
        uPtr(::g::Fuse::Drawing::Primitives::Circle::Singleton())->Fill(dc, __this, __this->Radius(), fill, __this->Center(), __this->Smoothness());
}

// protected override sealed void DrawStroke(Fuse.DrawContext dc, Fuse.Drawing.Stroke stroke) :39
void Circle__DrawStroke_fn(Circle* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Stroke* stroke)
{
    uStackFrame __("Fuse.Controls.Circle", "DrawStroke(Fuse.DrawContext,Fuse.Drawing.Stroke)");
    ::g::Uno::Float2 angles = __this->CanvasAngles();

    if (__this->UseAngle())
        uPtr(::g::Fuse::Drawing::Primitives::Wedge::Singleton())->Stroke(dc, __this, __this->Radius(), stroke, __this->Center(), angles.Item(0), angles.Item(1), __this->Smoothness());
    else
        uPtr(::g::Fuse::Drawing::Primitives::Circle::Singleton())->Stroke(dc, __this, __this->Radius(), stroke, __this->Center(), __this->Smoothness());
}

// protected override sealed void InvalidateSurfacePath() :92
void Circle__InvalidateSurfacePath_fn(Circle* __this)
{
    uStackFrame __("Fuse.Controls.Circle", "InvalidateSurfacePath()");
    ::g::Fuse::Controls::Shape__InvalidateSurfacePath_fn(__this);
    __this->UpdateNativeCircle();
}

// private Fuse.Controls.Native.ICircleView get_NativeCircle() :70
void Circle__get_NativeCircle_fn(Circle* __this, uObject** __retval)
{
    *__retval = __this->NativeCircle();
}

// protected override sealed bool get_NeedSurface() :112
void Circle__get_NeedSurface_fn(Circle* __this, bool* __retval)
{
    uStackFrame __("Fuse.Controls.Circle", "get_NeedSurface()");
    return *__retval = __this->VisualContext() != 1, void();
}

// public generated Circle New() :58
void Circle__New3_fn(Circle** __retval)
{
    *__retval = Circle::New3();
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :51
void Circle__OnHitTestLocalVisual_fn(Circle* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Circle", "OnHitTestLocalVisual(Fuse.HitTestContext)");
    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);

    if (!__this->HasFills() || (::g::Uno::Vector::Distance(uPtr(htc)->LocalPoint(), __this->Center()) > __this->Radius()))
        return;

    if (__this->UseAngle())
    {
        ::g::Uno::Float2 off = ::g::Uno::Float2__op_Subtraction2(uPtr(htc)->LocalPoint(), __this->Center());
        float localAngle = ::g::Uno::Math::Atan22(off.Y, off.X);

        if (!::g::Fuse::Drawing::SurfaceUtil::AngleInRange(localAngle, __this->StartAngle(), __this->EffectiveEndAngle()))
            return;
    }

    uPtr(htc)->Hit(__this);
}

// protected override sealed void PushPropertiesToNativeView() :86
void Circle__PushPropertiesToNativeView_fn(Circle* __this)
{
    uStackFrame __("Fuse.Controls.Circle", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Shape__PushPropertiesToNativeView_fn(__this);
    __this->UpdateNativeCircle();
}

// internal float get_Radius() :62
void Circle__get_Radius_fn(Circle* __this, float* __retval)
{
    *__retval = __this->Radius();
}

// private void UpdateNativeCircle() :98
void Circle__UpdateNativeCircle_fn(Circle* __this)
{
    __this->UpdateNativeCircle();
}

// public generated Circle() [instance] :58
void Circle::ctor_8()
{
    ctor_7();
}

// private float2 get_CanvasAngles() [instance] :17
::g::Uno::Float2 Circle::CanvasAngles()
{
    float s = StartAngle();
    float e = EffectiveEndAngle();

    if (e < s)
        return ::g::Uno::Float2__New2(e, s);

    return ::g::Uno::Float2__New2(s, e);
}

// protected float2 get_Center() [instance] :12
::g::Uno::Float2 Circle::Center()
{
    return ::g::Uno::Float2__op_Division1(ActualSize(), 2.0f);
}

// private Fuse.Controls.Native.ICircleView get_NativeCircle() [instance] :70
uObject* Circle::NativeCircle()
{
    return uAs<uObject*>(NativeView(), ::TYPES[4/*Fuse.Controls.Native.ICircleView*/]);
}

// internal float get_Radius() [instance] :62
float Circle::Radius()
{
    return ::g::Uno::Math::Min1(ActualSize().X, ActualSize().Y) * 0.5f;
}

// private void UpdateNativeCircle() [instance] :98
void Circle::UpdateNativeCircle()
{
    uStackFrame __("Fuse.Controls.Circle", "UpdateNativeCircle()");
    uObject* nc = NativeCircle();

    if (nc != NULL)
    {
        ::g::Fuse::Controls::Native::ICircleView::UseAngle(uInterface(uPtr(nc), ::TYPES[4/*Fuse.Controls.Native.ICircleView*/]), UseAngle());
        ::g::Fuse::Controls::Native::ICircleView::StartAngleDegrees(uInterface(nc, ::TYPES[4/*Fuse.Controls.Native.ICircleView*/]), StartAngleDegrees());
        ::g::Fuse::Controls::Native::ICircleView::EndAngleDegrees(uInterface(nc, ::TYPES[4/*Fuse.Controls.Native.ICircleView*/]), EndAngleDegrees());
        ::g::Fuse::Controls::Native::ICircleView::EffectiveEndAngleDegrees(uInterface(nc, ::TYPES[4/*Fuse.Controls.Native.ICircleView*/]), EffectiveEndAngleDegrees());
    }
}

// public generated Circle New() [static] :58
Circle* Circle::New3()
{
    Circle* obj1 = (Circle*)uNew(Circle_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\ClientPanel.uno
// ----------------------------------------------------------------------------------------------

// public partial sealed class ClientPanel :31
// {
// static ClientPanel() :6
static void ClientPanel__cctor_4_fn(uType* __type)
{
}

static void ClientPanel_build(uType* type)
{
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(118);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ClientPanel__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* ClientPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::DockPanel_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(ClientPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.ClientPanel", options);
    type->fp_build_ = ClientPanel_build;
    type->fp_ctor_ = (void*)ClientPanel__New5_fn;
    type->fp_cctor_ = ClientPanel__cctor_4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public ClientPanel() :10
void ClientPanel__ctor_8_fn(ClientPanel* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :14
void ClientPanel__InitializeUX_fn(ClientPanel* __this)
{
    __this->InitializeUX();
}

// public ClientPanel New() :10
void ClientPanel__New5_fn(ClientPanel** __retval)
{
    *__retval = ClientPanel::New5();
}

// public ClientPanel() [instance] :10
void ClientPanel::ctor_8()
{
    uStackFrame __("Fuse.Controls.ClientPanel", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :14
void ClientPanel::InitializeUX()
{
    uStackFrame __("Fuse.Controls.ClientPanel", "InitializeUX()");
    ::g::Fuse::Controls::TopFrameBackground* temp = ::g::Fuse::Controls::TopFrameBackground::New2();
    ::g::Fuse::Controls::BottomFrameBackground* temp1 = ::g::Fuse::Controls::BottomFrameBackground::New2();
    ::g::Fuse::Controls::DockPanel::SetDock(temp, 2);
    ::g::Fuse::Controls::DockPanel::SetDock(temp1, 3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp1);
}

// public ClientPanel New() [static] :10
ClientPanel* ClientPanel::New5()
{
    ClientPanel* obj1 = (ClientPanel*)uNew(ClientPanel_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\Container.uno
// --------------------------------------------------------------------------------------------

// public sealed class Container :34
// {
static void Container_build(uType* type)
{
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[5] = ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[6] = ::g::Uno::Collections::RootableList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Visual_typeof(), offsetof(Container, _subtree), 0,
        ::TYPES[6/*Uno.Collections.RootableList<Fuse.Node>*/], offsetof(Container, _subtreeNodes), 0);
    type->Reflection.SetFunctions(4,
        new uFunction(".ctor", NULL, (void*)Container__New4_fn, 0, true, type, 0),
        new uFunction("get_Subtree", NULL, (void*)Container__get_Subtree_fn, 0, false, ::g::Fuse::Visual_typeof(), 0),
        new uFunction("set_Subtree", NULL, (void*)Container__set_Subtree_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("get_SubtreeNodes", NULL, (void*)Container__get_SubtreeNodes_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), 0));
}

::g::Fuse::Controls::Panel_type* Container_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 119;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(Container);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.Container", options);
    type->fp_build_ = Container_build;
    type->fp_ctor_ = (void*)Container__New4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Container__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Container__OnUnrooted_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Container() :34
void Container__ctor_7_fn(Container* __this)
{
    __this->ctor_7();
}

// public generated Container New() :34
void Container__New4_fn(Container** __retval)
{
    *__retval = Container::New4();
}

// private void OnNodeAdded(Fuse.Node n) :76
void Container__OnNodeAdded_fn(Container* __this, ::g::Fuse::Node* n)
{
    __this->OnNodeAdded(n);
}

// private void OnNodeRemoved(Fuse.Node n) :81
void Container__OnNodeRemoved_fn(Container* __this, ::g::Fuse::Node* n)
{
    __this->OnNodeRemoved(n);
}

// protected override sealed void OnRooted() :86
void Container__OnRooted_fn(Container* __this)
{
    uStackFrame __("Fuse.Controls.Container", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);

    if (__this->_subtreeNodes != NULL)
        uPtr(__this->_subtreeNodes)->RootSubscribe(uDelegate::New(::TYPES[5/*Uno.Action<Fuse.Node>*/], (void*)Container__OnNodeAdded_fn, __this), uDelegate::New(::TYPES[5/*Uno.Action<Fuse.Node>*/], (void*)Container__OnNodeRemoved_fn, __this));
}

// protected override sealed void OnUnrooted() :93
void Container__OnUnrooted_fn(Container* __this)
{
    uStackFrame __("Fuse.Controls.Container", "OnUnrooted()");

    if (__this->_subtreeNodes != NULL)
        uPtr(__this->_subtreeNodes)->RootUnsubscribe();

    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// public Fuse.Visual get_Subtree() :40
void Container__get_Subtree_fn(Container* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->Subtree();
}

// public void set_Subtree(Fuse.Visual value) :41
void Container__set_Subtree_fn(Container* __this, ::g::Fuse::Visual* value)
{
    __this->Subtree(value);
}

// public Uno.Collections.IList<Fuse.Node> get_SubtreeNodes() :63
void Container__get_SubtreeNodes_fn(Container* __this, uObject** __retval)
{
    *__retval = __this->SubtreeNodes();
}

// public generated Container() [instance] :34
void Container::ctor_7()
{
    ctor_6();
}

// private void OnNodeAdded(Fuse.Node n) [instance] :76
void Container::OnNodeAdded(::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.Container", "OnNodeAdded(Fuse.Node)");

    if (_subtree != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_subtree)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), n);
}

// private void OnNodeRemoved(Fuse.Node n) [instance] :81
void Container::OnNodeRemoved(::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.Container", "OnNodeRemoved(Fuse.Node)");
    bool ret2;

    if (_subtree != NULL)
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(_subtree)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), n, &ret2);
}

// public Fuse.Visual get_Subtree() [instance] :40
::g::Fuse::Visual* Container::Subtree()
{
    return _subtree;
}

// public void set_Subtree(Fuse.Visual value) [instance] :41
void Container::Subtree(::g::Fuse::Visual* value)
{
    uStackFrame __("Fuse.Controls.Container", "set_Subtree(Fuse.Visual)");

    if (_subtree != value)
    {
        if (((_subtree != NULL) && (_subtreeNodes != NULL)) && IsRootingCompleted())
            uPtr(_subtreeNodes)->RootUnsubscribe();

        _subtree = value;

        if (((_subtree != NULL) && (_subtreeNodes != NULL)) && IsRootingCompleted())
            uPtr(_subtreeNodes)->RootSubscribe(uDelegate::New(::TYPES[5/*Uno.Action<Fuse.Node>*/], (void*)Container__OnNodeAdded_fn, this), uDelegate::New(::TYPES[5/*Uno.Action<Fuse.Node>*/], (void*)Container__OnNodeRemoved_fn, this));
    }
}

// public Uno.Collections.IList<Fuse.Node> get_SubtreeNodes() [instance] :63
uObject* Container::SubtreeNodes()
{
    uStackFrame __("Fuse.Controls.Container", "get_SubtreeNodes()");

    if (_subtreeNodes == NULL)
    {
        _subtreeNodes = ((::g::Uno::Collections::RootableList*)::g::Uno::Collections::RootableList::New1(::TYPES[6/*Uno.Collections.RootableList<Fuse.Node>*/]));

        if (IsRootingCompleted())
            uPtr(_subtreeNodes)->Subscribe(uDelegate::New(::TYPES[5/*Uno.Action<Fuse.Node>*/], (void*)Container__OnNodeAdded_fn, this), uDelegate::New(::TYPES[5/*Uno.Action<Fuse.Node>*/], (void*)Container__OnNodeRemoved_fn, this));
    }

    return (uObject*)_subtreeNodes;
}

// public generated Container New() [static] :34
Container* Container::New4()
{
    Container* obj1 = (Container*)uNew(Container_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls\1.7.2\ContentControl.uno
// ------------------------------------------------------------------------------------------

// public class ContentControl :18
// {
static void ContentControl_build(uType* type)
{
    ::STRINGS[5] = uString::Const(" (ContentControl) can only have one visual child");
    ::TYPES[7] = ::g::Fuse::Visual_typeof();
    ::TYPES[8] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[9] = ::TYPES[7/*Fuse.Visual*/]->MakeMethod(2/*FirstChild<Fuse.Visual>*/, ::TYPES[7/*Fuse.Visual*/], NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ContentControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(ContentControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(ContentControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(ContentControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ContentControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ContentControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ContentControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(ContentControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(ContentControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[7/*Fuse.Visual*/], NULL), offsetof(ContentControl_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(ContentControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ContentControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(ContentControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(ContentControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(ContentControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(ContentControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(ContentControl_type, interface16));
    type->SetFields(108);
    type->Reflection.SetFunctions(3,
        new uFunction("get_Content", NULL, (void*)ContentControl__get_Content_fn, 0, false, ::TYPES[8/*Fuse.Elements.Element*/], 0),
        new uFunction("set_Content", NULL, (void*)ContentControl__set_Content_fn, 0, false, uVoid_typeof(), 1, ::TYPES[8/*Fuse.Elements.Element*/]),
        new uFunction(".ctor", NULL, (void*)ContentControl__New2_fn, 0, true, type, 0));
}

ContentControl_type* ContentControl_typeof()
{
    static uSStrong<ContentControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 108;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(ContentControl);
    options.TypeSize = sizeof(ContentControl_type);
    type = (ContentControl_type*)uClassType::New("Fuse.Controls.ContentControl", options);
    type->fp_build_ = ContentControl_build;
    type->fp_ctor_ = (void*)ContentControl__New2_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))ContentControl__ArrangePaddingBox_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))ContentControl__GetContentSize_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))ContentControl__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))ContentControl__OnChildRemoved_fn;
    type->fp_OnContentChanged = ContentControl__OnContentChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated ContentControl() :18
void ContentControl__ctor_5_fn(ContentControl* __this)
{
    __this->ctor_5();
}

// protected override void ArrangePaddingBox(Fuse.LayoutParams lp) :67
void ContentControl__ArrangePaddingBox_fn(ContentControl* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.ContentControl", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Uno::Float4 ind1;
    ::g::Uno::Float4 ind2;
    ::g::Uno::Float4 ind3;
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->Content() != NULL)
    {
        ::g::Fuse::LayoutParams nlp = lp_.CloneAndDerive();
        nlp.RemoveSize(::g::Uno::Float2__op_Addition2((ind1 = __this->Padding(), ::g::Uno::Float2__New2(ind1.X, ind1.Y)), (ind2 = __this->Padding(), ::g::Uno::Float2__New2(ind2.Z, ind2.W))));
        uPtr(__this->Content())->ArrangeMarginBox((ind3 = __this->Padding(), ::g::Uno::Float2__New2(ind3.X, ind3.Y)), nlp);
    }
}

// public Fuse.Elements.Element get_Content() :22
void ContentControl__get_Content_fn(ContentControl* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->Content();
}

// public void set_Content(Fuse.Elements.Element value) :26
void ContentControl__set_Content_fn(ContentControl* __this, ::g::Fuse::Elements::Element* value)
{
    __this->Content(value);
}

// protected override float2 GetContentSize(Fuse.LayoutParams lp) :60
void ContentControl__GetContentSize_fn(ContentControl* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.ContentControl", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->Content() != NULL)
        return *__retval = uPtr(__this->Content())->GetMarginSize(lp_), void();

    return *__retval = ::g::Uno::Float2__New1(0.0f), void();
}

// public generated ContentControl New() :18
void ContentControl__New2_fn(ContentControl** __retval)
{
    *__retval = ContentControl::New2();
}

// protected override void OnChildAdded(Fuse.Node n) :41
void ContentControl__OnChildAdded_fn(ContentControl* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.ContentControl", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Elements::Element__OnChildAdded_fn(__this, n);

    if (uIs(n, ::TYPES[7/*Fuse.Visual*/]))
    {
        if (__this->VisualChildCount() > 1)
            U_THROW(::g::Uno::Exception::New2(::g::Uno::String::op_Addition(__this, ::STRINGS[5/*" (ContentCo...*/])));

        __this->OnContentChanged();
    }
}

// protected override void OnChildRemoved(Fuse.Node n) :54
void ContentControl__OnChildRemoved_fn(ContentControl* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.ContentControl", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Elements::Element__OnChildRemoved_fn(__this, n);

    if (uIs(n, ::TYPES[7/*Fuse.Visual*/]))
        __this->OnContentChanged();
}

// protected virtual void OnContentChanged() :36
void ContentControl__OnContentChanged_fn(ContentControl* __this)
{
    uStackFrame __("Fuse.Controls.ContentControl", "OnContentChanged()");
    __this->InvalidateLayout(2);
}

// public generated ContentControl() [instance] :18
void ContentControl::ctor_5()
{
    ctor_4();
}

// public Fuse.Elements.Element get_Content() [instance] :22
::g::Fuse::Elements::Element* ContentControl::Content()
{
    uStackFrame __("Fuse.Controls.ContentControl", "get_Content()");
    return uAs< ::g::Fuse::Elements::Element*>((::g::Fuse::Visual*)FirstChild(::TYPES[9/*Fuse.Visual.FirstChild<Fuse.Visual>*/]), ::TYPES[8/*Fuse.Elements.Element*/]);
}

// public void set_Content(Fuse.Elements.Element value) [instance] :26
void ContentControl::Content(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.ContentControl", "set_Content(Fuse.Elements.Element)");
    bool ret5;

    if (Content() != value)
    {
        if (Content() != NULL)
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), Content(), &ret5);

        if (value != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), value);
    }
}

// public generated ContentControl New() [static] :18
ContentControl* ContentControl::New2()
{
    ContentControl* obj4 = (ContentControl*)uNew(ContentControl_typeof());
    obj4->ctor_5();
    return obj4;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls\1.7.2\Control.Background.uno
// ----------------------------------------------------------------------------------------------

// public interfacemodifiers class Control :9
// {
static void Control_build(uType* type)
{
    ::STRINGS[6] = uString::Const("Background must be a solid color");
    ::STRINGS[7] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls\\1.7.2\\Control.Background.uno");
    ::STRINGS[8] = uString::Const("SetBackground");
    ::TYPES[10] = ::g::Fuse::Elements::ITreeRenderer_typeof();
    ::TYPES[11] = ::g::Fuse::Drawing::DynamicBrush_typeof();
    ::TYPES[12] = ::g::Fuse::Drawing::ISolidColor_typeof();
    type->SetDependencies(
        ::g::Fuse::Internal::Drawing::SolidRectangle_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Control_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(Control_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Control_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Control_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Control_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Control_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Control_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Control_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Control_type, interface16));
    type->SetFields(103,
        ::g::Fuse::Drawing::Brush_typeof(), offsetof(Control, _background), 0,
        ::g::Uno::Bool_typeof(), offsetof(Control, _backgroundRooted), 0,
        ::g::Fuse::Controls::Native::IView_typeof(), offsetof(Control, _nativeView), 0,
        uObject_typeof(), offsetof(Control, _Appearance), 0,
        ::g::Fuse::Visual_typeof(), offsetof(Control, _GraphicsVisual), 0);
    type->Reflection.SetFunctions(5,
        new uFunction("get_Appearance", NULL, (void*)Control__get_Appearance_fn, 0, false, uObject_typeof(), 0),
        new uFunction("get_Background", NULL, (void*)Control__get_Background_fn, 0, false, ::g::Fuse::Drawing::Brush_typeof(), 0),
        new uFunction("set_Background", NULL, (void*)Control__set_Background_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::Brush_typeof()),
        new uFunction("get_GraphicsVisual", NULL, (void*)Control__get_GraphicsVisual_fn, 0, false, ::g::Fuse::Visual_typeof(), 0),
        new uFunction("get_NativeView", NULL, (void*)Control__get_NativeView_fn, 0, false, ::g::Fuse::Controls::Native::IView_typeof(), 0));
}

Control_type* Control_typeof()
{
    static uSStrong<Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Elements::Element_typeof();
    options.FieldCount = 108;
    options.InterfaceCount = 17;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(Control);
    options.TypeSize = sizeof(Control_type);
    type = (Control_type*)uClassType::New("Fuse.Controls.Control", options);
    type->fp_build_ = Control_build;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Control__CalcRenderBounds_fn;
    type->fp_CompensateForScrollView = Control__CompensateForScrollView_fn;
    type->fp_CreateNativeView = Control__CreateNativeView_fn;
    type->fp_DrawVisual = Control__DrawVisual_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Control__GetContentSize_fn;
    type->fp_get_HitTestLocalVisualBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Control__get_HitTestLocalVisualBounds_fn;
    type->fp_OnDraw = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))Control__OnDraw_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Control__OnHitTestLocalVisual_fn;
    type->fp_OnInvalidateVisual = (void(*)(::g::Fuse::Visual*))Control__OnInvalidateVisual_fn;
    type->fp_OnPropertyChanged2 = (void(*)(::g::Fuse::Visual*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Control__OnPropertyChanged2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Control__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Control__OnUnrooted_fn;
    type->fp_PushPropertiesToNativeView = Control__PushPropertiesToNativeView_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected generated Control() :9
void Control__ctor_4_fn(Control* __this)
{
    __this->ctor_4();
}

// public generated object get_Appearance() :10
void Control__get_Appearance_fn(Control* __this, uObject** __retval)
{
    *__retval = __this->Appearance();
}

// internal generated void set_Appearance(object value) :10
void Control__set_Appearance_fn(Control* __this, uObject* value)
{
    __this->Appearance(value);
}

// public Fuse.Drawing.Brush get_Background() :28
void Control__get_Background_fn(Control* __this, ::g::Fuse::Drawing::Brush** __retval)
{
    *__retval = __this->Background();
}

// public void set_Background(Fuse.Drawing.Brush value) :29
void Control__set_Background_fn(Control* __this, ::g::Fuse::Drawing::Brush* value)
{
    __this->Background(value);
}

// protected override Fuse.VisualBounds CalcRenderBounds() :67
void Control__CalcRenderBounds_fn(Control* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Control", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret1;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Elements::Element__CalcRenderBounds_fn(__this, &ret1), ret1);

    if (__this->Background() != NULL)
        b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());

    return *__retval = b, void();
}

// internal virtual void CompensateForScrollView(float4x4& t) :66
void Control__CompensateForScrollView_fn(Control* __this, ::g::Uno::Float4x4* t)
{
}

// protected virtual Fuse.Controls.Native.IView CreateNativeView() :43
void Control__CreateNativeView_fn(Control* __this, uObject** __retval)
{
    return *__retval = NULL, void();
}

// protected void DrawBackground(Fuse.DrawContext dc, float opacity) :112
void Control__DrawBackground_fn(Control* __this, ::g::Fuse::DrawContext* dc, float* opacity)
{
    __this->DrawBackground(dc, *opacity);
}

// protected virtual void DrawVisual(Fuse.DrawContext dc) :46
void Control__DrawVisual_fn(Control* __this, ::g::Fuse::DrawContext* dc)
{
}

// protected override float2 GetContentSize(Fuse.LayoutParams lp) :54
void Control__GetContentSize_fn(Control* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Control", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 ret2;
    uObject* t = __this->TreeRenderer();

    if (t != NULL)
    {
        ::g::Uno::Float2 size;

        if (::g::Fuse::Elements::ITreeRenderer::Measure(uInterface(uPtr(t), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), __this, lp_, &size))
            return *__retval = size, void();
    }

    return *__retval = (::g::Fuse::Elements::Element__GetContentSize_fn(__this, uCRef(lp_), &ret2), ret2), void();
}

// public generated Fuse.Visual get_GraphicsVisual() :12
void Control__get_GraphicsVisual_fn(Control* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->GraphicsVisual();
}

// internal generated void set_GraphicsVisual(Fuse.Visual value) :12
void Control__set_GraphicsVisual_fn(Control* __this, ::g::Fuse::Visual* value)
{
    __this->GraphicsVisual(value);
}

// protected override Fuse.VisualBounds get_HitTestLocalVisualBounds() :58
void Control__get_HitTestLocalVisualBounds_fn(Control* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Control", "get_HitTestLocalVisualBounds()");
    ::g::Fuse::VisualBounds* ret3;
    ::g::Fuse::VisualBounds* nb = (::g::Fuse::Elements::Element__get_HitTestLocalVisualBounds_fn(__this, &ret3), ret3);

    if (__this->Background() != NULL)
        nb = uPtr(nb)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());

    return *__retval = nb, void();
}

// internal Fuse.Controls.Native.IView InstantiateNativeView() :49
void Control__InstantiateNativeView_fn(Control* __this, uObject** __retval)
{
    *__retval = __this->InstantiateNativeView();
}

// public Fuse.Controls.Native.IView get_NativeView() :17
void Control__get_NativeView_fn(Control* __this, uObject** __retval)
{
    *__retval = __this->NativeView();
}

// internal void set_NativeView(Fuse.Controls.Native.IView value) :18
void Control__set_NativeView_fn(Control* __this, uObject* value)
{
    __this->NativeView(value);
}

// private void OnBackgroundChanged() :105
void Control__OnBackgroundChanged_fn(Control* __this)
{
    __this->OnBackgroundChanged();
}

// protected override sealed void OnDraw(Fuse.DrawContext dc) :40
void Control__OnDraw_fn(Control* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Control", "OnDraw(Fuse.DrawContext)");
    __this->DrawBackground(dc, 1.0f);
    __this->DrawVisual(dc);
}

// protected override void OnHitTestLocalVisual(Fuse.HitTestContext htc) :48
void Control__OnHitTestLocalVisual_fn(Control* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Control", "OnHitTestLocalVisual(Fuse.HitTestContext)");

    if ((__this->Background() != NULL) && __this->IsPointInside(uPtr(htc)->LocalPoint()))
        uPtr(htc)->Hit(__this);

    ::g::Fuse::Elements::Element__OnHitTestLocalVisual_fn(__this, htc);
}

// protected override void OnInvalidateVisual() :26
void Control__OnInvalidateVisual_fn(Control* __this)
{
    uStackFrame __("Fuse.Controls.Control", "OnInvalidateVisual()");
    ::g::Fuse::Elements::Element__OnInvalidateVisual_fn(__this);

    if (__this->ViewHandle() != NULL)
        uPtr(__this->ViewHandle())->Invalidate();
}

// public override void OnPropertyChanged(Uno.UX.PropertyObject obj, Uno.UX.Selector prop) :94
void Control__OnPropertyChanged2_fn(Control* __this, ::g::Uno::UX::PropertyObject* obj, ::g::Uno::UX::Selector* prop)
{
    uStackFrame __("Fuse.Controls.Control", "OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector prop_ = *prop;

    if (obj == __this->Background())
    {
        __this->InvalidateVisual();

        if (__this->IsRootingCompleted())
            __this->OnBackgroundChanged();
    }

    ::g::Fuse::Visual__OnPropertyChanged2_fn(__this, obj, uCRef(prop_));
}

// protected override void OnRooted() :80
void Control__OnRooted_fn(Control* __this)
{
    uStackFrame __("Fuse.Controls.Control", "OnRooted()");
    ::g::Fuse::Elements::Element__OnRooted_fn(__this);
    __this->RootBackground();

    if (__this->_background != NULL)
        __this->OnBackgroundChanged();
}

// protected override void OnUnrooted() :88
void Control__OnUnrooted_fn(Control* __this)
{
    uStackFrame __("Fuse.Controls.Control", "OnUnrooted()");
    __this->UnrootBackground();
    ::g::Fuse::Elements::Element__OnUnrooted_fn(__this);
}

// protected virtual void PushPropertiesToNativeView() :38
void Control__PushPropertiesToNativeView_fn(Control* __this)
{
}

// private void RootBackground() :67
void Control__RootBackground_fn(Control* __this)
{
    __this->RootBackground();
}

// private void SetBackground(Fuse.Drawing.Brush value) :35
void Control__SetBackground_fn(Control* __this, ::g::Fuse::Drawing::Brush* value)
{
    __this->SetBackground(value);
}

// private void UnrootBackground() :51
void Control__UnrootBackground_fn(Control* __this)
{
    __this->UnrootBackground();
}

// protected generated Control() [instance] :9
void Control::ctor_4()
{
    ctor_3();
}

// public generated object get_Appearance() [instance] :10
uObject* Control::Appearance()
{
    return _Appearance;
}

// internal generated void set_Appearance(object value) [instance] :10
void Control::Appearance(uObject* value)
{
    _Appearance = value;
}

// public Fuse.Drawing.Brush get_Background() [instance] :28
::g::Fuse::Drawing::Brush* Control::Background()
{
    return _background;
}

// public void set_Background(Fuse.Drawing.Brush value) [instance] :29
void Control::Background(::g::Fuse::Drawing::Brush* value)
{
    uStackFrame __("Fuse.Controls.Control", "set_Background(Fuse.Drawing.Brush)");

    if (_background != value)
        SetBackground(value);
}

// protected void DrawBackground(Fuse.DrawContext dc, float opacity) [instance] :112
void Control::DrawBackground(::g::Fuse::DrawContext* dc, float opacity)
{
    uStackFrame __("Fuse.Controls.Control", "DrawBackground(Fuse.DrawContext,float)");

    if ((Background() != NULL) && !uPtr(Background())->IsCompletelyTransparent())
    {
        double t;
        uPtr(Background())->Prepare(dc, ActualSize());
        uPtr(::g::Fuse::Internal::Drawing::SolidRectangle::Impl())->DrawElement(dc, this, Background(), opacity);
    }
}

// public generated Fuse.Visual get_GraphicsVisual() [instance] :12
::g::Fuse::Visual* Control::GraphicsVisual()
{
    return _GraphicsVisual;
}

// internal generated void set_GraphicsVisual(Fuse.Visual value) [instance] :12
void Control::GraphicsVisual(::g::Fuse::Visual* value)
{
    _GraphicsVisual = value;
}

// internal Fuse.Controls.Native.IView InstantiateNativeView() [instance] :49
uObject* Control::InstantiateNativeView()
{
    uStackFrame __("Fuse.Controls.Control", "InstantiateNativeView()");
    return CreateNativeView();
}

// public Fuse.Controls.Native.IView get_NativeView() [instance] :17
uObject* Control::NativeView()
{
    return _nativeView;
}

// internal void set_NativeView(Fuse.Controls.Native.IView value) [instance] :18
void Control::NativeView(uObject* value)
{
    uStackFrame __("Fuse.Controls.Control", "set_NativeView(Fuse.Controls.Native.IView)");
    _nativeView = value;

    if (_nativeView != NULL)
        PushPropertiesToNativeView();
}

// private void OnBackgroundChanged() [instance] :105
void Control::OnBackgroundChanged()
{
    uStackFrame __("Fuse.Controls.Control", "OnBackgroundChanged()");
    uObject* t = TreeRenderer();

    if (t != NULL)
        ::g::Fuse::Elements::ITreeRenderer::BackgroundChanged(uInterface(uPtr(TreeRenderer()), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), this, Background());
}

// private void RootBackground() [instance] :67
void Control::RootBackground()
{
    uStackFrame __("Fuse.Controls.Control", "RootBackground()");

    if ((!IsRootingStarted() || (_background == NULL)) || _backgroundRooted)
        return;

    _backgroundRooted = true;
    uPtr(_background)->Pin();
    ::g::Fuse::Drawing::DynamicBrush* dbg = uAs< ::g::Fuse::Drawing::DynamicBrush*>(_background, ::TYPES[11/*Fuse.Drawing.DynamicBrush*/]);

    if (dbg != NULL)
        uPtr(dbg)->AddPropertyListener((uObject*)this);
}

// private void SetBackground(Fuse.Drawing.Brush value) [instance] :35
void Control::SetBackground(::g::Fuse::Drawing::Brush* value)
{
    uStackFrame __("Fuse.Controls.Control", "SetBackground(Fuse.Drawing.Brush)");

    if ((value != NULL) && !uIs(value, ::TYPES[12/*Fuse.Drawing.ISolidColor*/]))
        ::g::Fuse::Diagnostics::Deprecated(::STRINGS[6/*"Background ...*/], this, ::STRINGS[7/*"C:\\Users\\...*/], 38, ::STRINGS[8/*"SetBackground"*/]);

    UnrootBackground();
    _background = value;
    RootBackground();
    InvalidateRenderBounds();

    if (IsRootingCompleted())
        OnBackgroundChanged();
}

// private void UnrootBackground() [instance] :51
void Control::UnrootBackground()
{
    uStackFrame __("Fuse.Controls.Control", "UnrootBackground()");

    if (_background == NULL)
        return;

    if (!_backgroundRooted)
        return;

    _backgroundRooted = false;
    uPtr(_background)->Unpin();
    ::g::Fuse::Drawing::DynamicBrush* dbg = uAs< ::g::Fuse::Drawing::DynamicBrush*>(_background, ::TYPES[11/*Fuse.Drawing.DynamicBrush*/]);

    if (dbg != NULL)
        uPtr(dbg)->RemovePropertyListener((uObject*)this);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\EdgeNavigator.uno
// ----------------------------------------------------------------------------------------------------

// private sealed class EdgeNavigator.ControlPageData :159
// {
static void EdgeNavigator__ControlPageData_build(uType* type)
{
    type->SetFields(0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(EdgeNavigator__ControlPageData, Enter), 0);
}

uType* EdgeNavigator__ControlPageData_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.ObjectSize = sizeof(EdgeNavigator__ControlPageData);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.EdgeNavigator.ControlPageData", options);
    type->fp_build_ = EdgeNavigator__ControlPageData_build;
    type->fp_ctor_ = (void*)EdgeNavigator__ControlPageData__New1_fn;
    return type;
}

// public generated ControlPageData() :159
void EdgeNavigator__ControlPageData__ctor__fn(EdgeNavigator__ControlPageData* __this)
{
    __this->ctor_();
}

// public generated ControlPageData New() :159
void EdgeNavigator__ControlPageData__New1_fn(EdgeNavigator__ControlPageData** __retval)
{
    *__retval = EdgeNavigator__ControlPageData::New1();
}

// public generated ControlPageData() [instance] :159
void EdgeNavigator__ControlPageData::ctor_()
{
}

// public generated ControlPageData New() [static] :159
EdgeNavigator__ControlPageData* EdgeNavigator__ControlPageData::New1()
{
    EdgeNavigator__ControlPageData* obj1 = (EdgeNavigator__ControlPageData*)uNew(EdgeNavigator__ControlPageData_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigationControl.uno
// --------------------------------------------------------------------------------------------------------

// public sealed class NavigationControl.ControlPageData :326
// {
static void NavigationControl__ControlPageData_build(uType* type)
{
    type->SetFields(0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(NavigationControl__ControlPageData, Enter), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(NavigationControl__ControlPageData, Exit), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(NavigationControl__ControlPageData, Inactive), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(NavigationControl__ControlPageData, Removing), 0,
        ::g::Uno::Bool_typeof(), offsetof(NavigationControl__ControlPageData, FromTemplate), 0);
    type->Reflection.SetFields(5,
        new uField("Enter", 0),
        new uField("Exit", 1),
        new uField("FromTemplate", 4),
        new uField("Inactive", 2),
        new uField("Removing", 3));
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)NavigationControl__ControlPageData__New1_fn, 0, true, type, 0));
}

uType* NavigationControl__ControlPageData_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 5;
    options.ObjectSize = sizeof(NavigationControl__ControlPageData);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.NavigationControl.ControlPageData", options);
    type->fp_build_ = NavigationControl__ControlPageData_build;
    type->fp_ctor_ = (void*)NavigationControl__ControlPageData__New1_fn;
    return type;
}

// public generated ControlPageData() :326
void NavigationControl__ControlPageData__ctor__fn(NavigationControl__ControlPageData* __this)
{
    __this->ctor_();
}

// public generated ControlPageData New() :326
void NavigationControl__ControlPageData__New1_fn(NavigationControl__ControlPageData** __retval)
{
    *__retval = NavigationControl__ControlPageData::New1();
}

// public generated ControlPageData() [instance] :326
void NavigationControl__ControlPageData::ctor_()
{
}

// public generated ControlPageData New() [static] :326
NavigationControl__ControlPageData* NavigationControl__ControlPageData::New1()
{
    NavigationControl__ControlPageData* obj1 = (NavigationControl__ControlPageData*)uNew(NavigationControl__ControlPageData_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Curve.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class Curve :242
// {
static void Curve_build(uType* type)
{
    ::TYPES[13] = ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Controls::CurvePoint_typeof(), NULL);
    ::TYPES[14] = ::g::Fuse::Controls::CurvePoint_typeof();
    ::TYPES[15] = ::g::Fuse::Visual_typeof()->MakeMethod(2/*FirstChild<Fuse.Controls.CurvePoint>*/, ::TYPES[14/*Fuse.Controls.CurvePoint*/], NULL);
    ::TYPES[16] = ::g::Fuse::Node_typeof()->MakeMethod(3/*NextSibling<Fuse.Controls.CurvePoint>*/, ::TYPES[14/*Fuse.Controls.CurvePoint*/], NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface18));
    type->SetFields(126,
        ::TYPES[13/*Uno.Collections.List<Fuse.Controls.CurvePoint>*/], offsetof(Curve, _points), 0,
        ::g::Uno::Float_typeof(), offsetof(Curve, _tension), 0,
        ::g::Uno::Float_typeof(), offsetof(Curve, _bias), 0,
        ::g::Uno::Float_typeof(), offsetof(Curve, _continuity), 0,
        ::g::Fuse::Controls::CurveStyle_typeof(), offsetof(Curve, _style), 0,
        ::g::Fuse::Controls::CurveClose_typeof(), offsetof(Curve, _close), 0,
        ::g::Fuse::Controls::CurveExtrude_typeof(), offsetof(Curve, _extrude), 0,
        ::g::Uno::Float_typeof(), offsetof(Curve, _extrudeTo), 0,
        ::g::Fuse::Drawing::LineSegments_typeof(), offsetof(Curve, _segments1), 0);
    type->Reflection.SetFunctions(15,
        new uFunction("get_Bias", NULL, (void*)Curve__get_Bias_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Bias", NULL, (void*)Curve__set_Bias_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Close", NULL, (void*)Curve__get_Close_fn, 0, false, ::g::Fuse::Controls::CurveClose_typeof(), 0),
        new uFunction("set_Close", NULL, (void*)Curve__set_Close_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::CurveClose_typeof()),
        new uFunction("get_Continuity", NULL, (void*)Curve__get_Continuity_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Continuity", NULL, (void*)Curve__set_Continuity_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Extrude", NULL, (void*)Curve__get_Extrude_fn, 0, false, ::g::Fuse::Controls::CurveExtrude_typeof(), 0),
        new uFunction("set_Extrude", NULL, (void*)Curve__set_Extrude_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::CurveExtrude_typeof()),
        new uFunction("get_ExtrudeTo", NULL, (void*)Curve__get_ExtrudeTo_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ExtrudeTo", NULL, (void*)Curve__set_ExtrudeTo_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction(".ctor", NULL, (void*)Curve__New3_fn, 0, true, type, 0),
        new uFunction("get_Style", NULL, (void*)Curve__get_Style_fn, 0, false, ::g::Fuse::Controls::CurveStyle_typeof(), 0),
        new uFunction("set_Style", NULL, (void*)Curve__set_Style_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::CurveStyle_typeof()),
        new uFunction("get_Tension", NULL, (void*)Curve__get_Tension_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Tension", NULL, (void*)Curve__set_Tension_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

::g::Fuse::Controls::SegmentedShape_type* Curve_typeof()
{
    static uSStrong< ::g::Fuse::Controls::SegmentedShape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::SegmentedShape_typeof();
    options.FieldCount = 135;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(Curve);
    options.TypeSize = sizeof(::g::Fuse::Controls::SegmentedShape_type);
    type = (::g::Fuse::Controls::SegmentedShape_type*)uClassType::New("Fuse.Controls.Curve", options);
    type->fp_build_ = Curve_build;
    type->fp_ctor_ = (void*)Curve__New3_fn;
    type->fp_CalcShapeExtents = (void(*)(::g::Fuse::Controls::Shape*, ::g::Uno::Rect*))Curve__CalcShapeExtents_fn;
    type->fp_GetSegments = (void(*)(::g::Fuse::Controls::SegmentedShape*, uObject**))Curve__GetSegments_fn;
    type->fp_InvalidateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*))Curve__InvalidateSurfacePath_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))Curve__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))Curve__OnChildRemoved_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Curve__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Curve__OnUnrooted_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Curve__UnoUXIPropertyListenerOnPropertyChanged_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Curve() :242
void Curve__ctor_8_fn(Curve* __this)
{
    __this->ctor_8();
}

// public float get_Bias() :326
void Curve__get_Bias_fn(Curve* __this, float* __retval)
{
    *__retval = __this->Bias();
}

// public void set_Bias(float value) :327
void Curve__set_Bias_fn(Curve* __this, float* value)
{
    __this->Bias(*value);
}

// protected override sealed Uno.Rect CalcShapeExtents() :549
void Curve__CalcShapeExtents_fn(Curve* __this, ::g::Uno::Rect* __retval)
{
    uStackFrame __("Fuse.Controls.Curve", "CalcShapeExtents()");
    return *__retval = ::g::Fuse::Drawing::LineMetrics::GetBounds(__this->GetSegments()), void();
}

// public Fuse.Controls.CurveClose get_Close() :387
void Curve__get_Close_fn(Curve* __this, int32_t* __retval)
{
    *__retval = __this->Close();
}

// public void set_Close(Fuse.Controls.CurveClose value) :388
void Curve__set_Close_fn(Curve* __this, int32_t* value)
{
    __this->Close(*value);
}

// public float get_Continuity() :345
void Curve__get_Continuity_fn(Curve* __this, float* __retval)
{
    *__retval = __this->Continuity();
}

// public void set_Continuity(float value) :346
void Curve__set_Continuity_fn(Curve* __this, float* value)
{
    __this->Continuity(*value);
}

// public Fuse.Controls.CurveExtrude get_Extrude() :406
void Curve__get_Extrude_fn(Curve* __this, int32_t* __retval)
{
    *__retval = __this->Extrude();
}

// public void set_Extrude(Fuse.Controls.CurveExtrude value) :407
void Curve__set_Extrude_fn(Curve* __this, int32_t* value)
{
    __this->Extrude(*value);
}

// private float2 ExtrudePoint(float2 pt) :439
void Curve__ExtrudePoint_fn(Curve* __this, ::g::Uno::Float2* pt, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ExtrudePoint(*pt);
}

// public float get_ExtrudeTo() :420
void Curve__get_ExtrudeTo_fn(Curve* __this, float* __retval)
{
    *__retval = __this->ExtrudeTo();
}

// public void set_ExtrudeTo(float value) :421
void Curve__set_ExtrudeTo_fn(Curve* __this, float* value)
{
    __this->ExtrudeTo(*value);
}

// internal override sealed Uno.Collections.IList<Fuse.Drawing.LineSegment> GetSegments() :488
void Curve__GetSegments_fn(Curve* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Curve", "GetSegments()");
    ::g::Uno::Float2 ind1;
    ::g::Fuse::Controls::CurvePoint* ret3;
    ::g::Fuse::Controls::CurvePoint* ret4;
    ::g::Fuse::Controls::CurvePoint* ret5;
    ::g::Fuse::Controls::CurvePoint* ret6;
    ::g::Fuse::Controls::CurvePoint* ret7;
    ::g::Fuse::Controls::CurvePoint* ret8;
    ::g::Fuse::Controls::CurvePoint* ret9;
    ::g::Fuse::Controls::CurvePoint* ret10;

    if ((uPtr(__this->_segments1)->Count() > 0) || (uPtr(__this->_points)->Count() < 2))
        return *__retval = uPtr(__this->_segments1)->Segments(), void();

    ::g::Uno::Float2 rs = __this->ActualSize();
    ::g::Fuse::Drawing::LineSegments* line = __this->_segments1;
    int32_t end = (__this->Close() == 2) ? uPtr(__this->_points)->Count() + 1 : uPtr(__this->_points)->Count();

    for (int32_t i = 0; i < end; ++i)
    {
        if (i == 0)
        {
            uPtr(line)->MoveTo(::g::Uno::Float2__op_Multiply2(uPtr((::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(i), &ret3), ret3))->At(), rs));
            continue;
        }

        if (__this->Style() == 0)
        {
            uPtr(line)->LineTo(::g::Uno::Float2__op_Multiply2(uPtr((::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(__this->WrapPointsIndex(i)), &ret4), ret4))->At(), rs));
            continue;
        }

        ::g::Fuse::Controls::CurvePoint* prev = (::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(__this->WrapPointsIndex(i - 2)), &ret5), ret5);
        ::g::Fuse::Controls::CurvePoint* cur = (::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(__this->WrapPointsIndex(i - 1)), &ret6), ret6);
        ::g::Fuse::Controls::CurvePoint* next = (::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(__this->WrapPointsIndex(i)), &ret7), ret7);
        ::g::Fuse::Controls::CurvePoint* next2 = (::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(__this->WrapPointsIndex(i + 1)), &ret8), ret8);
        ::g::Uno::Float4 ta, tb;
        ::g::Fuse::Internal::Curves::KochanekBartelTangent(::g::Uno::Float4__New6(uPtr(prev)->At(), 0.0f, 0.0f), ::g::Uno::Float4__New6(uPtr(cur)->At(), 0.0f, 0.0f), ::g::Uno::Float4__New6(uPtr(next)->At(), 0.0f, 0.0f), ::g::Uno::Float4__New6(uPtr(next2)->At(), 0.0f, 0.0f), __this->_tension, __this->_bias, __this->_continuity, &ta, &tb);

        if (cur->HasTangentOut())
            ta = ::g::Uno::Float4__New6(uPtr(cur)->TangentOut(), 0.0f, 0.0f);

        if (next->HasTangentIn())
            tb = ::g::Uno::Float4__New6(uPtr(next)->TangentIn(), 0.0f, 0.0f);

        ::g::Fuse::Internal::Curves::CubicHermiteToBezier(::g::Uno::Float4__New6(cur->At(), 0.0f, 0.0f), ::g::Uno::Float4__New6(next->At(), 0.0f, 0.0f), &ta, &tb);

        if (cur->HasControlOut())
            ta = ::g::Uno::Float4__New6(uPtr(cur)->ControlOut(), 0.0f, 0.0f);

        if (next->HasControlIn())
            tb = ::g::Uno::Float4__New6(uPtr(next)->ControlIn(), 0.0f, 0.0f);

        uPtr(line)->BezierCurveTo(::g::Uno::Float2__op_Multiply2((ind1 = next->At(), ::g::Uno::Float2__New2(ind1.X, ind1.Y)), rs), ::g::Uno::Float2__op_Multiply2(::g::Uno::Float2__New2(ta.X, ta.Y), rs), ::g::Uno::Float2__op_Multiply2(::g::Uno::Float2__New2(tb.X, tb.Y), rs));
    }

    if (__this->Extrude() != 0)
    {
        uPtr(line)->LineTo(::g::Uno::Float2__op_Multiply2(__this->ExtrudePoint(uPtr((::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(uPtr(__this->_points)->Count() - 1), &ret9), ret9))->At()), rs));
        line->LineTo(::g::Uno::Float2__op_Multiply2(__this->ExtrudePoint(uPtr((::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(0), &ret10), ret10))->At()), rs));
        line->ClosePath();
    }
    else if (__this->Close() != 0)
        uPtr(line)->ClosePath();

    return *__retval = uPtr(__this->_segments1)->Segments(), void();
}

// protected override sealed void InvalidateSurfacePath() :432
void Curve__InvalidateSurfacePath_fn(Curve* __this)
{
    uStackFrame __("Fuse.Controls.Curve", "InvalidateSurfacePath()");
    ::g::Fuse::Controls::SegmentedShape__InvalidateSurfacePath_fn(__this);
    uPtr(__this->_segments1)->Clear();
    __this->InvalidateRenderBounds();
}

// public generated Curve New() :242
void Curve__New3_fn(Curve** __retval)
{
    *__retval = Curve::New3();
}

// protected override sealed void OnChildAdded(Fuse.Node elm) :246
void Curve__OnChildAdded_fn(Curve* __this, ::g::Fuse::Node* elm)
{
    uStackFrame __("Fuse.Controls.Curve", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Controls::LayoutControl__OnChildAdded_fn(__this, elm);

    if (__this->IsRootingCompleted() && uIs(elm, ::TYPES[14/*Fuse.Controls.CurvePoint*/]))
    {
        uPtr(uAs< ::g::Fuse::Controls::CurvePoint*>(elm, ::TYPES[14/*Fuse.Controls.CurvePoint*/]))->AddPropertyListener((uObject*)__this);
        __this->ResetLines();
    }
}

// protected override sealed void OnChildRemoved(Fuse.Node elm) :256
void Curve__OnChildRemoved_fn(Curve* __this, ::g::Fuse::Node* elm)
{
    uStackFrame __("Fuse.Controls.Curve", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Controls::LayoutControl__OnChildRemoved_fn(__this, elm);

    if (__this->IsRootingCompleted() && uIs(elm, ::TYPES[14/*Fuse.Controls.CurvePoint*/]))
    {
        uPtr(uAs< ::g::Fuse::Controls::CurvePoint*>(elm, ::TYPES[14/*Fuse.Controls.CurvePoint*/]))->RemovePropertyListener((uObject*)__this);
        __this->ResetLines();
    }
}

// protected override sealed void OnRooted() :282
void Curve__OnRooted_fn(Curve* __this)
{
    uStackFrame __("Fuse.Controls.Curve", "OnRooted()");
    ::g::Fuse::Controls::CurvePoint* ret11;
    ::g::Fuse::Controls::Shape__OnRooted_fn(__this);
    __this->ResetLines();

    for (int32_t i = 0; i < uPtr(__this->_points)->Count(); ++i)
        uPtr((::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(i), &ret11), ret11))->AddPropertyListener((uObject*)__this);
}

// protected override sealed void OnUnrooted() :291
void Curve__OnUnrooted_fn(Curve* __this)
{
    uStackFrame __("Fuse.Controls.Curve", "OnUnrooted()");
    ::g::Fuse::Controls::CurvePoint* ret12;

    for (int32_t i = 0; i < uPtr(__this->_points)->Count(); ++i)
        uPtr((::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_points), uCRef<int32_t>(i), &ret12), ret12))->RemovePropertyListener((uObject*)__this);

    ::g::Fuse::Controls::Shape__OnUnrooted_fn(__this);
}

// private void ResetLines() :266
void Curve__ResetLines_fn(Curve* __this)
{
    __this->ResetLines();
}

// public Fuse.Controls.CurveStyle get_Style() :366
void Curve__get_Style_fn(Curve* __this, int32_t* __retval)
{
    *__retval = __this->Style();
}

// public void set_Style(Fuse.Controls.CurveStyle value) :367
void Curve__set_Style_fn(Curve* __this, int32_t* value)
{
    __this->Style(*value);
}

// public float get_Tension() :307
void Curve__get_Tension_fn(Curve* __this, float* __retval)
{
    *__retval = __this->Tension();
}

// public void set_Tension(float value) :308
void Curve__set_Tension_fn(Curve* __this, float* value)
{
    __this->Tension(*value);
}

// private void Uno.UX.IPropertyListener.OnPropertyChanged(Uno.UX.PropertyObject obj, Uno.UX.Selector prop) :274
void Curve__UnoUXIPropertyListenerOnPropertyChanged_fn(Curve* __this, ::g::Uno::UX::PropertyObject* obj, ::g::Uno::UX::Selector* prop)
{
    uStackFrame __("Fuse.Controls.Curve", "Uno.UX.IPropertyListener.OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");

    if (uIs(obj, ::TYPES[14/*Fuse.Controls.CurvePoint*/]))
        __this->InvalidateSurfacePath();
}

// private int WrapPointsIndex(int a) :461
void Curve__WrapPointsIndex_fn(Curve* __this, int32_t* a, int32_t* __retval)
{
    *__retval = __this->WrapPointsIndex(*a);
}

// public generated Curve() [instance] :242
void Curve::ctor_8()
{
    _points = ((::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[13/*Uno.Collections.List<Fuse.Controls.CurvePoint>*/]));
    _tension = 0.0f;
    _bias = 0.0f;
    _continuity = 0.0f;
    _style = 1;
    _extrudeTo = 0.0f;
    _segments1 = ::g::Fuse::Drawing::LineSegments::New1();
    ctor_7();
}

// public float get_Bias() [instance] :326
float Curve::Bias()
{
    return _bias;
}

// public void set_Bias(float value) [instance] :327
void Curve::Bias(float value)
{
    uStackFrame __("Fuse.Controls.Curve", "set_Bias(float)");

    if (_bias != value)
    {
        _bias = value;
        InvalidateSurfacePath();
    }
}

// public Fuse.Controls.CurveClose get_Close() [instance] :387
int32_t Curve::Close()
{
    return _close;
}

// public void set_Close(Fuse.Controls.CurveClose value) [instance] :388
void Curve::Close(int32_t value)
{
    uStackFrame __("Fuse.Controls.Curve", "set_Close(Fuse.Controls.CurveClose)");

    if (_close == value)
        return;

    _close = value;
    InvalidateSurfacePath();
}

// public float get_Continuity() [instance] :345
float Curve::Continuity()
{
    return _continuity;
}

// public void set_Continuity(float value) [instance] :346
void Curve::Continuity(float value)
{
    uStackFrame __("Fuse.Controls.Curve", "set_Continuity(float)");

    if (_continuity != value)
    {
        _continuity = value;
        InvalidateSurfacePath();
    }
}

// public Fuse.Controls.CurveExtrude get_Extrude() [instance] :406
int32_t Curve::Extrude()
{
    return _extrude;
}

// public void set_Extrude(Fuse.Controls.CurveExtrude value) [instance] :407
void Curve::Extrude(int32_t value)
{
    uStackFrame __("Fuse.Controls.Curve", "set_Extrude(Fuse.Controls.CurveExtrude)");

    if (_extrude == value)
        return;

    _extrude = value;
    InvalidateSurfacePath();
}

// private float2 ExtrudePoint(float2 pt) [instance] :439
::g::Uno::Float2 Curve::ExtrudePoint(::g::Uno::Float2 pt)
{
    switch (Extrude())
    {
        case 1:
            return ::g::Uno::Float2__New2(pt.X, 1.0f);
        case 2:
            return ::g::Uno::Float2__New2(pt.X, 0.0f);
        case 3:
            return ::g::Uno::Float2__New2(0.0f, pt.Y);
        case 4:
            return ::g::Uno::Float2__New2(1.0f, pt.Y);
        case 6:
            return ::g::Uno::Float2__New2(ExtrudeTo(), pt.Y);
        case 5:
            return ::g::Uno::Float2__New2(pt.X, ExtrudeTo());
    }

    return pt;
}

// public float get_ExtrudeTo() [instance] :420
float Curve::ExtrudeTo()
{
    return _extrudeTo;
}

// public void set_ExtrudeTo(float value) [instance] :421
void Curve::ExtrudeTo(float value)
{
    uStackFrame __("Fuse.Controls.Curve", "set_ExtrudeTo(float)");

    if (_extrudeTo == value)
        return;

    _extrudeTo = value;
    InvalidateSurfacePath();
}

// private void ResetLines() [instance] :266
void Curve::ResetLines()
{
    uStackFrame __("Fuse.Controls.Curve", "ResetLines()");
    InvalidateSurfacePath();
    uPtr(_points)->Clear();

    for (::g::Fuse::Controls::CurvePoint* n = (::g::Fuse::Controls::CurvePoint*)FirstChild(::TYPES[15/*Fuse.Visual.FirstChild<Fuse.Controls.CurvePoint>*/]); n != NULL; n = (::g::Fuse::Controls::CurvePoint*)uPtr(n)->NextSibling(::TYPES[16/*Fuse.Node.NextSibling<Fuse.Controls.CurvePoint>*/]))
        ::g::Uno::Collections::List__Add_fn(uPtr(_points), n);
}

// public Fuse.Controls.CurveStyle get_Style() [instance] :366
int32_t Curve::Style()
{
    return _style;
}

// public void set_Style(Fuse.Controls.CurveStyle value) [instance] :367
void Curve::Style(int32_t value)
{
    uStackFrame __("Fuse.Controls.Curve", "set_Style(Fuse.Controls.CurveStyle)");

    if (_style == value)
        return;

    _style = value;
    InvalidateSurfacePath();
}

// public float get_Tension() [instance] :307
float Curve::Tension()
{
    return _tension;
}

// public void set_Tension(float value) [instance] :308
void Curve::Tension(float value)
{
    uStackFrame __("Fuse.Controls.Curve", "set_Tension(float)");

    if (_tension != value)
    {
        _tension = value;
        InvalidateSurfacePath();
    }
}

// private int WrapPointsIndex(int a) [instance] :461
int32_t Curve::WrapPointsIndex(int32_t a)
{
    uStackFrame __("Fuse.Controls.Curve", "WrapPointsIndex(int)");

    switch (Close())
    {
        case 0:
            break;
        case 1:
        {
            if (a < 0)
                a = a + (uPtr(_points)->Count() - 1);
            else if (a >= uPtr(_points)->Count())
                a = a - (uPtr(_points)->Count() - 1);

            break;
        }
        case 2:
        {
            if (a < 0)
                a = a + uPtr(_points)->Count();
            else if (a >= uPtr(_points)->Count())
                a = a - uPtr(_points)->Count();

            break;
        }
    }

    return ::g::Uno::Math::Clamp8(a, 0, uPtr(_points)->Count() - 1);
}

// public generated Curve New() [static] :242
Curve* Curve::New3()
{
    Curve* obj2 = (Curve*)uNew(Curve_typeof());
    obj2->ctor_8();
    return obj2;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Curve.uno
// ---------------------------------------------------------------------------------------------------

// public enum CurveClose :18
uEnumType* CurveClose_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.CurveClose", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "None", 0LL,
        "Overlap", 1LL,
        "Auto", 2LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Curve.uno
// ---------------------------------------------------------------------------------------------------

// public enum CurveExtrude :205
uEnumType* CurveExtrude_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.CurveExtrude", ::g::Uno::Int_typeof(), 7);
    type->SetLiterals(
        "None", 0LL,
        "Bottom", 1LL,
        "Top", 2LL,
        "Left", 3LL,
        "Right", 4LL,
        "Vertical", 5LL,
        "Horizontal", 6LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Curve.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class CurvePoint :40
// {
// static generated CurvePoint() :40
static void CurvePoint__cctor_1_fn(uType* __type)
{
    CurvePoint::NameAt_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("At"));
    CurvePoint::NameTangentIn_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("TangentIn"));
    CurvePoint::NameTangentOut_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("TangentOut"));
    CurvePoint::NameControlIn_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("ControlIn"));
    CurvePoint::NameControlOut_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("ControlOut"));
}

static void CurvePoint_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Node_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Node_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Node_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface5));
    type->SetFields(16,
        ::g::Uno::Float2_typeof(), offsetof(CurvePoint, _at), 0,
        CurvePoint__HasFlags_typeof(), offsetof(CurvePoint, _has), 0,
        ::g::Uno::Float2_typeof(), offsetof(CurvePoint, _a), 0,
        ::g::Uno::Float2_typeof(), offsetof(CurvePoint, _b), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&CurvePoint::NameAt_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&CurvePoint::NameTangentIn_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&CurvePoint::NameTangentOut_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&CurvePoint::NameControlIn_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&CurvePoint::NameControlOut_, uFieldFlagsStatic);
    type->Reflection.SetFields(5,
        new uField("NameAt", 20),
        new uField("NameControlIn", 23),
        new uField("NameControlOut", 24),
        new uField("NameTangentIn", 21),
        new uField("NameTangentOut", 22));
    type->Reflection.SetFunctions(21,
        new uFunction("get_At", NULL, (void*)CurvePoint__get_At_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_At", NULL, (void*)CurvePoint__set_At_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_ControlIn", NULL, (void*)CurvePoint__get_ControlIn_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_ControlIn", NULL, (void*)CurvePoint__set_ControlIn_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_ControlOut", NULL, (void*)CurvePoint__get_ControlOut_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_ControlOut", NULL, (void*)CurvePoint__set_ControlOut_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_HasControlIn", NULL, (void*)CurvePoint__get_HasControlIn_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_HasControlOut", NULL, (void*)CurvePoint__get_HasControlOut_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_HasTangentIn", NULL, (void*)CurvePoint__get_HasTangentIn_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_HasTangentOut", NULL, (void*)CurvePoint__get_HasTangentOut_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction(".ctor", NULL, (void*)CurvePoint__New2_fn, 0, true, type, 0),
        new uFunction("get_Tangent", NULL, (void*)CurvePoint__get_Tangent_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_Tangent", NULL, (void*)CurvePoint__set_Tangent_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_TangentIn", NULL, (void*)CurvePoint__get_TangentIn_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_TangentIn", NULL, (void*)CurvePoint__set_TangentIn_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_TangentOut", NULL, (void*)CurvePoint__get_TangentOut_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_TangentOut", NULL, (void*)CurvePoint__set_TangentOut_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_X", NULL, (void*)CurvePoint__get_X_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_X", NULL, (void*)CurvePoint__set_X_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Y", NULL, (void*)CurvePoint__get_Y_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Y", NULL, (void*)CurvePoint__set_Y_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

::g::Fuse::Node_type* CurvePoint_typeof()
{
    static uSStrong< ::g::Fuse::Node_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Node_typeof();
    options.FieldCount = 25;
    options.InterfaceCount = 6;
    options.ObjectSize = sizeof(CurvePoint);
    options.TypeSize = sizeof(::g::Fuse::Node_type);
    type = (::g::Fuse::Node_type*)uClassType::New("Fuse.Controls.CurvePoint", options);
    type->fp_build_ = CurvePoint_build;
    type->fp_ctor_ = (void*)CurvePoint__New2_fn;
    type->fp_cctor_ = CurvePoint__cctor_1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated CurvePoint() :40
void CurvePoint__ctor_2_fn(CurvePoint* __this)
{
    __this->ctor_2();
}

// public float2 get_At() :54
void CurvePoint__get_At_fn(CurvePoint* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->At();
}

// public void set_At(float2 value) :55
void CurvePoint__set_At_fn(CurvePoint* __this, ::g::Uno::Float2* value)
{
    __this->At(*value);
}

// public float2 get_ControlIn() :171
void CurvePoint__get_ControlIn_fn(CurvePoint* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ControlIn();
}

// public void set_ControlIn(float2 value) :172
void CurvePoint__set_ControlIn_fn(CurvePoint* __this, ::g::Uno::Float2* value)
{
    __this->ControlIn(*value);
}

// public float2 get_ControlOut() :190
void CurvePoint__get_ControlOut_fn(CurvePoint* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ControlOut();
}

// public void set_ControlOut(float2 value) :191
void CurvePoint__set_ControlOut_fn(CurvePoint* __this, ::g::Uno::Float2* value)
{
    __this->ControlOut(*value);
}

// public bool get_HasControlIn() :183
void CurvePoint__get_HasControlIn_fn(CurvePoint* __this, bool* __retval)
{
    *__retval = __this->HasControlIn();
}

// public bool get_HasControlOut() :202
void CurvePoint__get_HasControlOut_fn(CurvePoint* __this, bool* __retval)
{
    *__retval = __this->HasControlOut();
}

// public bool get_HasTangentIn() :132
void CurvePoint__get_HasTangentIn_fn(CurvePoint* __this, bool* __retval)
{
    *__retval = __this->HasTangentIn();
}

// public bool get_HasTangentOut() :151
void CurvePoint__get_HasTangentOut_fn(CurvePoint* __this, bool* __retval)
{
    *__retval = __this->HasTangentOut();
}

// public generated CurvePoint New() :40
void CurvePoint__New2_fn(CurvePoint** __retval)
{
    *__retval = CurvePoint::New2();
}

// public float2 get_Tangent() :158
void CurvePoint__get_Tangent_fn(CurvePoint* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Tangent();
}

// public void set_Tangent(float2 value) :159
void CurvePoint__set_Tangent_fn(CurvePoint* __this, ::g::Uno::Float2* value)
{
    __this->Tangent(*value);
}

// public float2 get_TangentIn() :120
void CurvePoint__get_TangentIn_fn(CurvePoint* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->TangentIn();
}

// public void set_TangentIn(float2 value) :121
void CurvePoint__set_TangentIn_fn(CurvePoint* __this, ::g::Uno::Float2* value)
{
    __this->TangentIn(*value);
}

// public float2 get_TangentOut() :139
void CurvePoint__get_TangentOut_fn(CurvePoint* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->TangentOut();
}

// public void set_TangentOut(float2 value) :140
void CurvePoint__set_TangentOut_fn(CurvePoint* __this, ::g::Uno::Float2* value)
{
    __this->TangentOut(*value);
}

// public float get_X() :84
void CurvePoint__get_X_fn(CurvePoint* __this, float* __retval)
{
    *__retval = __this->X();
}

// public void set_X(float value) :85
void CurvePoint__set_X_fn(CurvePoint* __this, float* value)
{
    __this->X(*value);
}

// public float get_Y() :101
void CurvePoint__get_Y_fn(CurvePoint* __this, float* __retval)
{
    *__retval = __this->Y();
}

// public void set_Y(float value) :102
void CurvePoint__set_Y_fn(CurvePoint* __this, float* value)
{
    __this->Y(*value);
}

::g::Uno::UX::Selector CurvePoint::NameAt_;
::g::Uno::UX::Selector CurvePoint::NameTangentIn_;
::g::Uno::UX::Selector CurvePoint::NameTangentOut_;
::g::Uno::UX::Selector CurvePoint::NameControlIn_;
::g::Uno::UX::Selector CurvePoint::NameControlOut_;

// public generated CurvePoint() [instance] :40
void CurvePoint::ctor_2()
{
    ctor_1();
}

// public float2 get_At() [instance] :54
::g::Uno::Float2 CurvePoint::At()
{
    return _at;
}

// public void set_At(float2 value) [instance] :55
void CurvePoint::At(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.CurvePoint", "set_At(float2)");

    if (::g::Uno::Float2__op_Equality(_at, value) && ((_has & 3) == 3))
        return;

    _at = value;
    _has = (_has | 3);
    OnPropertyChanged(CurvePoint::NameAt_);
}

// public float2 get_ControlIn() [instance] :171
::g::Uno::Float2 CurvePoint::ControlIn()
{
    return _a;
}

// public void set_ControlIn(float2 value) [instance] :172
void CurvePoint::ControlIn(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.CurvePoint", "set_ControlIn(float2)");

    if (::g::Uno::Float2__op_Equality(_a, value) && ((_has & 16) == 16))
        return;

    _a = value;
    _has = (_has | 16);
    OnPropertyChanged(CurvePoint::NameControlIn_);
}

// public float2 get_ControlOut() [instance] :190
::g::Uno::Float2 CurvePoint::ControlOut()
{
    return _b;
}

// public void set_ControlOut(float2 value) [instance] :191
void CurvePoint::ControlOut(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.CurvePoint", "set_ControlOut(float2)");

    if (::g::Uno::Float2__op_Equality(_b, value) && ((_has & 32) == 32))
        return;

    _b = value;
    _has = (_has | 32);
    OnPropertyChanged(CurvePoint::NameControlOut_);
}

// public bool get_HasControlIn() [instance] :183
bool CurvePoint::HasControlIn()
{
    return (_has & 16) == 16;
}

// public bool get_HasControlOut() [instance] :202
bool CurvePoint::HasControlOut()
{
    return (_has & 32) == 32;
}

// public bool get_HasTangentIn() [instance] :132
bool CurvePoint::HasTangentIn()
{
    return (_has & 4) == 4;
}

// public bool get_HasTangentOut() [instance] :151
bool CurvePoint::HasTangentOut()
{
    return (_has & 8) == 8;
}

// public float2 get_Tangent() [instance] :158
::g::Uno::Float2 CurvePoint::Tangent()
{
    return TangentIn();
}

// public void set_Tangent(float2 value) [instance] :159
void CurvePoint::Tangent(::g::Uno::Float2 value)
{
    TangentIn(value);
    TangentOut(value);
}

// public float2 get_TangentIn() [instance] :120
::g::Uno::Float2 CurvePoint::TangentIn()
{
    return _a;
}

// public void set_TangentIn(float2 value) [instance] :121
void CurvePoint::TangentIn(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.CurvePoint", "set_TangentIn(float2)");

    if (::g::Uno::Float2__op_Equality(_a, value) && ((_has & 4) == 4))
        return;

    _a = value;
    _has = (_has | 4);
    OnPropertyChanged(CurvePoint::NameTangentIn_);
}

// public float2 get_TangentOut() [instance] :139
::g::Uno::Float2 CurvePoint::TangentOut()
{
    return _b;
}

// public void set_TangentOut(float2 value) [instance] :140
void CurvePoint::TangentOut(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.CurvePoint", "set_TangentOut(float2)");

    if (::g::Uno::Float2__op_Equality(_b, value) && ((_has & 8) == 8))
        return;

    _b = value;
    _has = (_has | 8);
    OnPropertyChanged(CurvePoint::NameTangentOut_);
}

// public float get_X() [instance] :84
float CurvePoint::X()
{
    return _at.X;
}

// public void set_X(float value) [instance] :85
void CurvePoint::X(float value)
{
    uStackFrame __("Fuse.Controls.CurvePoint", "set_X(float)");

    if ((_at.X == value) && ((_has & 1) == 1))
        return;

    _at.X = value;
    _has = (_has | 1);
    OnPropertyChanged(CurvePoint::NameAt_);
}

// public float get_Y() [instance] :101
float CurvePoint::Y()
{
    return _at.Y;
}

// public void set_Y(float value) [instance] :102
void CurvePoint::Y(float value)
{
    uStackFrame __("Fuse.Controls.CurvePoint", "set_Y(float)");

    if ((_at.Y == value) && ((_has & 2) == 2))
        return;

    _at.Y = value;
    _has = (_has | 2);
    OnPropertyChanged(CurvePoint::NameAt_);
}

// public generated CurvePoint New() [static] :40
CurvePoint* CurvePoint::New2()
{
    CurvePoint* obj1 = (CurvePoint*)uNew(CurvePoint_typeof());
    obj1->ctor_2();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Curve.uno
// ---------------------------------------------------------------------------------------------------

// public enum CurveStyle :12
uEnumType* CurveStyle_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.CurveStyle", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Straight", 0LL,
        "Smooth", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.DatePicker\1.7.2\DatePicker.Docs.uno
// ------------------------------------------------------------------------------------------------------

// public partial sealed class DatePicker :63
// {
// static DatePicker() :80
static void DatePicker__cctor_5_fn(uType* __type)
{
    DatePicker::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("self"));
}

static void DatePicker_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(120,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&DatePicker::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)DatePicker__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* DatePicker_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::DatePickerBase_typeof();
    options.FieldCount = 121;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(DatePicker);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.DatePicker", options);
    type->fp_build_ = DatePicker_build;
    type->fp_ctor_ = (void*)DatePicker__New4_fn;
    type->fp_cctor_ = DatePicker__cctor_5_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public DatePicker() :84
void DatePicker__ctor_8_fn(DatePicker* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :88
void DatePicker__InitializeUX_fn(DatePicker* __this)
{
    __this->InitializeUX();
}

// public DatePicker New() :84
void DatePicker__New4_fn(DatePicker** __retval)
{
    *__retval = DatePicker::New4();
}

::g::Uno::UX::Selector DatePicker::__selector0_;

// public DatePicker() [instance] :84
void DatePicker::ctor_8()
{
    uStackFrame __("Fuse.Controls.DatePicker", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :88
void DatePicker::InitializeUX()
{
    uStackFrame __("Fuse.Controls.DatePicker", "InitializeUX()");
    DatePicker__Template* GraphicsAppearance = DatePicker__Template::New2(this, this);
    DatePicker__Template1* iOSAppearance = DatePicker__Template1::New2(this, this);
    DatePicker__Template2* AndroidAppearance = DatePicker__Template2::New2(this, this);
    Name(DatePicker::__selector0_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), GraphicsAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iOSAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), AndroidAppearance);
}

// public DatePicker New() [static] :84
DatePicker* DatePicker::New4()
{
    DatePicker* obj1 = (DatePicker*)uNew(DatePicker_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.DatePicker\1.7.2\DatePicker.uno
// -------------------------------------------------------------------------------------------------

// public interfacemodifiers class DatePickerBase :24
// {
// static generated DatePickerBase() :24
static void DatePickerBase__cctor_4_fn(uType* __type)
{
    DatePickerBase::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    DatePickerBase::_minValueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[9/*"MinValue"*/]);
    DatePickerBase::_maxValueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[10/*"MaxValue"*/]);
}

static void DatePickerBase_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[9] = uString::Const("MinValue");
    ::STRINGS[10] = uString::Const("MaxValue");
    ::TYPES[17] = ::g::Fuse::Controls::IDatePickerView_typeof();
    type->SetDependencies(
        ::g::Uno::DateTime_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Uno::DateTime_typeof(), offsetof(DatePickerBase, _value), 0,
        ::g::Uno::DateTime_typeof(), offsetof(DatePickerBase, _minValue), 0,
        ::g::Uno::DateTime_typeof(), offsetof(DatePickerBase, _maxValue), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&DatePickerBase::_valueName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&DatePickerBase::_minValueName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&DatePickerBase::_maxValueName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(9,
        new uFunction("get_MaxValue", NULL, (void*)DatePickerBase__get_MaxValue_fn, 0, false, ::g::Uno::DateTime_typeof(), 0),
        new uFunction("set_MaxValue", NULL, (void*)DatePickerBase__set_MaxValue_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::DateTime_typeof()),
        new uFunction("get_MinValue", NULL, (void*)DatePickerBase__get_MinValue_fn, 0, false, ::g::Uno::DateTime_typeof(), 0),
        new uFunction("set_MinValue", NULL, (void*)DatePickerBase__set_MinValue_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::DateTime_typeof()),
        new uFunction("SetMaxValue", NULL, (void*)DatePickerBase__SetMaxValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::DateTime_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetMinValue", NULL, (void*)DatePickerBase__SetMinValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::DateTime_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetValue", NULL, (void*)DatePickerBase__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::DateTime_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Value", NULL, (void*)DatePickerBase__get_Value_fn, 0, false, ::g::Uno::DateTime_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)DatePickerBase__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::DateTime_typeof()));
}

::g::Fuse::Controls::Panel_type* DatePickerBase_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 123;
    options.InterfaceCount = 18;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(DatePickerBase);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.DatePickerBase", options);
    type->fp_build_ = DatePickerBase_build;
    type->fp_cctor_ = DatePickerBase__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))DatePickerBase__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))DatePickerBase__OnUnrooted_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected generated DatePickerBase() :24
void DatePickerBase__ctor_7_fn(DatePickerBase* __this)
{
    __this->ctor_7();
}

// private Fuse.Controls.IDatePickerView get_DatePickerView() :131
void DatePickerBase__get_DatePickerView_fn(DatePickerBase* __this, uObject** __retval)
{
    *__retval = __this->DatePickerView();
}

// public Uno.DateTime get_MaxValue() :107
void DatePickerBase__get_MaxValue_fn(DatePickerBase* __this, ::g::Uno::DateTime* __retval)
{
    *__retval = __this->MaxValue();
}

// public void set_MaxValue(Uno.DateTime value) :108
void DatePickerBase__set_MaxValue_fn(DatePickerBase* __this, ::g::Uno::DateTime* value)
{
    __this->MaxValue(*value);
}

// public Uno.DateTime get_MinValue() :76
void DatePickerBase__get_MinValue_fn(DatePickerBase* __this, ::g::Uno::DateTime* __retval)
{
    *__retval = __this->MinValue();
}

// public void set_MinValue(Uno.DateTime value) :77
void DatePickerBase__set_MinValue_fn(DatePickerBase* __this, ::g::Uno::DateTime* value)
{
    __this->MinValue(*value);
}

// internal void OnMaxValueChanged(Uno.UX.IPropertyListener origin) :124
void DatePickerBase__OnMaxValueChanged_fn(DatePickerBase* __this, uObject* origin)
{
    __this->OnMaxValueChanged(origin);
}

// internal void OnMinValueChanged(Uno.UX.IPropertyListener origin) :93
void DatePickerBase__OnMinValueChanged_fn(DatePickerBase* __this, uObject* origin)
{
    __this->OnMinValueChanged(origin);
}

// internal void OnNativeViewValueChanged(Uno.DateTime newValue) :62
void DatePickerBase__OnNativeViewValueChanged_fn(DatePickerBase* __this, ::g::Uno::DateTime* newValue)
{
    __this->OnNativeViewValueChanged(*newValue);
}

// protected override sealed void OnRooted() :134
void DatePickerBase__OnRooted_fn(DatePickerBase* __this)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    uObject* dpv = __this->DatePickerView();

    if (dpv != NULL)
        ::g::Fuse::Controls::IDatePickerView::OnRooted(uInterface(uPtr(dpv), ::TYPES[17/*Fuse.Controls.IDatePickerView*/]));
}

// protected override sealed void OnUnrooted() :143
void DatePickerBase__OnUnrooted_fn(DatePickerBase* __this)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "OnUnrooted()");
    uObject* dpv = __this->DatePickerView();

    if (dpv != NULL)
        ::g::Fuse::Controls::IDatePickerView::OnUnrooted(uInterface(uPtr(dpv), ::TYPES[17/*Fuse.Controls.IDatePickerView*/]));

    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// internal void OnValueChanged(Uno.UX.IPropertyListener origin) :57
void DatePickerBase__OnValueChanged_fn(DatePickerBase* __this, uObject* origin)
{
    __this->OnValueChanged(origin);
}

// public void SetMaxValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) :111
void DatePickerBase__SetMaxValue_fn(DatePickerBase* __this, ::g::Uno::DateTime* value, uObject* origin)
{
    __this->SetMaxValue(*value, origin);
}

// public void SetMinValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) :80
void DatePickerBase__SetMinValue_fn(DatePickerBase* __this, ::g::Uno::DateTime* value, uObject* origin)
{
    __this->SetMinValue(*value, origin);
}

// public void SetValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) :39
void DatePickerBase__SetValue_fn(DatePickerBase* __this, ::g::Uno::DateTime* value, uObject* origin)
{
    __this->SetValue(*value, origin);
}

// private void UpdateValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) :48
void DatePickerBase__UpdateValue_fn(DatePickerBase* __this, ::g::Uno::DateTime* value, uObject* origin)
{
    __this->UpdateValue(*value, origin);
}

// public Uno.DateTime get_Value() :35
void DatePickerBase__get_Value_fn(DatePickerBase* __this, ::g::Uno::DateTime* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(Uno.DateTime value) :36
void DatePickerBase__set_Value_fn(DatePickerBase* __this, ::g::Uno::DateTime* value)
{
    __this->Value(*value);
}

::g::Uno::UX::Selector DatePickerBase::_valueName_;
::g::Uno::UX::Selector DatePickerBase::_minValueName_;
::g::Uno::UX::Selector DatePickerBase::_maxValueName_;

// protected generated DatePickerBase() [instance] :24
void DatePickerBase::ctor_7()
{
    uStackFrame __("Fuse.Controls.DatePickerBase", ".ctor()");
    _value = ::g::Uno::DateTime__UtcNow();
    ctor_6();
}

// private Fuse.Controls.IDatePickerView get_DatePickerView() [instance] :131
uObject* DatePickerBase::DatePickerView()
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "get_DatePickerView()");
    return NativeView();
}

// public Uno.DateTime get_MaxValue() [instance] :107
::g::Uno::DateTime DatePickerBase::MaxValue()
{
    return _maxValue;
}

// public void set_MaxValue(Uno.DateTime value) [instance] :108
void DatePickerBase::MaxValue(::g::Uno::DateTime value)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "set_MaxValue(Uno.DateTime)");
    SetMaxValue(value, (uObject*)this);
}

// public Uno.DateTime get_MinValue() [instance] :76
::g::Uno::DateTime DatePickerBase::MinValue()
{
    return _minValue;
}

// public void set_MinValue(Uno.DateTime value) [instance] :77
void DatePickerBase::MinValue(::g::Uno::DateTime value)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "set_MinValue(Uno.DateTime)");
    SetMinValue(value, (uObject*)this);
}

// internal void OnMaxValueChanged(Uno.UX.IPropertyListener origin) [instance] :124
void DatePickerBase::OnMaxValueChanged(uObject* origin)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "OnMaxValueChanged(Uno.UX.IPropertyListener)");
    OnPropertyChanged1(DatePickerBase::_maxValueName_, origin);
}

// internal void OnMinValueChanged(Uno.UX.IPropertyListener origin) [instance] :93
void DatePickerBase::OnMinValueChanged(uObject* origin)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "OnMinValueChanged(Uno.UX.IPropertyListener)");
    OnPropertyChanged1(DatePickerBase::_minValueName_, origin);
}

// internal void OnNativeViewValueChanged(Uno.DateTime newValue) [instance] :62
void DatePickerBase::OnNativeViewValueChanged(::g::Uno::DateTime newValue)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "OnNativeViewValueChanged(Uno.DateTime)");
    UpdateValue(newValue, (uObject*)this);
}

// internal void OnValueChanged(Uno.UX.IPropertyListener origin) [instance] :57
void DatePickerBase::OnValueChanged(uObject* origin)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "OnValueChanged(Uno.UX.IPropertyListener)");
    OnPropertyChanged1(DatePickerBase::_valueName_, origin);
}

// public void SetMaxValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) [instance] :111
void DatePickerBase::SetMaxValue(::g::Uno::DateTime value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "SetMaxValue(Uno.DateTime,Uno.UX.IPropertyListener)");

    if (::g::Uno::DateTime__op_Inequality(value, _maxValue))
    {
        _maxValue = value;
        OnMaxValueChanged(origin);
    }

    uObject* dpv = DatePickerView();

    if (dpv != NULL)
        ::g::Fuse::Controls::IDatePickerView::MaxValue(uInterface(uPtr(dpv), ::TYPES[17/*Fuse.Controls.IDatePickerView*/]), value);
}

// public void SetMinValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) [instance] :80
void DatePickerBase::SetMinValue(::g::Uno::DateTime value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "SetMinValue(Uno.DateTime,Uno.UX.IPropertyListener)");

    if (::g::Uno::DateTime__op_Inequality(value, _minValue))
    {
        _minValue = value;
        OnMinValueChanged(origin);
    }

    uObject* dpv = DatePickerView();

    if (dpv != NULL)
        ::g::Fuse::Controls::IDatePickerView::MinValue(uInterface(uPtr(dpv), ::TYPES[17/*Fuse.Controls.IDatePickerView*/]), value);
}

// public void SetValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) [instance] :39
void DatePickerBase::SetValue(::g::Uno::DateTime value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "SetValue(Uno.DateTime,Uno.UX.IPropertyListener)");
    UpdateValue(value, origin);
    uObject* dpv = DatePickerView();

    if (dpv != NULL)
        ::g::Fuse::Controls::IDatePickerView::Value(uInterface(uPtr(dpv), ::TYPES[17/*Fuse.Controls.IDatePickerView*/]), value);
}

// private void UpdateValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) [instance] :48
void DatePickerBase::UpdateValue(::g::Uno::DateTime value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "UpdateValue(Uno.DateTime,Uno.UX.IPropertyListener)");

    if (::g::Uno::DateTime__op_Inequality(value, _value))
    {
        _value = value;
        OnValueChanged(origin);
    }
}

// public Uno.DateTime get_Value() [instance] :35
::g::Uno::DateTime DatePickerBase::Value()
{
    return _value;
}

// public void set_Value(Uno.DateTime value) [instance] :36
void DatePickerBase::Value(::g::Uno::DateTime value)
{
    uStackFrame __("Fuse.Controls.DatePickerBase", "set_Value(Uno.DateTime)");
    SetValue(value, (uObject*)this);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\GraphicsView.ux.uno
// --------------------------------------------------------------------------------------------------

// internal sealed class DefaultTreeRenderer :11
// {
// static generated DefaultTreeRenderer() :11
static void DefaultTreeRenderer__cctor__fn(uType* __type)
{
    DefaultTreeRenderer::Instance_ = DefaultTreeRenderer::New1();
}

static void DefaultTreeRenderer_build(uType* type)
{
    ::STRINGS[11] = uString::Const("GraphicsAppearance");
    ::TYPES[7] = ::g::Fuse::Visual_typeof();
    ::TYPES[18] = ::g::Fuse::Controls::Control_typeof();
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(DefaultTreeRenderer_type, interface0));
    type->SetFields(0,
        type, (uintptr_t)&DefaultTreeRenderer::Instance_, uFieldFlagsStatic);
}

DefaultTreeRenderer_type* DefaultTreeRenderer_typeof()
{
    static uSStrong<DefaultTreeRenderer_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(DefaultTreeRenderer);
    options.TypeSize = sizeof(DefaultTreeRenderer_type);
    type = (DefaultTreeRenderer_type*)uClassType::New("Fuse.Controls.DefaultTreeRenderer", options);
    type->fp_build_ = DefaultTreeRenderer_build;
    type->fp_ctor_ = (void*)DefaultTreeRenderer__New1_fn;
    type->fp_cctor_ = DefaultTreeRenderer__cctor__fn;
    type->interface0.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__RootingStarted_fn;
    type->interface0.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__Rooted_fn;
    type->interface0.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__Unrooted_fn;
    type->interface0.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))DefaultTreeRenderer__BackgroundChanged_fn;
    type->interface0.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__TransformChanged_fn;
    type->interface0.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__Placed_fn;
    type->interface0.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))DefaultTreeRenderer__IsVisibleChanged_fn;
    type->interface0.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))DefaultTreeRenderer__IsEnabledChanged_fn;
    type->interface0.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))DefaultTreeRenderer__OpacityChanged_fn;
    type->interface0.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))DefaultTreeRenderer__ClipToBoundsChanged_fn;
    type->interface0.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, uArray*))DefaultTreeRenderer__ZOrderChanged_fn;
    type->interface0.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))DefaultTreeRenderer__HitTestModeChanged_fn;
    type->interface0.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))DefaultTreeRenderer__Measure_fn;
    return type;
}

// public generated DefaultTreeRenderer() :11
void DefaultTreeRenderer__ctor__fn(DefaultTreeRenderer* __this)
{
    __this->ctor_();
}

// public void BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :57
void DefaultTreeRenderer__BackgroundChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
    __this->BackgroundChanged(e, background);
}

// public void ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :56
void DefaultTreeRenderer__ClipToBoundsChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
    __this->ClipToBoundsChanged(e, *clipToBounds);
}

// public void HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :59
void DefaultTreeRenderer__HitTestModeChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    __this->HitTestModeChanged(e, *enabled);
}

// private Fuse.Visual InstantiateGraphicsAppearance(Fuse.Elements.Element e) :45
void DefaultTreeRenderer__InstantiateGraphicsAppearance_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->InstantiateGraphicsAppearance(e);
}

// public void IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :54
void DefaultTreeRenderer__IsEnabledChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    __this->IsEnabledChanged(e, *isEnabled);
}

// public void IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :53
void DefaultTreeRenderer__IsVisibleChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    __this->IsVisibleChanged(e, *isVisible);
}

// public bool Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :60
void DefaultTreeRenderer__Measure_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    *__retval = __this->Measure(e, *lp, size);
}

// public generated DefaultTreeRenderer New() :11
void DefaultTreeRenderer__New1_fn(DefaultTreeRenderer** __retval)
{
    *__retval = DefaultTreeRenderer::New1();
}

// public void OpacityChanged(Fuse.Elements.Element e, float opacity) :55
void DefaultTreeRenderer__OpacityChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    __this->OpacityChanged(e, *opacity);
}

// public void Placed(Fuse.Elements.Element e) :52
void DefaultTreeRenderer__Placed_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->Placed(e);
}

// public void Rooted(Fuse.Elements.Element e) :17
void DefaultTreeRenderer__Rooted_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->Rooted(e);
}

// public void RootingStarted(Fuse.Elements.Element e) :15
void DefaultTreeRenderer__RootingStarted_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->RootingStarted(e);
}

// public void TransformChanged(Fuse.Elements.Element e) :51
void DefaultTreeRenderer__TransformChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->TransformChanged(e);
}

// public void Unrooted(Fuse.Elements.Element e) :31
void DefaultTreeRenderer__Unrooted_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->Unrooted(e);
}

// public void ZOrderChanged(Fuse.Elements.Element e, Fuse.Visual[] zorder) :58
void DefaultTreeRenderer__ZOrderChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, uArray* zorder)
{
    __this->ZOrderChanged(e, zorder);
}

uSStrong<DefaultTreeRenderer*> DefaultTreeRenderer::Instance_;

// public generated DefaultTreeRenderer() [instance] :11
void DefaultTreeRenderer::ctor_()
{
}

// public void BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) [instance] :57
void DefaultTreeRenderer::BackgroundChanged(::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
}

// public void ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) [instance] :56
void DefaultTreeRenderer::ClipToBoundsChanged(::g::Fuse::Elements::Element* e, bool clipToBounds)
{
}

// public void HitTestModeChanged(Fuse.Elements.Element e, bool enabled) [instance] :59
void DefaultTreeRenderer::HitTestModeChanged(::g::Fuse::Elements::Element* e, bool enabled)
{
}

// private Fuse.Visual InstantiateGraphicsAppearance(Fuse.Elements.Element e) [instance] :45
::g::Fuse::Visual* DefaultTreeRenderer::InstantiateGraphicsAppearance(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.DefaultTreeRenderer", "InstantiateGraphicsAppearance(Fuse.Elements.Element)");
    ::g::Uno::UX::Template* t = uPtr(e)->FindTemplate(::STRINGS[11/*"GraphicsApp...*/]);
    return (t != NULL) ? uAs< ::g::Fuse::Visual*>(uPtr(t)->New1(), ::TYPES[7/*Fuse.Visual*/]) : NULL;
}

// public void IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) [instance] :54
void DefaultTreeRenderer::IsEnabledChanged(::g::Fuse::Elements::Element* e, bool isEnabled)
{
}

// public void IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) [instance] :53
void DefaultTreeRenderer::IsVisibleChanged(::g::Fuse::Elements::Element* e, bool isVisible)
{
}

// public bool Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) [instance] :60
bool DefaultTreeRenderer::Measure(::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams lp, ::g::Uno::Float2* size)
{
    *size = ::g::Uno::Float2__New1(0.0f);
    return false;
}

// public void OpacityChanged(Fuse.Elements.Element e, float opacity) [instance] :55
void DefaultTreeRenderer::OpacityChanged(::g::Fuse::Elements::Element* e, float opacity)
{
}

// public void Placed(Fuse.Elements.Element e) [instance] :52
void DefaultTreeRenderer::Placed(::g::Fuse::Elements::Element* e)
{
}

// public void Rooted(Fuse.Elements.Element e) [instance] :17
void DefaultTreeRenderer::Rooted(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.DefaultTreeRenderer", "Rooted(Fuse.Elements.Element)");

    if (uIs(e, ::TYPES[18/*Fuse.Controls.Control*/]))
    {
        ::g::Fuse::Visual* visual = InstantiateGraphicsAppearance(e);

        if (visual != NULL)
        {
            ::g::Fuse::Controls::Control* c = uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[18/*Fuse.Controls.Control*/]);
            uPtr(c)->GraphicsVisual(visual);
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(c->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), visual);
        }
    }
}

// public void RootingStarted(Fuse.Elements.Element e) [instance] :15
void DefaultTreeRenderer::RootingStarted(::g::Fuse::Elements::Element* e)
{
}

// public void TransformChanged(Fuse.Elements.Element e) [instance] :51
void DefaultTreeRenderer::TransformChanged(::g::Fuse::Elements::Element* e)
{
}

// public void Unrooted(Fuse.Elements.Element e) [instance] :31
void DefaultTreeRenderer::Unrooted(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.DefaultTreeRenderer", "Unrooted(Fuse.Elements.Element)");
    bool ret2;

    if (uIs(e, ::TYPES[18/*Fuse.Controls.Control*/]))
    {
        ::g::Fuse::Controls::Control* c = uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[18/*Fuse.Controls.Control*/]);
        ::g::Fuse::Visual* visual = uPtr(c)->GraphicsVisual();

        if (visual != NULL)
        {
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), visual, &ret2);
            c->GraphicsVisual(NULL);
        }
    }
}

// public void ZOrderChanged(Fuse.Elements.Element e, Fuse.Visual[] zorder) [instance] :58
void DefaultTreeRenderer::ZOrderChanged(::g::Fuse::Elements::Element* e, uArray* zorder)
{
}

// public generated DefaultTreeRenderer New() [static] :11
DefaultTreeRenderer* DefaultTreeRenderer::New1()
{
    DefaultTreeRenderer* obj1 = (DefaultTreeRenderer*)uNew(DefaultTreeRenderer_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\.uno\ux13\Fuse.Controls.ScrollView.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView.DefaultTrigger :45
// {
// static DefaultTrigger() :48
static void ScrollView__DefaultTrigger__cctor_2_fn(uType* __type)
{
    ScrollView__DefaultTrigger::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
}

static void ScrollView__DefaultTrigger_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    type->SetDependencies(
        ::g::FuseControlsScrollView_accessor_Fuse_Controls_ScrollViewBase_KeepFocusInView_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Triggers::WhileBool_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface3),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Binding>*/], offsetof(::g::Fuse::Triggers::WhileBool_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Triggers::WhileBool_type, interface5),
        ::g::Fuse::Animations::IUnwrappedPlayerFeedback_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface6),
        ::g::Fuse::Animations::IBasePlayerFeedback_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface7),
        ::g::Fuse::Triggers::IPulseTrigger_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface8),
        ::g::Fuse::Triggers::Actions::IToggleable_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface9));
    type->SetFields(43,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(ScrollView__DefaultTrigger, this_Value_inst), 0,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(ScrollView__DefaultTrigger, __parent1), uFieldFlagsWeak,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ScrollView__DefaultTrigger::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__DefaultTrigger__New3_fn, 0, true, type, 1, ::g::Fuse::Controls::ScrollView_typeof()));
}

::g::Fuse::Triggers::WhileBool_type* ScrollView__DefaultTrigger_typeof()
{
    static uSStrong< ::g::Fuse::Triggers::WhileBool_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Triggers::WhileTrue_typeof();
    options.FieldCount = 46;
    options.InterfaceCount = 10;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(ScrollView__DefaultTrigger);
    options.TypeSize = sizeof(::g::Fuse::Triggers::WhileBool_type);
    type = (::g::Fuse::Triggers::WhileBool_type*)uClassType::New("Fuse.Controls.ScrollView.DefaultTrigger", options);
    type->fp_build_ = ScrollView__DefaultTrigger_build;
    type->fp_cctor_ = ScrollView__DefaultTrigger__cctor_2_fn;
    type->interface9.fp_Toggle = (void(*)(uObject*))::g::Fuse::Triggers::WhileBool__Toggle_fn;
    type->interface8.fp_Pulse = (void(*)(uObject*))::g::Fuse::Triggers::WhileValue__Pulse1_fn;
    type->interface7.fp_OnPlaybackDone = (void(*)(uObject*, uObject*))::g::Fuse::Triggers::Trigger__FuseAnimationsIBasePlayerFeedbackOnPlaybackDone_fn;
    type->interface7.fp_OnStable = (void(*)(uObject*, uObject*))::g::Fuse::Triggers::Trigger__FuseAnimationsIBasePlayerFeedbackOnStable_fn;
    type->interface6.fp_OnProgressUpdated = (void(*)(uObject*, uObject*, double*, double*, int32_t*))::g::Fuse::Triggers::Trigger__FuseAnimationsIUnwrappedPlayerFeedbackOnProgressUpdated_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public DefaultTrigger(Fuse.Controls.ScrollView parent) :52
void ScrollView__DefaultTrigger__ctor_9_fn(ScrollView__DefaultTrigger* __this, ::g::Fuse::Controls::ScrollView* parent)
{
    __this->ctor_9(parent);
}

// private void InitializeUX() :57
void ScrollView__DefaultTrigger__InitializeUX_fn(ScrollView__DefaultTrigger* __this)
{
    __this->InitializeUX();
}

// public DefaultTrigger New(Fuse.Controls.ScrollView parent) :52
void ScrollView__DefaultTrigger__New3_fn(::g::Fuse::Controls::ScrollView* parent, ScrollView__DefaultTrigger** __retval)
{
    *__retval = ScrollView__DefaultTrigger::New3(parent);
}

::g::Uno::UX::Selector ScrollView__DefaultTrigger::__selector0_;

// public DefaultTrigger(Fuse.Controls.ScrollView parent) [instance] :52
void ScrollView__DefaultTrigger::ctor_9(::g::Fuse::Controls::ScrollView* parent)
{
    uStackFrame __("Fuse.Controls.ScrollView.DefaultTrigger", ".ctor(Fuse.Controls.ScrollView)");
    ctor_8();
    __parent1 = parent;
    InitializeUX();
}

// private void InitializeUX() [instance] :57
void ScrollView__DefaultTrigger::InitializeUX()
{
    uStackFrame __("Fuse.Controls.ScrollView.DefaultTrigger", "InitializeUX()");
    ::g::Fuse::Reactive::Constant* temp = ::g::Fuse::Reactive::Constant::New1(__parent1);
    this_Value_inst = ::g::FuseControlsScrollView_FuseTriggersWhileBool_Value_Property::New1(this, ScrollView__DefaultTrigger::__selector0_);
    ::g::Fuse::Reactive::Property* temp1 = ::g::Fuse::Reactive::Property::New1(temp, ::g::FuseControlsScrollView_accessor_Fuse_Controls_ScrollViewBase_KeepFocusInView::Singleton());
    ::g::Fuse::Gestures::KeepFocusInView* temp2 = ::g::Fuse::Gestures::KeepFocusInView::New3();
    ::g::Fuse::Reactive::DataBinding* temp3 = ::g::Fuse::Reactive::DataBinding::New1(this_Value_inst, (uObject*)temp1, 3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp2);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Bindings()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp3);
}

// public DefaultTrigger New(Fuse.Controls.ScrollView parent) [static] :52
ScrollView__DefaultTrigger* ScrollView__DefaultTrigger::New3(::g::Fuse::Controls::ScrollView* parent)
{
    ScrollView__DefaultTrigger* obj1 = (ScrollView__DefaultTrigger*)uNew(ScrollView__DefaultTrigger_typeof());
    obj1->ctor_9(parent);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.uno
// ------------------------------------------------------------------------------------------------

// private sealed class Navigator.DeferSwitch :642
// {
static void Navigator__DeferSwitch_build(uType* type)
{
    type->SetFields(0,
        ::g::Fuse::Controls::Navigator__NavPage_typeof(), offsetof(Navigator__DeferSwitch, Page), 0,
        ::g::Fuse::Navigation::NavigationGotoMode_typeof(), offsetof(Navigator__DeferSwitch, GotoMode), 0,
        ::g::Fuse::Navigation::RoutingOperation_typeof(), offsetof(Navigator__DeferSwitch, Operation), 0);
}

uType* Navigator__DeferSwitch_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 3;
    options.ObjectSize = sizeof(Navigator__DeferSwitch);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.Navigator.DeferSwitch", options);
    type->fp_build_ = Navigator__DeferSwitch_build;
    type->fp_ctor_ = (void*)Navigator__DeferSwitch__New1_fn;
    return type;
}

// public generated DeferSwitch() :642
void Navigator__DeferSwitch__ctor__fn(Navigator__DeferSwitch* __this)
{
    __this->ctor_();
}

// public generated DeferSwitch New() :642
void Navigator__DeferSwitch__New1_fn(Navigator__DeferSwitch** __retval)
{
    *__retval = Navigator__DeferSwitch::New1();
}

// public generated DeferSwitch() [instance] :642
void Navigator__DeferSwitch::ctor_()
{
}

// public generated DeferSwitch New() [static] :642
Navigator__DeferSwitch* Navigator__DeferSwitch::New1()
{
    Navigator__DeferSwitch* obj1 = (Navigator__DeferSwitch*)uNew(Navigator__DeferSwitch_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\SingleViewHost.uno
// -------------------------------------------------------------------------------------------------

// private sealed class SingleViewHost.Disable :43
// {
static void SingleViewHost__Disable_build(uType* type)
{
    ::TYPES[19] = ::g::Uno::Action_typeof();
    type->SetDependencies(
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(SingleViewHost__Disable_type, interface0));
    type->SetFields(0,
        ::g::Fuse::Controls::SingleViewHost_typeof(), offsetof(SingleViewHost__Disable, _host), 0,
        ::g::Uno::Bool_typeof(), offsetof(SingleViewHost__Disable, _canceled), 0);
}

SingleViewHost__Disable_type* SingleViewHost__Disable_typeof()
{
    static uSStrong<SingleViewHost__Disable_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(SingleViewHost__Disable);
    options.TypeSize = sizeof(SingleViewHost__Disable_type);
    type = (SingleViewHost__Disable_type*)uClassType::New("Fuse.Controls.SingleViewHost.Disable", options);
    type->fp_build_ = SingleViewHost__Disable_build;
    type->interface0.fp_Dispose = (void(*)(uObject*))SingleViewHost__Disable__UnoIDisposableDispose_fn;
    return type;
}

// public Disable(Fuse.Controls.SingleViewHost host) :46
void SingleViewHost__Disable__ctor__fn(SingleViewHost__Disable* __this, ::g::Fuse::Controls::SingleViewHost* host)
{
    __this->ctor_(host);
}

// public Disable New(Fuse.Controls.SingleViewHost host) :46
void SingleViewHost__Disable__New1_fn(::g::Fuse::Controls::SingleViewHost* host, SingleViewHost__Disable** __retval)
{
    *__retval = SingleViewHost__Disable::New1(host);
}

// private void NextFrame() :57
void SingleViewHost__Disable__NextFrame_fn(SingleViewHost__Disable* __this)
{
    __this->NextFrame();
}

// private void Uno.IDisposable.Dispose() :68
void SingleViewHost__Disable__UnoIDisposableDispose_fn(SingleViewHost__Disable* __this)
{
    __this->_canceled = true;
}

// public Disable(Fuse.Controls.SingleViewHost host) [instance] :46
void SingleViewHost__Disable::ctor_(::g::Fuse::Controls::SingleViewHost* host)
{
    uStackFrame __("Fuse.Controls.SingleViewHost.Disable", ".ctor(Fuse.Controls.SingleViewHost)");
    _host = host;
    uPtr(_host)->SetOnscreen();
    int32_t delay = 2;
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)SingleViewHost__Disable__NextFrame_fn, this), 0, delay);
}

// private void NextFrame() [instance] :57
void SingleViewHost__Disable::NextFrame()
{
    uStackFrame __("Fuse.Controls.SingleViewHost.Disable", "NextFrame()");

    if (_canceled)
        return;

    uPtr(_host)->_draw = false;
    uPtr(_host)->InvalidateVisual();
    uPtr(_host)->_changingState = NULL;
    _host = NULL;
}

// public Disable New(Fuse.Controls.SingleViewHost host) [static] :46
SingleViewHost__Disable* SingleViewHost__Disable::New1(::g::Fuse::Controls::SingleViewHost* host)
{
    SingleViewHost__Disable* obj1 = (SingleViewHost__Disable*)uNew(SingleViewHost__Disable_typeof());
    obj1->ctor_(host);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\NativeViewHost.uno
// -------------------------------------------------------------------------------------------------

// private sealed class NativeViewHost.Disable :95
// {
static void NativeViewHost__Disable_build(uType* type)
{
    ::TYPES[19] = ::g::Uno::Action_typeof();
    type->SetDependencies(
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(NativeViewHost__Disable_type, interface0));
    type->SetFields(0,
        ::g::Fuse::Controls::NativeViewHost_typeof(), offsetof(NativeViewHost__Disable, _host), 0,
        ::g::Uno::Bool_typeof(), offsetof(NativeViewHost__Disable, _canceled), 0);
}

NativeViewHost__Disable_type* NativeViewHost__Disable_typeof()
{
    static uSStrong<NativeViewHost__Disable_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(NativeViewHost__Disable);
    options.TypeSize = sizeof(NativeViewHost__Disable_type);
    type = (NativeViewHost__Disable_type*)uClassType::New("Fuse.Controls.NativeViewHost.Disable", options);
    type->fp_build_ = NativeViewHost__Disable_build;
    type->interface0.fp_Dispose = (void(*)(uObject*))NativeViewHost__Disable__UnoIDisposableDispose_fn;
    return type;
}

// public Disable(Fuse.Controls.NativeViewHost host) :98
void NativeViewHost__Disable__ctor__fn(NativeViewHost__Disable* __this, ::g::Fuse::Controls::NativeViewHost* host)
{
    __this->ctor_(host);
}

// public Disable New(Fuse.Controls.NativeViewHost host) :98
void NativeViewHost__Disable__New1_fn(::g::Fuse::Controls::NativeViewHost* host, NativeViewHost__Disable** __retval)
{
    *__retval = NativeViewHost__Disable::New1(host);
}

// private void NextFrame() :111
void NativeViewHost__Disable__NextFrame_fn(NativeViewHost__Disable* __this)
{
    __this->NextFrame();
}

// private void Uno.IDisposable.Dispose() :131
void NativeViewHost__Disable__UnoIDisposableDispose_fn(NativeViewHost__Disable* __this)
{
    __this->_canceled = true;
}

// public Disable(Fuse.Controls.NativeViewHost host) [instance] :98
void NativeViewHost__Disable::ctor_(::g::Fuse::Controls::NativeViewHost* host)
{
    uStackFrame __("Fuse.Controls.NativeViewHost.Disable", ".ctor(Fuse.Controls.NativeViewHost)");
    _host = host;
    uPtr(_host)->DisableOffscreen();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)NativeViewHost__Disable__NextFrame_fn, this), 0, 1);
    uPtr(_host)->PostUpdateTransform();
}

// private void NextFrame() [instance] :111
void NativeViewHost__Disable::NextFrame()
{
    uStackFrame __("Fuse.Controls.NativeViewHost.Disable", "NextFrame()");

    if (_canceled)
        return;

    uPtr(_host)->_draw = false;
    uPtr(_host)->_toggeling = NULL;
    uPtr(_host)->InvalidateVisual();
    _host = NULL;
}

// public Disable New(Fuse.Controls.NativeViewHost host) [static] :98
NativeViewHost__Disable* NativeViewHost__Disable::New1(::g::Fuse::Controls::NativeViewHost* host)
{
    NativeViewHost__Disable* obj1 = (NativeViewHost__Disable*)uNew(NativeViewHost__Disable_typeof());
    obj1->ctor_(host);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollView.Layout.uno
// --------------------------------------------------------------------------------------------------------

// internal enum ScrollViewBase.DistanceFromViewTarget :232
uEnumType* ScrollViewBase__DistanceFromViewTarget_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.ScrollViewBase.DistanceFromViewTarget", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Start", 0LL,
        "End", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\DockPanel.uno
// --------------------------------------------------------------------------------------------

// public class DockPanel :29
// {
static void DockPanel_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Layouts::DockLayout_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Layouts::DockLayout_typeof(), offsetof(DockPanel, _dockLayout), 0);
    type->Reflection.SetFunctions(4,
        new uFunction("GetDock", NULL, (void*)DockPanel__GetDock_fn, 0, true, ::g::Fuse::Layouts::Dock_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction(".ctor", NULL, (void*)DockPanel__New4_fn, 0, true, type, 0),
        new uFunction("ResetDock", NULL, (void*)DockPanel__ResetDock_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("SetDock", NULL, (void*)DockPanel__SetDock_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Fuse::Layouts::Dock_typeof()));
}

::g::Fuse::Controls::Panel_type* DockPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(DockPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.DockPanel", options);
    type->fp_build_ = DockPanel_build;
    type->fp_ctor_ = (void*)DockPanel__New4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public DockPanel() :53
void DockPanel__ctor_7_fn(DockPanel* __this)
{
    __this->ctor_7();
}

// public static Fuse.Layouts.Dock GetDock(Fuse.Elements.Element elm) :40
void DockPanel__GetDock_fn(::g::Fuse::Elements::Element* elm, int32_t* __retval)
{
    *__retval = DockPanel::GetDock(elm);
}

// public DockPanel New() :53
void DockPanel__New4_fn(DockPanel** __retval)
{
    *__retval = DockPanel::New4();
}

// public static void ResetDock(Fuse.Elements.Element elm) :46
void DockPanel__ResetDock_fn(::g::Fuse::Elements::Element* elm)
{
    DockPanel::ResetDock(elm);
}

// public static void SetDock(Fuse.Elements.Element elm, Fuse.Layouts.Dock dock) :34
void DockPanel__SetDock_fn(::g::Fuse::Elements::Element* elm, int32_t* dock)
{
    DockPanel::SetDock(elm, *dock);
}

// public DockPanel() [instance] :53
void DockPanel::ctor_7()
{
    uStackFrame __("Fuse.Controls.DockPanel", ".ctor()");
    ctor_6();
    Layout(_dockLayout = ::g::Fuse::Layouts::DockLayout::New2());
}

// public static Fuse.Layouts.Dock GetDock(Fuse.Elements.Element elm) [static] :40
int32_t DockPanel::GetDock(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.DockPanel", "GetDock(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::DockLayout::GetDock(elm);
}

// public DockPanel New() [static] :53
DockPanel* DockPanel::New4()
{
    DockPanel* obj1 = (DockPanel*)uNew(DockPanel_typeof());
    obj1->ctor_7();
    return obj1;
}

// public static void ResetDock(Fuse.Elements.Element elm) [static] :46
void DockPanel::ResetDock(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.DockPanel", "ResetDock(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::DockLayout::ResetDock(elm);
}

// public static void SetDock(Fuse.Elements.Element elm, Fuse.Layouts.Dock dock) [static] :34
void DockPanel::SetDock(::g::Fuse::Elements::Element* elm, int32_t dock)
{
    uStackFrame __("Fuse.Controls.DockPanel", "SetDock(Fuse.Elements.Element,Fuse.Layouts.Dock)");
    ::g::Fuse::Layouts::DockLayout::SetDock(elm, dock);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\EdgeNavigator.ScriptClass.uno
// ----------------------------------------------------------------------------------------------------------------

// public partial sealed class EdgeNavigator :8
// {
// static EdgeNavigator() :10
static void EdgeNavigator__cctor_4_fn(uType* __type)
{
    ::g::Fuse::Properties_typeof()->Init();
    ::g::Fuse::Scripting::ScriptClass_typeof()->Init();
    EdgeNavigator::_controlPageDataProperty_ = ::g::Fuse::Properties::CreateHandle();
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[29/*Fuse.Scripting.ScriptMember[]*/], 2, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("dismiss"), uDelegate::New(::g::Uno::Action1_typeof()->MakeType(__type, NULL), (void*)EdgeNavigator__dismiss_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("open"), uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)EdgeNavigator__open_fn))));
}

static void EdgeNavigator_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Navigation::EdgeNavigation_typeof(),
        ::g::Fuse::Navigation::Navigation_typeof(),
        ::g::Fuse::Navigation::PageData_typeof(),
        ::g::Fuse::TranslationModes_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Navigation::EdgeNavigation_typeof(), offsetof(EdgeNavigator, _navigation), 0,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&EdgeNavigator::_controlPageDataProperty_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(4,
        new uFunction("get_Active", NULL, (void*)EdgeNavigator__get_Active_fn, 0, false, ::g::Fuse::Visual_typeof(), 0),
        new uFunction("set_Active", NULL, (void*)EdgeNavigator__set_Active_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("get_Navigation", NULL, (void*)EdgeNavigator__get_Navigation_fn, 0, false, ::g::Fuse::Navigation::VisualNavigation_typeof(), 0),
        new uFunction(".ctor", NULL, (void*)EdgeNavigator__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* EdgeNavigator_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 119;
    options.InterfaceCount = 18;
    options.DependencyCount = 4;
    options.ObjectSize = sizeof(EdgeNavigator);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.EdgeNavigator", options);
    type->fp_build_ = EdgeNavigator_build;
    type->fp_ctor_ = (void*)EdgeNavigator__New4_fn;
    type->fp_cctor_ = EdgeNavigator__cctor_4_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))EdgeNavigator__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))EdgeNavigator__OnChildRemoved_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))EdgeNavigator__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))EdgeNavigator__OnUnrooted_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public EdgeNavigator() :17
void EdgeNavigator__ctor_7_fn(EdgeNavigator* __this)
{
    __this->ctor_7();
}

// public Fuse.Visual get_Active() :34
void EdgeNavigator__get_Active_fn(EdgeNavigator* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->Active();
}

// public void set_Active(Fuse.Visual value) :35
void EdgeNavigator__set_Active_fn(EdgeNavigator* __this, ::g::Fuse::Visual* value)
{
    __this->Active(value);
}

// private void CleanupChild(Fuse.Controls.EdgeNavigator.ControlPageData pd, Fuse.Visual elm) :123
void EdgeNavigator__CleanupChild_fn(EdgeNavigator* __this, EdgeNavigator__ControlPageData* pd, ::g::Fuse::Visual* elm)
{
    __this->CleanupChild(pd, elm);
}

// private void CleanupChild(Fuse.Node o) :96
void EdgeNavigator__CleanupChild1_fn(EdgeNavigator* __this, ::g::Fuse::Node* o)
{
    __this->CleanupChild1(o);
}

// private static void dismiss(Fuse.Controls.EdgeNavigator e) :22
void EdgeNavigator__dismiss_fn(EdgeNavigator* e)
{
    EdgeNavigator::dismiss(e);
}

// private void Dismiss() :139
void EdgeNavigator__Dismiss_fn(EdgeNavigator* __this)
{
    __this->Dismiss();
}

// private static Fuse.Controls.EdgeNavigator.ControlPageData GetControlPageData(Fuse.Elements.Element elm, [bool create]) :164
void EdgeNavigator__GetControlPageData_fn(::g::Fuse::Elements::Element* elm, bool* create, EdgeNavigator__ControlPageData** __retval)
{
    *__retval = EdgeNavigator::GetControlPageData(elm, *create);
}

// private void GotoEdge(Fuse.Navigation.NavigationEdge edge) :145
void EdgeNavigator__GotoEdge_fn(EdgeNavigator* __this, int32_t* edge)
{
    __this->GotoEdge(*edge);
}

// public Fuse.Navigation.VisualNavigation get_Navigation() :29
void EdgeNavigator__get_Navigation_fn(EdgeNavigator* __this, ::g::Fuse::Navigation::VisualNavigation** __retval)
{
    *__retval = __this->Navigation();
}

// public EdgeNavigator New() :17
void EdgeNavigator__New4_fn(EdgeNavigator** __retval)
{
    *__retval = EdgeNavigator::New4();
}

// protected override sealed void OnChildAdded(Fuse.Node o) :54
void EdgeNavigator__OnChildAdded_fn(EdgeNavigator* __this, ::g::Fuse::Node* o)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Controls::LayoutControl__OnChildAdded_fn(__this, o);

    if (__this->IsRootingCompleted() && ::g::Fuse::Navigation::Navigation::IsPage(o))
        __this->UpdateChild(o);
}

// protected override sealed void OnChildRemoved(Fuse.Node o) :89
void EdgeNavigator__OnChildRemoved_fn(EdgeNavigator* __this, ::g::Fuse::Node* o)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Controls::LayoutControl__OnChildRemoved_fn(__this, o);

    if (__this->IsRootingCompleted())
        __this->CleanupChild1(o);
}

// protected override sealed void OnRooted() :38
void EdgeNavigator__OnRooted_fn(EdgeNavigator* __this)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnRooted()");
    ::g::Fuse::Navigation::PageData* ret3;
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);

    for (int32_t i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(uPtr(__this->_navigation)->Pages()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Navigation::PageData_typeof(), NULL))); ++i)
        __this->UpdateChild(uPtr((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(uPtr(__this->_navigation)->Pages()), ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Navigation::PageData_typeof(), NULL)), uCRef<int32_t>(i), &ret3), ret3))->Visual());
}

// private void OnTapped(object s, Fuse.Gestures.TappedArgs args) :133
void EdgeNavigator__OnTapped_fn(EdgeNavigator* __this, uObject* s, ::g::Fuse::Gestures::TappedArgs* args)
{
    __this->OnTapped(s, args);
}

// protected override sealed void OnUnrooted() :46
void EdgeNavigator__OnUnrooted_fn(EdgeNavigator* __this)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnUnrooted()");
    ::g::Fuse::Navigation::PageData* ret4;

    for (int32_t i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(uPtr(__this->_navigation)->Pages()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Navigation::PageData_typeof(), NULL))); ++i)
        __this->CleanupChild1(uPtr((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(uPtr(__this->_navigation)->Pages()), ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Navigation::PageData_typeof(), NULL)), uCRef<int32_t>(i), &ret4), ret4))->Visual());

    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// private static void open(Fuse.Controls.EdgeNavigator e, object[] args) :33
void EdgeNavigator__open_fn(EdgeNavigator* e, uArray* args)
{
    EdgeNavigator::open(e, args);
}

// private void SetupEdge(Fuse.Controls.EdgeNavigator.ControlPageData pd, Fuse.Elements.Element elm, float2 rel, Fuse.Elements.Alignment align) :107
void EdgeNavigator__SetupEdge_fn(EdgeNavigator* __this, EdgeNavigator__ControlPageData* pd, ::g::Fuse::Elements::Element* elm, ::g::Uno::Float2* rel, int32_t* align)
{
    __this->SetupEdge(pd, elm, *rel, *align);
}

// private void UpdateChild(Fuse.Node o) :61
void EdgeNavigator__UpdateChild_fn(EdgeNavigator* __this, ::g::Fuse::Node* o)
{
    __this->UpdateChild(o);
}

uSStrong< ::g::Fuse::PropertyHandle*> EdgeNavigator::_controlPageDataProperty_;

// public EdgeNavigator() [instance] :17
void EdgeNavigator::ctor_7()
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", ".ctor()");
    _navigation = ::g::Fuse::Navigation::EdgeNavigation::New2();
    ctor_6();
    ClipToBounds(true);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _navigation);
    ::g::Fuse::Gestures::Tapped* q = ::g::Fuse::Gestures::Tapped::New3(uDelegate::New(::TYPES[89/*Fuse.Gestures.TappedHandler*/], (void*)EdgeNavigator__OnTapped_fn, this));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), q);
}

// public Fuse.Visual get_Active() [instance] :34
::g::Fuse::Visual* EdgeNavigator::Active()
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "get_Active()");
    return uPtr(_navigation)->Active();
}

// public void set_Active(Fuse.Visual value) [instance] :35
void EdgeNavigator::Active(::g::Fuse::Visual* value)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "set_Active(Fuse.Visual)");
    uPtr(_navigation)->Active(value);
}

// private void CleanupChild(Fuse.Controls.EdgeNavigator.ControlPageData pd, Fuse.Visual elm) [instance] :123
void EdgeNavigator::CleanupChild(EdgeNavigator__ControlPageData* pd, ::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "CleanupChild(Fuse.Controls.EdgeNavigator.ControlPageData,Fuse.Visual)");
    bool ret2;

    if (uPtr(pd)->Enter != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(elm)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(pd)->Enter, &ret2);
        pd->Enter = NULL;
    }
}

// private void CleanupChild(Fuse.Node o) [instance] :96
void EdgeNavigator::CleanupChild1(::g::Fuse::Node* o)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "CleanupChild(Fuse.Node)");
    ::g::Fuse::Elements::Element* elm = uAs< ::g::Fuse::Elements::Element*>(o, ::TYPES[8/*Fuse.Elements.Element*/]);

    if (elm != NULL)
    {
        EdgeNavigator__ControlPageData* pd = EdgeNavigator::GetControlPageData(elm, false);

        if (pd != NULL)
            CleanupChild(pd, elm);
    }
}

// private void Dismiss() [instance] :139
void EdgeNavigator::Dismiss()
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "Dismiss()");

    if (uPtr(_navigation)->IsAnyPanelActive())
        uPtr(_navigation)->Goto(NULL, 0);
}

// private void GotoEdge(Fuse.Navigation.NavigationEdge edge) [instance] :145
void EdgeNavigator::GotoEdge(int32_t edge)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "GotoEdge(Fuse.Navigation.NavigationEdge)");

    for (::g::Fuse::Visual* elm = (::g::Fuse::Visual*)FirstChild(::TYPES[9/*Fuse.Visual.FirstChild<Fuse.Visual>*/]); elm != NULL; elm = (::g::Fuse::Visual*)uPtr(elm)->NextSibling(::TYPES[42/*Fuse.Node.NextSibling<Fuse.Visual>*/]))
    {
        int32_t e = ::g::Fuse::Navigation::EdgeNavigation::GetEdge(elm);

        if (e != edge)
            continue;

        uPtr(_navigation)->Goto(elm, 0);
        break;
    }
}

// public Fuse.Navigation.VisualNavigation get_Navigation() [instance] :29
::g::Fuse::Navigation::VisualNavigation* EdgeNavigator::Navigation()
{
    return _navigation;
}

// private void OnTapped(object s, Fuse.Gestures.TappedArgs args) [instance] :133
void EdgeNavigator::OnTapped(uObject* s, ::g::Fuse::Gestures::TappedArgs* args)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnTapped(object,Fuse.Gestures.TappedArgs)");

    if (uPtr(_navigation)->IsDismissPoint(uPtr(args)->WindowPoint()))
        Dismiss();
}

// private void SetupEdge(Fuse.Controls.EdgeNavigator.ControlPageData pd, Fuse.Elements.Element elm, float2 rel, Fuse.Elements.Alignment align) [instance] :107
void EdgeNavigator::SetupEdge(EdgeNavigator__ControlPageData* pd, ::g::Fuse::Elements::Element* elm, ::g::Uno::Float2 rel, int32_t align)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "SetupEdge(Fuse.Controls.EdgeNavigator.ControlPageData,Fuse.Elements.Element,float2,Fuse.Elements.Alignment)");
    uPtr(elm)->Alignment(align);
    ::g::Fuse::Animations::Move* move = ::g::Fuse::Animations::Move::New2();
    move->X(rel.X);
    move->Y(rel.Y);
    move->RelativeTo(::g::Fuse::TranslationModes::Size());
    ::g::Fuse::Navigation::EnteringAnimation* enter = ::g::Fuse::Navigation::EnteringAnimation::New2();
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(enter->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), move);
    uPtr(pd)->Enter = enter;
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(elm->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), enter);
}

// private void UpdateChild(Fuse.Node o) [instance] :61
void EdgeNavigator::UpdateChild(::g::Fuse::Node* o)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "UpdateChild(Fuse.Node)");
    ::g::Fuse::Elements::Element* elm = uAs< ::g::Fuse::Elements::Element*>(o, ::TYPES[8/*Fuse.Elements.Element*/]);

    if (elm == NULL)
        return;

    EdgeNavigator__ControlPageData* pd = EdgeNavigator::GetControlPageData(elm, true);
    CleanupChild(pd, elm);
    int32_t e = ::g::Fuse::Navigation::EdgeNavigation::GetEdge(elm);

    switch (e)
    {
        case 0:
        {
            SetupEdge(pd, elm, ::g::Uno::Float2__New2(-1.0f, 0.0f), 1);
            break;
        }
        case 1:
        {
            SetupEdge(pd, elm, ::g::Uno::Float2__New2(1.0f, 0.0f), 3);
            break;
        }
        case 2:
        {
            SetupEdge(pd, elm, ::g::Uno::Float2__New2(0.0f, -1.0f), 4);
            break;
        }
        case 3:
        {
            SetupEdge(pd, elm, ::g::Uno::Float2__New2(0.0f, 1.0f), 12);
            break;
        }
        case 4:
            break;
    }
}

// private static void dismiss(Fuse.Controls.EdgeNavigator e) [static] :22
void EdgeNavigator::dismiss(EdgeNavigator* e)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "dismiss(Fuse.Controls.EdgeNavigator)");
    EdgeNavigator_typeof()->Init();
    uPtr(e)->Dismiss();
}

// private static Fuse.Controls.EdgeNavigator.ControlPageData GetControlPageData(Fuse.Elements.Element elm, [bool create]) [static] :164
EdgeNavigator__ControlPageData* EdgeNavigator::GetControlPageData(::g::Fuse::Elements::Element* elm, bool create)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "GetControlPageData(Fuse.Elements.Element,[bool])");
    EdgeNavigator_typeof()->Init();
    ::g::Fuse::Navigation::PageData* pd = ::g::Fuse::Navigation::PageData::GetOrCreate(elm, create);

    if (pd == NULL)
        return NULL;

    if ((uPtr(pd)->ControlPageData != NULL) || !create)
        return uCast<EdgeNavigator__ControlPageData*>(uPtr(pd)->ControlPageData, EdgeNavigator__ControlPageData_typeof());

    EdgeNavigator__ControlPageData* cpd = EdgeNavigator__ControlPageData::New1();
    uPtr(pd)->ControlPageData = cpd;
    return cpd;
}

// public EdgeNavigator New() [static] :17
EdgeNavigator* EdgeNavigator::New4()
{
    EdgeNavigator* obj1 = (EdgeNavigator*)uNew(EdgeNavigator_typeof());
    obj1->ctor_7();
    return obj1;
}

// private static void open(Fuse.Controls.EdgeNavigator e, object[] args) [static] :33
void EdgeNavigator::open(EdgeNavigator* e, uArray* args)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "open(Fuse.Controls.EdgeNavigator,object[])");
    EdgeNavigator_typeof()->Init();
    int32_t ret5;

    if (uPtr(args)->Length() != 1)
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("EdgeNaviagator.open requires 1 parameter (edge)"), e, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\EdgeNavigator.ScriptClass.uno"), 37, uString::Const("open"), NULL);
        return;
    }

    int32_t edge = (::g::Fuse::Marshal__ToType_fn(::g::Fuse::Marshal_typeof()->MakeMethod(0/*ToType<Fuse.Navigation.NavigationEdge>*/, ::g::Fuse::Navigation::NavigationEdge_typeof(), NULL), uPtr(args)->Strong<uObject*>(0), &ret5), ret5);
    uPtr(e)->GotoEdge(edge);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.uno
// ------------------------------------------------------------------------------------------------

// internal sealed class Element_Opacity_Property :811
// {
static void Element_Opacity_Property_build(uType* type)
{
    ::STRINGS[12] = uString::Const("Opacity");
    ::TYPES[8] = ::g::Fuse::Elements::Element_typeof();
    type->SetBase(::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL));
    type->SetFields(1,
        ::TYPES[8/*Fuse.Elements.Element*/], offsetof(Element_Opacity_Property, _obj), 0);
}

::g::Uno::UX::Property1_type* Element_Opacity_Property_typeof()
{
    static uSStrong< ::g::Uno::UX::Property1_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Property1_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(Element_Opacity_Property);
    options.TypeSize = sizeof(::g::Uno::UX::Property1_type);
    type = (::g::Uno::UX::Property1_type*)uClassType::New("Fuse.Controls.Element_Opacity_Property", options);
    type->fp_build_ = Element_Opacity_Property_build;
    type->fp_Get1 = (void(*)(::g::Uno::UX::Property1*, ::g::Uno::UX::PropertyObject*, uTRef))Element_Opacity_Property__Get1_fn;
    type->fp_get_Object = (void(*)(::g::Uno::UX::Property*, ::g::Uno::UX::PropertyObject**))Element_Opacity_Property__get_Object_fn;
    type->fp_Set1 = (void(*)(::g::Uno::UX::Property1*, ::g::Uno::UX::PropertyObject*, void*, uObject*))Element_Opacity_Property__Set1_fn;
    type->fp_get_SupportsOriginSetter = (void(*)(::g::Uno::UX::PropertyAccessor*, bool*))Element_Opacity_Property__get_SupportsOriginSetter_fn;
    return type;
}

// public Element_Opacity_Property(Fuse.Elements.Element obj) :814
void Element_Opacity_Property__ctor_3_fn(Element_Opacity_Property* __this, ::g::Fuse::Elements::Element* obj)
{
    __this->ctor_3(obj);
}

// public override sealed float Get(Uno.UX.PropertyObject obj) :816
void Element_Opacity_Property__Get1_fn(Element_Opacity_Property* __this, ::g::Uno::UX::PropertyObject* obj, float* __retval)
{
    uStackFrame __("Fuse.Controls.Element_Opacity_Property", "Get(Uno.UX.PropertyObject)");
    return *__retval = uPtr(uCast< ::g::Fuse::Elements::Element*>(obj, ::TYPES[8/*Fuse.Elements.Element*/]))->Opacity(), void();
}

// public Element_Opacity_Property New(Fuse.Elements.Element obj) :814
void Element_Opacity_Property__New1_fn(::g::Fuse::Elements::Element* obj, Element_Opacity_Property** __retval)
{
    *__retval = Element_Opacity_Property::New1(obj);
}

// public override sealed Uno.UX.PropertyObject get_Object() :815
void Element_Opacity_Property__get_Object_fn(Element_Opacity_Property* __this, ::g::Uno::UX::PropertyObject** __retval)
{
    return *__retval = __this->_obj, void();
}

// public override sealed void Set(Uno.UX.PropertyObject obj, float v, Uno.UX.IPropertyListener origin) :817
void Element_Opacity_Property__Set1_fn(Element_Opacity_Property* __this, ::g::Uno::UX::PropertyObject* obj, float* v, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Element_Opacity_Property", "Set(Uno.UX.PropertyObject,float,Uno.UX.IPropertyListener)");
    float v_ = *v;
    uPtr(uCast< ::g::Fuse::Elements::Element*>(obj, ::TYPES[8/*Fuse.Elements.Element*/]))->SetOpacity(v_, origin);
}

// public override sealed bool get_SupportsOriginSetter() :818
void Element_Opacity_Property__get_SupportsOriginSetter_fn(Element_Opacity_Property* __this, bool* __retval)
{
    return *__retval = true, void();
}

// public Element_Opacity_Property(Fuse.Elements.Element obj) [instance] :814
void Element_Opacity_Property::ctor_3(::g::Fuse::Elements::Element* obj)
{
    uStackFrame __("Fuse.Controls.Element_Opacity_Property", ".ctor(Fuse.Elements.Element)");
    ctor_2(::g::Uno::UX::Selector__op_Implicit(::STRINGS[12/*"Opacity"*/]));
    _obj = obj;
}

// public Element_Opacity_Property New(Fuse.Elements.Element obj) [static] :814
Element_Opacity_Property* Element_Opacity_Property::New1(::g::Fuse::Elements::Element* obj)
{
    Element_Opacity_Property* obj1 = (Element_Opacity_Property*)uNew(Element_Opacity_Property_typeof());
    obj1->ctor_3(obj);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Ellipse.uno
// -----------------------------------------------------------------------------------------------------

// public partial sealed class Ellipse :28
// {
static void Ellipse_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface18));
    type->SetFields(123);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Ellipse__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Shape_type* Ellipse_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::EllipticalShape_typeof();
    options.FieldCount = 123;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(Ellipse);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.Ellipse", options);
    type->fp_build_ = Ellipse_build;
    type->fp_ctor_ = (void*)Ellipse__New3_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))Ellipse__CreateNativeView_fn;
    type->fp_CreateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::Drawing::Surface*, ::g::Fuse::Drawing::SurfacePath**))Ellipse__CreateSurfacePath_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Ellipse__OnHitTestLocalVisual_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Ellipse() :28
void Ellipse__ctor_8_fn(Ellipse* __this)
{
    __this->ctor_8();
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :30
void Ellipse__CreateNativeView_fn(Ellipse* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Ellipse", "CreateNativeView()");
    return *__retval = (uObject*)::g::Fuse::Controls::Native::Android::Ellipse::New5(), void();
}

// protected override sealed Fuse.Drawing.SurfacePath CreateSurfacePath(Fuse.Drawing.Surface surface) :43
void Ellipse__CreateSurfacePath_fn(Ellipse* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    uStackFrame __("Fuse.Controls.Ellipse", "CreateSurfacePath(Fuse.Drawing.Surface)");
    return *__retval = __this->CreateEllipticalPath(surface, ::g::Uno::Float2__op_Division1(__this->ActualSize(), 2.0f), ::g::Uno::Float2__op_Division1(__this->ActualSize(), 2.0f), false), void();
}

// public generated Ellipse New() :28
void Ellipse__New3_fn(Ellipse** __retval)
{
    *__retval = Ellipse::New3();
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :48
void Ellipse__OnHitTestLocalVisual_fn(Ellipse* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Ellipse", "OnHitTestLocalVisual(Fuse.HitTestContext)");
    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);

    if (!__this->HasFills())
        return;

    float pointsZeroTolerance = 1e-05f;

    if ((__this->ActualSize().Y < 1e-05f) || (__this->ActualSize().X < 1e-05f))
        return;

    ::g::Uno::Float2 offPoint = ::g::Uno::Float2__op_Division2(::g::Uno::Float2__op_Subtraction2(uPtr(htc)->LocalPoint(), ::g::Uno::Float2__op_Division1(__this->ActualSize(), 2.0f)), ::g::Uno::Float2__op_Division1(__this->ActualSize(), 2.0f));

    if (::g::Uno::Vector::Length(offPoint) > 1.0f)
        return;

    if (__this->UseAngle())
    {
        float localAngle = ::g::Uno::Math::Atan22(offPoint.Y, offPoint.X);

        if (!::g::Fuse::Drawing::SurfaceUtil::AngleInRange(localAngle, __this->StartAngle(), __this->EffectiveEndAngle()))
            return;
    }

    htc->Hit(__this);
}

// public generated Ellipse() [instance] :28
void Ellipse::ctor_8()
{
    ctor_7();
}

// public generated Ellipse New() [static] :28
Ellipse* Ellipse::New3()
{
    Ellipse* obj1 = (Ellipse*)uNew(Ellipse_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\EllipticalShape.Surface.uno
// ---------------------------------------------------------------------------------------------------------------------

// public interfacemodifiers class EllipticalShape :8
// {
// static generated EllipticalShape() :8
static void EllipticalShape__cctor_4_fn(uType* __type)
{
    EllipticalShape::EndAngleName_ = ::g::Uno::UX::Selector__New1(::STRINGS[13/*"EndAngle"*/]);
    EllipticalShape::StartAngleName_ = ::g::Uno::UX::Selector__New1(::STRINGS[14/*"StartAngle"*/]);
    EllipticalShape::LengthAngleName_ = ::g::Uno::UX::Selector__New1(::STRINGS[15/*"LengthAngle"*/]);
}

static void EllipticalShape_build(uType* type)
{
    ::STRINGS[13] = uString::Const("EndAngle");
    ::STRINGS[14] = uString::Const("StartAngle");
    ::STRINGS[15] = uString::Const("LengthAngle");
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface18));
    type->SetFields(118,
        ::g::Uno::Float_typeof(), offsetof(EllipticalShape, _startAngle), 0,
        ::g::Uno::Float_typeof(), offsetof(EllipticalShape, _endAngle), 0,
        ::g::Uno::Bool_typeof(), offsetof(EllipticalShape, _hasAngle), 0,
        ::g::Uno::Float_typeof(), offsetof(EllipticalShape, _lengthAngle), 0,
        ::g::Uno::Bool_typeof(), offsetof(EllipticalShape, _hasLengthAngle), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&EllipticalShape::EndAngleName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&EllipticalShape::StartAngleName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&EllipticalShape::LengthAngleName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(12,
        new uFunction("get_EndAngle", NULL, (void*)EllipticalShape__get_EndAngle_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_EndAngle", NULL, (void*)EllipticalShape__set_EndAngle_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_EndAngleDegrees", NULL, (void*)EllipticalShape__get_EndAngleDegrees_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_EndAngleDegrees", NULL, (void*)EllipticalShape__set_EndAngleDegrees_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_LengthAngle", NULL, (void*)EllipticalShape__get_LengthAngle_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_LengthAngle", NULL, (void*)EllipticalShape__set_LengthAngle_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_LengthAngleDegrees", NULL, (void*)EllipticalShape__get_LengthAngleDegrees_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_LengthAngleDegrees", NULL, (void*)EllipticalShape__set_LengthAngleDegrees_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_StartAngle", NULL, (void*)EllipticalShape__get_StartAngle_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_StartAngle", NULL, (void*)EllipticalShape__set_StartAngle_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_StartAngleDegrees", NULL, (void*)EllipticalShape__get_StartAngleDegrees_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_StartAngleDegrees", NULL, (void*)EllipticalShape__set_StartAngleDegrees_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

::g::Fuse::Controls::Shape_type* EllipticalShape_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Shape_typeof();
    options.FieldCount = 126;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(EllipticalShape);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.EllipticalShape", options);
    type->fp_build_ = EllipticalShape_build;
    type->fp_cctor_ = EllipticalShape__cctor_4_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected generated EllipticalShape() :8
void EllipticalShape__ctor_7_fn(EllipticalShape* __this)
{
    __this->ctor_7();
}

// protected Fuse.Drawing.SurfacePath CreateEllipticalPath(Fuse.Drawing.Surface surface, float2 center, float2 radius, [bool drawArc]) :10
void EllipticalShape__CreateEllipticalPath_fn(EllipticalShape* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Uno::Float2* center, ::g::Uno::Float2* radius, bool* drawArc, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    *__retval = __this->CreateEllipticalPath(surface, *center, *radius, *drawArc);
}

// internal float get_EffectiveEndAngle() :104
void EllipticalShape__get_EffectiveEndAngle_fn(EllipticalShape* __this, float* __retval)
{
    *__retval = __this->EffectiveEndAngle();
}

// internal float get_EffectiveEndAngleDegrees() :112
void EllipticalShape__get_EffectiveEndAngleDegrees_fn(EllipticalShape* __this, float* __retval)
{
    *__retval = __this->EffectiveEndAngleDegrees();
}

// public float get_EndAngle() :34
void EllipticalShape__get_EndAngle_fn(EllipticalShape* __this, float* __retval)
{
    *__retval = __this->EndAngle();
}

// public void set_EndAngle(float value) :35
void EllipticalShape__set_EndAngle_fn(EllipticalShape* __this, float* value)
{
    __this->EndAngle(*value);
}

// public float get_EndAngleDegrees() :91
void EllipticalShape__get_EndAngleDegrees_fn(EllipticalShape* __this, float* __retval)
{
    *__retval = __this->EndAngleDegrees();
}

// public void set_EndAngleDegrees(float value) :92
void EllipticalShape__set_EndAngleDegrees_fn(EllipticalShape* __this, float* value)
{
    __this->EndAngleDegrees(*value);
}

// public float get_LengthAngle() :69
void EllipticalShape__get_LengthAngle_fn(EllipticalShape* __this, float* __retval)
{
    *__retval = __this->LengthAngle();
}

// public void set_LengthAngle(float value) :70
void EllipticalShape__set_LengthAngle_fn(EllipticalShape* __this, float* value)
{
    __this->LengthAngle(*value);
}

// public float get_LengthAngleDegrees() :98
void EllipticalShape__get_LengthAngleDegrees_fn(EllipticalShape* __this, float* __retval)
{
    *__retval = __this->LengthAngleDegrees();
}

// public void set_LengthAngleDegrees(float value) :99
void EllipticalShape__set_LengthAngleDegrees_fn(EllipticalShape* __this, float* value)
{
    __this->LengthAngleDegrees(*value);
}

// public float get_StartAngle() :18
void EllipticalShape__get_StartAngle_fn(EllipticalShape* __this, float* __retval)
{
    *__retval = __this->StartAngle();
}

// public void set_StartAngle(float value) :19
void EllipticalShape__set_StartAngle_fn(EllipticalShape* __this, float* value)
{
    __this->StartAngle(*value);
}

// public float get_StartAngleDegrees() :85
void EllipticalShape__get_StartAngleDegrees_fn(EllipticalShape* __this, float* __retval)
{
    *__retval = __this->StartAngleDegrees();
}

// public void set_StartAngleDegrees(float value) :86
void EllipticalShape__set_StartAngleDegrees_fn(EllipticalShape* __this, float* value)
{
    __this->StartAngleDegrees(*value);
}

// internal bool get_UseAngle() :48
void EllipticalShape__get_UseAngle_fn(EllipticalShape* __this, bool* __retval)
{
    *__retval = __this->UseAngle();
}

::g::Uno::UX::Selector EllipticalShape::EndAngleName_;
::g::Uno::UX::Selector EllipticalShape::StartAngleName_;
::g::Uno::UX::Selector EllipticalShape::LengthAngleName_;

// protected generated EllipticalShape() [instance] :8
void EllipticalShape::ctor_7()
{
    ctor_6();
}

// protected Fuse.Drawing.SurfacePath CreateEllipticalPath(Fuse.Drawing.Surface surface, float2 center, float2 radius, [bool drawArc]) [instance] :10
::g::Fuse::Drawing::SurfacePath* EllipticalShape::CreateEllipticalPath(::g::Fuse::Drawing::Surface* surface, ::g::Uno::Float2 center, ::g::Uno::Float2 radius, bool drawArc)
{
    uStackFrame __("Fuse.Controls.EllipticalShape", "CreateEllipticalPath(Fuse.Drawing.Surface,float2,float2,[bool])");
    ::g::Fuse::Drawing::LineSegments* list = ::g::Fuse::Drawing::LineSegments::New1();
    float startAngle = StartAngle();
    float endAngle = EffectiveEndAngle();

    if (UseAngle())
    {
        ::g::Uno::Float2 s = ::g::Uno::Float2__New2(::g::Uno::Math::Cos1(startAngle), ::g::Uno::Math::Sin1(startAngle));
        ::g::Uno::Float2 c = ::g::Uno::Float2__New2(::g::Uno::Math::Cos1((startAngle + endAngle) / 2.0f), ::g::Uno::Math::Sin1((startAngle + endAngle) / 2.0f));
        ::g::Uno::Float2 e = ::g::Uno::Float2__New2(::g::Uno::Math::Cos1(endAngle), ::g::Uno::Math::Sin1(endAngle));

        if (drawArc)
            uPtr(list)->MoveTo(::g::Uno::Float2__op_Addition2(center, ::g::Uno::Float2__op_Multiply2(s, radius)));
        else
        {
            uPtr(list)->MoveTo(center);
            list->LineTo(::g::Uno::Float2__op_Addition2(center, ::g::Uno::Float2__op_Multiply2(s, radius)));
        }

        uPtr(list)->EllipticArcTo(::g::Uno::Float2__op_Addition2(center, ::g::Uno::Float2__op_Multiply2(c, radius)), radius, 0.0f, false, startAngle < endAngle);
        list->EllipticArcTo(::g::Uno::Float2__op_Addition2(center, ::g::Uno::Float2__op_Multiply2(e, radius)), radius, 0.0f, false, startAngle < endAngle);

        if (!drawArc)
        {
            uPtr(list)->LineTo(center);
            list->ClosePath();
        }
    }
    else
    {
        uPtr(list)->MoveTo(::g::Uno::Float2__op_Addition2(center, ::g::Uno::Float2__New2(radius.X, 0.0f)));
        list->EllipticArcTo(::g::Uno::Float2__op_Subtraction2(center, ::g::Uno::Float2__New2(radius.X, 0.0f)), radius, 0.0f, true, true);
        list->EllipticArcTo(::g::Uno::Float2__op_Addition2(center, ::g::Uno::Float2__New2(radius.X, 0.0f)), radius, 0.0f, true, true);
        list->ClosePath();
    }

    return uPtr(surface)->CreatePath(list->Segments(), 0);
}

// internal float get_EffectiveEndAngle() [instance] :104
float EllipticalShape::EffectiveEndAngle()
{
    return _hasLengthAngle ? _startAngle + _lengthAngle : _endAngle;
}

// internal float get_EffectiveEndAngleDegrees() [instance] :112
float EllipticalShape::EffectiveEndAngleDegrees()
{
    return ::g::Uno::Math::RadiansToDegrees1(EffectiveEndAngle());
}

// public float get_EndAngle() [instance] :34
float EllipticalShape::EndAngle()
{
    return _endAngle;
}

// public void set_EndAngle(float value) [instance] :35
void EllipticalShape::EndAngle(float value)
{
    uStackFrame __("Fuse.Controls.EllipticalShape", "set_EndAngle(float)");

    if (_endAngle == value)
        return;

    _endAngle = value;
    InvalidateSurfacePath();
    OnPropertyChanged(EllipticalShape::EndAngleName_);
}

// public float get_EndAngleDegrees() [instance] :91
float EllipticalShape::EndAngleDegrees()
{
    return ::g::Uno::Math::RadiansToDegrees1(_endAngle);
}

// public void set_EndAngleDegrees(float value) [instance] :92
void EllipticalShape::EndAngleDegrees(float value)
{
    uStackFrame __("Fuse.Controls.EllipticalShape", "set_EndAngleDegrees(float)");
    EndAngle(::g::Uno::Math::DegreesToRadians1(value));
}

// public float get_LengthAngle() [instance] :69
float EllipticalShape::LengthAngle()
{
    return _lengthAngle;
}

// public void set_LengthAngle(float value) [instance] :70
void EllipticalShape::LengthAngle(float value)
{
    uStackFrame __("Fuse.Controls.EllipticalShape", "set_LengthAngle(float)");

    if (_hasLengthAngle && (_lengthAngle == value))
        return;

    _lengthAngle = value;
    _hasLengthAngle = true;
    InvalidateSurfacePath();
    OnPropertyChanged(EllipticalShape::LengthAngleName_);
}

// public float get_LengthAngleDegrees() [instance] :98
float EllipticalShape::LengthAngleDegrees()
{
    return ::g::Uno::Math::RadiansToDegrees1(_lengthAngle);
}

// public void set_LengthAngleDegrees(float value) [instance] :99
void EllipticalShape::LengthAngleDegrees(float value)
{
    uStackFrame __("Fuse.Controls.EllipticalShape", "set_LengthAngleDegrees(float)");
    LengthAngle(::g::Uno::Math::DegreesToRadians1(value));
}

// public float get_StartAngle() [instance] :18
float EllipticalShape::StartAngle()
{
    return _startAngle;
}

// public void set_StartAngle(float value) [instance] :19
void EllipticalShape::StartAngle(float value)
{
    uStackFrame __("Fuse.Controls.EllipticalShape", "set_StartAngle(float)");

    if (_hasAngle && (_startAngle == value))
        return;

    _startAngle = value;
    _hasAngle = true;
    InvalidateSurfacePath();
    OnPropertyChanged(EllipticalShape::StartAngleName_);
}

// public float get_StartAngleDegrees() [instance] :85
float EllipticalShape::StartAngleDegrees()
{
    return ::g::Uno::Math::RadiansToDegrees1(_startAngle);
}

// public void set_StartAngleDegrees(float value) [instance] :86
void EllipticalShape::StartAngleDegrees(float value)
{
    uStackFrame __("Fuse.Controls.EllipticalShape", "set_StartAngleDegrees(float)");
    StartAngle(::g::Uno::Math::DegreesToRadians1(value));
}

// internal bool get_UseAngle() [instance] :48
bool EllipticalShape::UseAngle()
{
    if (!_hasAngle)
        return false;

    float zeroTolerance = 1e-05f;

    if (_hasLengthAngle && (::g::Uno::Math::Abs1(_lengthAngle) >= 6.28317547f))
        return false;

    return true;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\SingleViewHost.uno
// -------------------------------------------------------------------------------------------------

// private sealed class SingleViewHost.Enable :18
// {
static void SingleViewHost__Enable_build(uType* type)
{
    ::TYPES[19] = ::g::Uno::Action_typeof();
    type->SetDependencies(
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(SingleViewHost__Enable_type, interface0));
    type->SetFields(0,
        ::g::Fuse::Controls::SingleViewHost_typeof(), offsetof(SingleViewHost__Enable, _host), 0,
        ::g::Uno::Bool_typeof(), offsetof(SingleViewHost__Enable, _canceled), 0);
}

SingleViewHost__Enable_type* SingleViewHost__Enable_typeof()
{
    static uSStrong<SingleViewHost__Enable_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(SingleViewHost__Enable);
    options.TypeSize = sizeof(SingleViewHost__Enable_type);
    type = (SingleViewHost__Enable_type*)uClassType::New("Fuse.Controls.SingleViewHost.Enable", options);
    type->fp_build_ = SingleViewHost__Enable_build;
    type->interface0.fp_Dispose = (void(*)(uObject*))SingleViewHost__Enable__UnoIDisposableDispose_fn;
    return type;
}

// public Enable(Fuse.Controls.SingleViewHost host) :21
void SingleViewHost__Enable__ctor__fn(SingleViewHost__Enable* __this, ::g::Fuse::Controls::SingleViewHost* host)
{
    __this->ctor_(host);
}

// public Enable New(Fuse.Controls.SingleViewHost host) :21
void SingleViewHost__Enable__New1_fn(::g::Fuse::Controls::SingleViewHost* host, SingleViewHost__Enable** __retval)
{
    *__retval = SingleViewHost__Enable::New1(host);
}

// private void NextFrame() :30
void SingleViewHost__Enable__NextFrame_fn(SingleViewHost__Enable* __this)
{
    __this->NextFrame();
}

// private void Uno.IDisposable.Dispose() :40
void SingleViewHost__Enable__UnoIDisposableDispose_fn(SingleViewHost__Enable* __this)
{
    __this->_canceled = true;
}

// public Enable(Fuse.Controls.SingleViewHost host) [instance] :21
void SingleViewHost__Enable::ctor_(::g::Fuse::Controls::SingleViewHost* host)
{
    uStackFrame __("Fuse.Controls.SingleViewHost.Enable", ".ctor(Fuse.Controls.SingleViewHost)");
    _host = host;
    uPtr(_host)->_draw = true;
    uPtr(_host)->InvalidateVisual();
    uPtr(_host)->InvalidateRenderBounds();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)SingleViewHost__Enable__NextFrame_fn, this), 0, 1);
}

// private void NextFrame() [instance] :30
void SingleViewHost__Enable::NextFrame()
{
    uStackFrame __("Fuse.Controls.SingleViewHost.Enable", "NextFrame()");

    if (_canceled)
        return;

    uPtr(_host)->SetOffscreen();
    uPtr(_host)->_changingState = NULL;
    _host = NULL;
}

// public Enable New(Fuse.Controls.SingleViewHost host) [static] :21
SingleViewHost__Enable* SingleViewHost__Enable::New1(::g::Fuse::Controls::SingleViewHost* host)
{
    SingleViewHost__Enable* obj1 = (SingleViewHost__Enable*)uNew(SingleViewHost__Enable_typeof());
    obj1->ctor_(host);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\NativeViewHost.uno
// -------------------------------------------------------------------------------------------------

// private sealed class NativeViewHost.Enable :69
// {
static void NativeViewHost__Enable_build(uType* type)
{
    ::TYPES[19] = ::g::Uno::Action_typeof();
    type->SetDependencies(
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(NativeViewHost__Enable_type, interface0));
    type->SetFields(0,
        ::g::Fuse::Controls::NativeViewHost_typeof(), offsetof(NativeViewHost__Enable, _host), 0,
        ::g::Uno::Bool_typeof(), offsetof(NativeViewHost__Enable, _canceled), 0);
}

NativeViewHost__Enable_type* NativeViewHost__Enable_typeof()
{
    static uSStrong<NativeViewHost__Enable_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(NativeViewHost__Enable);
    options.TypeSize = sizeof(NativeViewHost__Enable_type);
    type = (NativeViewHost__Enable_type*)uClassType::New("Fuse.Controls.NativeViewHost.Enable", options);
    type->fp_build_ = NativeViewHost__Enable_build;
    type->interface0.fp_Dispose = (void(*)(uObject*))NativeViewHost__Enable__UnoIDisposableDispose_fn;
    return type;
}

// public Enable(Fuse.Controls.NativeViewHost host) :72
void NativeViewHost__Enable__ctor__fn(NativeViewHost__Enable* __this, ::g::Fuse::Controls::NativeViewHost* host)
{
    __this->ctor_(host);
}

// public Enable New(Fuse.Controls.NativeViewHost host) :72
void NativeViewHost__Enable__New1_fn(::g::Fuse::Controls::NativeViewHost* host, NativeViewHost__Enable** __retval)
{
    *__retval = NativeViewHost__Enable::New1(host);
}

// private void NextFrame() :81
void NativeViewHost__Enable__NextFrame_fn(NativeViewHost__Enable* __this)
{
    __this->NextFrame();
}

// private void Uno.IDisposable.Dispose() :89
void NativeViewHost__Enable__UnoIDisposableDispose_fn(NativeViewHost__Enable* __this)
{
    __this->_canceled = true;
}

// public Enable(Fuse.Controls.NativeViewHost host) [instance] :72
void NativeViewHost__Enable::ctor_(::g::Fuse::Controls::NativeViewHost* host)
{
    uStackFrame __("Fuse.Controls.NativeViewHost.Enable", ".ctor(Fuse.Controls.NativeViewHost)");
    _host = host;
    uPtr(_host)->_draw = true;
    uPtr(_host)->InvalidateVisual();
    uPtr(_host)->InvalidateRenderBounds();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)NativeViewHost__Enable__NextFrame_fn, this), 0, 1);
}

// private void NextFrame() [instance] :81
void NativeViewHost__Enable::NextFrame()
{
    uStackFrame __("Fuse.Controls.NativeViewHost.Enable", "NextFrame()");

    if (_canceled)
        return;

    uPtr(_host)->EnableOffscreen();
    uPtr(_host)->_toggeling = NULL;
    _host = NULL;
}

// public Enable New(Fuse.Controls.NativeViewHost host) [static] :72
NativeViewHost__Enable* NativeViewHost__Enable::New1(::g::Fuse::Controls::NativeViewHost* host)
{
    NativeViewHost__Enable* obj1 = (NativeViewHost__Enable*)uNew(NativeViewHost__Enable_typeof());
    obj1->ctor_(host);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\TreeRenderer.Android.uno
// -------------------------------------------------------------------------------------------------------

// internal static extern class Extensions :236
// {
static void Extensions_build(uType* type)
{
    ::STRINGS[16] = uString::Const("Cannot convert to a color");
    ::STRINGS[17] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\TreeRenderer.Android.uno");
    ::STRINGS[18] = uString::Const("GetColor");
    ::TYPES[20] = ::g::Fuse::Drawing::SolidColor_typeof();
    ::TYPES[21] = ::g::Fuse::Drawing::StaticSolidColor_typeof();
    type->SetDependencies(
        ::g::Uno::Color_typeof());
}

uClassType* Extensions_typeof()
{
    static uSStrong<uClassType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.DependencyCount = 1;
    options.TypeSize = sizeof(uClassType);
    type = uClassType::New("Fuse.Controls.Extensions", options);
    type->fp_build_ = Extensions_build;
    return type;
}

// public static int GetColor(Fuse.Drawing.Brush brush) :238
void Extensions__GetColor_fn(::g::Fuse::Drawing::Brush* brush, int32_t* __retval)
{
    *__retval = Extensions::GetColor(brush);
}

// public static int GetColor(Fuse.Drawing.Brush brush) [static] :238
int32_t Extensions::GetColor(::g::Fuse::Drawing::Brush* brush)
{
    uStackFrame __("Fuse.Controls.Extensions", "GetColor(Fuse.Drawing.Brush)");
    ::g::Uno::Float4 c = ::g::Uno::Float4__New1(0.0f);

    if (brush != NULL)
    {
        ::g::Fuse::Drawing::SolidColor* sc = uAs< ::g::Fuse::Drawing::SolidColor*>(brush, ::TYPES[20/*Fuse.Drawing.SolidColor*/]);

        if (sc != NULL)
            c = uPtr(sc)->Color();

        ::g::Fuse::Drawing::StaticSolidColor* ssc = uAs< ::g::Fuse::Drawing::StaticSolidColor*>(brush, ::TYPES[21/*Fuse.Drawing.StaticSolidColor*/]);

        if (ssc != NULL)
            c = uPtr(ssc)->Color();

        if ((sc == NULL) && (ssc == NULL))
            ::g::Fuse::Diagnostics::Unsupported(::STRINGS[16/*"Cannot conv...*/], brush, ::STRINGS[17/*"C:\\Users\\...*/], 251, ::STRINGS[18/*"GetColor"*/]);
    }

    return (int32_t)::g::Uno::Color::ToArgb(c);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\WebView.uno
// -------------------------------------------------------------------------------------------

// internal sealed class FallbackWebViewClient :501
// {
static void FallbackWebViewClient_build(uType* type)
{
    ::STRINGS[19] = uString::Const("");
    ::TYPES[22] = ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Controls::BufferedWebViewCall_typeof(), NULL);
    ::TYPES[23] = ::g::Fuse::Controls::BufferedWebViewCall_typeof();
    ::TYPES[24] = ::g::Uno::EventHandler_typeof();
    ::TYPES[25] = ::g::Fuse::Navigation::HistoryChangedHandler_typeof();
    ::TYPES[26] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    type->SetInterfaces(
        ::g::Fuse::Controls::IWebView_typeof(), offsetof(FallbackWebViewClient_type, interface0),
        ::g::Fuse::Triggers::IProgress_typeof(), offsetof(FallbackWebViewClient_type, interface1),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(FallbackWebViewClient_type, interface2),
        ::g::Fuse::Controls::ISourceReceiver_typeof(), offsetof(FallbackWebViewClient_type, interface3));
    type->SetFields(0,
        ::TYPES[22/*Uno.Collections.List<Fuse.Controls.BufferedWebViewCall>*/], offsetof(FallbackWebViewClient, _bufferedCalls), 0,
        ::g::Uno::String_typeof(), offsetof(FallbackWebViewClient, _BaseUrl), 0,
        ::g::Uno::UX::FileSource_typeof(), offsetof(FallbackWebViewClient, _File), 0,
        ::g::Uno::Bool_typeof(), offsetof(FallbackWebViewClient, _ScrollEnabled), 0,
        ::g::Uno::String_typeof(), offsetof(FallbackWebViewClient, _Source), 0,
        ::g::Uno::String_typeof(), offsetof(FallbackWebViewClient, _Url), 0,
        ::g::Uno::Bool_typeof(), offsetof(FallbackWebViewClient, _ZoomEnabled), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(FallbackWebViewClient, BeginLoading1), 0,
        ::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/], offsetof(FallbackWebViewClient, HistoryChanged1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(FallbackWebViewClient, PageLoaded1), 0,
        ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/], offsetof(FallbackWebViewClient, ProgressChanged1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(FallbackWebViewClient, URISchemeHandler1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(FallbackWebViewClient, UrlChanged1), 0);
}

FallbackWebViewClient_type* FallbackWebViewClient_typeof()
{
    static uSStrong<FallbackWebViewClient_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 13;
    options.InterfaceCount = 4;
    options.ObjectSize = sizeof(FallbackWebViewClient);
    options.TypeSize = sizeof(FallbackWebViewClient_type);
    type = (FallbackWebViewClient_type*)uClassType::New("Fuse.Controls.FallbackWebViewClient", options);
    type->fp_build_ = FallbackWebViewClient_build;
    type->fp_ctor_ = (void*)FallbackWebViewClient__New1_fn;
    type->interface0.fp_Eval1 = (void(*)(uObject*, uString*, uDelegate*))FallbackWebViewClient__Eval1_fn;
    type->interface0.fp_Eval = (void(*)(uObject*, uString*))FallbackWebViewClient__Eval_fn;
    type->interface0.fp_LoadHtml = (void(*)(uObject*, uString*))FallbackWebViewClient__LoadHtml_fn;
    type->interface0.fp_LoadHtml1 = (void(*)(uObject*, uString*, uString*))FallbackWebViewClient__LoadHtml1_fn;
    type->interface0.fp_LoadUrl = (void(*)(uObject*, uString*))FallbackWebViewClient__LoadUrl_fn;
    type->interface0.fp_Stop = (void(*)(uObject*))FallbackWebViewClient__Stop_fn;
    type->interface0.fp_Reload = (void(*)(uObject*))FallbackWebViewClient__Reload_fn;
    type->interface0.fp_get_BaseUrl = (void(*)(uObject*, uString**))FallbackWebViewClient__get_BaseUrl_fn;
    type->interface0.fp_set_BaseUrl = (void(*)(uObject*, uString*))FallbackWebViewClient__set_BaseUrl_fn;
    type->interface0.fp_get_Url = (void(*)(uObject*, uString**))FallbackWebViewClient__get_Url_fn;
    type->interface0.fp_set_Url = (void(*)(uObject*, uString*))FallbackWebViewClient__set_Url_fn;
    type->interface0.fp_get_DocumentTitle = (void(*)(uObject*, uString**))FallbackWebViewClient__get_DocumentTitle_fn;
    type->interface0.fp_get_File = (void(*)(uObject*, ::g::Uno::UX::FileSource**))FallbackWebViewClient__get_File_fn;
    type->interface0.fp_set_File = (void(*)(uObject*, ::g::Uno::UX::FileSource*))FallbackWebViewClient__set_File_fn;
    type->interface0.fp_get_ZoomEnabled = (void(*)(uObject*, bool*))FallbackWebViewClient__get_ZoomEnabled_fn;
    type->interface0.fp_set_ZoomEnabled = (void(*)(uObject*, bool*))FallbackWebViewClient__set_ZoomEnabled_fn;
    type->interface0.fp_get_ScrollEnabled = (void(*)(uObject*, bool*))FallbackWebViewClient__get_ScrollEnabled_fn;
    type->interface0.fp_set_ScrollEnabled = (void(*)(uObject*, bool*))FallbackWebViewClient__set_ScrollEnabled_fn;
    type->interface0.fp_add_PageLoaded = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_PageLoaded_fn;
    type->interface0.fp_remove_PageLoaded = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_PageLoaded_fn;
    type->interface0.fp_add_BeginLoading = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_BeginLoading_fn;
    type->interface0.fp_remove_BeginLoading = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_BeginLoading_fn;
    type->interface0.fp_add_UrlChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_UrlChanged_fn;
    type->interface0.fp_remove_UrlChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_UrlChanged_fn;
    type->interface0.fp_add_URISchemeHandler = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_URISchemeHandler_fn;
    type->interface0.fp_remove_URISchemeHandler = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_URISchemeHandler_fn;
    type->interface1.fp_get_Progress = (void(*)(uObject*, double*))FallbackWebViewClient__get_Progress_fn;
    type->interface1.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_ProgressChanged_fn;
    type->interface1.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_ProgressChanged_fn;
    type->interface2.fp_GoForward = (void(*)(uObject*))FallbackWebViewClient__GoForward_fn;
    type->interface2.fp_GoBack = (void(*)(uObject*))FallbackWebViewClient__GoBack_fn;
    type->interface2.fp_get_CanGoBack = (void(*)(uObject*, bool*))FallbackWebViewClient__get_CanGoBack_fn;
    type->interface2.fp_get_CanGoForward = (void(*)(uObject*, bool*))FallbackWebViewClient__get_CanGoForward_fn;
    type->interface2.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_HistoryChanged_fn;
    type->interface2.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_HistoryChanged_fn;
    type->interface3.fp_get_Source = (void(*)(uObject*, uString**))FallbackWebViewClient__get_Source_fn;
    type->interface3.fp_set_Source = (void(*)(uObject*, uString*))FallbackWebViewClient__set_Source_fn;
    return type;
}

// public FallbackWebViewClient() :507
void FallbackWebViewClient__ctor__fn(FallbackWebViewClient* __this)
{
    __this->ctor_();
}

// public void ApplyBufferedCalls(Fuse.Controls.IWebView wv) :514
void FallbackWebViewClient__ApplyBufferedCalls_fn(FallbackWebViewClient* __this, uObject* wv)
{
    __this->ApplyBufferedCalls(wv);
}

// public generated string get_BaseUrl() :525
void FallbackWebViewClient__get_BaseUrl_fn(FallbackWebViewClient* __this, uString** __retval)
{
    *__retval = __this->BaseUrl();
}

// public generated void set_BaseUrl(string value) :525
void FallbackWebViewClient__set_BaseUrl_fn(FallbackWebViewClient* __this, uString* value)
{
    __this->BaseUrl(value);
}

// public generated void add_BeginLoading(Uno.EventHandler value) :554
void FallbackWebViewClient__add_BeginLoading_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_BeginLoading(value);
}

// public generated void remove_BeginLoading(Uno.EventHandler value) :554
void FallbackWebViewClient__remove_BeginLoading_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_BeginLoading(value);
}

// public bool get_CanGoBack() :527
void FallbackWebViewClient__get_CanGoBack_fn(FallbackWebViewClient* __this, bool* __retval)
{
    *__retval = __this->CanGoBack();
}

// public bool get_CanGoForward() :528
void FallbackWebViewClient__get_CanGoForward_fn(FallbackWebViewClient* __this, bool* __retval)
{
    *__retval = __this->CanGoForward();
}

// public string get_DocumentTitle() :529
void FallbackWebViewClient__get_DocumentTitle_fn(FallbackWebViewClient* __this, uString** __retval)
{
    *__retval = __this->DocumentTitle();
}

// public void Eval(string js) :535
void FallbackWebViewClient__Eval_fn(FallbackWebViewClient* __this, uString* js)
{
    __this->Eval(js);
}

// public void Eval(string js, Uno.Action<string> resultHandler) :539
void FallbackWebViewClient__Eval1_fn(FallbackWebViewClient* __this, uString* js, uDelegate* resultHandler)
{
    __this->Eval1(js, resultHandler);
}

// public generated Uno.UX.FileSource get_File() :503
void FallbackWebViewClient__get_File_fn(FallbackWebViewClient* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public generated void set_File(Uno.UX.FileSource value) :503
void FallbackWebViewClient__set_File_fn(FallbackWebViewClient* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// public void GoBack() :531
void FallbackWebViewClient__GoBack_fn(FallbackWebViewClient* __this)
{
    __this->GoBack();
}

// public void GoForward() :532
void FallbackWebViewClient__GoForward_fn(FallbackWebViewClient* __this)
{
    __this->GoForward();
}

// public generated void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :530
void FallbackWebViewClient__add_HistoryChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_HistoryChanged(value);
}

// public generated void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :530
void FallbackWebViewClient__remove_HistoryChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_HistoryChanged(value);
}

// public void LoadHtml(string html) :544
void FallbackWebViewClient__LoadHtml_fn(FallbackWebViewClient* __this, uString* html)
{
    __this->LoadHtml(html);
}

// public void LoadHtml(string html, string baseUrl) :548
void FallbackWebViewClient__LoadHtml1_fn(FallbackWebViewClient* __this, uString* html, uString* baseUrl)
{
    __this->LoadHtml1(html, baseUrl);
}

// public void LoadUrl(string url) :543
void FallbackWebViewClient__LoadUrl_fn(FallbackWebViewClient* __this, uString* url)
{
    __this->LoadUrl(url);
}

// public FallbackWebViewClient New() :507
void FallbackWebViewClient__New1_fn(FallbackWebViewClient** __retval)
{
    *__retval = FallbackWebViewClient::New1();
}

// public generated void add_PageLoaded(Uno.EventHandler value) :553
void FallbackWebViewClient__add_PageLoaded_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_PageLoaded(value);
}

// public generated void remove_PageLoaded(Uno.EventHandler value) :553
void FallbackWebViewClient__remove_PageLoaded_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_PageLoaded(value);
}

// public double get_Progress() :557
void FallbackWebViewClient__get_Progress_fn(FallbackWebViewClient* __this, double* __retval)
{
    *__retval = __this->Progress();
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :552
void FallbackWebViewClient__add_ProgressChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_ProgressChanged(value);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :552
void FallbackWebViewClient__remove_ProgressChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_ProgressChanged(value);
}

// public void Reload() :533
void FallbackWebViewClient__Reload_fn(FallbackWebViewClient* __this)
{
    __this->Reload();
}

// public generated bool get_ScrollEnabled() :559
void FallbackWebViewClient__get_ScrollEnabled_fn(FallbackWebViewClient* __this, bool* __retval)
{
    *__retval = __this->ScrollEnabled();
}

// public generated void set_ScrollEnabled(bool value) :559
void FallbackWebViewClient__set_ScrollEnabled_fn(FallbackWebViewClient* __this, bool* value)
{
    __this->ScrollEnabled(*value);
}

// public generated string get_Source() :524
void FallbackWebViewClient__get_Source_fn(FallbackWebViewClient* __this, uString** __retval)
{
    *__retval = __this->Source();
}

// public generated void set_Source(string value) :524
void FallbackWebViewClient__set_Source_fn(FallbackWebViewClient* __this, uString* value)
{
    __this->Source(value);
}

// public void Stop() :534
void FallbackWebViewClient__Stop_fn(FallbackWebViewClient* __this)
{
    __this->Stop();
}

// public generated void add_URISchemeHandler(Uno.EventHandler value) :556
void FallbackWebViewClient__add_URISchemeHandler_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_URISchemeHandler(value);
}

// public generated void remove_URISchemeHandler(Uno.EventHandler value) :556
void FallbackWebViewClient__remove_URISchemeHandler_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_URISchemeHandler(value);
}

// public generated string get_Url() :526
void FallbackWebViewClient__get_Url_fn(FallbackWebViewClient* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public generated void set_Url(string value) :526
void FallbackWebViewClient__set_Url_fn(FallbackWebViewClient* __this, uString* value)
{
    __this->Url(value);
}

// public generated void add_UrlChanged(Uno.EventHandler value) :555
void FallbackWebViewClient__add_UrlChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_UrlChanged(value);
}

// public generated void remove_UrlChanged(Uno.EventHandler value) :555
void FallbackWebViewClient__remove_UrlChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_UrlChanged(value);
}

// public generated bool get_ZoomEnabled() :558
void FallbackWebViewClient__get_ZoomEnabled_fn(FallbackWebViewClient* __this, bool* __retval)
{
    *__retval = __this->ZoomEnabled();
}

// public generated void set_ZoomEnabled(bool value) :558
void FallbackWebViewClient__set_ZoomEnabled_fn(FallbackWebViewClient* __this, bool* value)
{
    __this->ZoomEnabled(*value);
}

// public FallbackWebViewClient() [instance] :507
void FallbackWebViewClient::ctor_()
{
    _bufferedCalls = ((::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[22/*Uno.Collections.List<Fuse.Controls.BufferedWebViewCall>*/]));
    ZoomEnabled(true);
    ScrollEnabled(true);
}

// public void ApplyBufferedCalls(Fuse.Controls.IWebView wv) [instance] :514
void FallbackWebViewClient::ApplyBufferedCalls(uObject* wv)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "ApplyBufferedCalls(Fuse.Controls.IWebView)");
    uObject* ret2;
    bool ret3;

    while (uPtr(_bufferedCalls)->Count() > 0)
    {
        uObject* call = (::g::Uno::Collections::List__get_Item_fn(uPtr(_bufferedCalls), uCRef<int32_t>(0), &ret2), ret2);
        ::g::Fuse::Controls::BufferedWebViewCall::Apply(uInterface(uPtr(call), ::TYPES[23/*Fuse.Controls.BufferedWebViewCall*/]), wv);
        ::g::Uno::Collections::List__Remove_fn(uPtr(_bufferedCalls), call, &ret3);
    }
}

// public generated string get_BaseUrl() [instance] :525
uString* FallbackWebViewClient::BaseUrl()
{
    return _BaseUrl;
}

// public generated void set_BaseUrl(string value) [instance] :525
void FallbackWebViewClient::BaseUrl(uString* value)
{
    _BaseUrl = value;
}

// public generated void add_BeginLoading(Uno.EventHandler value) [instance] :554
void FallbackWebViewClient::add_BeginLoading(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_BeginLoading(Uno.EventHandler)");
    BeginLoading1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(BeginLoading1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_BeginLoading(Uno.EventHandler value) [instance] :554
void FallbackWebViewClient::remove_BeginLoading(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_BeginLoading(Uno.EventHandler)");
    BeginLoading1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(BeginLoading1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public bool get_CanGoBack() [instance] :527
bool FallbackWebViewClient::CanGoBack()
{
    return false;
}

// public bool get_CanGoForward() [instance] :528
bool FallbackWebViewClient::CanGoForward()
{
    return false;
}

// public string get_DocumentTitle() [instance] :529
uString* FallbackWebViewClient::DocumentTitle()
{
    return ::STRINGS[19/*""*/];
}

// public void Eval(string js) [instance] :535
void FallbackWebViewClient::Eval(uString* js)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "Eval(string)");
    ::g::Uno::Collections::List__Add_fn(uPtr(_bufferedCalls), (uObject*)::g::Fuse::Controls::JavaScriptCall::New1(js, NULL));
}

// public void Eval(string js, Uno.Action<string> resultHandler) [instance] :539
void FallbackWebViewClient::Eval1(uString* js, uDelegate* resultHandler)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "Eval(string,Uno.Action<string>)");
    ::g::Uno::Collections::List__Add_fn(uPtr(_bufferedCalls), (uObject*)::g::Fuse::Controls::JavaScriptCall::New1(js, resultHandler));
}

// public generated Uno.UX.FileSource get_File() [instance] :503
::g::Uno::UX::FileSource* FallbackWebViewClient::File()
{
    return _File;
}

// public generated void set_File(Uno.UX.FileSource value) [instance] :503
void FallbackWebViewClient::File(::g::Uno::UX::FileSource* value)
{
    _File = value;
}

// public void GoBack() [instance] :531
void FallbackWebViewClient::GoBack()
{
}

// public void GoForward() [instance] :532
void FallbackWebViewClient::GoForward()
{
}

// public generated void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :530
void FallbackWebViewClient::add_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    HistoryChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(HistoryChanged1, value), ::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/]);
}

// public generated void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :530
void FallbackWebViewClient::remove_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    HistoryChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(HistoryChanged1, value), ::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/]);
}

// public void LoadHtml(string html) [instance] :544
void FallbackWebViewClient::LoadHtml(uString* html)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "LoadHtml(string)");
    LoadHtml1(html, ::STRINGS[19/*""*/]);
}

// public void LoadHtml(string html, string baseUrl) [instance] :548
void FallbackWebViewClient::LoadHtml1(uString* html, uString* baseUrl)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "LoadHtml(string,string)");
    ::g::Uno::Collections::List__Add_fn(uPtr(_bufferedCalls), (uObject*)::g::Fuse::Controls::LoadHtmlCall::New1(html, baseUrl));
}

// public void LoadUrl(string url) [instance] :543
void FallbackWebViewClient::LoadUrl(uString* url)
{
}

// public generated void add_PageLoaded(Uno.EventHandler value) [instance] :553
void FallbackWebViewClient::add_PageLoaded(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_PageLoaded(Uno.EventHandler)");
    PageLoaded1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(PageLoaded1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_PageLoaded(Uno.EventHandler value) [instance] :553
void FallbackWebViewClient::remove_PageLoaded(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_PageLoaded(Uno.EventHandler)");
    PageLoaded1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(PageLoaded1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public double get_Progress() [instance] :557
double FallbackWebViewClient::Progress()
{
    return 0.0;
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :552
void FallbackWebViewClient::add_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ProgressChanged1, value), ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :552
void FallbackWebViewClient::remove_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ProgressChanged1, value), ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public void Reload() [instance] :533
void FallbackWebViewClient::Reload()
{
}

// public generated bool get_ScrollEnabled() [instance] :559
bool FallbackWebViewClient::ScrollEnabled()
{
    return _ScrollEnabled;
}

// public generated void set_ScrollEnabled(bool value) [instance] :559
void FallbackWebViewClient::ScrollEnabled(bool value)
{
    _ScrollEnabled = value;
}

// public generated string get_Source() [instance] :524
uString* FallbackWebViewClient::Source()
{
    return _Source;
}

// public generated void set_Source(string value) [instance] :524
void FallbackWebViewClient::Source(uString* value)
{
    _Source = value;
}

// public void Stop() [instance] :534
void FallbackWebViewClient::Stop()
{
}

// public generated void add_URISchemeHandler(Uno.EventHandler value) [instance] :556
void FallbackWebViewClient::add_URISchemeHandler(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_URISchemeHandler(Uno.EventHandler)");
    URISchemeHandler1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(URISchemeHandler1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_URISchemeHandler(Uno.EventHandler value) [instance] :556
void FallbackWebViewClient::remove_URISchemeHandler(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_URISchemeHandler(Uno.EventHandler)");
    URISchemeHandler1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(URISchemeHandler1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated string get_Url() [instance] :526
uString* FallbackWebViewClient::Url()
{
    return _Url;
}

// public generated void set_Url(string value) [instance] :526
void FallbackWebViewClient::Url(uString* value)
{
    _Url = value;
}

// public generated void add_UrlChanged(Uno.EventHandler value) [instance] :555
void FallbackWebViewClient::add_UrlChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_UrlChanged(Uno.EventHandler)");
    UrlChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(UrlChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_UrlChanged(Uno.EventHandler value) [instance] :555
void FallbackWebViewClient::remove_UrlChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_UrlChanged(Uno.EventHandler)");
    UrlChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(UrlChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated bool get_ZoomEnabled() [instance] :558
bool FallbackWebViewClient::ZoomEnabled()
{
    return _ZoomEnabled;
}

// public generated void set_ZoomEnabled(bool value) [instance] :558
void FallbackWebViewClient::ZoomEnabled(bool value)
{
    _ZoomEnabled = value;
}

// public FallbackWebViewClient New() [static] :507
FallbackWebViewClient* FallbackWebViewClient::New1()
{
    FallbackWebViewClient* obj1 = (FallbackWebViewClient*)uNew(FallbackWebViewClient_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Video\1.7.2\Video.uno
// ---------------------------------------------------------------------------------------

// public sealed class FileVideoSource :23
// {
static void FileVideoSource_build(uType* type)
{
    type->SetFields(1,
        ::g::Uno::UX::FileSource_typeof(), offsetof(FileVideoSource, _file), 0);
    type->Reflection.SetFunctions(3,
        new uFunction("get_File", NULL, (void*)FileVideoSource__get_File_fn, 0, false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, (void*)FileVideoSource__set_File_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction(".ctor", NULL, (void*)FileVideoSource__New1_fn, 0, true, type, 0));
}

uType* FileVideoSource_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::VideoSource_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(FileVideoSource);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.FileVideoSource", options);
    type->fp_build_ = FileVideoSource_build;
    type->fp_ctor_ = (void*)FileVideoSource__New1_fn;
    return type;
}

// public generated FileVideoSource() :23
void FileVideoSource__ctor_1_fn(FileVideoSource* __this)
{
    __this->ctor_1();
}

// public Uno.UX.FileSource get_File() :28
void FileVideoSource__get_File_fn(FileVideoSource* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public void set_File(Uno.UX.FileSource value) :29
void FileVideoSource__set_File_fn(FileVideoSource* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// public generated FileVideoSource New() :23
void FileVideoSource__New1_fn(FileVideoSource** __retval)
{
    *__retval = FileVideoSource::New1();
}

// public generated FileVideoSource() [instance] :23
void FileVideoSource::ctor_1()
{
    ctor_();
}

// public Uno.UX.FileSource get_File() [instance] :28
::g::Uno::UX::FileSource* FileVideoSource::File()
{
    return _file;
}

// public void set_File(Uno.UX.FileSource value) [instance] :29
void FileVideoSource::File(::g::Uno::UX::FileSource* value)
{
    uStackFrame __("Fuse.Controls.FileVideoSource", "set_File(Uno.UX.FileSource)");
    _file = value;
    OnSourceChanged();
}

// public generated FileVideoSource New() [static] :23
FileVideoSource* FileVideoSource::New1()
{
    FileVideoSource* obj1 = (FileVideoSource*)uNew(FileVideoSource_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Path.uno
// --------------------------------------------------------------------------------------------------

// public enum FitMode :14
uEnumType* FitMode_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.FitMode", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "GeometryMaximum", 0LL,
        "ShrinkToGeometry", 1LL,
        "Extents", 2LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\GraphicsView.ux.uno
// --------------------------------------------------------------------------------------------------

// public partial class GraphicsView :106
// {
// static GraphicsView() :44
static void GraphicsView__cctor_3_fn(uType* __type)
{
}

static void GraphicsView_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Controls::DefaultTreeRenderer_typeof(),
        ::g::Fuse::Platform::Lifecycle_typeof(),
        ::g::Fuse::Platform::SystemUI_typeof(),
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(GraphicsView_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(GraphicsView_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(GraphicsView_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(GraphicsView_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(GraphicsView_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(GraphicsView_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(GraphicsView_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(GraphicsView_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(GraphicsView_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(GraphicsView_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(GraphicsView_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(GraphicsView_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(GraphicsView_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(GraphicsView_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(GraphicsView_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(GraphicsView_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(GraphicsView_type, interface16),
        ::g::Fuse::IViewport_typeof(), offsetof(GraphicsView_type, interface17),
        ::g::Fuse::IRenderViewport_typeof(), offsetof(GraphicsView_type, interface18),
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(GraphicsView_type, interface19),
        ::g::Fuse::Controls::IProxyHost_typeof(), offsetof(GraphicsView_type, interface20),
        ::g::Fuse::ICommonViewport_typeof(), offsetof(GraphicsView_type, interface21));
    type->SetFields(110,
        ::g::Fuse::FrustumViewport_typeof(), offsetof(GraphicsView, _frustumViewport), 0,
        ::g::Fuse::OrthographicFrustum_typeof(), offsetof(GraphicsView, _frustum), 0,
        ::g::Fuse::DrawContext_typeof(), offsetof(GraphicsView, _dc), 0,
        ::g::Uno::Float4_typeof(), offsetof(GraphicsView, _color), 0,
        ::g::Uno::Bool_typeof(), offsetof(GraphicsView, _frameScheduled), 0,
        ::g::Uno::Bool_typeof(), offsetof(GraphicsView, _inBackground), 0,
        ::g::Uno::Int_typeof(), offsetof(GraphicsView, rotationHackRedrawCount), 0);
    type->Reflection.SetFunctions(17,
        new uFunction("get_ActualPixelSize", NULL, (void*)GraphicsView__get_ActualPixelSize_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_Color", NULL, (void*)GraphicsView__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)GraphicsView__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction(".ctor", NULL, (void*)GraphicsView__New3_fn, 0, true, type, 0),
        new uFunction("get_PixelSize", NULL, (void*)GraphicsView__get_PixelSize_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_PixelsPerPoint", NULL, (void*)GraphicsView__get_PixelsPerPoint_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("PointToWorldRay", NULL, (void*)GraphicsView__PointToWorldRay_fn, 0, false, ::g::Fuse::Ray_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_ProjectionTransform", NULL, (void*)GraphicsView__get_ProjectionTransform_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_ProjectionTransformInverse", NULL, (void*)GraphicsView__get_ProjectionTransformInverse_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_Size", NULL, (void*)GraphicsView__get_Size_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_ViewOrigin", NULL, (void*)GraphicsView__get_ViewOrigin_fn, 0, false, ::g::Uno::Float3_typeof(), 0),
        new uFunction("get_ViewProjectionTransform", NULL, (void*)GraphicsView__get_ViewProjectionTransform_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_ViewProjectionTransformInverse", NULL, (void*)GraphicsView__get_ViewProjectionTransformInverse_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_ViewRange", NULL, (void*)GraphicsView__get_ViewRange_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_ViewTransform", NULL, (void*)GraphicsView__get_ViewTransform_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_ViewTransformInverse", NULL, (void*)GraphicsView__get_ViewTransformInverse_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("WorldToLocalRay", NULL, (void*)GraphicsView__WorldToLocalRay_fn, 0, false, ::g::Fuse::Ray_typeof(), 3, ::g::Fuse::IViewport_typeof(), ::g::Fuse::Ray_typeof(), ::g::Fuse::Visual_typeof()));
}

GraphicsView_type* GraphicsView_typeof()
{
    static uSStrong<GraphicsView_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 117;
    options.InterfaceCount = 22;
    options.DependencyCount = 4;
    options.ObjectSize = sizeof(GraphicsView);
    options.TypeSize = sizeof(GraphicsView_type);
    type = (GraphicsView_type*)uClassType::New("Fuse.Controls.GraphicsView", options);
    type->fp_build_ = GraphicsView_build;
    type->fp_ctor_ = (void*)GraphicsView__New3_fn;
    type->fp_cctor_ = GraphicsView__cctor_3_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))GraphicsView__CalcRenderBounds_fn;
    type->fp_DrawWithChildren = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))GraphicsView__DrawWithChildren_fn;
    type->fp_OnInvalidateVisual = (void(*)(::g::Fuse::Visual*))GraphicsView__OnInvalidateVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))GraphicsView__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))GraphicsView__OnUnrooted_fn;
    type->fp_get_TreeRenderer = (void(*)(::g::Fuse::Elements::Element*, uObject**))GraphicsView__get_TreeRenderer_fn;
    type->fp_get_VisualContext = (void(*)(::g::Fuse::Visual*, int32_t*))GraphicsView__get_VisualContext_fn;
    type->interface20.fp_Insert = (void(*)(uObject*, ::g::Fuse::Controls::Native::ViewHandle*))GraphicsView__FuseControlsIProxyHostInsert_fn;
    type->interface20.fp_Remove = (void(*)(uObject*, ::g::Fuse::Controls::Native::ViewHandle*))GraphicsView__FuseControlsIProxyHostRemove_fn;
    type->interface19.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererRootingStarted_fn;
    type->interface19.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererRooted_fn;
    type->interface19.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererUnrooted_fn;
    type->interface19.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))GraphicsView__FuseElementsITreeRendererBackgroundChanged_fn;
    type->interface19.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererTransformChanged_fn;
    type->interface19.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererPlaced_fn;
    type->interface19.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))GraphicsView__FuseElementsITreeRendererIsVisibleChanged_fn;
    type->interface19.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))GraphicsView__FuseElementsITreeRendererIsEnabledChanged_fn;
    type->interface19.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))GraphicsView__FuseElementsITreeRendererOpacityChanged_fn;
    type->interface19.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))GraphicsView__FuseElementsITreeRendererClipToBoundsChanged_fn;
    type->interface19.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))GraphicsView__FuseElementsITreeRendererHitTestModeChanged_fn;
    type->interface19.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, uArray*))GraphicsView__FuseElementsITreeRendererZOrderChanged_fn;
    type->interface19.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))GraphicsView__FuseElementsITreeRendererMeasure_fn;
    type->interface20.fp_get_WorldTransformInverse = (void(*)(uObject*, ::g::Uno::Float4x4*))GraphicsView__FuseControlsIProxyHostget_WorldTransformInverse_fn;
    type->interface17.fp_PointToWorldRay = (void(*)(uObject*, ::g::Uno::Float2*, ::g::Fuse::Ray*))GraphicsView__PointToWorldRay_fn;
    type->interface17.fp_WorldToLocalRay = (void(*)(uObject*, uObject*, ::g::Fuse::Ray*, ::g::Fuse::Visual*, ::g::Fuse::Ray*))GraphicsView__WorldToLocalRay_fn;
    type->interface18.fp_get_ProjectionTransform = (void(*)(uObject*, ::g::Uno::Float4x4*))GraphicsView__get_ProjectionTransform_fn;
    type->interface18.fp_get_ViewProjectionTransform = (void(*)(uObject*, ::g::Uno::Float4x4*))GraphicsView__get_ViewProjectionTransform_fn;
    type->interface18.fp_get_ViewOrigin = (void(*)(uObject*, ::g::Uno::Float3*))GraphicsView__get_ViewOrigin_fn;
    type->interface18.fp_get_ViewRange = (void(*)(uObject*, ::g::Uno::Float2*))GraphicsView__get_ViewRange_fn;
    type->interface21.fp_get_PixelsPerPoint = (void(*)(uObject*, float*))GraphicsView__get_PixelsPerPoint_fn;
    type->interface21.fp_get_Size = (void(*)(uObject*, ::g::Uno::Float2*))GraphicsView__get_Size_fn;
    type->interface21.fp_get_PixelSize = (void(*)(uObject*, ::g::Uno::Float2*))GraphicsView__get_PixelSize_fn;
    type->interface21.fp_get_ViewTransform = (void(*)(uObject*, ::g::Uno::Float4x4*))GraphicsView__get_ViewTransform_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public GraphicsView() :196
void GraphicsView__ctor_6_fn(GraphicsView* __this)
{
    __this->ctor_6();
}

// public float2 get_ActualPixelSize() :286
void GraphicsView__get_ActualPixelSize_fn(GraphicsView* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ActualPixelSize();
}

// private Fuse.Elements.ITreeRenderer get_BaseTreeRenderer() :120
void GraphicsView__get_BaseTreeRenderer_fn(GraphicsView* __this, uObject** __retval)
{
    *__retval = __this->BaseTreeRenderer();
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :396
void GraphicsView__CalcRenderBounds_fn(GraphicsView* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret2;
    return *__retval = uPtr((::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret2), ret2))->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize()), void();
}

// public float4 get_Color() :212
void GraphicsView__get_Color_fn(GraphicsView* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :213
void GraphicsView__set_Color_fn(GraphicsView* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// private void DrawFrame() :327
void GraphicsView__DrawFrame_fn(GraphicsView* __this)
{
    __this->DrawFrame();
}

// protected override sealed void DrawWithChildren(Fuse.DrawContext dc) :390
void GraphicsView__DrawWithChildren_fn(GraphicsView* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "DrawWithChildren(Fuse.DrawContext)");

    if (!__this->_inBackground)
        ::g::Fuse::Elements::Element__DrawWithChildren_fn(__this, dc);
}

// private void Fuse.Controls.IProxyHost.Insert(Fuse.Controls.Native.ViewHandle viewHandle) :138
void GraphicsView__FuseControlsIProxyHostInsert_fn(GraphicsView* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Controls.IProxyHost.Insert(Fuse.Controls.Native.ViewHandle)");
    uObject* vh = uAs<uObject*>(__this->NativeView(), ::g::Fuse::Controls::Native::IViewHost_typeof());

    if (vh != NULL)
        ::g::Fuse::Controls::Native::IViewHost::Insert(uInterface(uPtr(vh), ::g::Fuse::Controls::Native::IViewHost_typeof()), viewHandle);
    else
        ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition(__this, uString::Const(" does not have a NativeView: IViewHost")), NULL, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\GraphicsView.ux.uno"), 146, uString::Const("Fuse.Controls.IProxyHost.Insert"));
}

// private void Fuse.Controls.IProxyHost.Remove(Fuse.Controls.Native.ViewHandle viewHandle) :150
void GraphicsView__FuseControlsIProxyHostRemove_fn(GraphicsView* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Controls.IProxyHost.Remove(Fuse.Controls.Native.ViewHandle)");
    uObject* vh = uAs<uObject*>(__this->NativeView(), ::g::Fuse::Controls::Native::IViewHost_typeof());

    if (vh != NULL)
        ::g::Fuse::Controls::Native::IViewHost::Remove(uInterface(uPtr(vh), ::g::Fuse::Controls::Native::IViewHost_typeof()), viewHandle);
    else
        ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition(__this, uString::Const(" does not have a NativeView: IViewHost")), NULL, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\GraphicsView.ux.uno"), 158, uString::Const("Fuse.Controls.IProxyHost.Remove"));
}

// private float4x4 Fuse.Controls.IProxyHost.get_WorldTransformInverse() :135
void GraphicsView__FuseControlsIProxyHostget_WorldTransformInverse_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Controls.IProxyHost.get_WorldTransformInverse()");
    return *__retval = __this->WorldTransformInverse(), void();
}

// private void Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :168
void GraphicsView__FuseElementsITreeRendererBackgroundChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element,Fuse.Drawing.Brush)");
    uPtr(::g::Fuse::Controls::DefaultTreeRenderer::Instance())->BackgroundChanged(e, background);
}

// private void Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :180
void GraphicsView__FuseElementsITreeRendererClipToBoundsChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element,bool)");
    bool clipToBounds_ = *clipToBounds;
    ::g::Fuse::Elements::ITreeRenderer::ClipToBoundsChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, clipToBounds_);
}

// private void Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :182
void GraphicsView__FuseElementsITreeRendererHitTestModeChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element,bool)");
    bool enabled_ = *enabled;
    ::g::Fuse::Elements::ITreeRenderer::HitTestModeChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, enabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :176
void GraphicsView__FuseElementsITreeRendererIsEnabledChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element,bool)");
    bool isEnabled_ = *isEnabled;
    ::g::Fuse::Elements::ITreeRenderer::IsEnabledChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, isEnabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :174
void GraphicsView__FuseElementsITreeRendererIsVisibleChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element,bool)");
    bool isVisible_ = *isVisible;
    ::g::Fuse::Elements::ITreeRenderer::IsVisibleChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, isVisible_);
}

// private bool Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :186
void GraphicsView__FuseElementsITreeRendererMeasure_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element,Fuse.LayoutParams,float2&)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    return *__retval = ::g::Fuse::Elements::ITreeRenderer::Measure(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, lp_, size), void();
}

// private void Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element e, float opacity) :178
void GraphicsView__FuseElementsITreeRendererOpacityChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element,float)");
    float opacity_ = *opacity;
    ::g::Fuse::Elements::ITreeRenderer::OpacityChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, opacity_);
}

// private void Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element e) :172
void GraphicsView__FuseElementsITreeRendererPlaced_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Placed(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element e) :164
void GraphicsView__FuseElementsITreeRendererRooted_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Rooted(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element e) :162
void GraphicsView__FuseElementsITreeRendererRootingStarted_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::RootingStarted(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element e) :170
void GraphicsView__FuseElementsITreeRendererTransformChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::TransformChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element e) :166
void GraphicsView__FuseElementsITreeRendererUnrooted_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Unrooted(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element e, Fuse.Visual[] zorder) :184
void GraphicsView__FuseElementsITreeRendererZOrderChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, uArray* zorder)
{
}

// private Fuse.Elements.ITreeRenderer GetTreeRenderer(Fuse.Elements.Element e) :123
void GraphicsView__GetTreeRenderer_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, uObject** __retval)
{
    *__retval = __this->GetTreeRenderer(e);
}

// private void InitializeUX() :47
void GraphicsView__InitializeUX_fn(GraphicsView* __this)
{
    __this->InitializeUX();
}

// public GraphicsView New() :196
void GraphicsView__New3_fn(GraphicsView** __retval)
{
    *__retval = GraphicsView::New3();
}

// private void OnEnteringBackground(Fuse.Platform.ApplicationState s) :306
void GraphicsView__OnEnteringBackground_fn(GraphicsView* __this, int32_t* s)
{
    __this->OnEnteringBackground(*s);
}

// private void OnEnteringForeground(Fuse.Platform.ApplicationState s) :297
void GraphicsView__OnEnteringForeground_fn(GraphicsView* __this, int32_t* s)
{
    __this->OnEnteringForeground(*s);
}

// protected override sealed void OnInvalidateVisual() :290
void GraphicsView__OnInvalidateVisual_fn(GraphicsView* __this)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "OnInvalidateVisual()");
    ::g::Fuse::Controls::Control__OnInvalidateVisual_fn(__this);
    __this->ScheduleFrame();
}

// private void OnResized(object sender, Uno.EventArgs args) :312
void GraphicsView__OnResized_fn(GraphicsView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnResized(sender, args);
}

// protected override sealed void OnRooted() :223
void GraphicsView__OnRooted_fn(GraphicsView* __this)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
    __this->_dc = ::g::Fuse::DrawContext::New1((uObject*)__this);
    ::g::Fuse::Platform::SystemUI::add_FrameChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)GraphicsView__OnResized_fn, __this));
    __this->rotationHackRedrawCount = 5;
    ::g::Fuse::Platform::Lifecycle::add_EnteringForeground(uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Platform::ApplicationState_typeof(), NULL), (void*)GraphicsView__OnEnteringForeground_fn, __this));
    ::g::Fuse::Platform::Lifecycle::add_EnteringBackground(uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Platform::ApplicationState_typeof(), NULL), (void*)GraphicsView__OnEnteringBackground_fn, __this));
}

// protected override sealed void OnUnrooted() :241
void GraphicsView__OnUnrooted_fn(GraphicsView* __this)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "OnUnrooted()");
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
    ::g::Fuse::Platform::SystemUI::remove_FrameChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)GraphicsView__OnResized_fn, __this));
    __this->_dc = NULL;
    ::g::Fuse::Platform::Lifecycle::remove_EnteringForeground(uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Platform::ApplicationState_typeof(), NULL), (void*)GraphicsView__OnEnteringForeground_fn, __this));
    ::g::Fuse::Platform::Lifecycle::remove_EnteringBackground(uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Platform::ApplicationState_typeof(), NULL), (void*)GraphicsView__OnEnteringBackground_fn, __this));
}

// public float2 get_PixelSize() :282
void GraphicsView__get_PixelSize_fn(GraphicsView* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->PixelSize();
}

// public float get_PixelsPerPoint() :256
void GraphicsView__get_PixelsPerPoint_fn(GraphicsView* __this, float* __retval)
{
    *__retval = __this->PixelsPerPoint();
}

// public Fuse.Ray PointToWorldRay(float2 pixelPos) :409
void GraphicsView__PointToWorldRay_fn(GraphicsView* __this, ::g::Uno::Float2* pixelPos, ::g::Fuse::Ray* __retval)
{
    *__retval = __this->PointToWorldRay(*pixelPos);
}

// public float4x4 get_ProjectionTransform() :401
void GraphicsView__get_ProjectionTransform_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ProjectionTransform();
}

// public float4x4 get_ProjectionTransformInverse() :402
void GraphicsView__get_ProjectionTransformInverse_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ProjectionTransformInverse();
}

// private void ScheduleFrame() :317
void GraphicsView__ScheduleFrame_fn(GraphicsView* __this)
{
    __this->ScheduleFrame();
}

// public new float2 get_Size() :275
void GraphicsView__get_Size_fn(GraphicsView* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Size();
}

// public override sealed Fuse.Elements.ITreeRenderer get_TreeRenderer() :115
void GraphicsView__get_TreeRenderer_fn(GraphicsView* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_TreeRenderer()");
    return *__retval = (uObject*)__this, void();
}

// public float3 get_ViewOrigin() :407
void GraphicsView__get_ViewOrigin_fn(GraphicsView* __this, ::g::Uno::Float3* __retval)
{
    *__retval = __this->ViewOrigin();
}

// public float4x4 get_ViewProjectionTransform() :403
void GraphicsView__get_ViewProjectionTransform_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ViewProjectionTransform();
}

// public float4x4 get_ViewProjectionTransformInverse() :404
void GraphicsView__get_ViewProjectionTransformInverse_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ViewProjectionTransformInverse();
}

// public float2 get_ViewRange() :408
void GraphicsView__get_ViewRange_fn(GraphicsView* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ViewRange();
}

// public float4x4 get_ViewTransform() :406
void GraphicsView__get_ViewTransform_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ViewTransform();
}

// public float4x4 get_ViewTransformInverse() :405
void GraphicsView__get_ViewTransformInverse_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ViewTransformInverse();
}

// public override sealed Fuse.VisualContext get_VisualContext() :110
void GraphicsView__get_VisualContext_fn(GraphicsView* __this, int32_t* __retval)
{
    return *__retval = 1, void();
}

// public Fuse.Ray WorldToLocalRay(Fuse.IViewport world, Fuse.Ray worldRay, Fuse.Visual where) :413
void GraphicsView__WorldToLocalRay_fn(GraphicsView* __this, uObject* world, ::g::Fuse::Ray* worldRay, ::g::Fuse::Visual* where, ::g::Fuse::Ray* __retval)
{
    *__retval = __this->WorldToLocalRay(world, *worldRay, where);
}

// public GraphicsView() [instance] :196
void GraphicsView::ctor_6()
{
    uStackFrame __("Fuse.Controls.GraphicsView", ".ctor()");
    _frustum = ::g::Fuse::OrthographicFrustum::New1();
    _color = ::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 0.0f);
    ctor_5();
    InitializeUX();
    _frustumViewport = ::g::Fuse::FrustumViewport::New1();
    uPtr(_frustumViewport)->Update((uObject*)this, (uObject*)_frustum);
}

// public float2 get_ActualPixelSize() [instance] :286
::g::Uno::Float2 GraphicsView::ActualPixelSize()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ActualPixelSize()");
    return ::g::Uno::Float2__op_Multiply1(ActualSize(), PixelsPerPoint());
}

// private Fuse.Elements.ITreeRenderer get_BaseTreeRenderer() [instance] :120
uObject* GraphicsView::BaseTreeRenderer()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_BaseTreeRenderer()");
    uObject* ret3;
    return (::g::Fuse::Elements::Element__get_TreeRenderer_fn(this, &ret3), ret3);
}

// public float4 get_Color() [instance] :212
::g::Uno::Float4 GraphicsView::Color()
{
    return _color;
}

// public void set_Color(float4 value) [instance] :213
void GraphicsView::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "set_Color(float4)");

    if (::g::Uno::Float4__op_Inequality(_color, value))
    {
        _color = value;
        InvalidateVisual();
    }
}

// private void DrawFrame() [instance] :327
void GraphicsView::DrawFrame()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "DrawFrame()");

    if (_inBackground || !IsRootingCompleted())
        return;

    _frameScheduled = false;
    uObject* gv = uAs<uObject*>(NativeView(), ::g::Fuse::Controls::Native::IGraphicsView_typeof());

    if (gv != NULL)
    {
        uPtr(_frustum)->LocalFromWorld(WorldTransformInverse());
        uPtr(_frustumViewport)->Update((uObject*)this, (uObject*)_frustum);
        ::g::Uno::Int2 size = ::g::Uno::Int2__New2((int32_t)(ActualSize().X * PixelsPerPoint()), (int32_t)(ActualSize().Y * PixelsPerPoint()));

        if (::g::Fuse::Controls::Native::IGraphicsView::BeginDraw(uInterface(uPtr(gv), ::g::Fuse::Controls::Native::IGraphicsView_typeof()), size))
        {
            double t;
            ::g::Fuse::Internal::DrawManager::PrepareDraw(_dc);
            uPtr(_dc)->PushViewport((uObject*)this);
            uPtr(_dc)->PushScissor(::g::Uno::Recti__New1(0, 0, size.X, size.Y));
            uPtr(_dc)->Clear(Color(), 1.0f);
            Draw(_dc);
            uPtr(_dc)->PopScissor();
            uPtr(_dc)->PopViewport();
            ::g::Fuse::Internal::DrawManager::EndDraw(_dc);
            ::g::Fuse::Controls::Native::IGraphicsView::EndDraw(uInterface(uPtr(gv), ::g::Fuse::Controls::Native::IGraphicsView_typeof()));
        }

        if (rotationHackRedrawCount > 0)
        {
            ScheduleFrame();
            rotationHackRedrawCount = (rotationHackRedrawCount - 1);
        }
    }
}

// private Fuse.Elements.ITreeRenderer GetTreeRenderer(Fuse.Elements.Element e) [instance] :123
uObject* GraphicsView::GetTreeRenderer(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "GetTreeRenderer(Fuse.Elements.Element)");

    if (((e == this) && (uPtr(e)->Parent() != NULL)) && (uPtr(uPtr(e)->Parent())->VisualContext() == 2))
        return BaseTreeRenderer();
    else
        return (uObject*)::g::Fuse::Controls::DefaultTreeRenderer::Instance();
}

// private void InitializeUX() [instance] :47
void GraphicsView::InitializeUX()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "InitializeUX()");
    GraphicsView__Template* AndroidAppearance = GraphicsView__Template::New2(this, this);
    GraphicsView__Template1* iOSAppearance = GraphicsView__Template1::New2(this, this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iOSAppearance);
}

// private void OnEnteringBackground(Fuse.Platform.ApplicationState s) [instance] :306
void GraphicsView::OnEnteringBackground(int32_t s)
{
    _inBackground = true;
}

// private void OnEnteringForeground(Fuse.Platform.ApplicationState s) [instance] :297
void GraphicsView::OnEnteringForeground(int32_t s)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "OnEnteringForeground(Fuse.Platform.ApplicationState)");
    rotationHackRedrawCount = 2;
    _inBackground = false;
    _frameScheduled = false;
    ScheduleFrame();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)::g::Fuse::Visual__InvalidateVisual_fn, this), 0, 1);
}

// private void OnResized(object sender, Uno.EventArgs args) [instance] :312
void GraphicsView::OnResized(uObject* sender, ::g::Uno::EventArgs* args)
{
    rotationHackRedrawCount = 5;
}

// public float2 get_PixelSize() [instance] :282
::g::Uno::Float2 GraphicsView::PixelSize()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_PixelSize()");
    return ActualPixelSize();
}

// public float get_PixelsPerPoint() [instance] :256
float GraphicsView::PixelsPerPoint()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_PixelsPerPoint()");

    if (Parent() != NULL)
        return ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(uPtr(Parent())->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/]));
    else
    {
        if (::g::Fuse::AppBase::Current2() == NULL)
            return 1.0f;

        return uPtr(::g::Fuse::AppBase::Current2())->PixelsPerPoint();
    }
}

// public Fuse.Ray PointToWorldRay(float2 pixelPos) [instance] :409
::g::Fuse::Ray GraphicsView::PointToWorldRay(::g::Uno::Float2 pixelPos)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "PointToWorldRay(float2)");
    return ::g::Fuse::ViewportHelpers::PointToWorldRay((uObject*)this, uPtr(_frustumViewport)->ViewProjectionTransformInverse, pixelPos);
}

// public float4x4 get_ProjectionTransform() [instance] :401
::g::Uno::Float4x4 GraphicsView::ProjectionTransform()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ProjectionTransform()");
    return uPtr(_frustumViewport)->ProjectionTransform;
}

// public float4x4 get_ProjectionTransformInverse() [instance] :402
::g::Uno::Float4x4 GraphicsView::ProjectionTransformInverse()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ProjectionTransformInverse()");
    return uPtr(_frustumViewport)->ProjectionTransformInverse;
}

// private void ScheduleFrame() [instance] :317
void GraphicsView::ScheduleFrame()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "ScheduleFrame()");

    if (!_frameScheduled)
    {
        ::g::Fuse::UpdateManager::AddOnceAction(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)GraphicsView__DrawFrame_fn, this), 2);
        _frameScheduled = true;
    }
}

// public new float2 get_Size() [instance] :275
::g::Uno::Float2 GraphicsView::Size()
{
    return ActualSize();
}

// public float3 get_ViewOrigin() [instance] :407
::g::Uno::Float3 GraphicsView::ViewOrigin()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewOrigin()");
    return uPtr(_frustum)->GetWorldPosition((uObject*)this);
}

// public float4x4 get_ViewProjectionTransform() [instance] :403
::g::Uno::Float4x4 GraphicsView::ViewProjectionTransform()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewProjectionTransform()");
    return uPtr(_frustumViewport)->ViewProjectionTransform;
}

// public float4x4 get_ViewProjectionTransformInverse() [instance] :404
::g::Uno::Float4x4 GraphicsView::ViewProjectionTransformInverse()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewProjectionTransformInverse()");
    return uPtr(_frustumViewport)->ViewProjectionTransformInverse;
}

// public float2 get_ViewRange() [instance] :408
::g::Uno::Float2 GraphicsView::ViewRange()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewRange()");
    return uPtr(_frustum)->GetDepthRange((uObject*)this);
}

// public float4x4 get_ViewTransform() [instance] :406
::g::Uno::Float4x4 GraphicsView::ViewTransform()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewTransform()");
    return uPtr(_frustumViewport)->ViewTransform;
}

// public float4x4 get_ViewTransformInverse() [instance] :405
::g::Uno::Float4x4 GraphicsView::ViewTransformInverse()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewTransformInverse()");
    return uPtr(_frustumViewport)->ViewTransformInverse;
}

// public Fuse.Ray WorldToLocalRay(Fuse.IViewport world, Fuse.Ray worldRay, Fuse.Visual where) [instance] :413
::g::Fuse::Ray GraphicsView::WorldToLocalRay(uObject* world, ::g::Fuse::Ray worldRay, ::g::Fuse::Visual* where)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "WorldToLocalRay(Fuse.IViewport,Fuse.Ray,Fuse.Visual)");
    return ::g::Fuse::ViewportHelpers::WorldToLocalRay((uObject*)this, world, worldRay, where);
}

// public GraphicsView New() [static] :196
GraphicsView* GraphicsView::New3()
{
    GraphicsView* obj1 = (GraphicsView*)uNew(GraphicsView_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\Grid.uno
// ---------------------------------------------------------------------------------------

// public sealed class Grid :59
// {
static void Grid_build(uType* type)
{
    ::STRINGS[20] = uString::Const("Grid.ColumnData has been deprecated. Use Grid.Columns instead");
    ::STRINGS[21] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\Grid.uno");
    ::STRINGS[22] = uString::Const("get_ColumnData");
    ::STRINGS[23] = uString::Const("set_ColumnData");
    ::STRINGS[24] = uString::Const("Grid.RowData has been deprecated. Use Grid.Rows instead");
    ::STRINGS[25] = uString::Const("get_RowData");
    ::STRINGS[26] = uString::Const("set_RowData");
    type->SetDependencies(
        ::g::Fuse::Layouts::GridLayout_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Layouts::GridLayout_typeof(), offsetof(Grid, _gridLayout), 0);
    type->Reflection.SetFunctions(37,
        new uFunction("get_CellSpacing", NULL, (void*)Grid__get_CellSpacing_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_CellSpacing", NULL, (void*)Grid__set_CellSpacing_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_ChildOrder", NULL, (void*)Grid__get_ChildOrder_fn, 0, false, ::g::Fuse::Layouts::GridChildOrder_typeof(), 0),
        new uFunction("set_ChildOrder", NULL, (void*)Grid__set_ChildOrder_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::GridChildOrder_typeof()),
        new uFunction("get_ColumnCount", NULL, (void*)Grid__get_ColumnCount_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_ColumnCount", NULL, (void*)Grid__set_ColumnCount_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_ColumnData", NULL, (void*)Grid__get_ColumnData_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_ColumnData", NULL, (void*)Grid__set_ColumnData_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_ColumnList", NULL, (void*)Grid__get_ColumnList_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Layouts::Column_typeof(), NULL), 0),
        new uFunction("get_Columns", NULL, (void*)Grid__get_Columns_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Columns", NULL, (void*)Grid__set_Columns_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_ContentAlignment", NULL, (void*)Grid__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)Grid__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_DefaultColumn", NULL, (void*)Grid__get_DefaultColumn_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_DefaultColumn", NULL, (void*)Grid__set_DefaultColumn_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_DefaultRow", NULL, (void*)Grid__get_DefaultRow_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_DefaultRow", NULL, (void*)Grid__set_DefaultRow_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("GetColumn", NULL, (void*)Grid__GetColumn_fn, 0, true, ::g::Uno::Int_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("GetColumnSpan", NULL, (void*)Grid__GetColumnSpan_fn, 0, true, ::g::Uno::Int_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("GetRow", NULL, (void*)Grid__GetRow_fn, 0, true, ::g::Uno::Int_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("GetRowSpan", NULL, (void*)Grid__GetRowSpan_fn, 0, true, ::g::Uno::Int_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction(".ctor", NULL, (void*)Grid__New4_fn, 0, true, type, 0),
        new uFunction("ResetColumn", NULL, (void*)Grid__ResetColumn_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("ResetColumnSpan", NULL, (void*)Grid__ResetColumnSpan_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("ResetRow", NULL, (void*)Grid__ResetRow_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("ResetRowSpan", NULL, (void*)Grid__ResetRowSpan_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("get_RowCount", NULL, (void*)Grid__get_RowCount_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_RowCount", NULL, (void*)Grid__set_RowCount_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_RowData", NULL, (void*)Grid__get_RowData_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_RowData", NULL, (void*)Grid__set_RowData_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_RowList", NULL, (void*)Grid__get_RowList_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Layouts::Row_typeof(), NULL), 0),
        new uFunction("get_Rows", NULL, (void*)Grid__get_Rows_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Rows", NULL, (void*)Grid__set_Rows_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("SetColumn", NULL, (void*)Grid__SetColumn_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Uno::Int_typeof()),
        new uFunction("SetColumnSpan", NULL, (void*)Grid__SetColumnSpan_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Uno::Int_typeof()),
        new uFunction("SetRow", NULL, (void*)Grid__SetRow_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Uno::Int_typeof()),
        new uFunction("SetRowSpan", NULL, (void*)Grid__SetRowSpan_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Uno::Int_typeof()));
}

::g::Fuse::Controls::Panel_type* Grid_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(Grid);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.Grid", options);
    type->fp_build_ = Grid_build;
    type->fp_ctor_ = (void*)Grid__New4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Grid() :316
void Grid__ctor_7_fn(Grid* __this)
{
    __this->ctor_7();
}

// public float get_CellSpacing() :298
void Grid__get_CellSpacing_fn(Grid* __this, float* __retval)
{
    *__retval = __this->CellSpacing();
}

// public void set_CellSpacing(float value) :299
void Grid__set_CellSpacing_fn(Grid* __this, float* value)
{
    __this->CellSpacing(*value);
}

// public Fuse.Layouts.GridChildOrder get_ChildOrder() :312
void Grid__get_ChildOrder_fn(Grid* __this, int32_t* __retval)
{
    *__retval = __this->ChildOrder();
}

// public void set_ChildOrder(Fuse.Layouts.GridChildOrder value) :313
void Grid__set_ChildOrder_fn(Grid* __this, int32_t* value)
{
    __this->ChildOrder(*value);
}

// public int get_ColumnCount() :278
void Grid__get_ColumnCount_fn(Grid* __this, int32_t* __retval)
{
    *__retval = __this->ColumnCount();
}

// public void set_ColumnCount(int value) :279
void Grid__set_ColumnCount_fn(Grid* __this, int32_t* value)
{
    __this->ColumnCount(*value);
}

// public string get_ColumnData() :260
void Grid__get_ColumnData_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->ColumnData();
}

// public void set_ColumnData(string value) :265
void Grid__set_ColumnData_fn(Grid* __this, uString* value)
{
    __this->ColumnData(value);
}

// public Uno.Collections.IList<Fuse.Layouts.Column> get_ColumnList() :227
void Grid__get_ColumnList_fn(Grid* __this, uObject** __retval)
{
    *__retval = __this->ColumnList();
}

// public string get_Columns() :253
void Grid__get_Columns_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->Columns();
}

// public void set_Columns(string value) :254
void Grid__set_Columns_fn(Grid* __this, uString* value)
{
    __this->Columns(value);
}

// public Fuse.Elements.Alignment get_ContentAlignment() :305
void Grid__get_ContentAlignment_fn(Grid* __this, int32_t* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :306
void Grid__set_ContentAlignment_fn(Grid* __this, int32_t* value)
{
    __this->ContentAlignment(*value);
}

// public string get_DefaultColumn() :290
void Grid__get_DefaultColumn_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->DefaultColumn();
}

// public void set_DefaultColumn(string value) :291
void Grid__set_DefaultColumn_fn(Grid* __this, uString* value)
{
    __this->DefaultColumn(value);
}

// public string get_DefaultRow() :216
void Grid__get_DefaultRow_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->DefaultRow();
}

// public void set_DefaultRow(string value) :217
void Grid__set_DefaultRow_fn(Grid* __this, uString* value)
{
    __this->DefaultRow(value);
}

// public static int GetColumn(Fuse.Elements.Element elm) :114
void Grid__GetColumn_fn(::g::Fuse::Elements::Element* elm, int32_t* __retval)
{
    *__retval = Grid::GetColumn(elm);
}

// public static int GetColumnSpan(Fuse.Elements.Element elm) :133
void Grid__GetColumnSpan_fn(::g::Fuse::Elements::Element* elm, int32_t* __retval)
{
    *__retval = Grid::GetColumnSpan(elm);
}

// public static int GetRow(Fuse.Elements.Element elm) :73
void Grid__GetRow_fn(::g::Fuse::Elements::Element* elm, int32_t* __retval)
{
    *__retval = Grid::GetRow(elm);
}

// public static int GetRowSpan(Fuse.Elements.Element elm) :92
void Grid__GetRowSpan_fn(::g::Fuse::Elements::Element* elm, int32_t* __retval)
{
    *__retval = Grid::GetRowSpan(elm);
}

// public Grid New() :316
void Grid__New4_fn(Grid** __retval)
{
    *__retval = Grid::New4();
}

// public static void ResetColumn(Fuse.Elements.Element elm) :120
void Grid__ResetColumn_fn(::g::Fuse::Elements::Element* elm)
{
    Grid::ResetColumn(elm);
}

// public static void ResetColumnSpan(Fuse.Elements.Element elm) :139
void Grid__ResetColumnSpan_fn(::g::Fuse::Elements::Element* elm)
{
    Grid::ResetColumnSpan(elm);
}

// public static void ResetRow(Fuse.Elements.Element elm) :79
void Grid__ResetRow_fn(::g::Fuse::Elements::Element* elm)
{
    Grid::ResetRow(elm);
}

// public static void ResetRowSpan(Fuse.Elements.Element elm) :98
void Grid__ResetRowSpan_fn(::g::Fuse::Elements::Element* elm)
{
    Grid::ResetRowSpan(elm);
}

// public int get_RowCount() :202
void Grid__get_RowCount_fn(Grid* __this, int32_t* __retval)
{
    *__retval = __this->RowCount();
}

// public void set_RowCount(int value) :203
void Grid__set_RowCount_fn(Grid* __this, int32_t* value)
{
    __this->RowCount(*value);
}

// public string get_RowData() :184
void Grid__get_RowData_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->RowData();
}

// public void set_RowData(string value) :189
void Grid__set_RowData_fn(Grid* __this, uString* value)
{
    __this->RowData(value);
}

// public Uno.Collections.IList<Fuse.Layouts.Row> get_RowList() :151
void Grid__get_RowList_fn(Grid* __this, uObject** __retval)
{
    *__retval = __this->RowList();
}

// public string get_Rows() :177
void Grid__get_Rows_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->Rows();
}

// public void set_Rows(string value) :178
void Grid__set_Rows_fn(Grid* __this, uString* value)
{
    __this->Rows(value);
}

// public static void SetColumn(Fuse.Elements.Element elm, int col) :108
void Grid__SetColumn_fn(::g::Fuse::Elements::Element* elm, int32_t* col)
{
    Grid::SetColumn(elm, *col);
}

// public static void SetColumnSpan(Fuse.Elements.Element elm, int span) :127
void Grid__SetColumnSpan_fn(::g::Fuse::Elements::Element* elm, int32_t* span)
{
    Grid::SetColumnSpan(elm, *span);
}

// public static void SetRow(Fuse.Elements.Element elm, int row) :67
void Grid__SetRow_fn(::g::Fuse::Elements::Element* elm, int32_t* row)
{
    Grid::SetRow(elm, *row);
}

// public static void SetRowSpan(Fuse.Elements.Element elm, int span) :86
void Grid__SetRowSpan_fn(::g::Fuse::Elements::Element* elm, int32_t* span)
{
    Grid::SetRowSpan(elm, *span);
}

// public Grid() [instance] :316
void Grid::ctor_7()
{
    uStackFrame __("Fuse.Controls.Grid", ".ctor()");
    ctor_6();
    Layout(_gridLayout = ::g::Fuse::Layouts::GridLayout::New2());
}

// public float get_CellSpacing() [instance] :298
float Grid::CellSpacing()
{
    uStackFrame __("Fuse.Controls.Grid", "get_CellSpacing()");
    return uPtr(_gridLayout)->CellSpacing();
}

// public void set_CellSpacing(float value) [instance] :299
void Grid::CellSpacing(float value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_CellSpacing(float)");
    uPtr(_gridLayout)->CellSpacing(value);
}

// public Fuse.Layouts.GridChildOrder get_ChildOrder() [instance] :312
int32_t Grid::ChildOrder()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ChildOrder()");
    return uPtr(_gridLayout)->ChildOrder();
}

// public void set_ChildOrder(Fuse.Layouts.GridChildOrder value) [instance] :313
void Grid::ChildOrder(int32_t value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_ChildOrder(Fuse.Layouts.GridChildOrder)");
    uPtr(_gridLayout)->ChildOrder(value);
}

// public int get_ColumnCount() [instance] :278
int32_t Grid::ColumnCount()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ColumnCount()");
    return uPtr(_gridLayout)->ColumnCount();
}

// public void set_ColumnCount(int value) [instance] :279
void Grid::ColumnCount(int32_t value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_ColumnCount(int)");
    uPtr(_gridLayout)->ColumnCount(value);
}

// public string get_ColumnData() [instance] :260
uString* Grid::ColumnData()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ColumnData()");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[20/*"Grid.Column...*/], this, ::STRINGS[21/*"C:\\Users\\...*/], 262, ::STRINGS[22/*"get_ColumnD...*/]);
    return uPtr(_gridLayout)->Columns();
}

// public void set_ColumnData(string value) [instance] :265
void Grid::ColumnData(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_ColumnData(string)");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[20/*"Grid.Column...*/], this, ::STRINGS[21/*"C:\\Users\\...*/], 267, ::STRINGS[23/*"set_ColumnD...*/]);
    uPtr(_gridLayout)->Columns(value);
}

// public Uno.Collections.IList<Fuse.Layouts.Column> get_ColumnList() [instance] :227
uObject* Grid::ColumnList()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ColumnList()");
    return uPtr(_gridLayout)->ColumnList();
}

// public string get_Columns() [instance] :253
uString* Grid::Columns()
{
    uStackFrame __("Fuse.Controls.Grid", "get_Columns()");
    return uPtr(_gridLayout)->Columns();
}

// public void set_Columns(string value) [instance] :254
void Grid::Columns(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_Columns(string)");
    uPtr(_gridLayout)->Columns(value);
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :305
int32_t Grid::ContentAlignment()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ContentAlignment()");
    return uPtr(_gridLayout)->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :306
void Grid::ContentAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_ContentAlignment(Fuse.Elements.Alignment)");
    uPtr(_gridLayout)->ContentAlignment(value);
}

// public string get_DefaultColumn() [instance] :290
uString* Grid::DefaultColumn()
{
    uStackFrame __("Fuse.Controls.Grid", "get_DefaultColumn()");
    return uPtr(_gridLayout)->DefaultColumn();
}

// public void set_DefaultColumn(string value) [instance] :291
void Grid::DefaultColumn(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_DefaultColumn(string)");
    uPtr(_gridLayout)->DefaultColumn(value);
}

// public string get_DefaultRow() [instance] :216
uString* Grid::DefaultRow()
{
    uStackFrame __("Fuse.Controls.Grid", "get_DefaultRow()");
    return uPtr(_gridLayout)->DefaultRow();
}

// public void set_DefaultRow(string value) [instance] :217
void Grid::DefaultRow(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_DefaultRow(string)");
    uPtr(_gridLayout)->DefaultRow(value);
}

// public int get_RowCount() [instance] :202
int32_t Grid::RowCount()
{
    uStackFrame __("Fuse.Controls.Grid", "get_RowCount()");
    return uPtr(_gridLayout)->RowCount();
}

// public void set_RowCount(int value) [instance] :203
void Grid::RowCount(int32_t value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_RowCount(int)");
    uPtr(_gridLayout)->RowCount(value);
}

// public string get_RowData() [instance] :184
uString* Grid::RowData()
{
    uStackFrame __("Fuse.Controls.Grid", "get_RowData()");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[24/*"Grid.RowDat...*/], this, ::STRINGS[21/*"C:\\Users\\...*/], 186, ::STRINGS[25/*"get_RowData"*/]);
    return uPtr(_gridLayout)->Rows();
}

// public void set_RowData(string value) [instance] :189
void Grid::RowData(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_RowData(string)");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[24/*"Grid.RowDat...*/], this, ::STRINGS[21/*"C:\\Users\\...*/], 191, ::STRINGS[26/*"set_RowData"*/]);
    uPtr(_gridLayout)->Rows(value);
}

// public Uno.Collections.IList<Fuse.Layouts.Row> get_RowList() [instance] :151
uObject* Grid::RowList()
{
    uStackFrame __("Fuse.Controls.Grid", "get_RowList()");
    return uPtr(_gridLayout)->RowList();
}

// public string get_Rows() [instance] :177
uString* Grid::Rows()
{
    uStackFrame __("Fuse.Controls.Grid", "get_Rows()");
    return uPtr(_gridLayout)->Rows();
}

// public void set_Rows(string value) [instance] :178
void Grid::Rows(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_Rows(string)");
    uPtr(_gridLayout)->Rows(value);
}

// public static int GetColumn(Fuse.Elements.Element elm) [static] :114
int32_t Grid::GetColumn(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "GetColumn(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::GridLayout::GetColumn(elm);
}

// public static int GetColumnSpan(Fuse.Elements.Element elm) [static] :133
int32_t Grid::GetColumnSpan(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "GetColumnSpan(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::GridLayout::GetColumnSpan(elm);
}

// public static int GetRow(Fuse.Elements.Element elm) [static] :73
int32_t Grid::GetRow(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "GetRow(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::GridLayout::GetRow(elm);
}

// public static int GetRowSpan(Fuse.Elements.Element elm) [static] :92
int32_t Grid::GetRowSpan(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "GetRowSpan(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::GridLayout::GetRowSpan(elm);
}

// public Grid New() [static] :316
Grid* Grid::New4()
{
    Grid* obj1 = (Grid*)uNew(Grid_typeof());
    obj1->ctor_7();
    return obj1;
}

// public static void ResetColumn(Fuse.Elements.Element elm) [static] :120
void Grid::ResetColumn(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "ResetColumn(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::GridLayout::ResetColumn(elm);
}

// public static void ResetColumnSpan(Fuse.Elements.Element elm) [static] :139
void Grid::ResetColumnSpan(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "ResetColumnSpan(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::GridLayout::ResetColumnSpan(elm);
}

// public static void ResetRow(Fuse.Elements.Element elm) [static] :79
void Grid::ResetRow(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "ResetRow(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::GridLayout::ResetRow(elm);
}

// public static void ResetRowSpan(Fuse.Elements.Element elm) [static] :98
void Grid::ResetRowSpan(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "ResetRowSpan(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::GridLayout::ResetRowSpan(elm);
}

// public static void SetColumn(Fuse.Elements.Element elm, int col) [static] :108
void Grid::SetColumn(::g::Fuse::Elements::Element* elm, int32_t col)
{
    uStackFrame __("Fuse.Controls.Grid", "SetColumn(Fuse.Elements.Element,int)");
    ::g::Fuse::Layouts::GridLayout::SetColumn(elm, col);
}

// public static void SetColumnSpan(Fuse.Elements.Element elm, int span) [static] :127
void Grid::SetColumnSpan(::g::Fuse::Elements::Element* elm, int32_t span)
{
    uStackFrame __("Fuse.Controls.Grid", "SetColumnSpan(Fuse.Elements.Element,int)");
    ::g::Fuse::Layouts::GridLayout::SetColumnSpan(elm, span);
}

// public static void SetRow(Fuse.Elements.Element elm, int row) [static] :67
void Grid::SetRow(::g::Fuse::Elements::Element* elm, int32_t row)
{
    uStackFrame __("Fuse.Controls.Grid", "SetRow(Fuse.Elements.Element,int)");
    ::g::Fuse::Layouts::GridLayout::SetRow(elm, row);
}

// public static void SetRowSpan(Fuse.Elements.Element elm, int span) [static] :86
void Grid::SetRowSpan(::g::Fuse::Elements::Element* elm, int32_t span)
{
    uStackFrame __("Fuse.Controls.Grid", "SetRowSpan(Fuse.Elements.Element,int)");
    ::g::Fuse::Layouts::GridLayout::SetRowSpan(elm, span);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Curve.uno
// ---------------------------------------------------------------------------------------------------

// private enum CurvePoint.HasFlags :67
uEnumType* CurvePoint__HasFlags_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.CurvePoint.HasFlags", ::g::Uno::Int_typeof(), 7);
    type->SetLiterals(
        "None", 0LL,
        "X", 1LL,
        "Y", 2LL,
        "TangentIn", 4LL,
        "TangentOut", 8LL,
        "ControlIn", 16LL,
        "ControlOut", 32LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\WebView.uno
// -------------------------------------------------------------------------------------------

// public sealed class HTML :64
// {
static void HTML_build(uType* type)
{
    ::TYPES[27] = ::g::Fuse::Controls::ISourceReceiver_typeof();
    type->SetFields(2,
        ::TYPES[27/*Fuse.Controls.ISourceReceiver*/], offsetof(HTML, Receiver), 0);
    type->Reflection.SetFunctions(3,
        new uFunction(".ctor", NULL, (void*)HTML__New2_fn, 0, true, type, 0),
        new uFunction("get_Source", NULL, (void*)HTML__get_Source_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Source", NULL, (void*)HTML__set_Source_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

uType* HTML_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::PropertyObject_typeof();
    options.FieldCount = 3;
    options.ObjectSize = sizeof(HTML);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.HTML", options);
    type->fp_build_ = HTML_build;
    type->fp_ctor_ = (void*)HTML__New2_fn;
    return type;
}

// public generated HTML() :64
void HTML__ctor_1_fn(HTML* __this)
{
    __this->ctor_1();
}

// public generated HTML New() :64
void HTML__New2_fn(HTML** __retval)
{
    *__retval = HTML::New2();
}

// public string get_Source() :71
void HTML__get_Source_fn(HTML* __this, uString** __retval)
{
    *__retval = __this->Source();
}

// public void set_Source(string value) :75
void HTML__set_Source_fn(HTML* __this, uString* value)
{
    __this->Source(value);
}

// public generated HTML() [instance] :64
void HTML::ctor_1()
{
    ctor_();
}

// public string get_Source() [instance] :71
uString* HTML::Source()
{
    uStackFrame __("Fuse.Controls.HTML", "get_Source()");
    return ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(Receiver), ::TYPES[27/*Fuse.Controls.ISourceReceiver*/]));
}

// public void set_Source(string value) [instance] :75
void HTML::Source(uString* value)
{
    uStackFrame __("Fuse.Controls.HTML", "set_Source(string)");
    ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(Receiver), ::TYPES[27/*Fuse.Controls.ISourceReceiver*/]), value);
}

// public generated HTML New() [static] :64
HTML* HTML::New2()
{
    HTML* obj1 = (HTML*)uNew(HTML_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.DatePicker\1.7.2\DatePicker.uno
// -------------------------------------------------------------------------------------------------

// internal abstract interface IDatePickerView :14
// {
uInterfaceType* IDatePickerView_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.IDatePickerView", 0, 0);
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Image.ScriptClass.uno
// --------------------------------------------------------------------------------------------------------

// public partial sealed class Image :8
// {
// static Image() :10
static void Image__cctor_3_fn(uType* __type)
{
    ::g::Fuse::Scripting::ScriptClass_typeof()->Init();
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[29/*Fuse.Scripting.ScriptMember[]*/], 2, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[30/*Fuse.Scripting.ScriptMethod<Fuse.Controls.Image>*/], ::STRINGS[27/*"reload"*/], uDelegate::New(::TYPES[31/*Uno.Action<Fuse.Controls.Image>*/], (void*)Image__reload_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[30/*Fuse.Scripting.ScriptMethod<Fuse.Controls.Image>*/], ::STRINGS[28/*"retry"*/], uDelegate::New(::TYPES[31/*Uno.Action<Fuse.Controls.Image>*/], (void*)Image__retry_fn))));
}

static void Image_build(uType* type)
{
    ::STRINGS[27] = uString::Const("reload");
    ::STRINGS[28] = uString::Const("retry");
    ::STRINGS[29] = uString::Const("unknown failure");
    ::STRINGS[19] = uString::Const("");
    ::TYPES[28] = ::g::Uno::Type_typeof();
    ::TYPES[29] = ::g::Fuse::Scripting::ScriptMember_typeof()->Array();
    ::TYPES[30] = ::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(type, NULL);
    ::TYPES[31] = ::g::Uno::Action1_typeof()->MakeType(type, NULL);
    ::TYPES[24] = ::g::Uno::EventHandler_typeof();
    ::TYPES[32] = ::g::Fuse::Resources::ImageSourceErrorHandler_typeof();
    ::TYPES[33] = ::g::Fuse::Controls::Native::IImageView_typeof();
    ::TYPES[34] = ::g::Fuse::ICommonViewport_typeof();
    type->SetDependencies(
        ::g::Fuse::Triggers::BusyTask_typeof(),
        ::g::Uno::EventArgs_typeof(),
        ::g::Fuse::Controls::ImageElementDraw_typeof(),
        ::g::Fuse::Elements::Internal::Scale9Rectangle_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Image_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Image_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Image_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Image_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Image_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Image_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Image_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Image_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(Image_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(Image_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Image_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Image_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Image_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Image_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Image_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Image_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Image_type, interface16),
        ::g::Fuse::Gestures::ISizeConstraint_typeof(), offsetof(Image_type, interface17));
    type->SetFields(110,
        ::g::Fuse::Internal::ImageContainer_typeof(), offsetof(Image, _container), 0,
        ::g::Fuse::Resources::ImageSourceErrorArgs_typeof(), offsetof(Image, _lastError), 0,
        ::g::Uno::Float4_typeof(), offsetof(Image, _color), 0,
        ::g::Uno::Float4_typeof(), offsetof(Image, _scale9Margin), 0,
        ::g::Uno::Bool_typeof(), offsetof(Image, _hasScale9Margin), 0,
        ::g::Fuse::Triggers::BusyTask_typeof(), offsetof(Image, _loadingTask), 0,
        ::g::Uno::Bool_typeof(), offsetof(Image, _markedFailed), 0,
        ::g::Uno::Bool_typeof(), offsetof(Image, _hasContentBox), 0,
        ::g::Uno::Float4_typeof(), offsetof(Image, _contentBox), 0,
        ::g::Uno::Float2_typeof(), offsetof(Image, _origin), 0,
        ::g::Uno::Float2_typeof(), offsetof(Image, _scale), 0,
        ::g::Uno::Float2_typeof(), offsetof(Image, _drawOrigin), 0,
        ::g::Uno::Float2_typeof(), offsetof(Image, _drawSize), 0,
        ::g::Uno::Float4_typeof(), offsetof(Image, _uvClip), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(Image, ParamChanged1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(Image, SourceChanged1), 0);
    type->Reflection.SetFunctions(32,
        new uFunction("get_Color", NULL, (void*)Image__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)Image__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_ContentAlignment", NULL, (void*)Image__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)Image__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_Density", NULL, (void*)Image__get_Density_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Density", NULL, (void*)Image__set_Density_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("add_Error", NULL, (void*)Image__add_Error_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Fuse.Resources.ImageSourceErrorHandler*/]),
        new uFunction("remove_Error", NULL, (void*)Image__remove_Error_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Fuse.Resources.ImageSourceErrorHandler*/]),
        new uFunction("get_File", NULL, (void*)Image__get_File_fn, 0, false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, (void*)Image__set_File_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction("get_Files", NULL, (void*)Image__get_Files_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Uno::UX::FileSource_typeof(), NULL), 0),
        new uFunction("get_MemoryPolicy", NULL, (void*)Image__get_MemoryPolicy_fn, 0, false, ::g::Fuse::Resources::MemoryPolicy_typeof(), 0),
        new uFunction("set_MemoryPolicy", NULL, (void*)Image__set_MemoryPolicy_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Resources::MemoryPolicy_typeof()),
        new uFunction(".ctor", NULL, (void*)Image__New3_fn, 0, true, type, 0),
        new uFunction("add_ParamChanged", NULL, (void*)Image__add_ParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_ParamChanged", NULL, (void*)Image__remove_ParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("get_ResampleMode", NULL, (void*)Image__get_ResampleMode_fn, 0, false, ::g::Fuse::Drawing::ResampleMode_typeof(), 0),
        new uFunction("set_ResampleMode", NULL, (void*)Image__set_ResampleMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::ResampleMode_typeof()),
        new uFunction("get_Scale9Margin", NULL, (void*)Image__get_Scale9Margin_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Scale9Margin", NULL, (void*)Image__set_Scale9Margin_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Source", NULL, (void*)Image__get_Source_fn, 0, false, ::g::Fuse::Resources::ImageSource_typeof(), 0),
        new uFunction("set_Source", NULL, (void*)Image__set_Source_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Resources::ImageSource_typeof()),
        new uFunction("add_SourceChanged", NULL, (void*)Image__add_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_SourceChanged", NULL, (void*)Image__remove_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("get_StretchDirection", NULL, (void*)Image__get_StretchDirection_fn, 0, false, ::g::Fuse::Elements::StretchDirection_typeof(), 0),
        new uFunction("set_StretchDirection", NULL, (void*)Image__set_StretchDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchDirection_typeof()),
        new uFunction("get_StretchMode", NULL, (void*)Image__get_StretchMode_fn, 0, false, ::g::Fuse::Elements::StretchMode_typeof(), 0),
        new uFunction("set_StretchMode", NULL, (void*)Image__set_StretchMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchMode_typeof()),
        new uFunction("get_StretchSizing", NULL, (void*)Image__get_StretchSizing_fn, 0, false, ::g::Fuse::Elements::StretchSizing_typeof(), 0),
        new uFunction("set_StretchSizing", NULL, (void*)Image__set_StretchSizing_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchSizing_typeof()),
        new uFunction("get_Url", NULL, (void*)Image__get_Url_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Url", NULL, (void*)Image__set_Url_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

Image_type* Image_typeof()
{
    static uSStrong<Image_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 126;
    options.InterfaceCount = 18;
    options.DependencyCount = 4;
    options.ObjectSize = sizeof(Image);
    options.TypeSize = sizeof(Image_type);
    type = (Image_type*)uClassType::New("Fuse.Controls.Image", options);
    type->fp_build_ = Image_build;
    type->fp_ctor_ = (void*)Image__New3_fn;
    type->fp_cctor_ = Image__cctor_3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))Image__ArrangePaddingBox_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Image__CalcRenderBounds_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))Image__CreateNativeView_fn;
    type->fp_DrawVisual = (void(*)(::g::Fuse::Controls::Control*, ::g::Fuse::DrawContext*))Image__DrawVisual_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))Image__FastTrackDrawWithOpacity_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Image__GetContentSize_fn;
    type->fp_get_HitTestLocalVisualBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Image__get_HitTestLocalVisualBounds_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Image__OnHitTestLocalVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Image__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Image__OnUnrooted_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))Image__PushPropertiesToNativeView_fn;
    type->interface17.fp_get_ContentSize = (void(*)(uObject*, ::g::Uno::Float2*))Image__FuseGesturesISizeConstraintget_ContentSize_fn;
    type->interface17.fp_get_TrimSize = (void(*)(uObject*, ::g::Uno::Float2*))Image__FuseGesturesISizeConstraintget_TrimSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Image() :8
void Image__ctor_6_fn(Image* __this)
{
    __this->ctor_6();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :45
void Image__ArrangePaddingBox_fn(Image* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.Image", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Controls::LayoutControl__ArrangePaddingBox_fn(__this, uCRef(lp_));
    ::g::Uno::Float2 size = lp_.Size();
    uPtr(uPtr(__this->Container())->Sizing)->snapToPixels = __this->SnapToPixels();
    uPtr(uPtr(__this->Container())->Sizing)->absoluteZoom = __this->AbsoluteZoom();
    ::g::Uno::Float2 contentDesiredSize = __this->GetSize();
    __this->_scale = uPtr(uPtr(__this->Container())->Sizing)->CalcScale(size, contentDesiredSize);
    __this->_origin = uPtr(uPtr(__this->Container())->Sizing)->CalcOrigin(size, ::g::Uno::Float2__op_Multiply2(contentDesiredSize, __this->_scale));
    __this->_drawOrigin = __this->_origin;
    __this->_drawSize = ::g::Uno::Float2__op_Multiply2(contentDesiredSize, __this->_scale);
    __this->_uvClip = uPtr(uPtr(__this->Container())->Sizing)->CalcClip(size, &__this->_drawOrigin, &__this->_drawSize);
    __this->InvalidateRenderBounds();
    __this->SetContentBox(::g::Uno::Float4__New7(__this->_drawOrigin, ::g::Uno::Float2__op_Addition2(__this->_drawOrigin, __this->_drawSize)));
    __this->UpdateNativeImageTransform();
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :167
void Image__CalcRenderBounds_fn(Image* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Image", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret10;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret10), ret10);
    b = uPtr(b)->AddRect(__this->_drawOrigin, ::g::Uno::Float2__op_Addition2(__this->_drawOrigin, __this->_drawSize));
    return *__retval = b, void();
}

// public float4 get_Color() :198
void Image__get_Color_fn(Image* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :199
void Image__set_Color_fn(Image* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// internal Fuse.Internal.ImageContainer get_Container() :86
void Image__get_Container_fn(Image* __this, ::g::Fuse::Internal::ImageContainer** __retval)
{
    *__retval = __this->Container();
}

// public Fuse.Elements.Alignment get_ContentAlignment() :321
void Image__get_ContentAlignment_fn(Image* __this, int32_t* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :322
void Image__set_ContentAlignment_fn(Image* __this, int32_t* value)
{
    __this->ContentAlignment(*value);
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :382
void Image__CreateNativeView_fn(Image* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Image", "CreateNativeView()");
    return *__retval = (uObject*)::g::Fuse::Controls::Native::Android::ImageView::New5(), void();
}

// public float get_Density() :167
void Image__get_Density_fn(Image* __this, float* __retval)
{
    *__retval = __this->Density();
}

// public void set_Density(float value) :168
void Image__set_Density_fn(Image* __this, float* value)
{
    __this->Density(*value);
}

// protected override sealed void DrawVisual(Fuse.DrawContext dc) :85
void Image__DrawVisual_fn(Image* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Image", "DrawVisual(Fuse.DrawContext)");
    __this->DrawVisualColor(dc, __this->Color());
}

// private void DrawVisualColor(Fuse.DrawContext dc, float4 color) :124
void Image__DrawVisualColor_fn(Image* __this, ::g::Fuse::DrawContext* dc, ::g::Uno::Float4* color)
{
    __this->DrawVisualColor(dc, *color);
}

// public void add_Error(Fuse.Resources.ImageSourceErrorHandler value) :275
void Image__add_Error_fn(Image* __this, uDelegate* value)
{
    __this->add_Error(value);
}

// public void remove_Error(Fuse.Resources.ImageSourceErrorHandler value) :276
void Image__remove_Error_fn(Image* __this, uDelegate* value)
{
    __this->remove_Error(value);
}

// protected override sealed bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :76
void Image__FastTrackDrawWithOpacity_fn(Image* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    uStackFrame __("Fuse.Controls.Image", "FastTrackDrawWithOpacity(Fuse.DrawContext)");
    ::g::Uno::Float4 ind1;
    bool ret11;

    if (!(::g::Fuse::Controls::LayoutControl__FastTrackDrawWithOpacity_fn(__this, dc, &ret11), ret11))
        return *__retval = false, void();

    __this->DrawVisualColor(dc, ::g::Uno::Float4__New8((ind1 = __this->Color(), ::g::Uno::Float3__New2(ind1.X, ind1.Y, ind1.Z)), __this->Color().W * __this->Opacity()));
    return *__retval = true, void();
}

// public Uno.UX.FileSource get_File() :147
void Image__get_File_fn(Image* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public void set_File(Uno.UX.FileSource value) :148
void Image__set_File_fn(Image* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// public Uno.Collections.IList<Uno.UX.FileSource> get_Files() :177
void Image__get_Files_fn(Image* __this, uObject** __retval)
{
    *__retval = __this->Files();
}

// private float2 Fuse.Gestures.ISizeConstraint.get_ContentSize() :346
void Image__FuseGesturesISizeConstraintget_ContentSize_fn(Image* __this, ::g::Uno::Float2* __retval)
{
    ::g::Uno::Float4 ind5;
    ::g::Uno::Float4 ind6;
    return *__retval = __this->_hasContentBox ? ::g::Uno::Float2__op_Subtraction2((ind5 = __this->_contentBox, ::g::Uno::Float2__New2(ind5.Z, ind5.W)), (ind6 = __this->_contentBox, ::g::Uno::Float2__New2(ind6.X, ind6.Y))) : __this->ActualSize(), void();
}

// private float2 Fuse.Gestures.ISizeConstraint.get_TrimSize() :353
void Image__FuseGesturesISizeConstraintget_TrimSize_fn(Image* __this, ::g::Uno::Float2* __retval)
{
    ::g::Uno::Float4 ind7;
    ::g::Uno::Float4 ind8;
    return *__retval = __this->_hasContentBox ? ::g::Uno::Float2__op_Subtraction2(__this->ActualSize(), ::g::Uno::Float2__op_Subtraction2((ind7 = __this->_contentBox, ::g::Uno::Float2__New2(ind7.Z, ind7.W)), (ind8 = __this->_contentBox, ::g::Uno::Float2__New2(ind8.X, ind8.Y)))) : ::g::Uno::Float2__New1(0.0f), void();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :32
void Image__GetContentSize_fn(Image* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Image", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 ret12;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 b = (::g::Fuse::Controls::LayoutControl__GetContentSize_fn(__this, uCRef(lp_), &ret12), ret12);
    uPtr(uPtr(__this->Container())->Sizing)->snapToPixels = __this->SnapToPixels();
    uPtr(uPtr(__this->Container())->Sizing)->absoluteZoom = __this->AbsoluteZoom();
    ::g::Uno::Float2 r = uPtr(uPtr(__this->Container())->Sizing)->ExpandFillSize(__this->GetSize(), lp_);
    b = ::g::Uno::Math::Max3(r, b);
    return *__retval = b, void();
}

// private float2 GetSize() :17
void Image__GetSize_fn(Image* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->GetSize();
}

// protected override sealed Fuse.VisualBounds get_HitTestLocalVisualBounds() :159
void Image__get_HitTestLocalVisualBounds_fn(Image* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Image", "get_HitTestLocalVisualBounds()");
    ::g::Fuse::VisualBounds* ret13;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__get_HitTestLocalVisualBounds_fn(__this, &ret13), ret13);
    b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());
    return *__retval = b, void();
}

// private Fuse.Controls.Native.IImageView get_ImageView() :379
void Image__get_ImageView_fn(Image* __this, uObject** __retval)
{
    *__retval = __this->ImageView();
}

// public Fuse.Resources.MemoryPolicy get_MemoryPolicy() :289
void Image__get_MemoryPolicy_fn(Image* __this, ::g::Fuse::Resources::MemoryPolicy** __retval)
{
    *__retval = __this->MemoryPolicy();
}

// public void set_MemoryPolicy(Fuse.Resources.MemoryPolicy value) :290
void Image__set_MemoryPolicy_fn(Image* __this, ::g::Fuse::Resources::MemoryPolicy* value)
{
    __this->MemoryPolicy(value);
}

// public generated Image New() :8
void Image__New3_fn(Image** __retval)
{
    *__retval = Image::New3();
}

// private void OnContainerParamChanged(object s, object a) :116
void Image__OnContainerParamChanged_fn(Image* __this, uObject* s, uObject* a)
{
    __this->OnContainerParamChanged(s, a);
}

// private void OnContainerSourceChanged(object s, object a) :120
void Image__OnContainerSourceChanged_fn(Image* __this, uObject* s, uObject* a)
{
    __this->OnContainerSourceChanged(s, a);
}

// private void OnContainerSourceError(object s, Fuse.Resources.ImageSourceErrorArgs args) :126
void Image__OnContainerSourceError_fn(Image* __this, uObject* s, ::g::Fuse::Resources::ImageSourceErrorArgs* args)
{
    __this->OnContainerSourceError(s, args);
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :147
void Image__OnHitTestLocalVisual_fn(Image* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Image", "OnHitTestLocalVisual(Fuse.HitTestContext)");
    ::g::Uno::Float2 lp = uPtr(htc)->LocalPoint();

    if ((((lp.X >= __this->_drawOrigin.X) && (lp.X <= (__this->_drawOrigin.X + __this->_drawSize.X))) && (lp.Y >= __this->_drawOrigin.Y)) && (lp.Y <= (__this->_drawOrigin.Y + __this->_drawSize.Y)))
        uPtr(htc)->Hit(__this);

    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);
}

// private void OnIsVisibleChanged(object s, object a) :135
void Image__OnIsVisibleChanged1_fn(Image* __this, uObject* s, uObject* a)
{
    __this->OnIsVisibleChanged1(s, a);
}

// private void OnParamChanged() :235
void Image__OnParamChanged_fn(Image* __this)
{
    __this->OnParamChanged();
}

// protected override sealed void OnRooted() :89
void Image__OnRooted_fn(Image* __this)
{
    uStackFrame __("Fuse.Controls.Image", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
    __this->_markedFailed = false;
    __this->AddDrawCost(1.0);
    __this->add_IsVisibleChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)Image__OnIsVisibleChanged1_fn, __this));
    uPtr(__this->_container)->add_ParamChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)Image__OnContainerParamChanged_fn, __this));
    uPtr(__this->_container)->add_SourceChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)Image__OnContainerSourceChanged_fn, __this));
    uPtr(__this->_container)->add_SourceError(uDelegate::New(::TYPES[32/*Fuse.Resources.ImageSourceErrorHandler*/], (void*)Image__OnContainerSourceError_fn, __this));
    uPtr(__this->_container)->IsRooted(true);
}

// private void OnSourceChanged() :250
void Image__OnSourceChanged_fn(Image* __this)
{
    __this->OnSourceChanged();
}

// protected override sealed void OnUnrooted() :103
void Image__OnUnrooted_fn(Image* __this)
{
    uStackFrame __("Fuse.Controls.Image", "OnUnrooted()");
    __this->remove_IsVisibleChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)Image__OnIsVisibleChanged1_fn, __this));
    uPtr(__this->_container)->IsRooted(false);
    uPtr(__this->_container)->remove_ParamChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)Image__OnContainerParamChanged_fn, __this));
    uPtr(__this->_container)->remove_SourceChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)Image__OnContainerSourceChanged_fn, __this));
    uPtr(__this->_container)->remove_SourceError(uDelegate::New(::TYPES[32/*Fuse.Resources.ImageSourceErrorHandler*/], (void*)Image__OnContainerSourceError_fn, __this));
    __this->RemoveDrawCost(1.0);
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// public generated void add_ParamChanged(Uno.EventHandler value) :234
void Image__add_ParamChanged_fn(Image* __this, uDelegate* value)
{
    __this->add_ParamChanged(value);
}

// public generated void remove_ParamChanged(Uno.EventHandler value) :234
void Image__remove_ParamChanged_fn(Image* __this, uDelegate* value)
{
    __this->remove_ParamChanged(value);
}

// protected override sealed void PushPropertiesToNativeView() :360
void Image__PushPropertiesToNativeView_fn(Image* __this)
{
    uStackFrame __("Fuse.Controls.Image", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Control__PushPropertiesToNativeView_fn(__this);
    __this->UpdateNativeImageSource();
    __this->UpdateNativeImageTransform();
}

// private static void reload(Fuse.Controls.Image img) :22
void Image__reload_fn(Image* img)
{
    Image::reload(img);
}

// public Fuse.Drawing.ResampleMode get_ResampleMode() :212
void Image__get_ResampleMode_fn(Image* __this, int32_t* __retval)
{
    *__retval = __this->ResampleMode();
}

// public void set_ResampleMode(Fuse.Drawing.ResampleMode value) :213
void Image__set_ResampleMode_fn(Image* __this, int32_t* value)
{
    __this->ResampleMode(*value);
}

// private static void retry(Fuse.Controls.Image img) :34
void Image__retry_fn(Image* img)
{
    Image::retry(img);
}

// public float4 get_Scale9Margin() :221
void Image__get_Scale9Margin_fn(Image* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Scale9Margin();
}

// public void set_Scale9Margin(float4 value) :222
void Image__set_Scale9Margin_fn(Image* __this, ::g::Uno::Float4* value)
{
    __this->Scale9Margin(*value);
}

// internal void SetContentBox(float4 contentBox) :338
void Image__SetContentBox_fn(Image* __this, ::g::Uno::Float4* contentBox)
{
    __this->SetContentBox(*contentBox);
}

// public Fuse.Resources.ImageSource get_Source() :186
void Image__get_Source_fn(Image* __this, ::g::Fuse::Resources::ImageSource** __retval)
{
    *__retval = __this->Source();
}

// public void set_Source(Fuse.Resources.ImageSource value) :187
void Image__set_Source_fn(Image* __this, ::g::Fuse::Resources::ImageSource* value)
{
    __this->Source(value);
}

// public generated void add_SourceChanged(Uno.EventHandler value) :248
void Image__add_SourceChanged_fn(Image* __this, uDelegate* value)
{
    __this->add_SourceChanged(value);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) :248
void Image__remove_SourceChanged_fn(Image* __this, uDelegate* value)
{
    __this->remove_SourceChanged(value);
}

// public Fuse.Elements.StretchDirection get_StretchDirection() :303
void Image__get_StretchDirection_fn(Image* __this, int32_t* __retval)
{
    *__retval = __this->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) :304
void Image__set_StretchDirection_fn(Image* __this, int32_t* value)
{
    __this->StretchDirection(*value);
}

// public Fuse.Elements.StretchMode get_StretchMode() :296
void Image__get_StretchMode_fn(Image* __this, int32_t* __retval)
{
    *__retval = __this->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) :297
void Image__set_StretchMode_fn(Image* __this, int32_t* value)
{
    __this->StretchMode(*value);
}

// public Fuse.Elements.StretchSizing get_StretchSizing() :314
void Image__get_StretchSizing_fn(Image* __this, int32_t* __retval)
{
    *__retval = __this->StretchSizing();
}

// public void set_StretchSizing(Fuse.Elements.StretchSizing value) :315
void Image__set_StretchSizing_fn(Image* __this, int32_t* value)
{
    __this->StretchSizing(*value);
}

// internal static float3x3 TransformFromImageOrientation(Fuse.Resources.Exif.ImageOrientation orientation) :90
void Image__TransformFromImageOrientation_fn(int32_t* orientation, ::g::Uno::Float3x3* __retval)
{
    *__retval = Image::TransformFromImageOrientation(*orientation);
}

// private void UpdateNativeImageSource() :367
void Image__UpdateNativeImageSource_fn(Image* __this)
{
    __this->UpdateNativeImageSource();
}

// private void UpdateNativeImageTransform() :67
void Image__UpdateNativeImageTransform_fn(Image* __this)
{
    __this->UpdateNativeImageTransform();
}

// public string get_Url() :158
void Image__get_Url_fn(Image* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public void set_Url(string value) :159
void Image__set_Url_fn(Image* __this, uString* value)
{
    __this->Url(value);
}

// public generated Image() [instance] :8
void Image::ctor_6()
{
    _container = ::g::Fuse::Internal::ImageContainer::New1(NULL);
    _color = ::g::Uno::Float4__New1(1.0f);
    _scale9Margin = ::g::Uno::Float4__New1(10.0f);
    ctor_5();
}

// public float4 get_Color() [instance] :198
::g::Uno::Float4 Image::Color()
{
    return _color;
}

// public void set_Color(float4 value) [instance] :199
void Image::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Color(float4)");

    if (::g::Uno::Float4__op_Inequality(_color, value))
    {
        _color = value;
        OnParamChanged();
    }
}

// internal Fuse.Internal.ImageContainer get_Container() [instance] :86
::g::Fuse::Internal::ImageContainer* Image::Container()
{
    return _container;
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :321
int32_t Image::ContentAlignment()
{
    uStackFrame __("Fuse.Controls.Image", "get_ContentAlignment()");
    return uPtr(_container)->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :322
void Image::ContentAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.Image", "set_ContentAlignment(Fuse.Elements.Alignment)");
    uPtr(_container)->ContentAlignment(value);
}

// public float get_Density() [instance] :167
float Image::Density()
{
    uStackFrame __("Fuse.Controls.Image", "get_Density()");
    return uPtr(_container)->Density();
}

// public void set_Density(float value) [instance] :168
void Image::Density(float value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Density(float)");
    uPtr(_container)->Density(value);
}

// private void DrawVisualColor(Fuse.DrawContext dc, float4 color) [instance] :124
void Image::DrawVisualColor(::g::Fuse::DrawContext* dc, ::g::Uno::Float4 color)
{
    uStackFrame __("Fuse.Controls.Image", "DrawVisualColor(Fuse.DrawContext,float4)");
    ::g::Uno::Float4 ind2;
    ::g::Uno::Float4 ind3;
    ::g::Uno::Float4 ind4;
    ::g::Uno::Graphics::Texture2D* tex = uPtr(Container())->GetTexture();

    if (tex == NULL)
        return;

    if (uPtr(Container())->StretchMode() == 4)
        uPtr(::g::Fuse::Elements::Internal::Scale9Rectangle::Impl())->Draw(dc, this, ActualSize(), GetSize(), tex, color, Scale9Margin());
    else
    {
        ::g::Uno::Float3x3 imageTransform = Image::TransformFromImageOrientation(uPtr(Source())->Orientation());
        uPtr(::g::Fuse::Controls::ImageElementDraw::Impl())->Draw(dc, this, _drawOrigin, _drawSize, (ind2 = _uvClip, ::g::Uno::Float2__New2(ind2.X, ind2.Y)), ::g::Uno::Float2__op_Subtraction2((ind3 = _uvClip, ::g::Uno::Float2__New2(ind3.Z, ind3.W)), (ind4 = _uvClip, ::g::Uno::Float2__New2(ind4.X, ind4.Y))), imageTransform, tex, uPtr(Container())->ResampleMode(), color);
    }
}

// public void add_Error(Fuse.Resources.ImageSourceErrorHandler value) [instance] :275
void Image::add_Error(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "add_Error(Fuse.Resources.ImageSourceErrorHandler)");
    uPtr(_container)->add_SourceError(value);
}

// public void remove_Error(Fuse.Resources.ImageSourceErrorHandler value) [instance] :276
void Image::remove_Error(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "remove_Error(Fuse.Resources.ImageSourceErrorHandler)");
    uPtr(_container)->remove_SourceError(value);
}

// public Uno.UX.FileSource get_File() [instance] :147
::g::Uno::UX::FileSource* Image::File()
{
    uStackFrame __("Fuse.Controls.Image", "get_File()");
    return uPtr(_container)->File();
}

// public void set_File(Uno.UX.FileSource value) [instance] :148
void Image::File(::g::Uno::UX::FileSource* value)
{
    uStackFrame __("Fuse.Controls.Image", "set_File(Uno.UX.FileSource)");
    uPtr(_container)->File(value);
}

// public Uno.Collections.IList<Uno.UX.FileSource> get_Files() [instance] :177
uObject* Image::Files()
{
    uStackFrame __("Fuse.Controls.Image", "get_Files()");
    return uPtr(_container)->Files();
}

// private float2 GetSize() [instance] :17
::g::Uno::Float2 Image::GetSize()
{
    uStackFrame __("Fuse.Controls.Image", "GetSize()");

    if (Source() == NULL)
        return ::g::Uno::Float2__New1(0.0f);

    ::g::Uno::Float2 size = uPtr(Source())->Size();
    ::g::Uno::Int2 pixelSize = uPtr(Source())->PixelSize();

    if ((uPtr(Source())->Orientation() & 1) == 1)
    {
        size = ::g::Uno::Float2__New2(uPtr(Source())->Size().Y, uPtr(Source())->Size().X);
        pixelSize = ::g::Uno::Int2__New2(uPtr(Source())->PixelSize().Y, uPtr(Source())->PixelSize().X);
    }

    return uPtr(uPtr(Container())->Sizing)->CalcContentSize(size, pixelSize);
}

// private Fuse.Controls.Native.IImageView get_ImageView() [instance] :379
uObject* Image::ImageView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[33/*Fuse.Controls.Native.IImageView*/]);
}

// public Fuse.Resources.MemoryPolicy get_MemoryPolicy() [instance] :289
::g::Fuse::Resources::MemoryPolicy* Image::MemoryPolicy()
{
    uStackFrame __("Fuse.Controls.Image", "get_MemoryPolicy()");
    return uPtr(_container)->MemoryPolicy();
}

// public void set_MemoryPolicy(Fuse.Resources.MemoryPolicy value) [instance] :290
void Image::MemoryPolicy(::g::Fuse::Resources::MemoryPolicy* value)
{
    uStackFrame __("Fuse.Controls.Image", "set_MemoryPolicy(Fuse.Resources.MemoryPolicy)");
    uPtr(_container)->MemoryPolicy(value);
}

// private void OnContainerParamChanged(object s, object a) [instance] :116
void Image::OnContainerParamChanged(uObject* s, uObject* a)
{
    uStackFrame __("Fuse.Controls.Image", "OnContainerParamChanged(object,object)");
    OnParamChanged();
}

// private void OnContainerSourceChanged(object s, object a) [instance] :120
void Image::OnContainerSourceChanged(uObject* s, uObject* a)
{
    uStackFrame __("Fuse.Controls.Image", "OnContainerSourceChanged(object,object)");
    OnSourceChanged();
}

// private void OnContainerSourceError(object s, Fuse.Resources.ImageSourceErrorArgs args) [instance] :126
void Image::OnContainerSourceError(uObject* s, ::g::Fuse::Resources::ImageSourceErrorArgs* args)
{
    uStackFrame __("Fuse.Controls.Image", "OnContainerSourceError(object,Fuse.Resources.ImageSourceErrorArgs)");
    _lastError = args;

    if (!_markedFailed && (uPtr(uPtr(_container)->Source())->State() == 3))
        OnSourceChanged();
}

// private void OnIsVisibleChanged(object s, object a) [instance] :135
void Image::OnIsVisibleChanged1(uObject* s, uObject* a)
{
    uStackFrame __("Fuse.Controls.Image", "OnIsVisibleChanged(object,object)");
    uPtr(_container)->IsVisible(IsVisible());
}

// private void OnParamChanged() [instance] :235
void Image::OnParamChanged()
{
    uStackFrame __("Fuse.Controls.Image", "OnParamChanged()");

    if (::g::Uno::Delegate::op_Inequality(ParamChanged1, NULL))
        uPtr(ParamChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());

    InvalidateLayout(2);
    InvalidateRenderBounds();
    UpdateNativeImageSource();
}

// private void OnSourceChanged() [instance] :250
void Image::OnSourceChanged()
{
    uStackFrame __("Fuse.Controls.Image", "OnSourceChanged()");

    if (uPtr(_container)->Source() != NULL)
    {
        _markedFailed = (uPtr(uPtr(_container)->Source())->State() == 3);
        bool isLoading = uPtr(uPtr(_container)->Source())->State() == 2;
        ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_loadingTask, _markedFailed ? 16 : isLoading ? 1 : 0, _markedFailed ? (_lastError == NULL) ? ::STRINGS[29/*"unknown fai...*/] : (uString*)uPtr(_lastError)->Reason : ::STRINGS[19/*""*/]);
    }

    if (::g::Uno::Delegate::op_Inequality(SourceChanged1, NULL))
        uPtr(SourceChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());

    InvalidateLayout(2);
    InvalidateRenderBounds();
    UpdateNativeImageSource();
}

// public generated void add_ParamChanged(Uno.EventHandler value) [instance] :234
void Image::add_ParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "add_ParamChanged(Uno.EventHandler)");
    ParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ParamChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_ParamChanged(Uno.EventHandler value) [instance] :234
void Image::remove_ParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "remove_ParamChanged(Uno.EventHandler)");
    ParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ParamChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public Fuse.Drawing.ResampleMode get_ResampleMode() [instance] :212
int32_t Image::ResampleMode()
{
    uStackFrame __("Fuse.Controls.Image", "get_ResampleMode()");
    return uPtr(_container)->ResampleMode();
}

// public void set_ResampleMode(Fuse.Drawing.ResampleMode value) [instance] :213
void Image::ResampleMode(int32_t value)
{
    uStackFrame __("Fuse.Controls.Image", "set_ResampleMode(Fuse.Drawing.ResampleMode)");
    uPtr(_container)->ResampleMode(value);
}

// public float4 get_Scale9Margin() [instance] :221
::g::Uno::Float4 Image::Scale9Margin()
{
    return _scale9Margin;
}

// public void set_Scale9Margin(float4 value) [instance] :222
void Image::Scale9Margin(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Scale9Margin(float4)");

    if (!_hasScale9Margin || ::g::Uno::Float4__op_Inequality(_scale9Margin, value))
    {
        _scale9Margin = value;
        _hasScale9Margin = true;
        OnParamChanged();
    }
}

// internal void SetContentBox(float4 contentBox) [instance] :338
void Image::SetContentBox(::g::Uno::Float4 contentBox)
{
    _hasContentBox = true;
    _contentBox = contentBox;
}

// public Fuse.Resources.ImageSource get_Source() [instance] :186
::g::Fuse::Resources::ImageSource* Image::Source()
{
    uStackFrame __("Fuse.Controls.Image", "get_Source()");
    return uPtr(_container)->Source();
}

// public void set_Source(Fuse.Resources.ImageSource value) [instance] :187
void Image::Source(::g::Fuse::Resources::ImageSource* value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Source(Fuse.Resources.ImageSource)");
    uPtr(_container)->Source(value);
}

// public generated void add_SourceChanged(Uno.EventHandler value) [instance] :248
void Image::add_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "add_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(SourceChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) [instance] :248
void Image::remove_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "remove_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(SourceChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public Fuse.Elements.StretchDirection get_StretchDirection() [instance] :303
int32_t Image::StretchDirection()
{
    uStackFrame __("Fuse.Controls.Image", "get_StretchDirection()");
    return uPtr(_container)->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) [instance] :304
void Image::StretchDirection(int32_t value)
{
    uStackFrame __("Fuse.Controls.Image", "set_StretchDirection(Fuse.Elements.StretchDirection)");
    uPtr(_container)->StretchDirection(value);
}

// public Fuse.Elements.StretchMode get_StretchMode() [instance] :296
int32_t Image::StretchMode()
{
    uStackFrame __("Fuse.Controls.Image", "get_StretchMode()");
    return uPtr(_container)->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) [instance] :297
void Image::StretchMode(int32_t value)
{
    uStackFrame __("Fuse.Controls.Image", "set_StretchMode(Fuse.Elements.StretchMode)");
    uPtr(_container)->StretchMode(value);
}

// public Fuse.Elements.StretchSizing get_StretchSizing() [instance] :314
int32_t Image::StretchSizing()
{
    uStackFrame __("Fuse.Controls.Image", "get_StretchSizing()");
    return uPtr(_container)->StretchSizing();
}

// public void set_StretchSizing(Fuse.Elements.StretchSizing value) [instance] :315
void Image::StretchSizing(int32_t value)
{
    uStackFrame __("Fuse.Controls.Image", "set_StretchSizing(Fuse.Elements.StretchSizing)");
    uPtr(_container)->StretchSizing(value);
}

// private void UpdateNativeImageSource() [instance] :367
void Image::UpdateNativeImageSource()
{
    uStackFrame __("Fuse.Controls.Image", "UpdateNativeImageSource()");
    uObject* imageView = ImageView();

    if (imageView != NULL)
    {
        ::g::Fuse::Controls::Native::IImageView::ImageSource(uInterface(uPtr(imageView), ::TYPES[33/*Fuse.Controls.Native.IImageView*/]), Source());
        ::g::Fuse::Controls::Native::IImageView::TintColor(uInterface(uPtr(ImageView()), ::TYPES[33/*Fuse.Controls.Native.IImageView*/]), Color());
    }
}

// private void UpdateNativeImageTransform() [instance] :67
void Image::UpdateNativeImageTransform()
{
    uStackFrame __("Fuse.Controls.Image", "UpdateNativeImageTransform()");
    uObject* imageView = ImageView();

    if (imageView != NULL)
        ::g::Fuse::Controls::Native::IImageView::UpdateImageTransform(uInterface(uPtr(imageView), ::TYPES[33/*Fuse.Controls.Native.IImageView*/]), ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/])), _origin, _scale, _drawSize);
}

// public string get_Url() [instance] :158
uString* Image::Url()
{
    uStackFrame __("Fuse.Controls.Image", "get_Url()");
    return uPtr(_container)->Url();
}

// public void set_Url(string value) [instance] :159
void Image::Url(uString* value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Url(string)");
    uPtr(_container)->Url(value);
}

// public generated Image New() [static] :8
Image* Image::New3()
{
    Image* obj9 = (Image*)uNew(Image_typeof());
    obj9->ctor_6();
    return obj9;
}

// private static void reload(Fuse.Controls.Image img) [static] :22
void Image::reload(Image* img)
{
    uStackFrame __("Fuse.Controls.Image", "reload(Fuse.Controls.Image)");
    Image_typeof()->Init();
    ::g::Fuse::Resources::ImageSource* src = uPtr(img)->Source();

    if (src != NULL)
        uPtr(src)->Reload();
}

// private static void retry(Fuse.Controls.Image img) [static] :34
void Image::retry(Image* img)
{
    uStackFrame __("Fuse.Controls.Image", "retry(Fuse.Controls.Image)");
    Image_typeof()->Init();
    ::g::Fuse::Resources::ImageSource* src = uPtr(img)->Source();

    if ((src != NULL) && (uPtr(src)->State() == 3))
        uPtr(src)->Reload();
}

// internal static float3x3 TransformFromImageOrientation(Fuse.Resources.Exif.ImageOrientation orientation) [static] :90
::g::Uno::Float3x3 Image::TransformFromImageOrientation(int32_t orientation)
{
    Image_typeof()->Init();
    ::g::Uno::Float3x3 transform = ::g::Uno::Float3x3__Identity();

    if ((orientation & 4) == 4)
    {
        transform.M22 = -1.0f;
        transform.M32 = 1.0f;
    }

    if ((orientation & 2) == 2)
    {
        transform.M11 = -1.0f;
        transform.M22 = -transform.M22;
        transform.M31 = 1.0f;
        transform.M32 = (1.0f - transform.M32);
    }

    if ((orientation & 1) == 1)
    {
        transform.M12 = -transform.M11;
        transform.M11 = 0.0f;
        transform.M21 = transform.M22;
        transform.M22 = 0.0f;
        float tmp = transform.M31;
        transform.M31 = transform.M32;
        transform.M32 = (1.0f - tmp);
    }

    return transform;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Image.Visual.uno
// ---------------------------------------------------------------------------------------------------

// internal sealed class ImageElementDraw :175
// {
// static generated ImageElementDraw() :175
static void ImageElementDraw__cctor__fn(uType* __type)
{
    ImageElementDraw::Impl_ = ImageElementDraw::New1();
}

static void ImageElementDraw_build(uType* type)
{
    ::STRINGS[30] = uString::Const("Invalid enum value");
    ::STRINGS[31] = uString::Const("resampleMode");
    type->SetDependencies(
        ::g::Fuse::Common::Blitter_typeof());
    type->SetFields(0,
        type, (uintptr_t)&ImageElementDraw::Impl_, uFieldFlagsStatic);
}

uType* ImageElementDraw_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(ImageElementDraw);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.ImageElementDraw", options);
    type->fp_build_ = ImageElementDraw_build;
    type->fp_ctor_ = (void*)ImageElementDraw__New1_fn;
    type->fp_cctor_ = ImageElementDraw__cctor__fn;
    return type;
}

// public generated ImageElementDraw() :175
void ImageElementDraw__ctor__fn(ImageElementDraw* __this)
{
    __this->ctor_();
}

// public void Draw(Fuse.DrawContext dc, Fuse.Visual element, float2 offset, float2 size, float2 uvPosition, float2 uvSize, float3x3 imageTransform, texture2D tex, Fuse.Drawing.ResampleMode resampleMode, float4 Color) :191
void ImageElementDraw__Draw_fn(ImageElementDraw* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Visual* element, ::g::Uno::Float2* offset, ::g::Uno::Float2* size, ::g::Uno::Float2* uvPosition, ::g::Uno::Float2* uvSize, ::g::Uno::Float3x3* imageTransform, ::g::Uno::Graphics::Texture2D* tex, int32_t* resampleMode, ::g::Uno::Float4* Color)
{
    __this->Draw(dc, element, *offset, *size, *uvPosition, *uvSize, *imageTransform, tex, *resampleMode, *Color);
}

// private Uno.Graphics.SamplerState GetSamplerState(Fuse.Drawing.ResampleMode resampleMode) :178
void ImageElementDraw__GetSamplerState_fn(ImageElementDraw* __this, int32_t* resampleMode, ::g::Uno::Graphics::SamplerState* __retval)
{
    *__retval = __this->GetSamplerState(*resampleMode);
}

// public generated ImageElementDraw New() :175
void ImageElementDraw__New1_fn(ImageElementDraw** __retval)
{
    *__retval = ImageElementDraw::New1();
}

uSStrong<ImageElementDraw*> ImageElementDraw::Impl_;

// public generated ImageElementDraw() [instance] :175
void ImageElementDraw::ctor_()
{
}

// public void Draw(Fuse.DrawContext dc, Fuse.Visual element, float2 offset, float2 size, float2 uvPosition, float2 uvSize, float3x3 imageTransform, texture2D tex, Fuse.Drawing.ResampleMode resampleMode, float4 Color) [instance] :191
void ImageElementDraw::Draw(::g::Fuse::DrawContext* dc, ::g::Fuse::Visual* element, ::g::Uno::Float2 offset, ::g::Uno::Float2 size, ::g::Uno::Float2 uvPosition, ::g::Uno::Float2 uvSize, ::g::Uno::Float3x3 imageTransform, ::g::Uno::Graphics::Texture2D* tex, int32_t resampleMode, ::g::Uno::Float4 Color)
{
    uStackFrame __("Fuse.Controls.ImageElementDraw", "Draw(Fuse.DrawContext,Fuse.Visual,float2,float2,float2,float2,float3x3,texture2D,Fuse.Drawing.ResampleMode,float4)");
    uPtr(::g::Fuse::Common::Blitter::Singleton())->Blit(tex, GetSamplerState(resampleMode), false, ::g::Uno::Rect__New2(uvPosition, uvSize), imageTransform, ::g::Uno::Rect__New2(offset, size), uPtr(dc)->GetLocalToClipTransform(element), Color, 0);
}

// private Uno.Graphics.SamplerState GetSamplerState(Fuse.Drawing.ResampleMode resampleMode) [instance] :178
::g::Uno::Graphics::SamplerState ImageElementDraw::GetSamplerState(int32_t resampleMode)
{
    uStackFrame __("Fuse.Controls.ImageElementDraw", "GetSamplerState(Fuse.Drawing.ResampleMode)");

    switch (resampleMode)
    {
        case 0:
            return ::g::Uno::Graphics::SamplerState__NearestClamp();
        case 1:
            return ::g::Uno::Graphics::SamplerState__LinearClamp();
        case 2:
            return ::g::Uno::Graphics::SamplerState__TrilinearClamp();
        default:
            U_THROW(::g::Uno::ArgumentException::New5(::STRINGS[30/*"Invalid enu...*/], ::STRINGS[31/*"resampleMode"*/]));
    }
}

// public generated ImageElementDraw New() [static] :175
ImageElementDraw* ImageElementDraw::New1()
{
    ImageElementDraw* obj1 = (ImageElementDraw*)uNew(ImageElementDraw_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\TreeRendererPanel.uno
// ----------------------------------------------------------------------------------------------------

// internal abstract interface INativeViewRoot :9
// {
uInterfaceType* INativeViewRoot_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.INativeViewRoot", 0, 0);
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\NativeViewHost.uno
// -------------------------------------------------------------------------------------------------

// public enum NativeViewHost.InitialState :63
uEnumType* NativeViewHost__InitialState_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NativeViewHost.InitialState", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Enabled", 0LL,
        "Disabled", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\MobileTextEdit.uno
// ------------------------------------------------------------------------------------------------------------------

// private sealed class MobileTextEdit.iOSTemplate :193
// {
static void MobileTextEdit__iOSTemplate_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    ::STRINGS[33] = uString::Const("Cannot instantiate iOS templates on non-ios platforms!");
    type->SetFields(2,
        ::g::Fuse::Controls::MobileTextEdit_typeof(), offsetof(MobileTextEdit__iOSTemplate, _parent), uFieldFlagsWeak);
}

::g::Uno::UX::Template_type* MobileTextEdit__iOSTemplate_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 3;
    options.ObjectSize = sizeof(MobileTextEdit__iOSTemplate);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.MobileTextEdit.iOSTemplate", options);
    type->fp_build_ = MobileTextEdit__iOSTemplate_build;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))MobileTextEdit__iOSTemplate__New1_fn;
    return type;
}

// public iOSTemplate(Fuse.Controls.MobileTextEdit parent) :198
void MobileTextEdit__iOSTemplate__ctor_1_fn(MobileTextEdit__iOSTemplate* __this, ::g::Fuse::Controls::MobileTextEdit* parent)
{
    __this->ctor_1(parent);
}

// public override sealed extern object New() :215
void MobileTextEdit__iOSTemplate__New1_fn(MobileTextEdit__iOSTemplate* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit.iOSTemplate", "New()");
    U_THROW(::g::Uno::Exception::New2(::STRINGS[33/*"Cannot inst...*/]));
}

// public iOSTemplate New(Fuse.Controls.MobileTextEdit parent) :198
void MobileTextEdit__iOSTemplate__New2_fn(::g::Fuse::Controls::MobileTextEdit* parent, MobileTextEdit__iOSTemplate** __retval)
{
    *__retval = MobileTextEdit__iOSTemplate::New2(parent);
}

// public iOSTemplate(Fuse.Controls.MobileTextEdit parent) [instance] :198
void MobileTextEdit__iOSTemplate::ctor_1(::g::Fuse::Controls::MobileTextEdit* parent)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    _parent = parent;
}

// public iOSTemplate New(Fuse.Controls.MobileTextEdit parent) [static] :198
MobileTextEdit__iOSTemplate* MobileTextEdit__iOSTemplate::New2(::g::Fuse::Controls::MobileTextEdit* parent)
{
    MobileTextEdit__iOSTemplate* obj1 = (MobileTextEdit__iOSTemplate*)uNew(MobileTextEdit__iOSTemplate_typeof());
    obj1->ctor_1(parent);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\GraphicsView.ux.uno
// --------------------------------------------------------------------------------------------------

// internal abstract interface IProxyHost :64
// {
uInterfaceType* IProxyHost_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.IProxyHost", 0, 0);
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\GraphicsView.ux.uno
// --------------------------------------------------------------------------------------------------

// internal static class IProxyHostExtensions :71
// {
static void IProxyHostExtensions_build(uType* type)
{
    ::TYPES[35] = ::g::Fuse::Controls::IProxyHost_typeof();
}

uClassType* IProxyHostExtensions_typeof()
{
    static uSStrong<uClassType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.TypeSize = sizeof(uClassType);
    type = uClassType::New("Fuse.Controls.IProxyHostExtensions", options);
    type->fp_build_ = IProxyHostExtensions_build;
    return type;
}

// public static Fuse.Controls.IProxyHost FindProxyHost(Fuse.Visual visual) :73
void IProxyHostExtensions__FindProxyHost_fn(::g::Fuse::Visual* visual, uObject** __retval)
{
    *__retval = IProxyHostExtensions::FindProxyHost(visual);
}

// public static Fuse.Controls.IProxyHost FindProxyHost(Fuse.Visual visual) [static] :73
uObject* IProxyHostExtensions::FindProxyHost(::g::Fuse::Visual* visual)
{
    uStackFrame __("Fuse.Controls.IProxyHostExtensions", "FindProxyHost(Fuse.Visual)");

    if (visual == NULL)
        return NULL;

    ::g::Fuse::Visual* parent = uPtr(visual)->Parent();

    if (parent == NULL)
        return NULL;

    if (uIs(parent, ::TYPES[35/*Fuse.Controls.IProxyHost*/]) && (uPtr(uPtr(parent)->Parent())->VisualContext() == 2))
        return uAs<uObject*>(parent, ::TYPES[35/*Fuse.Controls.IProxyHost*/]);
    else
        return IProxyHostExtensions::FindProxyHost(parent);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\WebView.uno
// -------------------------------------------------------------------------------------------

// public abstract interface ISourceReceiver :15
// {
uInterfaceType* ISourceReceiver_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.ISourceReceiver", 0, 0);
    type->Reflection.SetFunctions(2,
        new uFunction("get_Source", NULL, NULL, offsetof(ISourceReceiver, fp_get_Source), false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Source", NULL, NULL, offsetof(ISourceReceiver, fp_set_Source), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextEdit.uno
// ------------------------------------------------------------------------------------------------------------

// public abstract interface ITextEditControl :18
// {
uInterfaceType* ITextEditControl_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.ITextEditControl", 0, 0);
    type->Reflection.SetFunctions(4,
        new uFunction("add_ActionTriggered", NULL, NULL, offsetof(ITextEditControl, fp_add_ActionTriggered), false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionHandler_typeof()),
        new uFunction("remove_ActionTriggered", NULL, NULL, offsetof(ITextEditControl, fp_remove_ActionTriggered), false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionHandler_typeof()),
        new uFunction("get_IsPassword", NULL, NULL, offsetof(ITextEditControl, fp_get_IsPassword), false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsPassword", NULL, NULL, offsetof(ITextEditControl, fp_set_IsPassword), false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextControl.GraphicsText.uno
// ----------------------------------------------------------------------------------------------------------------------------

// internal abstract interface ITextRenderer :6
// {
uInterfaceType* ITextRenderer_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.ITextRenderer", 0, 0);
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.TimePicker\1.7.2\TimePicker.uno
// -------------------------------------------------------------------------------------------------

// internal abstract interface ITimePickerView :14
// {
uInterfaceType* ITimePickerView_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.ITimePickerView", 0, 0);
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\WebView.uno
// -------------------------------------------------------------------------------------------

// public abstract interface IWebView :20
// {
uInterfaceType* IWebView_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.IWebView", 0, 0);
    type->Reflection.SetFunctions(26,
        new uFunction("get_BaseUrl", NULL, NULL, offsetof(IWebView, fp_get_BaseUrl), false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_BaseUrl", NULL, NULL, offsetof(IWebView, fp_set_BaseUrl), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_BeginLoading", NULL, NULL, offsetof(IWebView, fp_add_BeginLoading), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("remove_BeginLoading", NULL, NULL, offsetof(IWebView, fp_remove_BeginLoading), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("get_DocumentTitle", NULL, NULL, offsetof(IWebView, fp_get_DocumentTitle), false, ::g::Uno::String_typeof(), 0),
        new uFunction("Eval", NULL, NULL, offsetof(IWebView, fp_Eval), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("Eval", NULL, NULL, offsetof(IWebView, fp_Eval1), false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::Action1_typeof()->MakeType(::g::Uno::String_typeof(), NULL)),
        new uFunction("get_File", NULL, NULL, offsetof(IWebView, fp_get_File), false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, NULL, offsetof(IWebView, fp_set_File), false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction("LoadHtml", NULL, NULL, offsetof(IWebView, fp_LoadHtml), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("LoadHtml", NULL, NULL, offsetof(IWebView, fp_LoadHtml1), false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::String_typeof()),
        new uFunction("LoadUrl", NULL, NULL, offsetof(IWebView, fp_LoadUrl), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_PageLoaded", NULL, NULL, offsetof(IWebView, fp_add_PageLoaded), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("remove_PageLoaded", NULL, NULL, offsetof(IWebView, fp_remove_PageLoaded), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("Reload", NULL, NULL, offsetof(IWebView, fp_Reload), false, uVoid_typeof(), 0),
        new uFunction("get_ScrollEnabled", NULL, NULL, offsetof(IWebView, fp_get_ScrollEnabled), false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_ScrollEnabled", NULL, NULL, offsetof(IWebView, fp_set_ScrollEnabled), false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("Stop", NULL, NULL, offsetof(IWebView, fp_Stop), false, uVoid_typeof(), 0),
        new uFunction("add_URISchemeHandler", NULL, NULL, offsetof(IWebView, fp_add_URISchemeHandler), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("remove_URISchemeHandler", NULL, NULL, offsetof(IWebView, fp_remove_URISchemeHandler), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("get_Url", NULL, NULL, offsetof(IWebView, fp_get_Url), false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Url", NULL, NULL, offsetof(IWebView, fp_set_Url), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_UrlChanged", NULL, NULL, offsetof(IWebView, fp_add_UrlChanged), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("remove_UrlChanged", NULL, NULL, offsetof(IWebView, fp_remove_UrlChanged), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("get_ZoomEnabled", NULL, NULL, offsetof(IWebView, fp_get_ZoomEnabled), false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_ZoomEnabled", NULL, NULL, offsetof(IWebView, fp_set_ZoomEnabled), false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\WebView.uno
// -------------------------------------------------------------------------------------------

// internal sealed class JavaScriptCall :476
// {
static void JavaScriptCall_build(uType* type)
{
    ::TYPES[36] = ::g::Fuse::Controls::IWebView_typeof();
    type->SetInterfaces(
        ::g::Fuse::Controls::BufferedWebViewCall_typeof(), offsetof(JavaScriptCall_type, interface0));
    type->SetFields(0,
        ::g::Uno::Action1_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(JavaScriptCall, Handler), 0,
        ::g::Uno::String_typeof(), offsetof(JavaScriptCall, Script), 0);
}

JavaScriptCall_type* JavaScriptCall_typeof()
{
    static uSStrong<JavaScriptCall_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(JavaScriptCall);
    options.TypeSize = sizeof(JavaScriptCall_type);
    type = (JavaScriptCall_type*)uClassType::New("Fuse.Controls.JavaScriptCall", options);
    type->fp_build_ = JavaScriptCall_build;
    type->interface0.fp_Apply = (void(*)(uObject*, uObject*))JavaScriptCall__Apply_fn;
    return type;
}

// public JavaScriptCall(string script, Uno.Action<string> handler) :481
void JavaScriptCall__ctor__fn(JavaScriptCall* __this, uString* script, uDelegate* handler)
{
    __this->ctor_(script, handler);
}

// public void Apply(Fuse.Controls.IWebView wv) :487
void JavaScriptCall__Apply_fn(JavaScriptCall* __this, uObject* wv)
{
    __this->Apply(wv);
}

// public JavaScriptCall New(string script, Uno.Action<string> handler) :481
void JavaScriptCall__New1_fn(uString* script, uDelegate* handler, JavaScriptCall** __retval)
{
    *__retval = JavaScriptCall::New1(script, handler);
}

// public JavaScriptCall(string script, Uno.Action<string> handler) [instance] :481
void JavaScriptCall::ctor_(uString* script, uDelegate* handler)
{
    Script = script;
    Handler = handler;
}

// public void Apply(Fuse.Controls.IWebView wv) [instance] :487
void JavaScriptCall::Apply(uObject* wv)
{
    uStackFrame __("Fuse.Controls.JavaScriptCall", "Apply(Fuse.Controls.IWebView)");

    if (::g::Uno::Delegate::op_Inequality(Handler, NULL))
        ::g::Fuse::Controls::IWebView::Eval1(uInterface(uPtr(wv), ::TYPES[36/*Fuse.Controls.IWebView*/]), Script, Handler);
    else
        ::g::Fuse::Controls::IWebView::Eval(uInterface(uPtr(wv), ::TYPES[36/*Fuse.Controls.IWebView*/]), Script);
}

// public JavaScriptCall New(string script, Uno.Action<string> handler) [static] :481
JavaScriptCall* JavaScriptCall::New1(uString* script, uDelegate* handler)
{
    JavaScriptCall* obj1 = (JavaScriptCall*)uNew(JavaScriptCall_typeof());
    obj1->ctor_(script, handler);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls\1.7.2\KeyframeAccessors.uno
// ---------------------------------------------------------------------------------------------

// public static class KeyframeAccessors :9
// {
static void KeyframeAccessors_build(uType* type)
{
    type->Reflection.SetFunctions(2,
        new uFunction("SetVisibility", NULL, (void*)KeyframeAccessors__SetVisibility_fn, 0, true, ::g::Fuse::Elements::Visibility_typeof(), 1, ::g::Fuse::Animations::Keyframe_typeof()),
        new uFunction("SetVisibility", NULL, (void*)KeyframeAccessors__SetVisibility1_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Animations::Keyframe_typeof(), ::g::Fuse::Elements::Visibility_typeof()));
}

uClassType* KeyframeAccessors_typeof()
{
    static uSStrong<uClassType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.TypeSize = sizeof(uClassType);
    type = uClassType::New("Fuse.Controls.KeyframeAccessors", options);
    type->fp_build_ = KeyframeAccessors_build;
    return type;
}

// public static Fuse.Elements.Visibility SetVisibility(Fuse.Animations.Keyframe kf) :18
void KeyframeAccessors__SetVisibility_fn(::g::Fuse::Animations::Keyframe* kf, int32_t* __retval)
{
    *__retval = KeyframeAccessors::SetVisibility(kf);
}

// public static void SetVisibility(Fuse.Animations.Keyframe kf, Fuse.Elements.Visibility v) :12
void KeyframeAccessors__SetVisibility1_fn(::g::Fuse::Animations::Keyframe* kf, int32_t* v)
{
    KeyframeAccessors::SetVisibility1(kf, *v);
}

// public static Fuse.Elements.Visibility SetVisibility(Fuse.Animations.Keyframe kf) [static] :18
int32_t KeyframeAccessors::SetVisibility(::g::Fuse::Animations::Keyframe* kf)
{
    uStackFrame __("Fuse.Controls.KeyframeAccessors", "SetVisibility(Fuse.Animations.Keyframe)");
    return uUnbox<int32_t>(::g::Fuse::Elements::Visibility_typeof(), uPtr(kf)->ObjectValue());
}

// public static void SetVisibility(Fuse.Animations.Keyframe kf, Fuse.Elements.Visibility v) [static] :12
void KeyframeAccessors::SetVisibility1(::g::Fuse::Animations::Keyframe* kf, int32_t v)
{
    uStackFrame __("Fuse.Controls.KeyframeAccessors", "SetVisibility(Fuse.Animations.Keyframe,Fuse.Elements.Visibility)");
    uPtr(kf)->ObjectValue(uBox<int32_t>(::g::Fuse::Elements::Visibility_typeof(), v));
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\LayoutControl.Canvas.uno
// -------------------------------------------------------------------------------------------------------

// public partial class LayoutControl :62
// {
static void LayoutControl_build(uType* type)
{
    ::STRINGS[34] = uString::Const("LayoutControl not properly rooted in Surface");
    ::STRINGS[35] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\LayoutControl.Canvas.uno");
    ::STRINGS[36] = uString::Const("ISurfaceDrawableDraw");
    ::STRINGS[37] = uString::Const("Mismatched surface");
    ::STRINGS[38] = uString::Const("Surface contains a non-drawable child");
    ::TYPES[37] = ::g::Fuse::Drawing::ISurfaceDrawable_typeof();
    ::TYPES[7] = ::g::Fuse::Visual_typeof();
    type->SetDependencies(
        ::g::Fuse::Elements::LayoutMasterBoxSizing_typeof(),
        ::g::Fuse::Layouts::Layouts_typeof(),
        ::g::Fuse::Drawing::SurfaceManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[7/*Fuse.Visual*/], NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface16));
    type->SetFields(108,
        ::g::Fuse::Controls::LayoutControlSurface_typeof(), offsetof(LayoutControl, _surface), 0,
        ::g::Fuse::Layouts::Layout_typeof(), offsetof(LayoutControl, _layout), 0);
    type->Reflection.SetFunctions(5,
        new uFunction("GetLayoutMaster", NULL, (void*)LayoutControl__GetLayoutMaster_fn, 0, true, ::g::Fuse::Elements::Element_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("get_Layout", NULL, (void*)LayoutControl__get_Layout_fn, 0, false, ::g::Fuse::Layouts::Layout_typeof(), 0),
        new uFunction("set_Layout", NULL, (void*)LayoutControl__set_Layout_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::Layout_typeof()),
        new uFunction(".ctor", NULL, (void*)LayoutControl__New2_fn, 0, true, type, 0),
        new uFunction("SetLayoutMaster", NULL, (void*)LayoutControl__SetLayoutMaster_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Fuse::Elements::Element_typeof()));
}

::g::Fuse::Controls::Control_type* LayoutControl_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 110;
    options.InterfaceCount = 17;
    options.DependencyCount = 3;
    options.ObjectSize = sizeof(LayoutControl);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.LayoutControl", options);
    type->fp_build_ = LayoutControl_build;
    type->fp_ctor_ = (void*)LayoutControl__New2_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))LayoutControl__ArrangePaddingBox_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))LayoutControl__FastTrackDrawWithOpacity_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))LayoutControl__GetContentSize_fn;
    type->fp_IsMarginBoxDependent = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Visual*, int32_t*))LayoutControl__IsMarginBoxDependent_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))LayoutControl__OnChildAdded_fn;
    type->fp_OnChildMoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))LayoutControl__OnChildMoved_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))LayoutControl__OnChildRemoved_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))LayoutControl__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))LayoutControl__OnUnrooted_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated LayoutControl() :62
void LayoutControl__ctor_5_fn(LayoutControl* __this)
{
    __this->ctor_5();
}

// protected override void ArrangePaddingBox(Fuse.LayoutParams lp) :139
void LayoutControl__ArrangePaddingBox_fn(LayoutControl* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Elements::Element__ArrangePaddingBox_fn(__this, uCRef(lp_));

    if (__this->HasVisualChildren())
        uPtr(__this->Layout())->ArrangePaddingBox(__this, __this->Padding(), lp_);
}

// protected override bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :197
void LayoutControl__FastTrackDrawWithOpacity_fn(LayoutControl* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "FastTrackDrawWithOpacity(Fuse.DrawContext)");

    if (__this->HasChildren())
        return *__retval = false, void();

    if (__this->Background() != NULL)
        __this->DrawBackground(dc, __this->Opacity());

    return *__retval = true, void();
}

// protected override float2 GetContentSize(Fuse.LayoutParams lp) :129
void LayoutControl__GetContentSize_fn(LayoutControl* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 ret3;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 b = (::g::Fuse::Controls::Control__GetContentSize_fn(__this, uCRef(lp_), &ret3), ret3);

    if (__this->HasVisualChildren())
        return *__retval = ::g::Uno::Math::Max3(b, uPtr(__this->Layout())->GetContentSize(__this, lp_)), void();

    return *__retval = b, void();
}

// public static Fuse.Elements.Element GetLayoutMaster(Fuse.Elements.Element elm) :80
void LayoutControl__GetLayoutMaster_fn(::g::Fuse::Elements::Element* elm, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = LayoutControl::GetLayoutMaster(elm);
}

// protected override sealed Fuse.LayoutDependent IsMarginBoxDependent(Fuse.Visual child) :168
void LayoutControl__IsMarginBoxDependent_fn(LayoutControl* __this, ::g::Fuse::Visual* child, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "IsMarginBoxDependent(Fuse.Visual)");
    int32_t outer = uPtr(__this->BoxSizingObject())->IsContentRelativeSize(__this);
    int32_t inner = uPtr(__this->Layout())->IsMarginBoxDependent(child);

    if (outer == 4)
    {
        if (inner == 0)
            return *__retval = 0, void();

        return *__retval = 4, void();
    }
    else if (outer == 0)
    {
        if (inner == 4)
            return *__retval = 1, void();

        if (inner == 0)
            return *__retval = 0, void();

        return *__retval = 3, void();
    }
    else
    {
        if (inner == 4)
            return *__retval = 3, void();

        if (inner == 0)
            return *__retval = 0, void();

        return *__retval = 2, void();
    }
}

// internal void ISurfaceDrawableDraw(Fuse.Drawing.Surface surface) :101
void LayoutControl__ISurfaceDrawableDraw_fn(LayoutControl* __this, ::g::Fuse::Drawing::Surface* surface)
{
    __this->ISurfaceDrawableDraw(surface);
}

// public Fuse.Layouts.Layout get_Layout() :102
void LayoutControl__get_Layout_fn(LayoutControl* __this, ::g::Fuse::Layouts::Layout** __retval)
{
    *__retval = __this->Layout();
}

// public void set_Layout(Fuse.Layouts.Layout value) :103
void LayoutControl__set_Layout_fn(LayoutControl* __this, ::g::Fuse::Layouts::Layout* value)
{
    __this->Layout(value);
}

// internal Fuse.Drawing.Surface get_LayoutSurface() :67
void LayoutControl__get_LayoutSurface_fn(LayoutControl* __this, ::g::Fuse::Drawing::Surface** __retval)
{
    *__retval = __this->LayoutSurface();
}

// public generated LayoutControl New() :62
void LayoutControl__New2_fn(LayoutControl** __retval)
{
    *__retval = LayoutControl::New2();
}

// protected override void OnChildAdded(Fuse.Node elm) :147
void LayoutControl__OnChildAdded_fn(LayoutControl* __this, ::g::Fuse::Node* elm)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnChildAdded(Fuse.Node)");

    if (uIs(elm, ::TYPES[7/*Fuse.Visual*/]))
        __this->InvalidateLayout(2);

    ::g::Fuse::Elements::Element__OnChildAdded_fn(__this, elm);
}

// protected override sealed void OnChildMoved(Fuse.Node elm) :161
void LayoutControl__OnChildMoved_fn(LayoutControl* __this, ::g::Fuse::Node* elm)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnChildMoved(Fuse.Node)");

    if (uIs(elm, ::TYPES[7/*Fuse.Visual*/]))
        __this->InvalidateLayout(2);

    ::g::Fuse::Visual__OnChildMoved_fn(__this, elm);
}

// protected override void OnChildRemoved(Fuse.Node elm) :154
void LayoutControl__OnChildRemoved_fn(LayoutControl* __this, ::g::Fuse::Node* elm)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnChildRemoved(Fuse.Node)");

    if (uIs(elm, ::TYPES[7/*Fuse.Visual*/]))
        __this->InvalidateLayout(2);

    ::g::Fuse::Elements::Element__OnChildRemoved_fn(__this, elm);
}

// protected override void OnRooted() :115
void LayoutControl__OnRooted_fn(LayoutControl* __this)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);

    if (__this->_layout != NULL)
        uPtr(__this->_layout)->Rooted(__this);
}

// protected override void OnUnrooted() :122
void LayoutControl__OnUnrooted_fn(LayoutControl* __this)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnUnrooted()");

    if (__this->_layout != NULL)
        uPtr(__this->_layout)->Unrooted(__this);

    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
}

// public static void SetLayoutMaster(Fuse.Elements.Element elm, Fuse.Elements.Element master) :63
void LayoutControl__SetLayoutMaster_fn(::g::Fuse::Elements::Element* elm, ::g::Fuse::Elements::Element* master)
{
    LayoutControl::SetLayoutMaster(elm, master);
}

// internal void SurfaceRooted(bool require) :70
void LayoutControl__SurfaceRooted_fn(LayoutControl* __this, bool* require)
{
    __this->SurfaceRooted(*require);
}

// internal void SurfaceUnrooted() :88
void LayoutControl__SurfaceUnrooted_fn(LayoutControl* __this)
{
    __this->SurfaceUnrooted();
}

// public generated LayoutControl() [instance] :62
void LayoutControl::ctor_5()
{
    ctor_4();
}

// internal void ISurfaceDrawableDraw(Fuse.Drawing.Surface surface) [instance] :101
void LayoutControl::ISurfaceDrawableDraw(::g::Fuse::Drawing::Surface* surface)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "ISurfaceDrawableDraw(Fuse.Drawing.Surface)");

    if (_surface == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[34/*"LayoutContr...*/], this, ::STRINGS[35/*"C:\\Users\\...*/], 105, ::STRINGS[36/*"ISurfaceDra...*/]);
        return;
    }

    if (uPtr(_surface)->Surface != surface)
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[37/*"Mismatched ...*/], this, ::STRINGS[35/*"C:\\Users\\...*/], 110, ::STRINGS[36/*"ISurfaceDra...*/]);

    uPtr(uPtr(_surface)->Watcher)->Reset();
    uPtr(uPtr(_surface)->Watcher)->Add(Background());
    uPtr(uPtr(_surface)->Watcher)->Sync();

    if (Background() != NULL)
    {
        if ((uPtr(_surface)->BackgroundPath == NULL) || ::g::Uno::Float2__op_Inequality(uPtr(_surface)->BackgroundPathSize, ActualSize()))
        {
            ::g::Uno::Float2 rs = ActualSize();
            ::g::Fuse::Drawing::LineSegments* rect = ::g::Fuse::Drawing::LineSegments::New1();
            rect->MoveTo(::g::Uno::Float2__New1(0.0f));
            rect->LineTo(::g::Uno::Float2__New2(rs.X, 0.0f));
            rect->LineTo(::g::Uno::Float2__New2(rs.X, rs.Y));
            rect->LineTo(::g::Uno::Float2__New2(0.0f, rs.Y));
            rect->ClosePath();
            uPtr(_surface)->BackgroundPath = uPtr(surface)->CreatePath(rect->Segments(), 0);
            uPtr(_surface)->BackgroundPathSize = ActualSize();
        }

        uPtr(surface)->FillPath(uPtr(_surface)->BackgroundPath, Background());
    }

    uArray* zOrder = GetCachedZOrder();

    for (int32_t i = 0; i < uPtr(zOrder)->Length(); i++)
    {
        ::g::Fuse::Visual* child = uPtr(zOrder)->Strong< ::g::Fuse::Visual*>(i);
        uObject* drawable = uAs<uObject*>(child, ::TYPES[37/*Fuse.Drawing.ISurfaceDrawable*/]);

        if (drawable == NULL)
        {
            if (!uPtr(_surface)->WarnDraw)
            {
                ::g::Fuse::Diagnostics::UserWarning(::STRINGS[38/*"Surface con...*/], child, ::STRINGS[35/*"C:\\Users\\...*/], 144, ::STRINGS[36/*"ISurfaceDra...*/]);
                uPtr(_surface)->WarnDraw = true;
            }

            continue;
        }

        uPtr(surface)->PushTransform(uPtr(child)->LocalTransform());
        surface->DrawLocal(drawable);
        surface->PopTransform();
    }
}

// public Fuse.Layouts.Layout get_Layout() [instance] :102
::g::Fuse::Layouts::Layout* LayoutControl::Layout()
{
    ::g::Fuse::Layouts::Layout* ind1;
    ind1 = _layout;
    return (ind1 != NULL) ? ind1 : (::g::Fuse::Layouts::Layout*)::g::Fuse::Layouts::Layouts::Default();
}

// public void set_Layout(Fuse.Layouts.Layout value) [instance] :103
void LayoutControl::Layout(::g::Fuse::Layouts::Layout* value)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "set_Layout(Fuse.Layouts.Layout)");

    if (value != _layout)
    {
        if (IsRootingCompleted() && (_layout != NULL))
            uPtr(_layout)->Unrooted(this);

        _layout = value;

        if (IsRootingCompleted() && (_layout != NULL))
            uPtr(_layout)->Rooted(this);

        InvalidateLayout(2);
    }
}

// internal Fuse.Drawing.Surface get_LayoutSurface() [instance] :67
::g::Fuse::Drawing::Surface* LayoutControl::LayoutSurface()
{
    uStackFrame __("Fuse.Controls.LayoutControl", "get_LayoutSurface()");
    return (_surface != NULL) ? (::g::Fuse::Drawing::Surface*)uPtr(_surface)->Surface : NULL;
}

// internal void SurfaceRooted(bool require) [instance] :70
void LayoutControl::SurfaceRooted(bool require)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "SurfaceRooted(bool)");
    ::g::Fuse::Drawing::Surface* surface;

    if (require)
        surface = ::g::Fuse::Drawing::SurfaceManager::FindOrCreate(this);
    else
        surface = ::g::Fuse::Drawing::SurfaceManager::Find(this);

    if (surface != NULL)
    {
        _surface = ::g::Fuse::Controls::LayoutControlSurface::New1();
        uPtr(_surface)->LayoutControl = this;
        uPtr(_surface)->Surface = surface;
        uPtr(_surface)->Watcher = ::g::Fuse::Drawing::DrawObjectWatcher::New1();
        uPtr(uPtr(_surface)->Watcher)->OnRooted((uObject*)_surface);
    }
}

// internal void SurfaceUnrooted() [instance] :88
void LayoutControl::SurfaceUnrooted()
{
    uStackFrame __("Fuse.Controls.LayoutControl", "SurfaceUnrooted()");

    if (_surface != NULL)
    {
        if (uPtr(_surface)->BackgroundPath != NULL)
            uPtr(uPtr(_surface)->Surface)->DisposePath(uPtr(_surface)->BackgroundPath);

        uPtr(uPtr(_surface)->Watcher)->OnUnrooted();
        ::g::Fuse::Drawing::SurfaceManager::Release(this, uPtr(_surface)->Surface);
        _surface = NULL;
    }
}

// public static Fuse.Elements.Element GetLayoutMaster(Fuse.Elements.Element elm) [static] :80
::g::Fuse::Elements::Element* LayoutControl::GetLayoutMaster(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "GetLayoutMaster(Fuse.Elements.Element)");
    return ::g::Fuse::Elements::LayoutMasterBoxSizing::GetLayoutMaster(elm);
}

// public generated LayoutControl New() [static] :62
LayoutControl* LayoutControl::New2()
{
    LayoutControl* obj2 = (LayoutControl*)uNew(LayoutControl_typeof());
    obj2->ctor_5();
    return obj2;
}

// public static void SetLayoutMaster(Fuse.Elements.Element elm, Fuse.Elements.Element master) [static] :63
void LayoutControl::SetLayoutMaster(::g::Fuse::Elements::Element* elm, ::g::Fuse::Elements::Element* master)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "SetLayoutMaster(Fuse.Elements.Element,Fuse.Elements.Element)");

    if (master == NULL)
    {
        uPtr(elm)->BoxSizing(0);
        elm->LayoutRole(0);
        ::g::Fuse::Elements::LayoutMasterBoxSizing::SetLayoutMaster(elm, NULL);
    }
    else
    {
        uPtr(elm)->BoxSizing(3);
        elm->LayoutRole(3);
        ::g::Fuse::Elements::LayoutMasterBoxSizing::SetLayoutMaster(elm, master);
    }
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\LayoutControl.Canvas.uno
// -------------------------------------------------------------------------------------------------------

// internal sealed class LayoutControlSurface :12
// {
static void LayoutControlSurface_build(uType* type)
{
    ::STRINGS[39] = uString::Const("Prepare without surface");
    ::STRINGS[35] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\LayoutControl.Canvas.uno");
    ::STRINGS[40] = uString::Const("Fuse.Drawing.IDrawObjectWatcherFeedback.Prepare");
    ::STRINGS[41] = uString::Const("Fuse.Drawing.IDrawObjectWatcherFeedback.Unprepare");
    ::TYPES[38] = ::g::Fuse::Drawing::Stroke_typeof();
    ::TYPES[39] = ::g::Fuse::Drawing::Brush_typeof();
    type->SetInterfaces(
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(LayoutControlSurface_type, interface0));
    type->SetFields(0,
        ::g::Uno::Bool_typeof(), offsetof(LayoutControlSurface, WarnDraw), 0,
        ::g::Fuse::Drawing::SurfacePath_typeof(), offsetof(LayoutControlSurface, BackgroundPath), 0,
        ::g::Uno::Float2_typeof(), offsetof(LayoutControlSurface, BackgroundPathSize), 0,
        ::g::Fuse::Drawing::Surface_typeof(), offsetof(LayoutControlSurface, Surface), 0,
        ::g::Fuse::Drawing::DrawObjectWatcher_typeof(), offsetof(LayoutControlSurface, Watcher), 0,
        ::g::Fuse::Controls::LayoutControl_typeof(), offsetof(LayoutControlSurface, LayoutControl), 0);
}

LayoutControlSurface_type* LayoutControlSurface_typeof()
{
    static uSStrong<LayoutControlSurface_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 6;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(LayoutControlSurface);
    options.TypeSize = sizeof(LayoutControlSurface_type);
    type = (LayoutControlSurface_type*)uClassType::New("Fuse.Controls.LayoutControlSurface", options);
    type->fp_build_ = LayoutControlSurface_build;
    type->fp_ctor_ = (void*)LayoutControlSurface__New1_fn;
    type->interface0.fp_Changed = (void(*)(uObject*, uObject*))LayoutControlSurface__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface0.fp_Prepare = (void(*)(uObject*, uObject*))LayoutControlSurface__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface0.fp_Unprepare = (void(*)(uObject*, uObject*))LayoutControlSurface__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    return type;
}

// public generated LayoutControlSurface() :12
void LayoutControlSurface__ctor__fn(LayoutControlSurface* __this)
{
    __this->ctor_();
}

// private void Fuse.Drawing.IDrawObjectWatcherFeedback.Changed(object obj) :23
void LayoutControlSurface__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn(LayoutControlSurface* __this, uObject* obj)
{
    uStackFrame __("Fuse.Controls.LayoutControlSurface", "Fuse.Drawing.IDrawObjectWatcherFeedback.Changed(object)");

    if (uIs(obj, ::TYPES[38/*Fuse.Drawing.Stroke*/]))
        uPtr(__this->LayoutControl)->InvalidateLayout(2);

    uPtr(__this->LayoutControl)->InvalidateVisual();
}

// private void Fuse.Drawing.IDrawObjectWatcherFeedback.Prepare(object obj) :30
void LayoutControlSurface__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn(LayoutControlSurface* __this, uObject* obj)
{
    uStackFrame __("Fuse.Controls.LayoutControlSurface", "Fuse.Drawing.IDrawObjectWatcherFeedback.Prepare(object)");

    if (__this->Surface == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[39/*"Prepare wit...*/], __this, ::STRINGS[35/*"C:\\Users\\...*/], 34, ::STRINGS[40/*"Fuse.Drawin...*/]);
        return;
    }

    ::g::Fuse::Drawing::Brush* b = uAs< ::g::Fuse::Drawing::Brush*>(obj, ::TYPES[39/*Fuse.Drawing.Brush*/]);

    if (b != NULL)
        uPtr(__this->Surface)->Prepare(b);
}

// private void Fuse.Drawing.IDrawObjectWatcherFeedback.Unprepare(object obj) :43
void LayoutControlSurface__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn(LayoutControlSurface* __this, uObject* obj)
{
    uStackFrame __("Fuse.Controls.LayoutControlSurface", "Fuse.Drawing.IDrawObjectWatcherFeedback.Unprepare(object)");

    if (__this->Surface == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[39/*"Prepare wit...*/], __this, ::STRINGS[35/*"C:\\Users\\...*/], 47, ::STRINGS[41/*"Fuse.Drawin...*/]);
        return;
    }

    ::g::Fuse::Drawing::Brush* b = uAs< ::g::Fuse::Drawing::Brush*>(obj, ::TYPES[39/*Fuse.Drawing.Brush*/]);

    if (b != NULL)
        uPtr(__this->Surface)->Unprepare(b);
}

// public generated LayoutControlSurface New() :12
void LayoutControlSurface__New1_fn(LayoutControlSurface** __retval)
{
    *__retval = LayoutControlSurface::New1();
}

// public generated LayoutControlSurface() [instance] :12
void LayoutControlSurface::ctor_()
{
}

// public generated LayoutControlSurface New() [static] :12
LayoutControlSurface* LayoutControlSurface::New1()
{
    LayoutControlSurface* obj1 = (LayoutControlSurface*)uNew(LayoutControlSurface_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\WebView.uno
// -------------------------------------------------------------------------------------------

// internal sealed class LoadHtmlCall :461
// {
static void LoadHtmlCall_build(uType* type)
{
    ::TYPES[36] = ::g::Fuse::Controls::IWebView_typeof();
    type->SetInterfaces(
        ::g::Fuse::Controls::BufferedWebViewCall_typeof(), offsetof(LoadHtmlCall_type, interface0));
    type->SetFields(0,
        ::g::Uno::String_typeof(), offsetof(LoadHtmlCall, html), 0,
        ::g::Uno::String_typeof(), offsetof(LoadHtmlCall, baseUrl), 0);
}

LoadHtmlCall_type* LoadHtmlCall_typeof()
{
    static uSStrong<LoadHtmlCall_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(LoadHtmlCall);
    options.TypeSize = sizeof(LoadHtmlCall_type);
    type = (LoadHtmlCall_type*)uClassType::New("Fuse.Controls.LoadHtmlCall", options);
    type->fp_build_ = LoadHtmlCall_build;
    type->interface0.fp_Apply = (void(*)(uObject*, uObject*))LoadHtmlCall__Apply_fn;
    return type;
}

// public LoadHtmlCall(string html, string baseUrl) :465
void LoadHtmlCall__ctor__fn(LoadHtmlCall* __this, uString* html1, uString* baseUrl1)
{
    __this->ctor_(html1, baseUrl1);
}

// public void Apply(Fuse.Controls.IWebView wv) :470
void LoadHtmlCall__Apply_fn(LoadHtmlCall* __this, uObject* wv)
{
    __this->Apply(wv);
}

// public LoadHtmlCall New(string html, string baseUrl) :465
void LoadHtmlCall__New1_fn(uString* html1, uString* baseUrl1, LoadHtmlCall** __retval)
{
    *__retval = LoadHtmlCall::New1(html1, baseUrl1);
}

// public LoadHtmlCall(string html, string baseUrl) [instance] :465
void LoadHtmlCall::ctor_(uString* html1, uString* baseUrl1)
{
    html = html1;
    baseUrl = baseUrl1;
}

// public void Apply(Fuse.Controls.IWebView wv) [instance] :470
void LoadHtmlCall::Apply(uObject* wv)
{
    uStackFrame __("Fuse.Controls.LoadHtmlCall", "Apply(Fuse.Controls.IWebView)");
    ::g::Fuse::Controls::IWebView::LoadHtml1(uInterface(uPtr(wv), ::TYPES[36/*Fuse.Controls.IWebView*/]), html, baseUrl);
}

// public LoadHtmlCall New(string html, string baseUrl) [static] :465
LoadHtmlCall* LoadHtmlCall::New1(uString* html1, uString* baseUrl1)
{
    LoadHtmlCall* obj1 = (LoadHtmlCall*)uNew(LoadHtmlCall_typeof());
    obj1->ctor_(html1, baseUrl1);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\MobileTextEdit.Forwarding.uno
// -----------------------------------------------------------------------------------------------------------------------------

// internal partial sealed class MobileTextEdit :7
// {
static void MobileTextEdit_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Input::Focus_typeof(),
        ::g::Fuse::Controls::TextEditRenderer_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(MobileTextEdit_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(MobileTextEdit_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(MobileTextEdit_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(MobileTextEdit_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(MobileTextEdit_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(MobileTextEdit_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(MobileTextEdit_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(MobileTextEdit_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(MobileTextEdit_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(MobileTextEdit_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(MobileTextEdit_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(MobileTextEdit_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(MobileTextEdit_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(MobileTextEdit_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(MobileTextEdit_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(MobileTextEdit_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(MobileTextEdit_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(MobileTextEdit_type, interface17),
        ::g::Fuse::Controls::ITextEditControl_typeof(), offsetof(MobileTextEdit_type, interface18),
        ::g::Fuse::Controls::Native::ITextEditHost_typeof(), offsetof(MobileTextEdit_type, interface19),
        ::g::Fuse::Input::INotifyFocus_typeof(), offsetof(MobileTextEdit_type, interface20));
    type->SetFields(120,
        ::g::Uno::Bool_typeof(), offsetof(MobileTextEdit, _isMultiline1), 0,
        ::g::Fuse::Controls::Native::ITextEdit_typeof(), offsetof(MobileTextEdit, _textEdit), 0,
        ::g::Fuse::Controls::SingleViewHost_typeof(), offsetof(MobileTextEdit, _singelViewHost), 0);
}

MobileTextEdit_type* MobileTextEdit_typeof()
{
    static uSStrong<MobileTextEdit_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextEdit_typeof();
    options.FieldCount = 123;
    options.InterfaceCount = 21;
    options.DependencyCount = 2;
    options.ObjectSize = sizeof(MobileTextEdit);
    options.TypeSize = sizeof(MobileTextEdit_type);
    type = (MobileTextEdit_type*)uClassType::New("Fuse.Controls.MobileTextEdit", options);
    type->fp_build_ = MobileTextEdit_build;
    type->fp_InvalidateRenderer = (void(*)(::g::Fuse::Controls::TextControl*))MobileTextEdit__InvalidateRenderer_fn;
    type->fp_OnActionStyleChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnActionStyleChanged_fn;
    type->fp_OnAutoCapitalizationHintChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnAutoCapitalizationHintChanged_fn;
    type->fp_OnAutoCorrectHintChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnAutoCorrectHintChanged_fn;
    type->fp_OnCaretColorChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnCaretColorChanged_fn;
    type->fp_OnInputHintChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnInputHintChanged_fn;
    type->fp_OnIsPasswordChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnIsPasswordChanged_fn;
    type->fp_OnIsReadOnlyChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnIsReadOnlyChanged_fn;
    type->fp_OnPlaceholderColorChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnPlaceholderColorChanged_fn;
    type->fp_OnPlaceholderTextChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnPlaceholderTextChanged_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))MobileTextEdit__OnRooted_fn;
    type->fp_OnSelectionColorChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnSelectionColorChanged_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))MobileTextEdit__OnUnrooted_fn;
    type->fp_OnValueChanged = (void(*)(::g::Fuse::Controls::TextControl*, uObject*))MobileTextEdit__OnValueChanged_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))MobileTextEdit__PushPropertiesToNativeView_fn;
    type->fp_get_RenderValue = (void(*)(::g::Fuse::Controls::TextControl*, uString**))MobileTextEdit__get_RenderValue_fn;
    type->interface19.fp_OnValueChanged = (void(*)(uObject*, uString*))MobileTextEdit__FuseControlsNativeITextEditHostOnValueChanged_fn;
    type->interface19.fp_OnInputAction = (void(*)(uObject*, int32_t*, bool*))MobileTextEdit__FuseControlsNativeITextEditHostOnInputAction_fn;
    type->interface19.fp_OnFocusGained = (void(*)(uObject*))MobileTextEdit__FuseControlsNativeITextEditHostOnFocusGained_fn;
    type->interface19.fp_OnFocusLost = (void(*)(uObject*))MobileTextEdit__FuseControlsNativeITextEditHostOnFocusLost_fn;
    type->interface20.fp_OnFocusGained = (void(*)(uObject*))MobileTextEdit__FuseInputINotifyFocusOnFocusGained_fn;
    type->interface20.fp_OnFocusLost = (void(*)(uObject*))MobileTextEdit__FuseInputINotifyFocusOnFocusLost_fn;
    type->interface18.fp_get_IsPassword = (void(*)(uObject*, bool*))::g::Fuse::Controls::TextEdit__get_IsPassword_fn;
    type->interface18.fp_set_IsPassword = (void(*)(uObject*, bool*))::g::Fuse::Controls::TextEdit__set_IsPassword_fn;
    type->interface18.fp_add_ActionTriggered = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextEdit__add_ActionTriggered_fn;
    type->interface18.fp_remove_ActionTriggered = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextEdit__remove_ActionTriggered_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public MobileTextEdit(bool multiline) :13
void MobileTextEdit__ctor_8_fn(MobileTextEdit* __this, bool* multiline)
{
    __this->ctor_8(*multiline);
}

// private extern void DisableRenderToTexture() :142
void MobileTextEdit__DisableRenderToTexture_fn(MobileTextEdit* __this)
{
    __this->DisableRenderToTexture();
}

// private extern void EnabledRenderToTexture() :153
void MobileTextEdit__EnabledRenderToTexture_fn(MobileTextEdit* __this)
{
    __this->EnabledRenderToTexture();
}

// private void Fuse.Controls.Native.ITextEditHost.OnFocusGained() :107
void MobileTextEdit__FuseControlsNativeITextEditHostOnFocusGained_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Controls.Native.ITextEditHost.OnFocusGained()");
    ::g::Fuse::Input::Focus::Obtained(__this);
    __this->DisableRenderToTexture();
}

// private void Fuse.Controls.Native.ITextEditHost.OnFocusLost() :113
void MobileTextEdit__FuseControlsNativeITextEditHostOnFocusLost_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Controls.Native.ITextEditHost.OnFocusLost()");
    ::g::Fuse::Input::Focus::ReleaseFrom(__this);
    __this->EnabledRenderToTexture();
}

// private bool Fuse.Controls.Native.ITextEditHost.OnInputAction(Fuse.Controls.TextInputActionType type) :102
void MobileTextEdit__FuseControlsNativeITextEditHostOnInputAction_fn(MobileTextEdit* __this, int32_t* type, bool* __retval)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Controls.Native.ITextEditHost.OnInputAction(Fuse.Controls.TextInputActionType)");
    int32_t type_ = *type;
    return *__retval = __this->OnAction(type_), void();
}

// private void Fuse.Controls.Native.ITextEditHost.OnValueChanged(string newValue) :97
void MobileTextEdit__FuseControlsNativeITextEditHostOnValueChanged_fn(MobileTextEdit* __this, uString* newValue)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Controls.Native.ITextEditHost.OnValueChanged(string)");
    __this->SetValueInternal(newValue);
}

// private void Fuse.Input.INotifyFocus.OnFocusGained() :119
void MobileTextEdit__FuseInputINotifyFocusOnFocusGained_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Input.INotifyFocus.OnFocusGained()");
    __this->DisableRenderToTexture();

    if (__this->NativeEdit() != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::FocusGained(uInterface(uPtr(__this->NativeEdit()), ::g::Fuse::Controls::Native::ITextEdit_typeof()));
}

// private void Fuse.Input.INotifyFocus.OnFocusLost() :126
void MobileTextEdit__FuseInputINotifyFocusOnFocusLost_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Input.INotifyFocus.OnFocusLost()");

    if (__this->NativeEdit() != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::FocusLost(uInterface(uPtr(__this->NativeEdit()), ::g::Fuse::Controls::Native::ITextEdit_typeof()));

    __this->EnabledRenderToTexture();
}

// private Fuse.Controls.Native.ITextEdit GetITextEdit() :9
void MobileTextEdit__GetITextEdit_fn(MobileTextEdit* __this, uObject** __retval)
{
    *__retval = __this->GetITextEdit();
}

// private extern Fuse.Controls.Native.IViewHandleRenderer InstatiateRenderer() :66
void MobileTextEdit__InstatiateRenderer_fn(MobileTextEdit* __this, uObject** __retval)
{
    *__retval = __this->InstatiateRenderer();
}

// private extern Fuse.Controls.Native.ITextEdit InstatiateTextEdit() :57
void MobileTextEdit__InstatiateTextEdit_fn(MobileTextEdit* __this, uObject** __retval)
{
    *__retval = __this->InstatiateTextEdit();
}

// private extern void InvalidateNativeViewHost() :166
void MobileTextEdit__InvalidateNativeViewHost_fn(MobileTextEdit* __this)
{
    __this->InvalidateNativeViewHost();
}

// protected override sealed void InvalidateRenderer() :133
void MobileTextEdit__InvalidateRenderer_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "InvalidateRenderer()");
    __this->InvalidateNativeViewHost();
    __this->InvalidateRenderBounds();
}

// private Fuse.Controls.Native.ITextEdit get_NativeEdit() :24
void MobileTextEdit__get_NativeEdit_fn(MobileTextEdit* __this, uObject** __retval)
{
    *__retval = __this->NativeEdit();
}

// public MobileTextEdit New(bool multiline) :13
void MobileTextEdit__New3_fn(bool* multiline, MobileTextEdit** __retval)
{
    *__retval = MobileTextEdit::New3(*multiline);
}

// protected override sealed void OnActionStyleChanged() :65
void MobileTextEdit__OnActionStyleChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnActionStyleChanged()");
    ::g::Fuse::Controls::TextEdit__OnActionStyleChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::ActionStyle(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->ActionStyle());
}

// protected override sealed void OnAutoCapitalizationHintChanged() :79
void MobileTextEdit__OnAutoCapitalizationHintChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnAutoCapitalizationHintChanged()");
    ::g::Fuse::Controls::TextEdit__OnAutoCapitalizationHintChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::AutoCapitalizationHint(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->AutoCapitalizationHint());
}

// protected override sealed void OnAutoCorrectHintChanged() :72
void MobileTextEdit__OnAutoCorrectHintChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnAutoCorrectHintChanged()");
    ::g::Fuse::Controls::TextEdit__OnAutoCorrectHintChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::AutoCorrectHint(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->AutoCorrectHint());
}

// protected override sealed void OnCaretColorChanged() :51
void MobileTextEdit__OnCaretColorChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnCaretColorChanged()");
    ::g::Fuse::Controls::TextEdit__OnCaretColorChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::CaretColor(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->CaretColor());
}

// protected override sealed void OnInputHintChanged() :44
void MobileTextEdit__OnInputHintChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnInputHintChanged()");
    ::g::Fuse::Controls::TextEdit__OnInputHintChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::InputHint(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->InputHint());
}

// protected override sealed void OnIsPasswordChanged() :30
void MobileTextEdit__OnIsPasswordChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnIsPasswordChanged()");
    ::g::Fuse::Controls::TextEdit__OnIsPasswordChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::IsPassword(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->IsPassword());
}

// protected override sealed void OnIsReadOnlyChanged() :37
void MobileTextEdit__OnIsReadOnlyChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnIsReadOnlyChanged()");
    ::g::Fuse::Controls::TextEdit__OnIsReadOnlyChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::IsReadOnly(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->IsReadOnly());
}

// protected override sealed void OnPlaceholderColorChanged() :97
void MobileTextEdit__OnPlaceholderColorChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnPlaceholderColorChanged()");
    ::g::Fuse::Controls::TextEdit__OnPlaceholderColorChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::PlaceholderColor(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->PlaceholderColor());

    __this->InvalidateVisual();
    __this->InvalidateRenderer();
}

// protected override sealed void OnPlaceholderTextChanged() :86
void MobileTextEdit__OnPlaceholderTextChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnPlaceholderTextChanged()");
    ::g::Fuse::Controls::TextEdit__OnPlaceholderTextChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::PlaceholderText(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->PlaceholderText());

    __this->InvalidateVisual();
    __this->InvalidateLayout(2);
    __this->InvalidateRenderer();
}

// protected override sealed extern void OnRooted() :39
void MobileTextEdit__OnRooted_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnRooted()");
    ::g::Fuse::Controls::TextControl__OnRooted_fn(__this);

    if (__this->VisualContext() == 1)
    {
        __this->_textEdit = __this->InstatiateTextEdit();
        __this->NativeView(__this->_textEdit);
        __this->_singelViewHost = ::g::Fuse::Controls::SingleViewHost::New2(0, uAs< ::g::Fuse::Controls::Native::ViewHandle*>(__this->_textEdit, ::g::Fuse::Controls::Native::ViewHandle_typeof()), __this->InstatiateRenderer());
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_singelViewHost);
        __this->PushPropertiesToNativeView();
        __this->InvalidateNativeViewHost();
    }
}

// protected override sealed void OnSelectionColorChanged() :58
void MobileTextEdit__OnSelectionColorChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnSelectionColorChanged()");
    ::g::Fuse::Controls::TextEdit__OnSelectionColorChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::SelectionColor(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->SelectionColor());
}

// protected override sealed extern void OnUnrooted() :75
void MobileTextEdit__OnUnrooted_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnUnrooted()");
    bool ret3;
    ::g::Fuse::Controls::TextControl__OnUnrooted_fn(__this);

    if (__this->_singelViewHost != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_singelViewHost, &ret3);
        uPtr(__this->_singelViewHost)->Dispose();
        __this->_singelViewHost = NULL;
    }

    if (__this->_textEdit != NULL)
    {
        ::g::Uno::IDisposable::Dispose(uInterface(uPtr(__this->_textEdit), ::TYPES[68/*Uno.IDisposable*/]));
        __this->_textEdit = NULL;
    }

    __this->NativeView(NULL);
}

// protected override sealed void OnValueChanged(Uno.UX.IPropertyListener origin) :92
void MobileTextEdit__OnValueChanged_fn(MobileTextEdit* __this, uObject* origin)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnValueChanged(Uno.UX.IPropertyListener)");
    ::g::Fuse::Controls::TextControl__OnValueChanged_fn(__this, origin);
}

// protected override sealed void PushPropertiesToNativeView() :14
void MobileTextEdit__PushPropertiesToNativeView_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::TextControl__PushPropertiesToNativeView_fn(__this);
    uObject* tv = uAs<uObject*>(__this->NativeView(), ::g::Fuse::Controls::Native::ITextEdit_typeof());
    ::g::Fuse::Controls::Native::ITextEdit::IsPassword(uInterface(uPtr(tv), ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->IsPassword());
    ::g::Fuse::Controls::Native::ITextEdit::IsReadOnly(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->IsReadOnly());
    ::g::Fuse::Controls::Native::ITextEdit::InputHint(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->InputHint());
    ::g::Fuse::Controls::Native::ITextEdit::CaretColor(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->CaretColor());
    ::g::Fuse::Controls::Native::ITextEdit::SelectionColor(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->SelectionColor());
    ::g::Fuse::Controls::Native::ITextEdit::ActionStyle(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->ActionStyle());
    ::g::Fuse::Controls::Native::ITextEdit::AutoCorrectHint(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->AutoCorrectHint());
    ::g::Fuse::Controls::Native::ITextEdit::AutoCapitalizationHint(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->AutoCapitalizationHint());
    ::g::Fuse::Controls::Native::ITextEdit::PlaceholderText(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->PlaceholderText());
    ::g::Fuse::Controls::Native::ITextEdit::PlaceholderColor(uInterface(tv, ::g::Fuse::Controls::Native::ITextEdit_typeof()), __this->PlaceholderColor());
}

// internal override sealed string get_RenderValue() :30
void MobileTextEdit__get_RenderValue_fn(MobileTextEdit* __this, uString** __retval)
{
    return *__retval = NULL, void();
}

// public MobileTextEdit(bool multiline) [instance] :13
void MobileTextEdit::ctor_8(bool multiline)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", ".ctor(bool)");
    ctor_7(multiline);
    _isMultiline1 = multiline;
    MobileTextEdit__AndroidTemplate* androidAppearance = MobileTextEdit__AndroidTemplate::New2(this);
    MobileTextEdit__iOSTemplate* iosAppearance = MobileTextEdit__iOSTemplate::New2(this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), androidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iosAppearance);
}

// private extern void DisableRenderToTexture() [instance] :142
void MobileTextEdit::DisableRenderToTexture()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "DisableRenderToTexture()");

    if (_singelViewHost != NULL)
        uPtr(_singelViewHost)->RenderToTexture(1);
}

// private extern void EnabledRenderToTexture() [instance] :153
void MobileTextEdit::EnabledRenderToTexture()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "EnabledRenderToTexture()");

    if (_singelViewHost != NULL)
    {
        uPtr(_singelViewHost)->RenderToTexture(0);
        uPtr(_singelViewHost)->InvalidateVisual();
        uPtr(_singelViewHost)->InvalidateRenderBounds();
    }
}

// private Fuse.Controls.Native.ITextEdit GetITextEdit() [instance] :9
uObject* MobileTextEdit::GetITextEdit()
{
    return uAs<uObject*>(NativeView(), ::g::Fuse::Controls::Native::ITextEdit_typeof());
}

// private extern Fuse.Controls.Native.IViewHandleRenderer InstatiateRenderer() [instance] :66
uObject* MobileTextEdit::InstatiateRenderer()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "InstatiateRenderer()");
    return ::g::Fuse::Controls::TextEditRenderer::NewRenderer(this, _isMultiline1);
}

// private extern Fuse.Controls.Native.ITextEdit InstatiateTextEdit() [instance] :57
uObject* MobileTextEdit::InstatiateTextEdit()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "InstatiateTextEdit()");
    return uAs<uObject*>(uPtr(FindTemplate(::STRINGS[0/*"AndroidAppe...*/]))->New1(), ::g::Fuse::Controls::Native::ITextEdit_typeof());
}

// private extern void InvalidateNativeViewHost() [instance] :166
void MobileTextEdit::InvalidateNativeViewHost()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "InvalidateNativeViewHost()");

    if (_singelViewHost != NULL)
    {
        uPtr(_singelViewHost)->InvalidateVisual();
        uPtr(_singelViewHost)->InvalidateLayout(2);
    }
}

// private Fuse.Controls.Native.ITextEdit get_NativeEdit() [instance] :24
uObject* MobileTextEdit::NativeEdit()
{
    uObject* ind1;
    ind1 = _textEdit;
    return (ind1 != NULL) ? ind1 : uAs<uObject*>(NativeView(), ::g::Fuse::Controls::Native::ITextEdit_typeof());
}

// public MobileTextEdit New(bool multiline) [static] :13
MobileTextEdit* MobileTextEdit::New3(bool multiline)
{
    MobileTextEdit* obj2 = (MobileTextEdit*)uNew(MobileTextEdit_typeof());
    obj2->ctor_8(multiline);
    return obj2;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\MultiLayoutPanel.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class MultiLayout :11
// {
static void MultiLayout_build(uType* type)
{
    ::TYPES[40] = ::g::Fuse::Visual_typeof()->MakeMethod(2/*FirstChild<Fuse.Controls.MultiLayout>*/, type, NULL);
    ::TYPES[41] = ::g::Fuse::Controls::Placeholder_typeof();
    ::TYPES[9] = ::g::Fuse::Visual_typeof()->MakeMethod(2/*FirstChild<Fuse.Visual>*/, ::g::Fuse::Visual_typeof(), NULL);
    ::TYPES[42] = ::g::Fuse::Node_typeof()->MakeMethod(3/*NextSibling<Fuse.Visual>*/, ::g::Fuse::Visual_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Node_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Node_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Node_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface5));
    type->SetFields(16,
        ::g::Fuse::Elements::Element_typeof(), offsetof(MultiLayout, _layoutElement), 0);
    type->Reflection.SetFunctions(3,
        new uFunction("get_LayoutElement", NULL, (void*)MultiLayout__get_LayoutElement_fn, 0, false, ::g::Fuse::Elements::Element_typeof(), 0),
        new uFunction("set_LayoutElement", NULL, (void*)MultiLayout__set_LayoutElement_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction(".ctor", NULL, (void*)MultiLayout__New2_fn, 0, true, type, 0));
}

::g::Fuse::Node_type* MultiLayout_typeof()
{
    static uSStrong< ::g::Fuse::Node_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Behavior_typeof();
    options.FieldCount = 17;
    options.InterfaceCount = 6;
    options.ObjectSize = sizeof(MultiLayout);
    options.TypeSize = sizeof(::g::Fuse::Node_type);
    type = (::g::Fuse::Node_type*)uClassType::New("Fuse.Controls.MultiLayout", options);
    type->fp_build_ = MultiLayout_build;
    type->fp_ctor_ = (void*)MultiLayout__New2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))MultiLayout__OnRooted_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated MultiLayout() :11
void MultiLayout__ctor_3_fn(MultiLayout* __this)
{
    __this->ctor_3();
}

// private void ChangeLayout(Fuse.Visual layoutRoot) :20
void MultiLayout__ChangeLayout_fn(MultiLayout* __this, ::g::Fuse::Visual* layoutRoot)
{
    __this->ChangeLayout(layoutRoot);
}

// public Fuse.Elements.Element get_LayoutElement() :40
void MultiLayout__get_LayoutElement_fn(MultiLayout* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->LayoutElement();
}

// public void set_LayoutElement(Fuse.Elements.Element value) :44
void MultiLayout__set_LayoutElement_fn(MultiLayout* __this, ::g::Fuse::Elements::Element* value)
{
    __this->LayoutElement(value);
}

// public generated MultiLayout New() :11
void MultiLayout__New2_fn(MultiLayout** __retval)
{
    *__retval = MultiLayout::New2();
}

// protected override sealed void OnRooted() :13
void MultiLayout__OnRooted_fn(MultiLayout* __this)
{
    uStackFrame __("Fuse.Controls.MultiLayout", "OnRooted()");
    ::g::Fuse::Node__OnRooted_fn(__this);
    __this->ChangeLayout(__this->_layoutElement);
}

// public generated MultiLayout() [instance] :11
void MultiLayout::ctor_3()
{
    ctor_2();
}

// private void ChangeLayout(Fuse.Visual layoutRoot) [instance] :20
void MultiLayout::ChangeLayout(::g::Fuse::Visual* layoutRoot)
{
    uStackFrame __("Fuse.Controls.MultiLayout", "ChangeLayout(Fuse.Visual)");

    if (layoutRoot == NULL)
        return;

    if (((MultiLayout*)uPtr(layoutRoot)->FirstChild(::TYPES[40/*Fuse.Visual.FirstChild<Fuse.Controls.MultiLayout>*/])) != NULL)
        return;

    if (uIs(layoutRoot, ::TYPES[41/*Fuse.Controls.Placeholder*/]))
        uPtr(uCast< ::g::Fuse::Controls::Placeholder*>(layoutRoot, ::TYPES[41/*Fuse.Controls.Placeholder*/]))->AcquireTarget();

    for (::g::Fuse::Visual* v = (::g::Fuse::Visual*)uPtr(layoutRoot)->FirstChild(::TYPES[9/*Fuse.Visual.FirstChild<Fuse.Visual>*/]); v != NULL; v = (::g::Fuse::Visual*)uPtr(v)->NextSibling(::TYPES[42/*Fuse.Node.NextSibling<Fuse.Visual>*/]))
        ChangeLayout(v);
}

// public Fuse.Elements.Element get_LayoutElement() [instance] :40
::g::Fuse::Elements::Element* MultiLayout::LayoutElement()
{
    return _layoutElement;
}

// public void set_LayoutElement(Fuse.Elements.Element value) [instance] :44
void MultiLayout::LayoutElement(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.MultiLayout", "set_LayoutElement(Fuse.Elements.Element)");

    if (_layoutElement != value)
    {
        _layoutElement = value;
        ChangeLayout(_layoutElement);
    }
}

// public generated MultiLayout New() [static] :11
MultiLayout* MultiLayout::New2()
{
    MultiLayout* obj1 = (MultiLayout*)uNew(MultiLayout_typeof());
    obj1->ctor_3();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\MultiLayoutPanel.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class MultiLayoutPanel :99
// {
static void MultiLayoutPanel_build(uType* type)
{
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Controls::MultiLayout_typeof(), offsetof(MultiLayoutPanel, _multiLayout), 0);
    type->Reflection.SetFunctions(3,
        new uFunction("get_LayoutElement", NULL, (void*)MultiLayoutPanel__get_LayoutElement_fn, 0, false, ::g::Fuse::Elements::Element_typeof(), 0),
        new uFunction("set_LayoutElement", NULL, (void*)MultiLayoutPanel__set_LayoutElement_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction(".ctor", NULL, (void*)MultiLayoutPanel__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* MultiLayoutPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(MultiLayoutPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.MultiLayoutPanel", options);
    type->fp_build_ = MultiLayoutPanel_build;
    type->fp_ctor_ = (void*)MultiLayoutPanel__New4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public MultiLayoutPanel() :102
void MultiLayoutPanel__ctor_7_fn(MultiLayoutPanel* __this)
{
    __this->ctor_7();
}

// public Fuse.Elements.Element get_LayoutElement() :109
void MultiLayoutPanel__get_LayoutElement_fn(MultiLayoutPanel* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->LayoutElement();
}

// public void set_LayoutElement(Fuse.Elements.Element value) :110
void MultiLayoutPanel__set_LayoutElement_fn(MultiLayoutPanel* __this, ::g::Fuse::Elements::Element* value)
{
    __this->LayoutElement(value);
}

// public MultiLayoutPanel New() :102
void MultiLayoutPanel__New4_fn(MultiLayoutPanel** __retval)
{
    *__retval = MultiLayoutPanel::New4();
}

// public MultiLayoutPanel() [instance] :102
void MultiLayoutPanel::ctor_7()
{
    uStackFrame __("Fuse.Controls.MultiLayoutPanel", ".ctor()");
    _multiLayout = ::g::Fuse::Controls::MultiLayout::New2();
    ctor_6();
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _multiLayout);
}

// public Fuse.Elements.Element get_LayoutElement() [instance] :109
::g::Fuse::Elements::Element* MultiLayoutPanel::LayoutElement()
{
    uStackFrame __("Fuse.Controls.MultiLayoutPanel", "get_LayoutElement()");
    return uPtr(_multiLayout)->LayoutElement();
}

// public void set_LayoutElement(Fuse.Elements.Element value) [instance] :110
void MultiLayoutPanel::LayoutElement(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.MultiLayoutPanel", "set_LayoutElement(Fuse.Elements.Element)");
    uPtr(_multiLayout)->LayoutElement(value);
}

// public MultiLayoutPanel New() [static] :102
MultiLayoutPanel* MultiLayoutPanel::New4()
{
    MultiLayoutPanel* obj1 = (MultiLayoutPanel*)uNew(MultiLayoutPanel_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\NativeViewHost.uno
// -------------------------------------------------------------------------------------------------

// public sealed class NativeViewHost :61
// {
static void NativeViewHost_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NativeViewHost_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(NativeViewHost_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(NativeViewHost_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(NativeViewHost_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NativeViewHost_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NativeViewHost_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NativeViewHost_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(NativeViewHost_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(NativeViewHost_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(NativeViewHost_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NativeViewHost_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NativeViewHost_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(NativeViewHost_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(NativeViewHost_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(NativeViewHost_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(NativeViewHost_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(NativeViewHost_type, interface16),
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(NativeViewHost_type, interface17),
        ::g::Fuse::Controls::Native::IOffscreenRendererHost_typeof(), offsetof(NativeViewHost_type, interface18));
    type->SetFields(110,
        ::g::Uno::Bool_typeof(), offsetof(NativeViewHost, _draw), 0,
        ::g::Uno::Bool_typeof(), offsetof(NativeViewHost, _renderToTexture), 0,
        ::g::Uno::IDisposable_typeof(), offsetof(NativeViewHost, _toggeling), 0,
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(NativeViewHost, _nativeRenderer), 0,
        ::g::Uno::Bool_typeof(), offsetof(NativeViewHost, _isVisible), 0,
        ::g::Fuse::Controls::IProxyHost_typeof(), offsetof(NativeViewHost, _proxyHost), 0,
        ::g::Fuse::Controls::Native::NativeViewRenderer_typeof(), offsetof(NativeViewHost, _glRenderer), 0,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(NativeViewHost, _root), 0,
        ::g::Uno::Bool_typeof(), offsetof(NativeViewHost, _offscreenEnabled), 0,
        ::g::Uno::Bool_typeof(), offsetof(NativeViewHost, _updateTransform), 0);
    type->Reflection.SetFunctions(4,
        new uFunction(".ctor", NULL, (void*)NativeViewHost__New3_fn, 0, true, type, 0),
        new uFunction(".ctor", NULL, (void*)NativeViewHost__New4_fn, 0, true, type, 1, NativeViewHost__InitialState_typeof()),
        new uFunction("get_RenderToTexture", NULL, (void*)NativeViewHost__get_RenderToTexture_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_RenderToTexture", NULL, (void*)NativeViewHost__set_RenderToTexture_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
}

NativeViewHost_type* NativeViewHost_typeof()
{
    static uSStrong<NativeViewHost_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 120;
    options.InterfaceCount = 19;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(NativeViewHost);
    options.TypeSize = sizeof(NativeViewHost_type);
    type = (NativeViewHost_type*)uClassType::New("Fuse.Controls.NativeViewHost", options);
    type->fp_build_ = NativeViewHost_build;
    type->fp_ctor_ = (void*)NativeViewHost__New3_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))NativeViewHost__CalcRenderBounds_fn;
    type->fp_DrawWithChildren = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))NativeViewHost__DrawWithChildren_fn;
    type->fp_OnInvalidateVisual = (void(*)(::g::Fuse::Visual*))NativeViewHost__OnInvalidateVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))NativeViewHost__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))NativeViewHost__OnUnrooted_fn;
    type->fp_get_TreeRenderer = (void(*)(::g::Fuse::Elements::Element*, uObject**))NativeViewHost__get_TreeRenderer_fn;
    type->fp_get_VisualContext = (void(*)(::g::Fuse::Visual*, int32_t*))NativeViewHost__get_VisualContext_fn;
    type->interface17.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererRootingStarted_fn;
    type->interface17.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererRooted_fn;
    type->interface17.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererUnrooted_fn;
    type->interface17.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))NativeViewHost__FuseElementsITreeRendererBackgroundChanged_fn;
    type->interface17.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))NativeViewHost__FuseElementsITreeRendererMeasure_fn;
    type->interface17.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))NativeViewHost__FuseElementsITreeRendererIsVisibleChanged_fn;
    type->interface17.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))NativeViewHost__FuseElementsITreeRendererIsEnabledChanged_fn;
    type->interface17.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))NativeViewHost__FuseElementsITreeRendererOpacityChanged_fn;
    type->interface17.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))NativeViewHost__FuseElementsITreeRendererClipToBoundsChanged_fn;
    type->interface17.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))NativeViewHost__FuseElementsITreeRendererHitTestModeChanged_fn;
    type->interface17.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, uArray*))NativeViewHost__FuseElementsITreeRendererZOrderChanged_fn;
    type->interface17.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererTransformChanged_fn;
    type->interface17.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererPlaced_fn;
    type->interface18.fp_get_RenderToTexture = (void(*)(uObject*, bool*))NativeViewHost__get_RenderToTexture_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public NativeViewHost() :137
void NativeViewHost__ctor_6_fn(NativeViewHost* __this)
{
    __this->ctor_6();
}

// public NativeViewHost(Fuse.Controls.NativeViewHost.InitialState initialState) :139
void NativeViewHost__ctor_7_fn(NativeViewHost* __this, int32_t* initialState)
{
    __this->ctor_7(*initialState);
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :196
void NativeViewHost__CalcRenderBounds_fn(NativeViewHost* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret4;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret4), ret4);

    if (__this->_draw)
        b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());

    return *__retval = b, void();
}

// private float4x4 CalcTransform() :387
void NativeViewHost__CalcTransform_fn(NativeViewHost* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->CalcTransform();
}

// private extern void ClearRoot(Fuse.Controls.Native.ViewHandle viewHandle) :344
void NativeViewHost__ClearRoot_fn(NativeViewHost* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    __this->ClearRoot(viewHandle);
}

// private void DisableOffscreen() :359
void NativeViewHost__DisableOffscreen_fn(NativeViewHost* __this)
{
    __this->DisableOffscreen();
}

// protected override sealed extern void DrawWithChildren(Fuse.DrawContext dc) :183
void NativeViewHost__DrawWithChildren_fn(NativeViewHost* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "DrawWithChildren(Fuse.DrawContext)");

    if (!__this->IsInGraphicsContext())
        ::g::Fuse::Elements::Element__DrawWithChildren_fn(__this, dc);
    else if (__this->_draw && (__this->_glRenderer != NULL))
        uPtr(__this->_glRenderer)->Draw(__this->_root, uPtr(dc)->GetLocalToClipTransform(__this), ::g::Uno::Float2__New1(0.0f), __this->ActualSize(), ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/])));
}

// private void EnableOffscreen() :350
void NativeViewHost__EnableOffscreen_fn(NativeViewHost* __this)
{
    __this->EnableOffscreen();
}

// private void Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :243
void NativeViewHost__FuseElementsITreeRendererBackgroundChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element,Fuse.Drawing.Brush)");
    ::g::Fuse::Elements::ITreeRenderer::BackgroundChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, background);
}

// private void Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :268
void NativeViewHost__FuseElementsITreeRendererClipToBoundsChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element,bool)");
    bool clipToBounds_ = *clipToBounds;
    ::g::Fuse::Elements::ITreeRenderer::ClipToBoundsChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, clipToBounds_);
}

// private void Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :270
void NativeViewHost__FuseElementsITreeRendererHitTestModeChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element,bool)");
    bool enabled_ = *enabled;
    ::g::Fuse::Elements::ITreeRenderer::HitTestModeChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, enabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :264
void NativeViewHost__FuseElementsITreeRendererIsEnabledChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element,bool)");
    bool isEnabled_ = *isEnabled;
    ::g::Fuse::Elements::ITreeRenderer::IsEnabledChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, isEnabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :248
void NativeViewHost__FuseElementsITreeRendererIsVisibleChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element,bool)");
    bool isVisible_ = *isVisible;

    if (e == __this)
    {
        __this->_isVisible = isVisible_;

        if (__this->_isVisible)
            __this->DisableOffscreen();
        else
            __this->EnableOffscreen();
    }
    else
        ::g::Fuse::Elements::ITreeRenderer::IsVisibleChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, isVisible_);
}

// private bool Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :245
void NativeViewHost__FuseElementsITreeRendererMeasure_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element,Fuse.LayoutParams,float2&)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    return *__retval = ::g::Fuse::Elements::ITreeRenderer::Measure(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, lp_, size), void();
}

// private void Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element e, float opacity) :266
void NativeViewHost__FuseElementsITreeRendererOpacityChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element,float)");
    float opacity_ = *opacity;
    ::g::Fuse::Elements::ITreeRenderer::OpacityChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, opacity_);
}

// private extern void Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element e) :283
void NativeViewHost__FuseElementsITreeRendererPlaced_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element)");

    if (e == __this)
        __this->UpdateHostViewTransform();
    else
        ::g::Fuse::Elements::ITreeRenderer::Placed(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element e) :239
void NativeViewHost__FuseElementsITreeRendererRooted_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Rooted(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element e) :237
void NativeViewHost__FuseElementsITreeRendererRootingStarted_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::RootingStarted(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element e) :274
void NativeViewHost__FuseElementsITreeRendererTransformChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element)");

    if (e == __this)
        __this->UpdateHostViewTransform();
    else
        ::g::Fuse::Elements::ITreeRenderer::TransformChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element e) :241
void NativeViewHost__FuseElementsITreeRendererUnrooted_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Unrooted(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element e, Fuse.Visual[] zorder) :272
void NativeViewHost__FuseElementsITreeRendererZOrderChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, uArray* zorder)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element,Fuse.Visual[])");
    ::g::Fuse::Elements::ITreeRenderer::ZOrderChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[10/*Fuse.Elements.ITreeRenderer*/]), e, zorder);
}

// private bool get_IsInGraphicsContext() :221
void NativeViewHost__get_IsInGraphicsContext_fn(NativeViewHost* __this, bool* __retval)
{
    *__retval = __this->IsInGraphicsContext();
}

// public NativeViewHost New() :137
void NativeViewHost__New3_fn(NativeViewHost** __retval)
{
    *__retval = NativeViewHost::New3();
}

// public NativeViewHost New(Fuse.Controls.NativeViewHost.InitialState initialState) :139
void NativeViewHost__New4_fn(int32_t* initialState, NativeViewHost** __retval)
{
    *__retval = NativeViewHost::New4(*initialState);
}

// protected override sealed extern void OnInvalidateVisual() :175
void NativeViewHost__OnInvalidateVisual_fn(NativeViewHost* __this)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "OnInvalidateVisual()");
    ::g::Fuse::Controls::Control__OnInvalidateVisual_fn(__this);

    if (__this->_glRenderer != NULL)
        uPtr(__this->_glRenderer)->Invalidate();
}

// private extern void OnInvalidateWorldTransform(object sender, Uno.EventArgs args) :417
void NativeViewHost__OnInvalidateWorldTransform_fn(NativeViewHost* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnInvalidateWorldTransform(sender, args);
}

// protected override sealed extern void OnRooted() :311
void NativeViewHost__OnRooted_fn(NativeViewHost* __this)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "OnRooted()");
    __this->add_WorldTransformInvalidated(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)NativeViewHost__OnInvalidateWorldTransform_fn, __this));

    if (__this->IsInGraphicsContext())
    {
        __this->_glRenderer = ::g::Fuse::Controls::Native::NativeViewRenderer::New1();
        __this->_root = ::g::Fuse::Controls::Native::ViewFactory::InstantiateViewGroup();
        __this->_proxyHost = ::g::Fuse::Controls::IProxyHostExtensions::FindProxyHost(__this);

        if (__this->_proxyHost == NULL)
            ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition(__this, uString::Const(" could not find an IProxyHost")), NULL, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\NativeViewHost.uno"), 322, ::STRINGS[44/*"OnRooted"*/]);

        __this->_nativeRenderer = (uObject*)::g::Fuse::Controls::TreeRenderer::New1(uDelegate::New(::TYPES[93/*Uno.Action<Fuse.Controls.Native.ViewHandle>*/], (void*)NativeViewHost__SetRoot_fn, __this), uDelegate::New(::TYPES[93/*Uno.Action<Fuse.Controls.Native.ViewHandle>*/], (void*)NativeViewHost__ClearRoot_fn, __this));

        if (__this->_proxyHost != NULL)
        {
            if (!__this->_offscreenEnabled)
                ::g::Fuse::Controls::IProxyHost::Insert(uInterface(uPtr(__this->_proxyHost), ::TYPES[35/*Fuse.Controls.IProxyHost*/]), __this->_root);
        }
        else
            ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition(__this, uString::Const(" does not have an IProxyHost and will malfunction")), NULL, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\NativeViewHost.uno"), 332, ::STRINGS[44/*"OnRooted"*/]);
    }

    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
}

// protected override sealed extern void OnUnrooted() :395
void NativeViewHost__OnUnrooted_fn(NativeViewHost* __this)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "OnUnrooted()");
    __this->remove_WorldTransformInvalidated(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)NativeViewHost__OnInvalidateWorldTransform_fn, __this));

    if ((__this->IsInGraphicsContext() && (__this->_proxyHost != NULL)) && !__this->_offscreenEnabled)
        ::g::Fuse::Controls::IProxyHost::Remove(uInterface(uPtr(__this->_proxyHost), ::TYPES[35/*Fuse.Controls.IProxyHost*/]), __this->_root);

    if (__this->IsInGraphicsContext())
        uPtr(__this->_glRenderer)->Dispose();

    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
    __this->_root = NULL;
    __this->_nativeRenderer = NULL;
    __this->_proxyHost = NULL;
    __this->_glRenderer = NULL;
}

// private extern void PostUpdateTransform() :426
void NativeViewHost__PostUpdateTransform_fn(NativeViewHost* __this)
{
    __this->PostUpdateTransform();
}

// public bool get_RenderToTexture() :157
void NativeViewHost__get_RenderToTexture_fn(NativeViewHost* __this, bool* __retval)
{
    *__retval = __this->RenderToTexture();
}

// public void set_RenderToTexture(bool value) :158
void NativeViewHost__set_RenderToTexture_fn(NativeViewHost* __this, bool* value)
{
    __this->RenderToTexture(*value);
}

// private extern void SetRoot(Fuse.Controls.Native.ViewHandle viewHandle) :338
void NativeViewHost__SetRoot_fn(NativeViewHost* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    __this->SetRoot(viewHandle);
}

// public override sealed Fuse.Elements.ITreeRenderer get_TreeRenderer() :226
void NativeViewHost__get_TreeRenderer_fn(NativeViewHost* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "get_TreeRenderer()");
    uObject* ret6;
    return *__retval = __this->IsInGraphicsContext() ? (uObject*)__this : (::g::Fuse::Elements::Element__get_TreeRenderer_fn(__this, &ret6), ret6), void();
}

// private extern void UpdateHostViewTransform() :370
void NativeViewHost__UpdateHostViewTransform_fn(NativeViewHost* __this)
{
    __this->UpdateHostViewTransform();
}

// public override sealed Fuse.VisualContext get_VisualContext() :211
void NativeViewHost__get_VisualContext_fn(NativeViewHost* __this, int32_t* __retval)
{
    return *__retval = 2, void();
}

// public NativeViewHost() [instance] :137
void NativeViewHost::ctor_6()
{
    _isVisible = true;
    ctor_7(1);
}

// public NativeViewHost(Fuse.Controls.NativeViewHost.InitialState initialState) [instance] :139
void NativeViewHost::ctor_7(int32_t initialState)
{
    _isVisible = true;
    ctor_5();
    bool renderToTexture = initialState == 0;
    _draw = renderToTexture;
    _renderToTexture = renderToTexture;
    _offscreenEnabled = renderToTexture;
}

// private float4x4 CalcTransform() [instance] :387
::g::Uno::Float4x4 NativeViewHost::CalcTransform()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "CalcTransform()");
    return IsInGraphicsContext() ? ::g::Uno::Matrix::Mul8(::g::Fuse::Controls::IProxyHost::WorldTransformInverse(uInterface(uPtr(_proxyHost), ::TYPES[35/*Fuse.Controls.IProxyHost*/])), WorldTransform()) : LocalTransform();
}

// private extern void ClearRoot(Fuse.Controls.Native.ViewHandle viewHandle) [instance] :344
void NativeViewHost::ClearRoot(::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "ClearRoot(Fuse.Controls.Native.ViewHandle)");
    uPtr(_root)->RemoveChild(viewHandle);
}

// private void DisableOffscreen() [instance] :359
void NativeViewHost::DisableOffscreen()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "DisableOffscreen()");

    if (_offscreenEnabled && _isVisible)
    {
        ::g::Fuse::Controls::IProxyHost::Insert(uInterface(uPtr(_proxyHost), ::TYPES[35/*Fuse.Controls.IProxyHost*/]), _root);
        _offscreenEnabled = false;
    }
}

// private void EnableOffscreen() [instance] :350
void NativeViewHost::EnableOffscreen()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "EnableOffscreen()");

    if (!_offscreenEnabled && !_isVisible)
    {
        ::g::Fuse::Controls::IProxyHost::Remove(uInterface(uPtr(_proxyHost), ::TYPES[35/*Fuse.Controls.IProxyHost*/]), _root);
        _offscreenEnabled = true;
    }
}

// private bool get_IsInGraphicsContext() [instance] :221
bool NativeViewHost::IsInGraphicsContext()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "get_IsInGraphicsContext()");
    int32_t ret5;
    return (::g::Fuse::Visual__get_VisualContext_fn(this, &ret5), ret5) == 1;
}

// private extern void OnInvalidateWorldTransform(object sender, Uno.EventArgs args) [instance] :417
void NativeViewHost::OnInvalidateWorldTransform(uObject* sender, ::g::Uno::EventArgs* args)
{
    if (RenderToTexture() || !IsInGraphicsContext())
        return;

    PostUpdateTransform();
}

// private extern void PostUpdateTransform() [instance] :426
void NativeViewHost::PostUpdateTransform()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "PostUpdateTransform()");

    if (!_updateTransform)
    {
        ::g::Fuse::UpdateManager::AddDeferredAction2(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)NativeViewHost__UpdateHostViewTransform_fn, this), 1, 5);
        _updateTransform = true;
    }
}

// public bool get_RenderToTexture() [instance] :157
bool NativeViewHost::RenderToTexture()
{
    return _renderToTexture;
}

// public void set_RenderToTexture(bool value) [instance] :158
void NativeViewHost::RenderToTexture(bool value)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "set_RenderToTexture(bool)");

    if (_renderToTexture == value)
        return;

    _renderToTexture = value;

    if (_toggeling != NULL)
        ::g::Uno::IDisposable::Dispose(uInterface(uPtr(_toggeling), ::TYPES[68/*Uno.IDisposable*/]));

    if (_renderToTexture)
        _toggeling = (uObject*)NativeViewHost__Enable::New1(this);
    else
        _toggeling = (uObject*)NativeViewHost__Disable::New1(this);
}

// private extern void SetRoot(Fuse.Controls.Native.ViewHandle viewHandle) [instance] :338
void NativeViewHost::SetRoot(::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "SetRoot(Fuse.Controls.Native.ViewHandle)");
    uPtr(_root)->InsertChild(viewHandle);
}

// private extern void UpdateHostViewTransform() [instance] :370
void NativeViewHost::UpdateHostViewTransform()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "UpdateHostViewTransform()");
    _updateTransform = false;

    if (_root == NULL)
        return;

    ::g::Uno::Float4x4 transform = CalcTransform();
    ::g::Uno::Float2 size = ActualSize();
    float density = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/]));
    ::g::Fuse::Visual* p = Parent();

    if (uIs(p, ::TYPES[18/*Fuse.Controls.Control*/]))
        uPtr(uCast< ::g::Fuse::Controls::Control*>(p, ::TYPES[18/*Fuse.Controls.Control*/]))->CompensateForScrollView(&transform);

    uPtr(_root)->UpdateViewRect(transform, size, density);
}

// public NativeViewHost New() [static] :137
NativeViewHost* NativeViewHost::New3()
{
    NativeViewHost* obj2 = (NativeViewHost*)uNew(NativeViewHost_typeof());
    obj2->ctor_6();
    return obj2;
}

// public NativeViewHost New(Fuse.Controls.NativeViewHost.InitialState initialState) [static] :139
NativeViewHost* NativeViewHost::New4(int32_t initialState)
{
    NativeViewHost* obj3 = (NativeViewHost*)uNew(NativeViewHost_typeof());
    obj3->ctor_7(initialState);
    return obj3;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigation.uno
// -------------------------------------------------------------------------------------------------

// public sealed class NavigationBar :11
// {
static void NavigationBar_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)NavigationBar__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* NavigationBar_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 117;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(NavigationBar);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.NavigationBar", options);
    type->fp_build_ = NavigationBar_build;
    type->fp_ctor_ = (void*)NavigationBar__New4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated NavigationBar() :11
void NavigationBar__ctor_7_fn(NavigationBar* __this)
{
    __this->ctor_7();
}

// public generated NavigationBar New() :11
void NavigationBar__New4_fn(NavigationBar** __retval)
{
    *__retval = NavigationBar::New4();
}

// public generated NavigationBar() [instance] :11
void NavigationBar::ctor_7()
{
    ctor_6();
}

// public generated NavigationBar New() [static] :11
NavigationBar* NavigationBar::New4()
{
    NavigationBar* obj1 = (NavigationBar*)uNew(NavigationBar_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigationControl.BlockInput.uno
// -------------------------------------------------------------------------------------------------------------------

// public interfacemodifiers class NavigationControl :13
// {
// static NavigationControl() :11
static void NavigationControl__cctor_4_fn(uType* __type)
{
    ::g::Fuse::Properties_typeof()->Init();
    ::g::Fuse::Scripting::ScriptClass_typeof()->Init();
    NavigationControl::_propTransition_ = ::g::Fuse::Properties::CreateHandle();
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[29/*Fuse.Scripting.ScriptMember[]*/], 3, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("gotoPath"), uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)NavigationControl__gotoPath_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("seekToPath"), uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)NavigationControl__seekToPath_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("modifyPath"), uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)NavigationControl__modifyPath_fn))));
}

static void NavigationControl_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Navigation::Navigation_typeof(),
        ::g::Fuse::Navigation::PageData_typeof(),
        ::g::Fuse::Navigation::Router_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NavigationControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(NavigationControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(NavigationControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(NavigationControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NavigationControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NavigationControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NavigationControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(NavigationControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(NavigationControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(NavigationControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NavigationControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NavigationControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(NavigationControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(NavigationControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(NavigationControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(NavigationControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(NavigationControl_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(NavigationControl_type, interface17),
        ::g::Fuse::Navigation::INavigation_typeof(), offsetof(NavigationControl_type, interface18),
        ::g::Fuse::Reactive::IObserver_typeof(), offsetof(NavigationControl_type, interface19),
        ::g::Fuse::Node__ISubtreeDataProvider_typeof(), offsetof(NavigationControl_type, interface20),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(NavigationControl_type, interface21));
    type->SetFields(117,
        ::g::Fuse::Controls::NavigationControlBlockInput_typeof(), offsetof(NavigationControl, _blockInput), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(NavigationControl, _blockInputTrigger), 0,
        ::g::Fuse::IArray_typeof(), offsetof(NavigationControl, _pageHistory), 0,
        ::g::Uno::Int_typeof(), offsetof(NavigationControl, _curPageIndex), 0,
        ::g::Fuse::Controls::NavigationControlTransition_typeof(), offsetof(NavigationControl, _transition), 0,
        ::g::Fuse::Navigation::VisualNavigation_typeof(), offsetof(NavigationControl, _navigation), 0,
        ::g::Uno::Bool_typeof(), offsetof(NavigationControl, _isRouterOutlet), 0,
        ::g::Fuse::Visual_typeof(), offsetof(NavigationControl, _AncestorPage), 0,
        ::g::Fuse::Navigation::RouterPage_typeof(), offsetof(NavigationControl, _AncestorRouterPage), 0,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&NavigationControl::_propTransition_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(30,
        new uFunction("get_Active", NULL, (void*)NavigationControl__get_Active_fn, 0, false, ::g::Fuse::Visual_typeof(), 0),
        new uFunction("set_Active", NULL, (void*)NavigationControl__set_Active_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("add_ActivePageChanged", NULL, (void*)NavigationControl__add_ActivePageChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::ActivePageChangedHandler_typeof()),
        new uFunction("remove_ActivePageChanged", NULL, (void*)NavigationControl__remove_ActivePageChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::ActivePageChangedHandler_typeof()),
        new uFunction("get_BlockInput", NULL, (void*)NavigationControl__get_BlockInput_fn, 0, false, ::g::Fuse::Controls::NavigationControlBlockInput_typeof(), 0),
        new uFunction("set_BlockInput", NULL, (void*)NavigationControl__set_BlockInput_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigationControlBlockInput_typeof()),
        new uFunction("get_CanGoBack", NULL, (void*)NavigationControl__get_CanGoBack_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanGoForward", NULL, (void*)NavigationControl__get_CanGoForward_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("GetTransition", NULL, (void*)NavigationControl__GetTransition_fn, 0, true, ::g::Fuse::Controls::NavigationControlTransition_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("GoBack", NULL, (void*)NavigationControl__GoBack_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("GoForward", NULL, (void*)NavigationControl__GoForward_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("Goto", NULL, (void*)NavigationControl__Goto_fn, 0, false, uVoid_typeof(), 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Navigation::NavigationGotoMode_typeof()),
        new uFunction("add_HistoryChanged", NULL, (void*)NavigationControl__add_HistoryChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::HistoryChangedHandler_typeof()),
        new uFunction("remove_HistoryChanged", NULL, (void*)NavigationControl__remove_HistoryChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::HistoryChangedHandler_typeof()),
        new uFunction("get_IsRouterOutlet", NULL, (void*)NavigationControl__get_IsRouterOutlet_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsRouterOutlet", NULL, (void*)NavigationControl__set_IsRouterOutlet_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("add_Navigated", NULL, (void*)NavigationControl__add_Navigated_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigatedHandler_typeof()),
        new uFunction("remove_Navigated", NULL, (void*)NavigationControl__remove_Navigated_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigatedHandler_typeof()),
        new uFunction("add_PageCountChanged", NULL, (void*)NavigationControl__add_PageCountChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigationPageCountHandler_typeof()),
        new uFunction("remove_PageCountChanged", NULL, (void*)NavigationControl__remove_PageCountChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigationPageCountHandler_typeof()),
        new uFunction("get_PageHistory", NULL, (void*)NavigationControl__get_PageHistory_fn, 0, false, ::g::Fuse::IArray_typeof(), 0),
        new uFunction("set_PageHistory", NULL, (void*)NavigationControl__set_PageHistory_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::IArray_typeof()),
        new uFunction("add_PageProgressChanged", NULL, (void*)NavigationControl__add_PageProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigationHandler_typeof()),
        new uFunction("remove_PageProgressChanged", NULL, (void*)NavigationControl__remove_PageProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigationHandler_typeof()),
        new uFunction("SetTransition", NULL, (void*)NavigationControl__SetTransition_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Controls::NavigationControlTransition_typeof()),
        new uFunction("add_StateChanged", NULL, (void*)NavigationControl__add_StateChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Fuse::Navigation::NavigationState_typeof(), NULL)),
        new uFunction("remove_StateChanged", NULL, (void*)NavigationControl__remove_StateChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Fuse::Navigation::NavigationState_typeof(), NULL)),
        new uFunction("Toggle", NULL, (void*)NavigationControl__Toggle_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("get_Transition", NULL, (void*)NavigationControl__get_Transition_fn, 0, false, ::g::Fuse::Controls::NavigationControlTransition_typeof(), 0),
        new uFunction("set_Transition", NULL, (void*)NavigationControl__set_Transition_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigationControlTransition_typeof()));
}

NavigationControl_type* NavigationControl_typeof()
{
    static uSStrong<NavigationControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 127;
    options.InterfaceCount = 22;
    options.DependencyCount = 3;
    options.ObjectSize = sizeof(NavigationControl);
    options.TypeSize = sizeof(NavigationControl_type);
    type = (NavigationControl_type*)uClassType::New("Fuse.Controls.NavigationControl", options);
    type->fp_build_ = NavigationControl_build;
    type->fp_cctor_ = NavigationControl__cctor_4_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))NavigationControl__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))NavigationControl__OnChildRemoved_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))NavigationControl__OnRooted_fn;
    type->fp_OnRootedPreChildren = (void(*)(::g::Fuse::Visual*))NavigationControl__OnRootedPreChildren_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))NavigationControl__OnUnrooted_fn;
    type->fp_UpdateInteraction = NavigationControl__UpdateInteraction_fn;
    type->fp_UpdateProgress = NavigationControl__UpdateProgress_fn;
    type->interface19.fp_OnSet = (void(*)(uObject*, uObject*))NavigationControl__FuseReactiveIObserverOnSet_fn;
    type->interface19.fp_OnFailed = (void(*)(uObject*, uString*))NavigationControl__FuseReactiveIObserverOnFailed_fn;
    type->interface19.fp_OnAdd = (void(*)(uObject*, uObject*))NavigationControl__FuseReactiveIObserverOnAdd_fn;
    type->interface19.fp_OnRemoveAt = (void(*)(uObject*, int32_t*))NavigationControl__FuseReactiveIObserverOnRemoveAt_fn;
    type->interface19.fp_OnInsertAt = (void(*)(uObject*, int32_t*, uObject*))NavigationControl__FuseReactiveIObserverOnInsertAt_fn;
    type->interface19.fp_OnNewAt = (void(*)(uObject*, int32_t*, uObject*))NavigationControl__FuseReactiveIObserverOnNewAt_fn;
    type->interface19.fp_OnNewAll = (void(*)(uObject*, uObject*))NavigationControl__FuseReactiveIObserverOnNewAll_fn;
    type->interface19.fp_OnClear = (void(*)(uObject*))NavigationControl__FuseReactiveIObserverOnClear_fn;
    type->interface20.fp_TryGetDataProvider = (void(*)(uObject*, ::g::Fuse::Node*, int32_t*, uObject**, int32_t*))NavigationControl__FuseNodeISubtreeDataProviderTryGetDataProvider_fn;
    type->interface18.fp_GetPage = (void(*)(uObject*, int32_t*, ::g::Fuse::Visual**))NavigationControl__FuseNavigationINavigationGetPage_fn;
    type->interface18.fp_GetPageState = (void(*)(uObject*, ::g::Fuse::Visual*, ::g::Fuse::Navigation::NavigationPageState*))NavigationControl__FuseNavigationINavigationGetPageState_fn;
    type->interface18.fp_get_PageCount = (void(*)(uObject*, int32_t*))NavigationControl__FuseNavigationINavigationget_PageCount_fn;
    type->interface18.fp_get_PageProgress = (void(*)(uObject*, double*))NavigationControl__FuseNavigationINavigationget_PageProgress_fn;
    type->interface18.fp_get_ActivePage = (void(*)(uObject*, ::g::Fuse::Visual**))NavigationControl__FuseNavigationINavigationget_ActivePage_fn;
    type->interface18.fp_get_State = (void(*)(uObject*, int32_t*))NavigationControl__FuseNavigationINavigationget_State_fn;
    type->interface18.fp_Goto = (void(*)(uObject*, ::g::Fuse::Visual*, int32_t*))NavigationControl__Goto_fn;
    type->interface18.fp_Toggle = (void(*)(uObject*, ::g::Fuse::Visual*))NavigationControl__Toggle_fn;
    type->interface18.fp_add_PageCountChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_PageCountChanged_fn;
    type->interface18.fp_remove_PageCountChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_PageCountChanged_fn;
    type->interface18.fp_add_PageProgressChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_PageProgressChanged_fn;
    type->interface18.fp_remove_PageProgressChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_PageProgressChanged_fn;
    type->interface18.fp_add_Navigated = (void(*)(uObject*, uDelegate*))NavigationControl__add_Navigated_fn;
    type->interface18.fp_remove_Navigated = (void(*)(uObject*, uDelegate*))NavigationControl__remove_Navigated_fn;
    type->interface18.fp_add_ActivePageChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_ActivePageChanged_fn;
    type->interface18.fp_remove_ActivePageChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_ActivePageChanged_fn;
    type->interface18.fp_add_StateChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_StateChanged_fn;
    type->interface18.fp_remove_StateChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_StateChanged_fn;
    type->interface21.fp_GoForward = (void(*)(uObject*))NavigationControl__GoForward_fn;
    type->interface21.fp_GoBack = (void(*)(uObject*))NavigationControl__GoBack_fn;
    type->interface21.fp_get_CanGoBack = (void(*)(uObject*, bool*))NavigationControl__get_CanGoBack_fn;
    type->interface21.fp_get_CanGoForward = (void(*)(uObject*, bool*))NavigationControl__get_CanGoForward_fn;
    type->interface21.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_HistoryChanged_fn;
    type->interface21.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_HistoryChanged_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// internal NavigationControl() :57
void NavigationControl__ctor_7_fn(NavigationControl* __this)
{
    __this->ctor_7();
}

// public Fuse.Visual get_Active() :99
void NavigationControl__get_Active_fn(NavigationControl* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->Active();
}

// public void set_Active(Fuse.Visual value) :100
void NavigationControl__set_Active_fn(NavigationControl* __this, ::g::Fuse::Visual* value)
{
    __this->Active(value);
}

// public void add_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler value) :429
void NavigationControl__add_ActivePageChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_ActivePageChanged(value);
}

// public void remove_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler value) :430
void NavigationControl__remove_ActivePageChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_ActivePageChanged(value);
}

// private static void alterPath(Fuse.Controls.NavigationControl nav, object[] args, string opName, Fuse.Navigation.NavigationGotoMode gotoMode) :47
void NavigationControl__alterPath_fn(NavigationControl* nav, uArray* args, uString* opName, int32_t* gotoMode)
{
    NavigationControl::alterPath(nav, args, opName, *gotoMode);
}

// protected generated Fuse.Visual get_AncestorPage() :115
void NavigationControl__get_AncestorPage_fn(NavigationControl* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->AncestorPage();
}

// private generated void set_AncestorPage(Fuse.Visual value) :115
void NavigationControl__set_AncestorPage_fn(NavigationControl* __this, ::g::Fuse::Visual* value)
{
    __this->AncestorPage(value);
}

// internal generated Fuse.Navigation.RouterPage get_AncestorRouterPage() :117
void NavigationControl__get_AncestorRouterPage_fn(NavigationControl* __this, ::g::Fuse::Navigation::RouterPage** __retval)
{
    *__retval = __this->AncestorRouterPage();
}

// private generated void set_AncestorRouterPage(Fuse.Navigation.RouterPage value) :117
void NavigationControl__set_AncestorRouterPage_fn(NavigationControl* __this, ::g::Fuse::Navigation::RouterPage* value)
{
    __this->AncestorRouterPage(value);
}

// public Fuse.Controls.NavigationControlBlockInput get_BlockInput() :23
void NavigationControl__get_BlockInput_fn(NavigationControl* __this, int32_t* __retval)
{
    *__retval = __this->BlockInput();
}

// public void set_BlockInput(Fuse.Controls.NavigationControlBlockInput value) :24
void NavigationControl__set_BlockInput_fn(NavigationControl* __this, int32_t* value)
{
    __this->BlockInput(*value);
}

// private void BlockInputRooted() :36
void NavigationControl__BlockInputRooted_fn(NavigationControl* __this)
{
    __this->BlockInputRooted();
}

// private void BlockInputUnrooted() :41
void NavigationControl__BlockInputUnrooted_fn(NavigationControl* __this)
{
    __this->BlockInputUnrooted();
}

// public bool get_CanGoBack() :437
void NavigationControl__get_CanGoBack_fn(NavigationControl* __this, bool* __retval)
{
    *__retval = __this->CanGoBack();
}

// public bool get_CanGoForward() :439
void NavigationControl__get_CanGoForward_fn(NavigationControl* __this, bool* __retval)
{
    *__retval = __this->CanGoForward();
}

// private void CleanupTriggers(Fuse.Elements.Element page, Fuse.Controls.NavigationControl.ControlPageData data) :246
void NavigationControl__CleanupTriggers_fn(NavigationControl* __this, ::g::Fuse::Elements::Element* page, NavigationControl__ControlPageData* data)
{
    __this->CleanupTriggers(page, data);
}

// internal bool CompatibleParameter(string a, string b) :452
void NavigationControl__CompatibleParameter_fn(NavigationControl* __this, uString* a, uString* b, bool* __retval)
{
    *__retval = __this->CompatibleParameter(a, b);
}

// private void DisableBlockInput() :54
void NavigationControl__DisableBlockInput_fn(NavigationControl* __this)
{
    __this->DisableBlockInput();
}

// private void EnableBlockInput() :63
void NavigationControl__EnableBlockInput_fn(NavigationControl* __this)
{
    __this->EnableBlockInput();
}

// private void FullUpdatePages([Fuse.Controls.NavigationControl.UpdateFlags flags]) :79
void NavigationControl__FullUpdatePages_fn(NavigationControl* __this, int32_t* flags)
{
    __this->FullUpdatePages(*flags);
}

// public Fuse.Visual Fuse.Navigation.INavigation.get_ActivePage() :389
void NavigationControl__FuseNavigationINavigationget_ActivePage_fn(NavigationControl* __this, ::g::Fuse::Visual** __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.get_ActivePage()");
    return *__retval = uPtr(__this->Navigation())->ActivePage(), void();
}

// public Fuse.Visual Fuse.Navigation.INavigation.GetPage(int index) :387
void NavigationControl__FuseNavigationINavigationGetPage_fn(NavigationControl* __this, int32_t* index, ::g::Fuse::Visual** __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.GetPage(int)");
    int32_t index_ = *index;
    return *__retval = uPtr(__this->Navigation())->GetPage(index_), void();
}

// public Fuse.Navigation.NavigationPageState Fuse.Navigation.INavigation.GetPageState(Fuse.Visual page) :391
void NavigationControl__FuseNavigationINavigationGetPageState_fn(NavigationControl* __this, ::g::Fuse::Visual* page, ::g::Fuse::Navigation::NavigationPageState* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.GetPageState(Fuse.Visual)");
    return *__retval = uPtr(__this->Navigation())->GetPageState(page), void();
}

// public int Fuse.Navigation.INavigation.get_PageCount() :383
void NavigationControl__FuseNavigationINavigationget_PageCount_fn(NavigationControl* __this, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.get_PageCount()");
    return *__retval = uPtr(__this->Navigation())->PageCount(), void();
}

// public double Fuse.Navigation.INavigation.get_PageProgress() :385
void NavigationControl__FuseNavigationINavigationget_PageProgress_fn(NavigationControl* __this, double* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.get_PageProgress()");
    return *__retval = uPtr(__this->Navigation())->PageProgress(), void();
}

// public Fuse.Navigation.NavigationState Fuse.Navigation.INavigation.get_State() :393
void NavigationControl__FuseNavigationINavigationget_State_fn(NavigationControl* __this, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.get_State()");
    return *__retval = uPtr(__this->Navigation())->State(), void();
}

// private Fuse.Node.ContextDataResult Fuse.Node.ISubtreeDataProvider.TryGetDataProvider(Fuse.Node n, Fuse.Node.DataType type, object& provider) :179
void NavigationControl__FuseNodeISubtreeDataProviderTryGetDataProvider_fn(NavigationControl* __this, ::g::Fuse::Node* n, int32_t* type, uObject** provider, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Node.ISubtreeDataProvider.TryGetDataProvider(Fuse.Node,Fuse.Node.DataType,object&)");
    int32_t type_ = *type;
    *provider = NULL;
    ::g::Fuse::Visual* v = uAs< ::g::Fuse::Visual*>(n, ::TYPES[7/*Fuse.Visual*/]);

    if (v == NULL)
        return *__retval = 0, void();

    ::g::Fuse::Navigation::PageData* pd = ::g::Fuse::Navigation::PageData::Get(v);

    if (pd == NULL)
        return *__retval = 0, void();

    *provider = uPtr(pd)->Context();
    return *__retval = (type_ == 1) ? 2 : 0, void();
}

// private void Fuse.Reactive.IObserver.OnAdd(object value) :142
void NavigationControl__FuseReactiveIObserverOnAdd_fn(NavigationControl* __this, uObject* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Reactive.IObserver.OnAdd(object)");
    __this->FullUpdatePages(2);
}

// private void Fuse.Reactive.IObserver.OnClear() :174
void NavigationControl__FuseReactiveIObserverOnClear_fn(NavigationControl* __this)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Reactive.IObserver.OnClear()");
    __this->FullUpdatePages(0);
}

// private void Fuse.Reactive.IObserver.OnFailed(string message) :137
void NavigationControl__FuseReactiveIObserverOnFailed_fn(NavigationControl* __this, uString* message)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Reactive.IObserver.OnFailed(string)");
    __this->FullUpdatePages(0);
}

// private void Fuse.Reactive.IObserver.OnInsertAt(int index, object value) :155
void NavigationControl__FuseReactiveIObserverOnInsertAt_fn(NavigationControl* __this, int32_t* index, uObject* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Reactive.IObserver.OnInsertAt(int,object)");
    int32_t index_ = *index;

    if (index_ >= __this->_curPageIndex)
        __this->FullUpdatePages(0);
    else
        __this->_curPageIndex++;
}

// private void Fuse.Reactive.IObserver.OnNewAll(Fuse.IArray values) :169
void NavigationControl__FuseReactiveIObserverOnNewAll_fn(NavigationControl* __this, uObject* values)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Reactive.IObserver.OnNewAll(Fuse.IArray)");
    __this->FullUpdatePages(0);
}

// private void Fuse.Reactive.IObserver.OnNewAt(int index, object value) :163
void NavigationControl__FuseReactiveIObserverOnNewAt_fn(NavigationControl* __this, int32_t* index, uObject* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Reactive.IObserver.OnNewAt(int,object)");
    int32_t index_ = *index;

    if (index_ == __this->_curPageIndex)
        __this->FullUpdatePages(4);
}

// private void Fuse.Reactive.IObserver.OnRemoveAt(int index) :147
void NavigationControl__FuseReactiveIObserverOnRemoveAt_fn(NavigationControl* __this, int32_t* index)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Reactive.IObserver.OnRemoveAt(int)");
    int32_t index_ = *index;

    if (index_ == __this->_curPageIndex)
        __this->FullUpdatePages(0);
    else if (index_ < __this->_curPageIndex)
        __this->_curPageIndex--;
}

// private void Fuse.Reactive.IObserver.OnSet(object newValue) :132
void NavigationControl__FuseReactiveIObserverOnSet_fn(NavigationControl* __this, uObject* newValue)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Reactive.IObserver.OnSet(object)");
    __this->FullUpdatePages(1);
}

// internal static Fuse.Controls.NavigationControl.ControlPageData GetControlPageData(Fuse.Visual elm, [bool create]) :339
void NavigationControl__GetControlPageData_fn(::g::Fuse::Visual* elm, bool* create, NavigationControl__ControlPageData** __retval)
{
    *__retval = NavigationControl::GetControlPageData(elm, *create);
}

// public static Fuse.Controls.NavigationControlTransition GetTransition(Fuse.Visual elm) :361
void NavigationControl__GetTransition_fn(::g::Fuse::Visual* elm, int32_t* __retval)
{
    *__retval = NavigationControl::GetTransition(elm);
}

// public void GoBack() :435
void NavigationControl__GoBack_fn(NavigationControl* __this)
{
    __this->GoBack();
}

// public void GoForward() :433
void NavigationControl__GoForward_fn(NavigationControl* __this)
{
    __this->GoForward();
}

// public void Goto(Fuse.Visual node, Fuse.Navigation.NavigationGotoMode mode) :441
void NavigationControl__Goto_fn(NavigationControl* __this, ::g::Fuse::Visual* node, int32_t* mode)
{
    __this->Goto(node, *mode);
}

// private static void gotoPath(Fuse.Controls.NavigationControl nav, object[] args) :28
void NavigationControl__gotoPath_fn(NavigationControl* nav, uArray* args)
{
    NavigationControl::gotoPath(nav, args);
}

// public void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :423
void NavigationControl__add_HistoryChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_HistoryChanged(value);
}

// public void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :424
void NavigationControl__remove_HistoryChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_HistoryChanged(value);
}

// internal bool IsEmptyParameter(string a) :445
void NavigationControl__IsEmptyParameter_fn(NavigationControl* __this, uString* a, bool* __retval)
{
    *__retval = __this->IsEmptyParameter(a);
}

// public bool get_IsRouterOutlet() :307
void NavigationControl__get_IsRouterOutlet_fn(NavigationControl* __this, bool* __retval)
{
    *__retval = __this->IsRouterOutlet();
}

// public void set_IsRouterOutlet(bool value) :308
void NavigationControl__set_IsRouterOutlet_fn(NavigationControl* __this, bool* value)
{
    __this->IsRouterOutlet(*value);
}

// private static void modifyPath(Fuse.Controls.NavigationControl nav, object[] args) :102
void NavigationControl__modifyPath_fn(NavigationControl* nav, uArray* args)
{
    NavigationControl::modifyPath(nav, args);
}

// public void add_Navigated(Fuse.Navigation.NavigatedHandler value) :417
void NavigationControl__add_Navigated_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_Navigated(value);
}

// public void remove_Navigated(Fuse.Navigation.NavigatedHandler value) :418
void NavigationControl__remove_Navigated_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_Navigated(value);
}

// internal Fuse.Navigation.VisualNavigation get_Navigation() :91
void NavigationControl__get_Navigation_fn(NavigationControl* __this, ::g::Fuse::Navigation::VisualNavigation** __retval)
{
    *__retval = __this->Navigation();
}

// protected override sealed void OnChildAdded(Fuse.Node n) :103
void NavigationControl__OnChildAdded_fn(NavigationControl* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnChildAdded(Fuse.Node)");

    if (__this->IsRootingStarted())
    {
        ::g::Fuse::Elements::Element* v = uAs< ::g::Fuse::Elements::Element*>(n, ::TYPES[8/*Fuse.Elements.Element*/]);

        if (v != NULL)
            __this->UpdateChild(v);
    }

    ::g::Fuse::Controls::LayoutControl__OnChildAdded_fn(__this, n);
}

// protected override void OnChildRemoved(Fuse.Node n) :270
void NavigationControl__OnChildRemoved_fn(NavigationControl* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Elements::Element* pc = uAs< ::g::Fuse::Elements::Element*>(n, ::TYPES[8/*Fuse.Elements.Element*/]);

    if (pc != NULL)
    {
        NavigationControl__ControlPageData* pd = NavigationControl::GetControlPageData(pc, false);

        if (pd != NULL)
            __this->CleanupTriggers(pc, pd);
    }

    ::g::Fuse::Controls::LayoutControl__OnChildRemoved_fn(__this, n);
}

// private void OnChildRouterPagesUpdated() :173
void NavigationControl__OnChildRouterPagesUpdated_fn(NavigationControl* __this)
{
    __this->OnChildRouterPagesUpdated();
}

// private void OnPageHistoryChanged() :38
void NavigationControl__OnPageHistoryChanged_fn(NavigationControl* __this)
{
    __this->OnPageHistoryChanged();
}

// private void OnPageHistoryUnrooted() :60
void NavigationControl__OnPageHistoryUnrooted_fn(NavigationControl* __this)
{
    __this->OnPageHistoryUnrooted();
}

// private void OnPageProgressChanged(object page, Fuse.Navigation.NavigationArgs args) :285
void NavigationControl__OnPageProgressChanged_fn(NavigationControl* __this, uObject* page, ::g::Fuse::Navigation::NavigationArgs* args)
{
    __this->OnPageProgressChanged(page, args);
}

// protected override void OnRooted() :153
void NavigationControl__OnRooted_fn(NavigationControl* __this)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    __this->UpdateInteraction();
    uPtr(__this->Navigation())->add_PageProgressChanged(uDelegate::New(::g::Fuse::Navigation::NavigationHandler_typeof(), (void*)NavigationControl__OnPageProgressChanged_fn, __this));

    for (::g::Fuse::Elements::Element* c = (::g::Fuse::Elements::Element*)__this->FirstChild(::TYPES[7/*Fuse.Visual*/]->MakeMethod(2/*FirstChild<Fuse.Elements.Element>*/, ::TYPES[8/*Fuse.Elements.Element*/], NULL)); c != NULL; c = (::g::Fuse::Elements::Element*)uPtr(c)->NextSibling(::g::Fuse::Node_typeof()->MakeMethod(3/*NextSibling<Fuse.Elements.Element>*/, ::TYPES[8/*Fuse.Elements.Element*/], NULL)))
        __this->UpdateChild(c);

    if (__this->AncestorRouterPage() != NULL)
        uPtr(__this->AncestorRouterPage())->add_ChildRouterPagesUpdated(uDelegate::New(::g::Fuse::Navigation::ChildRouterPagesUpdated_typeof(), (void*)NavigationControl__OnChildRouterPagesUpdated_fn, __this));

    __this->OnPageHistoryChanged();
    __this->BlockInputRooted();
}

// protected override sealed void OnRootedPreChildren() :123
void NavigationControl__OnRootedPreChildren_fn(NavigationControl* __this)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnRootedPreChildren()");
    ::g::Fuse::Elements::Element__OnRootedPreChildren_fn(__this);

    if (__this->IsRouterOutlet())
    {
        __this->AncestorPage(::g::Fuse::Navigation::Router::FindRouterOutletPage(__this));

        if (__this->AncestorPage() != NULL)
        {
            ::g::Fuse::Navigation::PageData* pd = ::g::Fuse::Navigation::PageData::GetOrCreate(__this->AncestorPage(), true);
            uPtr(pd)->add_RouterPageChanged(uDelegate::New(::g::Fuse::Navigation::RouterPageChangedHandler_typeof(), (void*)NavigationControl__OnRouterPageChanged_fn, __this));
            __this->AncestorRouterPage(pd->RouterPage());
        }
        else
        {
            ::g::Fuse::Navigation::Router* router = ::g::Fuse::Navigation::Router::TryFindRouter(__this);

            if (router != NULL)
                __this->AncestorRouterPage(uPtr(router)->RootPage());
            else
                __this->AncestorRouterPage(::g::Fuse::Navigation::RouterPage::CreateDefault());
        }
    }
    else
        __this->AncestorRouterPage(::g::Fuse::Navigation::RouterPage::CreateDefault());
}

// private void OnRouterPageChanged(object sender, Fuse.Navigation.RouterPage routerPage) :460
void NavigationControl__OnRouterPageChanged_fn(NavigationControl* __this, uObject* sender, ::g::Fuse::Navigation::RouterPage* routerPage)
{
    __this->OnRouterPageChanged(sender, routerPage);
}

// protected override void OnUnrooted() :222
void NavigationControl__OnUnrooted_fn(NavigationControl* __this)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnUnrooted()");
    __this->BlockInputUnrooted();
    __this->OnPageHistoryUnrooted();

    if (__this->AncestorPage() != NULL)
    {
        uPtr(::g::Fuse::Navigation::PageData::GetOrCreate(__this->AncestorPage(), true))->remove_RouterPageChanged(uDelegate::New(::g::Fuse::Navigation::RouterPageChangedHandler_typeof(), (void*)NavigationControl__OnRouterPageChanged_fn, __this));
        __this->AncestorPage(NULL);
    }

    uPtr(__this->Navigation())->remove_PageProgressChanged(uDelegate::New(::g::Fuse::Navigation::NavigationHandler_typeof(), (void*)NavigationControl__OnPageProgressChanged_fn, __this));

    for (::g::Fuse::Elements::Element* c = (::g::Fuse::Elements::Element*)__this->FirstChild(::TYPES[7/*Fuse.Visual*/]->MakeMethod(2/*FirstChild<Fuse.Elements.Element>*/, ::TYPES[8/*Fuse.Elements.Element*/], NULL)); c != NULL; c = (::g::Fuse::Elements::Element*)uPtr(c)->NextSibling(::g::Fuse::Node_typeof()->MakeMethod(3/*NextSibling<Fuse.Elements.Element>*/, ::TYPES[8/*Fuse.Elements.Element*/], NULL)))
    {
        NavigationControl__ControlPageData* pd = NavigationControl::GetControlPageData(c, false);

        if (pd == NULL)
            continue;

        __this->CleanupTriggers(c, pd);
    }

    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// public void add_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler value) :398
void NavigationControl__add_PageCountChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_PageCountChanged(value);
}

// public void remove_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler value) :399
void NavigationControl__remove_PageCountChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_PageCountChanged(value);
}

// public Fuse.IArray get_PageHistory() :25
void NavigationControl__get_PageHistory_fn(NavigationControl* __this, uObject** __retval)
{
    *__retval = __this->PageHistory();
}

// public void set_PageHistory(Fuse.IArray value) :26
void NavigationControl__set_PageHistory_fn(NavigationControl* __this, uObject* value)
{
    __this->PageHistory(value);
}

// public void add_PageProgressChanged(Fuse.Navigation.NavigationHandler value) :404
void NavigationControl__add_PageProgressChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_PageProgressChanged(value);
}

// public void remove_PageProgressChanged(Fuse.Navigation.NavigationHandler value) :405
void NavigationControl__remove_PageProgressChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_PageProgressChanged(value);
}

// protected Fuse.Controls.NavigationControlTransition PageTransition(Fuse.Visual elm) :369
void NavigationControl__PageTransition_fn(NavigationControl* __this, ::g::Fuse::Visual* elm, int32_t* __retval)
{
    *__retval = __this->PageTransition(elm);
}

// internal Fuse.Navigation.OutletType get_RouterOutletType() :318
void NavigationControl__get_RouterOutletType_fn(NavigationControl* __this, int32_t* __retval)
{
    *__retval = __this->RouterOutletType();
}

// private static void seekToPath(Fuse.Controls.NavigationControl nav, object[] args) :42
void NavigationControl__seekToPath_fn(NavigationControl* nav, uArray* args)
{
    NavigationControl::seekToPath(nav, args);
}

// internal void SetNavigation(Fuse.Navigation.VisualNavigation nav) :63
void NavigationControl__SetNavigation_fn(NavigationControl* __this, ::g::Fuse::Navigation::VisualNavigation* nav)
{
    __this->SetNavigation(nav);
}

// public static void SetTransition(Fuse.Visual elm, Fuse.Controls.NavigationControlTransition value) :355
void NavigationControl__SetTransition_fn(::g::Fuse::Visual* elm, int32_t* value)
{
    NavigationControl::SetTransition(elm, *value);
}

// public void add_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState> value) :410
void NavigationControl__add_StateChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_StateChanged(value);
}

// public void remove_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState> value) :411
void NavigationControl__remove_StateChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_StateChanged(value);
}

// public void Toggle(Fuse.Visual node) :443
void NavigationControl__Toggle_fn(NavigationControl* __this, ::g::Fuse::Visual* node)
{
    __this->Toggle(node);
}

// public Fuse.Controls.NavigationControlTransition get_Transition() :78
void NavigationControl__get_Transition_fn(NavigationControl* __this, int32_t* __retval)
{
    *__retval = __this->Transition();
}

// public void set_Transition(Fuse.Controls.NavigationControlTransition value) :79
void NavigationControl__set_Transition_fn(NavigationControl* __this, int32_t* value)
{
    __this->Transition(*value);
}

// private void UpdateBlockInput() :46
void NavigationControl__UpdateBlockInput_fn(NavigationControl* __this)
{
    __this->UpdateBlockInput();
}

// private void UpdateChild(Fuse.Elements.Element c) :183
void NavigationControl__UpdateChild_fn(NavigationControl* __this, ::g::Fuse::Elements::Element* c)
{
    __this->UpdateChild(c);
}

// protected virtual void UpdateInteraction() :181
void NavigationControl__UpdateInteraction_fn(NavigationControl* __this)
{
}

// protected virtual void UpdateProgress(Fuse.Elements.Element page, Fuse.Navigation.NavigationPageState state, Fuse.Controls.NavigationControl.ControlPageData pd) :297
void NavigationControl__UpdateProgress_fn(NavigationControl* __this, ::g::Fuse::Elements::Element* page, ::g::Fuse::Navigation::NavigationPageState* state, NavigationControl__ControlPageData* pd)
{
}

uSStrong< ::g::Fuse::PropertyHandle*> NavigationControl::_propTransition_;

// internal NavigationControl() [instance] :57
void NavigationControl::ctor_7()
{
    _blockInput = 1;
    _curPageIndex = -1;
    _transition = 2;
    _isRouterOutlet = true;
    ctor_6();
    ClipToBounds(true);
}

// public Fuse.Visual get_Active() [instance] :99
::g::Fuse::Visual* NavigationControl::Active()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "get_Active()");
    return uPtr(_navigation)->Active();
}

// public void set_Active(Fuse.Visual value) [instance] :100
void NavigationControl::Active(::g::Fuse::Visual* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "set_Active(Fuse.Visual)");
    uPtr(_navigation)->Active(value);
}

// public void add_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler value) [instance] :429
void NavigationControl::add_ActivePageChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler)");
    uPtr(Navigation())->add_ActivePageChanged(value);
}

// public void remove_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler value) [instance] :430
void NavigationControl::remove_ActivePageChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler)");
    uPtr(Navigation())->remove_ActivePageChanged(value);
}

// protected generated Fuse.Visual get_AncestorPage() [instance] :115
::g::Fuse::Visual* NavigationControl::AncestorPage()
{
    return _AncestorPage;
}

// private generated void set_AncestorPage(Fuse.Visual value) [instance] :115
void NavigationControl::AncestorPage(::g::Fuse::Visual* value)
{
    _AncestorPage = value;
}

// internal generated Fuse.Navigation.RouterPage get_AncestorRouterPage() [instance] :117
::g::Fuse::Navigation::RouterPage* NavigationControl::AncestorRouterPage()
{
    return _AncestorRouterPage;
}

// private generated void set_AncestorRouterPage(Fuse.Navigation.RouterPage value) [instance] :117
void NavigationControl::AncestorRouterPage(::g::Fuse::Navigation::RouterPage* value)
{
    _AncestorRouterPage = value;
}

// public Fuse.Controls.NavigationControlBlockInput get_BlockInput() [instance] :23
int32_t NavigationControl::BlockInput()
{
    return _blockInput;
}

// public void set_BlockInput(Fuse.Controls.NavigationControlBlockInput value) [instance] :24
void NavigationControl::BlockInput(int32_t value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "set_BlockInput(Fuse.Controls.NavigationControlBlockInput)");

    if (_blockInput == value)
        return;

    _blockInput = value;

    if (IsRootingCompleted())
        UpdateBlockInput();
}

// private void BlockInputRooted() [instance] :36
void NavigationControl::BlockInputRooted()
{
    UpdateBlockInput();
}

// private void BlockInputUnrooted() [instance] :41
void NavigationControl::BlockInputUnrooted()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "BlockInputUnrooted()");
    DisableBlockInput();
}

// public bool get_CanGoBack() [instance] :437
bool NavigationControl::CanGoBack()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "get_CanGoBack()");
    return uPtr(Navigation())->CanGoBack();
}

// public bool get_CanGoForward() [instance] :439
bool NavigationControl::CanGoForward()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "get_CanGoForward()");
    return uPtr(Navigation())->CanGoForward();
}

// private void CleanupTriggers(Fuse.Elements.Element page, Fuse.Controls.NavigationControl.ControlPageData data) [instance] :246
void NavigationControl::CleanupTriggers(::g::Fuse::Elements::Element* page, NavigationControl__ControlPageData* data)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "CleanupTriggers(Fuse.Elements.Element,Fuse.Controls.NavigationControl.ControlPageData)");
    bool ret2;
    bool ret3;
    bool ret4;
    bool ret5;

    if (uPtr(data)->Enter != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(page)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(data)->Enter, &ret2);
        data->Enter = NULL;
    }

    if (uPtr(data)->Exit != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(page)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(data)->Exit, &ret3);
        data->Exit = NULL;
    }

    if (uPtr(data)->Inactive != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(page)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(data)->Inactive, &ret4);
        data->Inactive = NULL;
    }

    if (uPtr(data)->Removing != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(page)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(data)->Removing, &ret5);
        data->Removing = NULL;
    }
}

// internal bool CompatibleParameter(string a, string b) [instance] :452
bool NavigationControl::CompatibleParameter(uString* a, uString* b)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "CompatibleParameter(string,string)");

    if (::g::Uno::String::op_Equality(a, b))
        return true;

    return IsEmptyParameter(a) && IsEmptyParameter(b);
}

// private void DisableBlockInput() [instance] :54
void NavigationControl::DisableBlockInput()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "DisableBlockInput()");
    bool ret6;

    if (_blockInputTrigger != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _blockInputTrigger, &ret6);
        _blockInputTrigger = NULL;
    }
}

// private void EnableBlockInput() [instance] :63
void NavigationControl::EnableBlockInput()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "EnableBlockInput()");

    if (_blockInputTrigger == NULL)
    {
        _blockInputTrigger = ::g::Fuse::Controls::NavigationInternal::BlockInputWhileNavigating::New3(this);
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _blockInputTrigger);
    }
}

// private void FullUpdatePages([Fuse.Controls.NavigationControl.UpdateFlags flags]) [instance] :79
void NavigationControl::FullUpdatePages(int32_t flags)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "FullUpdatePages([Fuse.Controls.NavigationControl.UpdateFlags])");
    int32_t pageNdx = ::g::Fuse::IArray::Length(uInterface(uPtr(_pageHistory), ::g::Fuse::IArray_typeof())) - 1;
    ::g::Fuse::Navigation::RouterRequest* rr = ::g::Fuse::Navigation::RouterRequest::New1(0);
    rr->Operation((pageNdx < _curPageIndex) ? 3 : (pageNdx == _curPageIndex) ? 2 : (pageNdx > 0) ? 1 : 0);

    if ((flags & 1) == 1)
        uPtr(rr)->Operation(0);
    else if ((flags & 2) == 2)
        uPtr(rr)->Operation((pageNdx > 0) ? 1 : 0);
    else if ((flags & 4) == 4)
        uPtr(rr)->Operation(2);

    rr->Transition = (((flags & 8) == 8) ? 1 : 0);
    ::g::Fuse::Navigation::RouterPage* rPage;

    if (pageNdx >= uPtr(uPtr(AncestorRouterPage())->ChildRouterPages())->Count())
    {
        rPage = ::g::Fuse::Navigation::RouterPage::CreateDefault();
        ::g::Fuse::Diagnostics::InternalError(uString::Const("Inconsistent navigation history"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.Pages.uno"), 101, uString::Const("FullUpdatePages"));
    }
    else if (pageNdx >= 0)
        rPage = (::g::Fuse::Navigation::RouterPage*)uPtr(uPtr(AncestorRouterPage())->ChildRouterPages())->Item(pageNdx);
    else
        rPage = ::g::Fuse::Navigation::RouterPage::CreateDefault();

    uObject* navRequest = ::g::Fuse::Navigation::RouterPage::GetNavigationRequest(uPtr(rPage)->Context);

    if (navRequest != NULL)
    {
        if (!uPtr(rr)->AddArguments(navRequest, 152))
            ::g::Fuse::Diagnostics::UserError(uString::Const("Invalid $navigationRequest, visual result may not match expectation"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.Pages.uno"), 121, uString::Const("FullUpdatePages"), NULL);
    }

    ::g::Fuse::Visual* ignore;
    ::g::Fuse::Navigation::IRouterOutlet::Goto(uInterface((uObject*)this, ::g::Fuse::Navigation::IRouterOutlet_typeof()), rPage, rr->Transition, rr->Operation(), rr->Style, &ignore);
    _curPageIndex = pageNdx;
}

// public void GoBack() [instance] :435
void NavigationControl::GoBack()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "GoBack()");
    uPtr(Navigation())->GoBack();
}

// public void GoForward() [instance] :433
void NavigationControl::GoForward()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "GoForward()");
    uPtr(Navigation())->GoForward();
}

// public void Goto(Fuse.Visual node, Fuse.Navigation.NavigationGotoMode mode) [instance] :441
void NavigationControl::Goto(::g::Fuse::Visual* node, int32_t mode)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Goto(Fuse.Visual,Fuse.Navigation.NavigationGotoMode)");
    uPtr(Navigation())->Goto(node, mode);
}

// public void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :423
void NavigationControl::add_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    uPtr(Navigation())->add_HistoryChanged(value);
}

// public void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :424
void NavigationControl::remove_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    uPtr(Navigation())->remove_HistoryChanged(value);
}

// internal bool IsEmptyParameter(string a) [instance] :445
bool NavigationControl::IsEmptyParameter(uString* a)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "IsEmptyParameter(string)");
    return (((::g::Uno::String::op_Equality(a, NULL) || ::g::Uno::String::op_Equality(a, ::STRINGS[19/*""*/])) || ::g::Uno::String::op_Equality(a, uString::Const("\"\""))) || ::g::Uno::String::op_Equality(a, uString::Const("{}"))) || ::g::Uno::String::op_Equality(a, uString::Const("null"));
}

// public bool get_IsRouterOutlet() [instance] :307
bool NavigationControl::IsRouterOutlet()
{
    return _isRouterOutlet;
}

// public void set_IsRouterOutlet(bool value) [instance] :308
void NavigationControl::IsRouterOutlet(bool value)
{
    _isRouterOutlet = value;
}

// public void add_Navigated(Fuse.Navigation.NavigatedHandler value) [instance] :417
void NavigationControl::add_Navigated(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_Navigated(Fuse.Navigation.NavigatedHandler)");
    uPtr(Navigation())->add_Navigated(value);
}

// public void remove_Navigated(Fuse.Navigation.NavigatedHandler value) [instance] :418
void NavigationControl::remove_Navigated(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_Navigated(Fuse.Navigation.NavigatedHandler)");
    uPtr(Navigation())->remove_Navigated(value);
}

// internal Fuse.Navigation.VisualNavigation get_Navigation() [instance] :91
::g::Fuse::Navigation::VisualNavigation* NavigationControl::Navigation()
{
    return _navigation;
}

// private void OnChildRouterPagesUpdated() [instance] :173
void NavigationControl::OnChildRouterPagesUpdated()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnChildRouterPagesUpdated()");
    ::g::Fuse::Navigation::RouterPage::BubbleHistoryChanged(this);
}

// private void OnPageHistoryChanged() [instance] :38
void NavigationControl::OnPageHistoryChanged()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnPageHistoryChanged()");

    if (AncestorRouterPage() == NULL)
        return;

    uPtr(uPtr(AncestorRouterPage())->ChildRouterPages())->Detach();

    if (_pageHistory == NULL)
        return;

    uObject* obs = uAs<uObject*>(_pageHistory, ::g::Fuse::Reactive::IObservableArray_typeof());

    if (obs != NULL)
        uPtr(uPtr(AncestorRouterPage())->ChildRouterPages())->Attach(obs, (uObject*)this);
    else
        ::g::Fuse::Diagnostics::UserError(uString::Const("PageHistory expects an observable array. It will not work correctly otherwise"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.Pages.uno"), 54, uString::Const("OnPageHistoryChanged"), NULL);

    _curPageIndex = -1;
}

// private void OnPageHistoryUnrooted() [instance] :60
void NavigationControl::OnPageHistoryUnrooted()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnPageHistoryUnrooted()");

    if (AncestorRouterPage() != NULL)
        uPtr(uPtr(AncestorRouterPage())->ChildRouterPages())->Detach();
}

// private void OnPageProgressChanged(object page, Fuse.Navigation.NavigationArgs args) [instance] :285
void NavigationControl::OnPageProgressChanged(uObject* page, ::g::Fuse::Navigation::NavigationArgs* args)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnPageProgressChanged(object,Fuse.Navigation.NavigationArgs)");

    for (int32_t i = 0; i < uPtr(Navigation())->PageCount(); ++i)
    {
        ::g::Fuse::Elements::Element* n = uAs< ::g::Fuse::Elements::Element*>(uPtr(Navigation())->GetPage(i), ::TYPES[8/*Fuse.Elements.Element*/]);

        if (n == NULL)
            return;

        UpdateProgress(n, uPtr(Navigation())->GetPageState(n), NavigationControl::GetControlPageData(n, true));
    }
}

// private void OnRouterPageChanged(object sender, Fuse.Navigation.RouterPage routerPage) [instance] :460
void NavigationControl::OnRouterPageChanged(uObject* sender, ::g::Fuse::Navigation::RouterPage* routerPage)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnRouterPageChanged(object,Fuse.Navigation.RouterPage)");
    AncestorRouterPage(routerPage);

    if (AncestorRouterPage() == NULL)
        return;

    ::g::Fuse::Reactive::ObserverMap* pages = uPtr(AncestorRouterPage())->ChildRouterPages();
    ::g::Fuse::Visual* ignore;
    ::g::Fuse::Navigation::RouterPage* current = ::g::Fuse::Navigation::IRouterOutlet::GetCurrent(uInterface(uPtr(uAs<uObject*>(this, ::g::Fuse::Navigation::IRouterOutlet_typeof())), ::g::Fuse::Navigation::IRouterOutlet_typeof()), &ignore);

    if ((uPtr(pages)->Count() == 0) && (current != NULL))
        uPtr(pages)->Add(current);
}

// public void add_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler value) [instance] :398
void NavigationControl::add_PageCountChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler)");
    uPtr(Navigation())->add_PageCountChanged(value);
}

// public void remove_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler value) [instance] :399
void NavigationControl::remove_PageCountChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler)");
    uPtr(Navigation())->remove_PageCountChanged(value);
}

// public Fuse.IArray get_PageHistory() [instance] :25
uObject* NavigationControl::PageHistory()
{
    return _pageHistory;
}

// public void set_PageHistory(Fuse.IArray value) [instance] :26
void NavigationControl::PageHistory(uObject* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "set_PageHistory(Fuse.IArray)");
    _pageHistory = value;

    if (IsRootingCompleted())
    {
        OnPageHistoryChanged();
        FullUpdatePages(9);
    }
}

// public void add_PageProgressChanged(Fuse.Navigation.NavigationHandler value) [instance] :404
void NavigationControl::add_PageProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_PageProgressChanged(Fuse.Navigation.NavigationHandler)");
    uPtr(Navigation())->add_PageProgressChanged(value);
}

// public void remove_PageProgressChanged(Fuse.Navigation.NavigationHandler value) [instance] :405
void NavigationControl::remove_PageProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_PageProgressChanged(Fuse.Navigation.NavigationHandler)");
    uPtr(Navigation())->remove_PageProgressChanged(value);
}

// protected Fuse.Controls.NavigationControlTransition PageTransition(Fuse.Visual elm) [instance] :369
int32_t NavigationControl::PageTransition(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "PageTransition(Fuse.Visual)");
    int32_t t = NavigationControl::GetTransition(elm);

    if (t != 0)
        return t;

    if (((::g::Fuse::Triggers::Transition*)uPtr(elm)->FirstChild(::TYPES[7/*Fuse.Visual*/]->MakeMethod(2/*FirstChild<Fuse.Triggers.Transition>*/, ::g::Fuse::Triggers::Transition_typeof(), NULL))) != NULL)
        return 1;

    return Transition();
}

// internal Fuse.Navigation.OutletType get_RouterOutletType() [instance] :318
int32_t NavigationControl::RouterOutletType()
{
    if (!IsRouterOutlet())
        return 0;

    return 2;
}

// internal void SetNavigation(Fuse.Navigation.VisualNavigation nav) [instance] :63
void NavigationControl::SetNavigation(::g::Fuse::Navigation::VisualNavigation* nav)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "SetNavigation(Fuse.Navigation.VisualNavigation)");
    _navigation = nav;
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _navigation);
}

// public void add_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState> value) [instance] :410
void NavigationControl::add_StateChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState>)");
    uPtr(Navigation())->add_StateChanged(value);
}

// public void remove_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState> value) [instance] :411
void NavigationControl::remove_StateChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState>)");
    uPtr(Navigation())->remove_StateChanged(value);
}

// public void Toggle(Fuse.Visual node) [instance] :443
void NavigationControl::Toggle(::g::Fuse::Visual* node)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Toggle(Fuse.Visual)");
    uPtr(Navigation())->Toggle(node);
}

// public Fuse.Controls.NavigationControlTransition get_Transition() [instance] :78
int32_t NavigationControl::Transition()
{
    return _transition;
}

// public void set_Transition(Fuse.Controls.NavigationControlTransition value) [instance] :79
void NavigationControl::Transition(int32_t value)
{
    if (_transition == value)
        return;

    _transition = value;
}

// private void UpdateBlockInput() [instance] :46
void NavigationControl::UpdateBlockInput()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "UpdateBlockInput()");

    if (_blockInput == 0)
        DisableBlockInput();
    else
        EnableBlockInput();
}

// private void UpdateChild(Fuse.Elements.Element c) [instance] :183
void NavigationControl::UpdateChild(::g::Fuse::Elements::Element* c)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "UpdateChild(Fuse.Elements.Element)");

    if (!::g::Fuse::Navigation::Navigation::IsPage(c))
        return;

    NavigationControl__ControlPageData* cpd = NavigationControl::GetControlPageData(c, true);
    UpdateProgress(c, uPtr(Navigation())->GetPageState(c), cpd);

    if ((((uPtr(cpd)->Enter == NULL) || (uPtr(cpd)->Exit == NULL)) || (uPtr(cpd)->Inactive == NULL)) || (uPtr(cpd)->Removing == NULL))
    {
        CleanupTriggers(c, cpd);
        CreateTriggers(c, cpd);

        if (uPtr(cpd)->Enter != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(cpd)->Enter);

        if (uPtr(cpd)->Exit != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(cpd)->Exit);

        if (uPtr(cpd)->Inactive != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(cpd)->Inactive);

        if (uPtr(cpd)->Removing != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(cpd)->Removing);
    }

    ::g::Fuse::Navigation::PageData* pd = ::g::Fuse::Navigation::PageData::GetOrCreate(c, true);

    if (uPtr(pd)->RouterPage() == NULL)
        uPtr(pd)->AttachRouterPage(::g::Fuse::Navigation::RouterPage::New1(::g::Uno::UX::Selector__op_Implicit1(uPtr(c)->Name()), uPtr(c)->Parameter(), NULL));
}

// private static void alterPath(Fuse.Controls.NavigationControl nav, object[] args, string opName, Fuse.Navigation.NavigationGotoMode gotoMode) [static] :47
void NavigationControl::alterPath(NavigationControl* nav, uArray* args, uString* opName, int32_t gotoMode)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "alterPath(Fuse.Controls.NavigationControl,object[],string,Fuse.Navigation.NavigationGotoMode)");
    NavigationControl_typeof()->Init();
    uString* ret1;

    if ((uPtr(args)->Length() < 1) || (uPtr(args)->Length() > 2))
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(uString::Const("NavigationControl."), opName), uString::Const(" requires 1 or 2 arguments")), nav, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.ScriptClass.uno"), 52, uString::Const("alterPath"), NULL);
        return;
    }

    uObject* outlet = uAs<uObject*>(nav, ::g::Fuse::Navigation::IRouterOutlet_typeof());

    if (outlet == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(uString::Const("Must be an IRouterOutlet"), nav, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.ScriptClass.uno"), 59, uString::Const("alterPath"));
        return;
    }

    uString* path = (::g::Fuse::Marshal__ToType_fn(::g::Fuse::Marshal_typeof()->MakeMethod(0/*ToType<string>*/, ::TYPES[50/*string*/], NULL), uPtr(args)->Strong<uObject*>(0), &ret1), ret1);
    uString* param = NULL;

    if (args->Length() > 1)
        param = ::g::Fuse::Json::Stringify(uPtr(args)->Strong<uObject*>(1), true);

    ::g::Fuse::Navigation::RouterPage* rPage = ::g::Fuse::Navigation::RouterPage::New1(path, param, NULL);
    ::g::Fuse::Visual* ignore;
    ::g::Fuse::Navigation::IRouterOutlet::Goto(uInterface(uPtr(outlet), ::g::Fuse::Navigation::IRouterOutlet_typeof()), rPage, gotoMode, 0, ::STRINGS[19/*""*/], &ignore);
}

// internal static Fuse.Controls.NavigationControl.ControlPageData GetControlPageData(Fuse.Visual elm, [bool create]) [static] :339
NavigationControl__ControlPageData* NavigationControl::GetControlPageData(::g::Fuse::Visual* elm, bool create)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "GetControlPageData(Fuse.Visual,[bool])");
    NavigationControl_typeof()->Init();
    ::g::Fuse::Navigation::PageData* pd = ::g::Fuse::Navigation::PageData::GetOrCreate(elm, create);

    if (pd == NULL)
        return NULL;

    if ((uPtr(pd)->ControlPageData != NULL) || !create)
        return uCast<NavigationControl__ControlPageData*>(uPtr(pd)->ControlPageData, NavigationControl__ControlPageData_typeof());

    NavigationControl__ControlPageData* cpd = NavigationControl__ControlPageData::New1();
    uPtr(pd)->ControlPageData = cpd;
    return cpd;
}

// public static Fuse.Controls.NavigationControlTransition GetTransition(Fuse.Visual elm) [static] :361
int32_t NavigationControl::GetTransition(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "GetTransition(Fuse.Visual)");
    NavigationControl_typeof()->Init();
    uObject* res;

    if (uPtr(uPtr(elm)->Properties())->TryGet(NavigationControl::_propTransition_, &res))
        return uUnbox<int32_t>(::g::Fuse::Controls::NavigationControlTransition_typeof(), res);

    return 0;
}

// private static void gotoPath(Fuse.Controls.NavigationControl nav, object[] args) [static] :28
void NavigationControl::gotoPath(NavigationControl* nav, uArray* args)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "gotoPath(Fuse.Controls.NavigationControl,object[])");
    NavigationControl_typeof()->Init();
    NavigationControl::alterPath(nav, args, uString::Const("gotoPath"), 0);
}

// private static void modifyPath(Fuse.Controls.NavigationControl nav, object[] args) [static] :102
void NavigationControl::modifyPath(NavigationControl* nav, uArray* args)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "modifyPath(Fuse.Controls.NavigationControl,object[])");
    NavigationControl_typeof()->Init();

    if (uPtr(args)->Length() != 1)
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("`modifyPath` takes on argument"), nav, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.ScriptClass.uno"), 106, uString::Const("modifyPath"), NULL);
        return;
    }

    uObject* obj = uAs<uObject*>(uPtr(args)->Strong<uObject*>(0), ::g::Fuse::IObject_typeof());

    if (obj == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("`modifyPath` should be passed an object"), nav, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.ScriptClass.uno"), 113, uString::Const("modifyPath"), NULL);
        return;
    }

    ::g::Fuse::Navigation::RouterRequest* rr = ::g::Fuse::Navigation::RouterRequest::New1(1);

    if (!rr->AddArguments(obj, 89))
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("`modifyPath` unrecognized arguments"), nav, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.ScriptClass.uno"), 122, uString::Const("modifyPath"), NULL);
        return;
    }

    if ((rr->Route != NULL) && (uPtr(rr->Route)->SubRoute != NULL))
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("`modifyPath` expects one route component"), nav, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.ScriptClass.uno"), 128, uString::Const("modifyPath"), NULL);
        return;
    }

    ::g::Fuse::Navigation::RouterPage* page = (rr->Route != NULL) ? (::g::Fuse::Navigation::RouterPage*)uPtr(rr->Route)->RouterPage : NULL;
    ::g::Fuse::Reactive::ObserverMap* childPages = (uPtr(nav)->AncestorRouterPage() != NULL) ? (::g::Fuse::Reactive::ObserverMap*)uPtr(uPtr(nav)->AncestorRouterPage())->ChildRouterPages() : NULL;

    if ((rr->How == 3) && (page == NULL))
    {
        if (uPtr(childPages)->Count() > 1)
            page = (::g::Fuse::Navigation::RouterPage*)uPtr(childPages)->Item(uPtr(childPages)->Count() - 2);
    }

    if (page == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("`modifyPath` unable to find route component"), nav, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.ScriptClass.uno"), 140, uString::Const("modifyPath"), NULL);
        return;
    }

    int32_t op = 0;

    switch (rr->How)
    {
        case 0:
        {
            if (childPages != NULL)
                uPtr(childPages)->Add(page);

            op = 1;
            break;
        }
        case 1:
        {
            if (childPages != NULL)
            {
                uPtr(childPages)->Clear();
                childPages->Add(page);
            }

            op = 0;
            break;
        }
        case 2:
        {
            if (childPages != NULL)
            {
                int32_t count = uPtr(childPages)->Count();

                if (count == 0)
                    uPtr(childPages)->Add(page);
                else
                    uPtr(childPages)->Item(count - 1, page);
            }

            op = 2;
            break;
        }
        case 3:
        {
            if (childPages != NULL)
            {
                if (uPtr(childPages)->Count() > 0)
                    uPtr(childPages)->RemoveAt(uPtr(childPages)->Count() - 1);

                if (uPtr(childPages)->Count() > 0)
                    uPtr(childPages)->Item(uPtr(childPages)->Count() - 1, page);
                else
                    uPtr(childPages)->Add(page);
            }

            op = 3;
            break;
        }
        default:
        {
            ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition1(uString::Const("Unsupported `How`: "), uBox<int32_t>(::g::Fuse::Navigation::ModifyRouteHow_typeof(), uPtr(rr)->How)), nav, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigationControl.ScriptClass.uno"), 188, uString::Const("modifyPath"), NULL);
            return;
        }
    }

    uObject* outlet = (uObject*)nav;
    ::g::Fuse::Visual* ignore;
    ::g::Fuse::Navigation::IRouterOutlet::Goto(uInterface(outlet, ::g::Fuse::Navigation::IRouterOutlet_typeof()), page, rr->Transition, op, rr->Style, &ignore);
}

// private static void seekToPath(Fuse.Controls.NavigationControl nav, object[] args) [static] :42
void NavigationControl::seekToPath(NavigationControl* nav, uArray* args)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "seekToPath(Fuse.Controls.NavigationControl,object[])");
    NavigationControl_typeof()->Init();
    NavigationControl::alterPath(nav, args, uString::Const("seekToPath"), 1);
}

// public static void SetTransition(Fuse.Visual elm, Fuse.Controls.NavigationControlTransition value) [static] :355
void NavigationControl::SetTransition(::g::Fuse::Visual* elm, int32_t value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "SetTransition(Fuse.Visual,Fuse.Controls.NavigationControlTransition)");
    NavigationControl_typeof()->Init();
    uPtr(uPtr(elm)->Properties())->Set(NavigationControl::_propTransition_, uBox<int32_t>(::g::Fuse::Controls::NavigationControlTransition_typeof(), value));
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigationControl.BlockInput.uno
// -------------------------------------------------------------------------------------------------------------------

// public enum NavigationControlBlockInput :5
uEnumType* NavigationControlBlockInput_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigationControlBlockInput", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Never", 0LL,
        "WhileNavigating", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigationControl.uno
// --------------------------------------------------------------------------------------------------------

// public enum NavigationControlInactiveState :17
uEnumType* NavigationControlInactiveState_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigationControlInactiveState", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Collapsed", 0LL,
        "Disabled", 1LL,
        "Unchanged", 2LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigationControl.uno
// --------------------------------------------------------------------------------------------------------

// public enum NavigationControlInteraction :30
uEnumType* NavigationControlInteraction_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigationControlInteraction", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "None", 0LL,
        "Swipe", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigationControl.uno
// --------------------------------------------------------------------------------------------------------

// public enum NavigationControlTransition :41
uEnumType* NavigationControlTransition_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigationControlTransition", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Default", 0LL,
        "None", 1LL,
        "Standard", 2LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.Types.uno
// ------------------------------------------------------------------------------------------------------

// internal delegate void NavigationSwitchedHandler(object sender, Fuse.Controls.NavigatorSwitchedArgs args) :30
uDelegateType* NavigationSwitchedHandler_typeof()
{
    static uSStrong<uDelegateType*> type;
    if (type != NULL) return type;

    type = uDelegateType::New("Fuse.Controls.NavigationSwitchedHandler", 2, 0);
    type->SetSignature(uVoid_typeof(),
        uObject_typeof(),
        ::g::Fuse::Controls::NavigatorSwitchedArgs_typeof());
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.Interaction.uno
// ------------------------------------------------------------------------------------------------------------

// public partial class Navigator :13
// {
// static generated Navigator() :13
static void Navigator__cctor_5_fn(uType* __type)
{
    ::g::Fuse::Properties_typeof()->Init();
    Navigator::_propSwipeBack_ = ::g::Fuse::Properties::CreateHandle();
    Navigator::_propReuse_ = ::g::Fuse::Properties::CreateHandle();
    Navigator::_propRemove_ = ::g::Fuse::Properties::CreateHandle();
}

static void Navigator_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Triggers::BusyTask_typeof(),
        ::g::Fuse::Navigation::Navigation_typeof(),
        ::g::Fuse::Controls::NavigationControl_typeof(),
        ::g::Fuse::Navigation::PageData_typeof(),
        ::g::Fuse::Navigation::Router_typeof(),
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Navigator_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Navigator_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Navigator_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Navigator_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Navigator_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Navigator_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Navigator_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Navigator_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(Navigator_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(Navigator_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Navigator_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Navigator_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Navigator_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Navigator_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Navigator_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Navigator_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Navigator_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(Navigator_type, interface17),
        ::g::Fuse::Navigation::INavigation_typeof(), offsetof(Navigator_type, interface18),
        ::g::Fuse::Reactive::IObserver_typeof(), offsetof(Navigator_type, interface19),
        ::g::Fuse::Node__ISubtreeDataProvider_typeof(), offsetof(Navigator_type, interface20),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(Navigator_type, interface21),
        ::g::Fuse::Navigation::IRouterOutlet_typeof(), offsetof(Navigator_type, interface22));
    type->SetFields(126,
        ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), offsetof(Navigator, _swipeBack), 0,
        ::g::Fuse::Controls::NavigatorSwipe_typeof(), offsetof(Navigator, _navigatorSwipeBack), 0,
        ::g::Fuse::Navigation::Router_typeof(), offsetof(Navigator, _router), 0,
        ::g::Fuse::Controls::NavigatorGotoState_typeof(), offsetof(Navigator, _gotoState), 0,
        ::g::Fuse::Internal::MiniList_typeof()->MakeType(uObject_typeof(), NULL), offsetof(Navigator, _activeTransitions), 0,
        ::g::Uno::Collections::Dictionary_typeof()->MakeType(::g::Uno::String_typeof(), ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), NULL), offsetof(Navigator, _pathCache), 0,
        ::g::Uno::Bool_typeof(), offsetof(Navigator, _prepareBack), 0,
        Navigator__NavPage_typeof(), offsetof(Navigator, _current), 0,
        Navigator__NavPage_typeof(), offsetof(Navigator, _prepared), 0,
        ::g::Fuse::Node_typeof(), offsetof(Navigator, _listenBusy), 0,
        ::g::Uno::Double_typeof(), offsetof(Navigator, _listenStart), 0,
        ::g::Uno::Bool_typeof(), offsetof(Navigator, _listenTimeout), 0,
        ::g::Fuse::Triggers::BusyTaskActivity_typeof(), offsetof(Navigator, _deferPageSwitch), 0,
        ::g::Uno::Float_typeof(), offsetof(Navigator, _deferPageSwitchTimeout), 0,
        Navigator__DeferSwitch_typeof(), offsetof(Navigator, _deferred), 0,
        ::g::Fuse::Controls::ReuseType_typeof(), offsetof(Navigator, _reuse), 0,
        ::g::Fuse::Controls::RemoveType_typeof(), offsetof(Navigator, _remove), 0,
        ::g::Uno::String_typeof(), offsetof(Navigator, _DefaultPath), 0,
        ::g::Fuse::Controls::NavigationSwitchedHandler_typeof(), offsetof(Navigator, Switched1), 0,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&Navigator::_propSwipeBack_, uFieldFlagsStatic,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&Navigator::_propReuse_, uFieldFlagsStatic,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&Navigator::_propRemove_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(25,
        new uFunction("get_DefaultPath", NULL, (void*)Navigator__get_DefaultPath_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_DefaultPath", NULL, (void*)Navigator__set_DefaultPath_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_DefaultTemplate", NULL, (void*)Navigator__get_DefaultTemplate_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_DefaultTemplate", NULL, (void*)Navigator__set_DefaultTemplate_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_DeferPageSwitch", NULL, (void*)Navigator__get_DeferPageSwitch_fn, 0, false, ::g::Fuse::Triggers::BusyTaskActivity_typeof(), 0),
        new uFunction("set_DeferPageSwitch", NULL, (void*)Navigator__set_DeferPageSwitch_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Triggers::BusyTaskActivity_typeof()),
        new uFunction("get_DeferPageSwitchTimeout", NULL, (void*)Navigator__get_DeferPageSwitchTimeout_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_DeferPageSwitchTimeout", NULL, (void*)Navigator__set_DeferPageSwitchTimeout_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("GetRemove", NULL, (void*)Navigator__GetRemove_fn, 0, true, ::g::Fuse::Controls::RemoveType_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("GetReuse", NULL, (void*)Navigator__GetReuse_fn, 0, true, ::g::Fuse::Controls::ReuseType_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("GetSwipeBack", NULL, (void*)Navigator__GetSwipeBack_fn, 0, true, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("get_GotoState", NULL, (void*)Navigator__get_GotoState_fn, 0, false, ::g::Fuse::Controls::NavigatorGotoState_typeof(), 0),
        new uFunction("set_GotoState", NULL, (void*)Navigator__set_GotoState_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigatorGotoState_typeof()),
        new uFunction(".ctor", NULL, (void*)Navigator__New4_fn, 0, true, type, 0),
        new uFunction("get_Pages", NULL, (void*)Navigator__get_Pages_fn, 0, false, ::g::Fuse::IArray_typeof(), 0),
        new uFunction("set_Pages", NULL, (void*)Navigator__set_Pages_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::IArray_typeof()),
        new uFunction("get_Remove", NULL, (void*)Navigator__get_Remove_fn, 0, false, ::g::Fuse::Controls::RemoveType_typeof(), 0),
        new uFunction("set_Remove", NULL, (void*)Navigator__set_Remove_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::RemoveType_typeof()),
        new uFunction("get_Reuse", NULL, (void*)Navigator__get_Reuse_fn, 0, false, ::g::Fuse::Controls::ReuseType_typeof(), 0),
        new uFunction("set_Reuse", NULL, (void*)Navigator__set_Reuse_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::ReuseType_typeof()),
        new uFunction("SetRemove", NULL, (void*)Navigator__SetRemove_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Controls::RemoveType_typeof()),
        new uFunction("SetReuse", NULL, (void*)Navigator__SetReuse_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Controls::ReuseType_typeof()),
        new uFunction("SetSwipeBack", NULL, (void*)Navigator__SetSwipeBack_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Controls::NavigatorSwipeDirection_typeof()),
        new uFunction("get_SwipeBack", NULL, (void*)Navigator__get_SwipeBack_fn, 0, false, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), 0),
        new uFunction("set_SwipeBack", NULL, (void*)Navigator__set_SwipeBack_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof()));
}

Navigator_type* Navigator_typeof()
{
    static uSStrong<Navigator_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::NavigationControl_typeof();
    options.FieldCount = 148;
    options.InterfaceCount = 23;
    options.DependencyCount = 6;
    options.ObjectSize = sizeof(Navigator);
    options.TypeSize = sizeof(Navigator_type);
    type = (Navigator_type*)uClassType::New("Fuse.Controls.Navigator", options);
    type->fp_build_ = Navigator_build;
    type->fp_ctor_ = (void*)Navigator__New4_fn;
    type->fp_cctor_ = Navigator__cctor_5_fn;
    type->fp_CreateTriggers = (void(*)(::g::Fuse::Controls::NavigationControl*, ::g::Fuse::Elements::Element*, ::g::Fuse::Controls::NavigationControl__ControlPageData*))Navigator__CreateTriggers_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))Navigator__OnChildRemoved_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Navigator__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Navigator__OnUnrooted_fn;
    type->interface22.fp_PartialPrepareGoto = (void(*)(uObject*, double*))Navigator__FuseNavigationIRouterOutletPartialPrepareGoto_fn;
    type->interface22.fp_CancelPrepare = (void(*)(uObject*))Navigator__FuseNavigationIRouterOutletCancelPrepare_fn;
    type->interface22.fp_CompareCurrent = (void(*)(uObject*, ::g::Fuse::Navigation::RouterPage*, ::g::Fuse::Visual**, int32_t*))Navigator__FuseNavigationIRouterOutletCompareCurrent_fn;
    type->interface22.fp_Goto = (void(*)(uObject*, ::g::Fuse::Navigation::RouterPage*, int32_t*, int32_t*, uString*, ::g::Fuse::Visual**, int32_t*))Navigator__FuseNavigationIRouterOutletGoto_fn;
    type->interface22.fp_GetCurrent = (void(*)(uObject*, ::g::Fuse::Visual**, ::g::Fuse::Navigation::RouterPage**))Navigator__FuseNavigationIRouterOutletGetCurrent_fn;
    type->interface22.fp_get_Type = (void(*)(uObject*, int32_t*))Navigator__FuseNavigationIRouterOutletget_Type_fn;
    type->interface19.fp_OnSet = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnSet_fn;
    type->interface19.fp_OnFailed = (void(*)(uObject*, uString*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnFailed_fn;
    type->interface19.fp_OnAdd = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnAdd_fn;
    type->interface19.fp_OnRemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnRemoveAt_fn;
    type->interface19.fp_OnInsertAt = (void(*)(uObject*, int32_t*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnInsertAt_fn;
    type->interface19.fp_OnNewAt = (void(*)(uObject*, int32_t*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnNewAt_fn;
    type->interface19.fp_OnNewAll = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnNewAll_fn;
    type->interface19.fp_OnClear = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnClear_fn;
    type->interface20.fp_TryGetDataProvider = (void(*)(uObject*, ::g::Fuse::Node*, int32_t*, uObject**, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNodeISubtreeDataProviderTryGetDataProvider_fn;
    type->interface18.fp_GetPage = (void(*)(uObject*, int32_t*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPage_fn;
    type->interface18.fp_GetPageState = (void(*)(uObject*, ::g::Fuse::Visual*, ::g::Fuse::Navigation::NavigationPageState*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPageState_fn;
    type->interface18.fp_get_PageCount = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageCount_fn;
    type->interface18.fp_get_PageProgress = (void(*)(uObject*, double*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageProgress_fn;
    type->interface18.fp_get_ActivePage = (void(*)(uObject*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_ActivePage_fn;
    type->interface18.fp_get_State = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_State_fn;
    type->interface18.fp_Goto = (void(*)(uObject*, ::g::Fuse::Visual*, int32_t*))::g::Fuse::Controls::NavigationControl__Goto_fn;
    type->interface18.fp_Toggle = (void(*)(uObject*, ::g::Fuse::Visual*))::g::Fuse::Controls::NavigationControl__Toggle_fn;
    type->interface18.fp_add_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageCountChanged_fn;
    type->interface18.fp_remove_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageCountChanged_fn;
    type->interface18.fp_add_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageProgressChanged_fn;
    type->interface18.fp_remove_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageProgressChanged_fn;
    type->interface18.fp_add_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_Navigated_fn;
    type->interface18.fp_remove_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_Navigated_fn;
    type->interface18.fp_add_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_ActivePageChanged_fn;
    type->interface18.fp_remove_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_ActivePageChanged_fn;
    type->interface18.fp_add_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_StateChanged_fn;
    type->interface18.fp_remove_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_StateChanged_fn;
    type->interface21.fp_GoForward = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoForward_fn;
    type->interface21.fp_GoBack = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoBack_fn;
    type->interface21.fp_get_CanGoBack = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoBack_fn;
    type->interface21.fp_get_CanGoForward = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoForward_fn;
    type->interface21.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_HistoryChanged_fn;
    type->interface21.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_HistoryChanged_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Navigator() :54
void Navigator__ctor_8_fn(Navigator* __this)
{
    __this->ctor_8();
}

// private void AddToCache(Fuse.Controls.Navigator.NavPage page, Fuse.Visual target) :314
void Navigator__AddToCache_fn(Navigator* __this, Navigator__NavPage* page, ::g::Fuse::Visual* target)
{
    __this->AddToCache(page, target);
}

// private void BusyChanged() :543
void Navigator__BusyChanged_fn(Navigator* __this)
{
    __this->BusyChanged();
}

// private void CheckInteraction() :85
void Navigator__CheckInteraction_fn(Navigator* __this)
{
    __this->CheckInteraction();
}

// private void CleanupChildren([Fuse.Visual exclude]) :656
void Navigator__CleanupChildren_fn(Navigator* __this, ::g::Fuse::Visual* exclude)
{
    __this->CleanupChildren(exclude);
}

// private void CleanupListenBusy() :529
void Navigator__CleanupListenBusy_fn(Navigator* __this)
{
    __this->CleanupListenBusy();
}

// private void CleanupPrepared([Fuse.Visual newTarget]) :326
void Navigator__CleanupPrepared_fn(Navigator* __this, ::g::Fuse::Visual* newTarget)
{
    __this->CleanupPrepared(newTarget);
}

// protected override sealed void CreateTriggers(Fuse.Elements.Element c, Fuse.Controls.NavigationControl.ControlPageData pd) :672
void Navigator__CreateTriggers_fn(Navigator* __this, ::g::Fuse::Elements::Element* c, ::g::Fuse::Controls::NavigationControl__ControlPageData* pd)
{
    uStackFrame __("Fuse.Controls.Navigator", "CreateTriggers(Fuse.Elements.Element,Fuse.Controls.NavigationControl.ControlPageData)");

    switch (__this->PageTransition(c))
    {
        case 1:
            break;
        case 2:
        {
            uPtr(pd)->Enter = ::g::Fuse::Controls::NavigationInternal::NavEnterHorizontal::New3();
            pd->Exit = ::g::Fuse::Controls::NavigationInternal::NavExitHorizontal::New3();
            ::g::Fuse::Controls::NavigationInternal::NavRemoveHorizontal* q = ::g::Fuse::Controls::NavigationInternal::NavRemoveHorizontal::New3();
            ::g::Fuse::Controls::Element_Opacity_Property* t = ::g::Fuse::Controls::Element_Opacity_Property::New1(c);
            ::g::Fuse::Animations::Change* fade = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[71/*Fuse.Animations.Change<float>*/], t);
            fade->Duration(0.30000001192092896);
            ::g::Fuse::Animations::Change__set_Value_fn(fade, uCRef(0.0f));
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(q->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), fade);
            pd->Removing = q;
            break;
        }
    }
}

// public generated string get_DefaultPath() :38
void Navigator__get_DefaultPath_fn(Navigator* __this, uString** __retval)
{
    *__retval = __this->DefaultPath();
}

// public generated void set_DefaultPath(string value) :38
void Navigator__set_DefaultPath_fn(Navigator* __this, uString* value)
{
    __this->DefaultPath(value);
}

// public string get_DefaultTemplate() :24
void Navigator__get_DefaultTemplate_fn(Navigator* __this, uString** __retval)
{
    *__retval = __this->DefaultTemplate();
}

// public void set_DefaultTemplate(string value) :25
void Navigator__set_DefaultTemplate_fn(Navigator* __this, uString* value)
{
    __this->DefaultTemplate(value);
}

// public Fuse.Triggers.BusyTaskActivity get_DeferPageSwitch() :564
void Navigator__get_DeferPageSwitch_fn(Navigator* __this, int32_t* __retval)
{
    *__retval = __this->DeferPageSwitch();
}

// public void set_DeferPageSwitch(Fuse.Triggers.BusyTaskActivity value) :565
void Navigator__set_DeferPageSwitch_fn(Navigator* __this, int32_t* value)
{
    __this->DeferPageSwitch(*value);
}

// public float get_DeferPageSwitchTimeout() :576
void Navigator__get_DeferPageSwitchTimeout_fn(Navigator* __this, float* __retval)
{
    *__retval = __this->DeferPageSwitchTimeout();
}

// public void set_DeferPageSwitchTimeout(float value) :577
void Navigator__set_DeferPageSwitchTimeout_fn(Navigator* __this, float* value)
{
    __this->DeferPageSwitchTimeout(*value);
}

// private void EnablePageSwipeBack() :90
void Navigator__EnablePageSwipeBack_fn(Navigator* __this)
{
    __this->EnablePageSwipeBack();
}

// private Fuse.Visual FindPage(Uno.UX.Selector path) :447
void Navigator__FindPage_fn(Navigator* __this, ::g::Uno::UX::Selector* path, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->FindPage(*path);
}

// private void Fuse.Navigation.IRouterOutlet.CancelPrepare() :164
void Navigator__FuseNavigationIRouterOutletCancelPrepare_fn(Navigator* __this)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.CancelPrepare()");

    if (__this->_prepared == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(uString::Const("PartialPrepareGoto without Prepare"), __this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 168, uString::Const("Fuse.Navigation.IRouterOutlet.CancelPrepare"));
        return;
    }

    __this->CleanupPrepared(NULL);
    uPtr(__this->Navigation1())->UpdateProgress(0);
    __this->UpdateNavigationState();
}

// private Fuse.Navigation.RoutingResult Fuse.Navigation.IRouterOutlet.CompareCurrent(Fuse.Navigation.RouterPage routerPage, Fuse.Visual& pageVisual) :186
void Navigator__FuseNavigationIRouterOutletCompareCurrent_fn(Navigator* __this, ::g::Fuse::Navigation::RouterPage* routerPage, ::g::Fuse::Visual** pageVisual, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.CompareCurrent(Fuse.Navigation.RouterPage,Fuse.Visual&)");
    *pageVisual = NULL;
    ::g::Fuse::Visual* currentVisual;
    ::g::Fuse::Navigation::RouterPage* current = ::g::Fuse::Navigation::IRouterOutlet::GetCurrent(uInterface(uPtr(uAs<uObject*>(__this, ::g::Fuse::Navigation::IRouterOutlet_typeof())), ::g::Fuse::Navigation::IRouterOutlet_typeof()), &currentVisual);

    if (::g::Uno::String::op_Inequality(__this->DefaultPath(), NULL))
        uPtr(routerPage)->DefaultPath(__this->DefaultPath());

    if (::g::Uno::String::op_Inequality(uPtr(routerPage)->Path(), uPtr(current)->Path()) || ((currentVisual == NULL) && ::g::Uno::String::op_Inequality(uPtr(routerPage)->Path(), NULL)))
        return *__retval = 2, void();

    *pageVisual = currentVisual;

    if (::g::Uno::String::op_Equality(uPtr(routerPage)->Parameter, uPtr(current)->Parameter) && (uPtr(routerPage)->Context == uPtr(current)->Context))
        return *__retval = 0, void();

    return *__retval = 1, void();
}

// private Fuse.Navigation.RouterPage Fuse.Navigation.IRouterOutlet.GetCurrent(Fuse.Visual& pageVisual) :477
void Navigator__FuseNavigationIRouterOutletGetCurrent_fn(Navigator* __this, ::g::Fuse::Visual** pageVisual, ::g::Fuse::Navigation::RouterPage** __retval)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.GetCurrent(Fuse.Visual&)");

    if (__this->_deferred != NULL)
    {
        *pageVisual = uPtr(uPtr(__this->_deferred)->Page)->Visual;
        return *__retval = uPtr(uPtr(__this->_deferred)->Page)->RouterPage, void();
    }

    *pageVisual = uPtr(__this->_current)->Visual;
    return *__retval = uPtr(__this->_current)->RouterPage, void();
}

// private Fuse.Navigation.RoutingResult Fuse.Navigation.IRouterOutlet.Goto(Fuse.Navigation.RouterPage routerPage, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, Fuse.Visual& pageVisual) :346
void Navigator__FuseNavigationIRouterOutletGoto_fn(Navigator* __this, ::g::Fuse::Navigation::RouterPage* routerPage, int32_t* gotoMode, int32_t* operation, uString* operationStyle, ::g::Fuse::Visual** pageVisual, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.Goto(Fuse.Navigation.RouterPage,Fuse.Navigation.NavigationGotoMode,Fuse.Navigation.RoutingOperation,string,Fuse.Visual&)");
    int32_t gotoMode_ = *gotoMode;
    int32_t operation_ = *operation;
    int32_t result = __this->GotoImpl(routerPage, gotoMode_, operation_, operationStyle, pageVisual);
    return *__retval = result, void();
}

// private void Fuse.Navigation.IRouterOutlet.PartialPrepareGoto(double progress) :143
void Navigator__FuseNavigationIRouterOutletPartialPrepareGoto_fn(Navigator* __this, double* progress)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.PartialPrepareGoto(double)");
    double progress_ = *progress;

    if (__this->_prepared == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(uString::Const("PartialPrepareGoto without Prepare"), __this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 147, uString::Const("Fuse.Navigation.IRouterOutlet.PartialPrepareGoto"));
        return;
    }

    ::g::Fuse::Visual* preparedVisual = uPtr(__this->_prepared)->Visual;

    if (preparedVisual != NULL)
        uPtr(__this->Navigation1())->SetPageProgress(preparedVisual, __this->_prepareBack ? (float)progress_ - 1.0f : 1.0f - (float)progress_, false);

    ::g::Fuse::Visual* currentVisual = uPtr(__this->_current)->Visual;

    if (currentVisual != NULL)
        uPtr(__this->Navigation1())->SetPageProgress(currentVisual, __this->_prepareBack ? (float)progress_ : -((float)progress_), false);

    uPtr(__this->Navigation1())->UpdateProgress(2);
}

// private Fuse.Navigation.OutletType Fuse.Navigation.IRouterOutlet.get_Type() :140
void Navigator__FuseNavigationIRouterOutletget_Type_fn(Navigator* __this, int32_t* __retval)
{
    return *__retval = __this->RouterOutletType(), void();
}

// private Uno.Collections.List<Fuse.Visual> GetCache(string path) :130
void Navigator__GetCache_fn(Navigator* __this, uString* path, ::g::Uno::Collections::List** __retval)
{
    *__retval = __this->GetCache(path);
}

// public static Fuse.Controls.RemoveType GetRemove(Fuse.Visual elm) :748
void Navigator__GetRemove_fn(::g::Fuse::Visual* elm, int32_t* __retval)
{
    *__retval = Navigator::GetRemove(elm);
}

// public static Fuse.Controls.ReuseType GetReuse(Fuse.Visual elm) :702
void Navigator__GetReuse_fn(::g::Fuse::Visual* elm, int32_t* __retval)
{
    *__retval = Navigator::GetReuse(elm);
}

// public static Fuse.Controls.NavigatorSwipeDirection GetSwipeBack(Fuse.Visual elm) :114
void Navigator__GetSwipeBack_fn(::g::Fuse::Visual* elm, int32_t* __retval)
{
    *__retval = Navigator::GetSwipeBack(elm);
}

// private Fuse.Visual GetVisual(string path) :418
void Navigator__GetVisual_fn(Navigator* __this, uString* path, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->GetVisual(path);
}

// private Fuse.Navigation.RoutingResult GotoImpl(Fuse.Navigation.RouterPage routerPage, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, Fuse.Visual& pageVisual) :360
void Navigator__GotoImpl_fn(Navigator* __this, ::g::Fuse::Navigation::RouterPage* routerPage, int32_t* gotoMode, int32_t* operation, uString* operationStyle, ::g::Fuse::Visual** pageVisual, int32_t* __retval)
{
    *__retval = __this->GotoImpl(routerPage, *gotoMode, *operation, operationStyle, pageVisual);
}

// public Fuse.Controls.NavigatorGotoState get_GotoState() :50
void Navigator__get_GotoState_fn(Navigator* __this, int32_t* __retval)
{
    *__retval = __this->GotoState();
}

// public void set_GotoState(Fuse.Controls.NavigatorGotoState value) :51
void Navigator__set_GotoState_fn(Navigator* __this, int32_t* value)
{
    __this->GotoState(*value);
}

// private Fuse.Visual InstantiateTemplate(Uno.UX.Template f, string path) :434
void Navigator__InstantiateTemplate_fn(Navigator* __this, ::g::Uno::UX::Template* f, uString* path, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->InstantiateTemplate(f, path);
}

// private bool IsRemoveLevel(Fuse.Visual elm, Fuse.Controls.RemoveType type) :772
void Navigator__IsRemoveLevel_fn(Navigator* __this, ::g::Fuse::Visual* elm, int32_t* type, bool* __retval)
{
    *__retval = __this->IsRemoveLevel(elm, *type);
}

// private bool IsReuseLevel(Fuse.Visual elm, Fuse.Controls.ReuseType type) :726
void Navigator__IsReuseLevel_fn(Navigator* __this, ::g::Fuse::Visual* elm, int32_t* type, bool* __retval)
{
    *__retval = __this->IsReuseLevel(elm, *type);
}

// private new Fuse.Navigation.ExplicitNavigation get_Navigation() :64
void Navigator__get_Navigation1_fn(Navigator* __this, ::g::Fuse::Navigation::ExplicitNavigation** __retval)
{
    *__retval = __this->Navigation1();
}

// private Fuse.Controls.NavigatorSwipe get_NavigatorSwipeBack() :32
void Navigator__get_NavigatorSwipeBack_fn(Navigator* __this, ::g::Fuse::Controls::NavigatorSwipe** __retval)
{
    *__retval = __this->NavigatorSwipeBack();
}

// public Navigator New() :54
void Navigator__New4_fn(Navigator** __retval)
{
    *__retval = Navigator::New4();
}

// protected override sealed void OnChildRemoved(Fuse.Node elm) :792
void Navigator__OnChildRemoved_fn(Navigator* __this, ::g::Fuse::Node* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnChildRemoved(Fuse.Node)");

    if (elm == uPtr(__this->_current)->Visual)
        ::g::Fuse::Diagnostics::InternalError(uString::Const("Removing child!"), NULL, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 795, uString::Const("OnChildRemoved"));

    if ((__this->_deferred != NULL) && (uPtr(uPtr(__this->_deferred)->Page)->Visual == elm))
        ::g::Fuse::Diagnostics::InternalError(uString::Const("removing deferred child"), NULL, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 797, uString::Const("OnChildRemoved"));

    if ((__this->_prepared != NULL) && (uPtr(__this->_prepared)->Visual == elm))
        ::g::Fuse::Diagnostics::InternalError(uString::Const("removing prepared child"), NULL, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 799, uString::Const("OnChildRemoved"));

    ::g::Fuse::Controls::NavigationControl__OnChildRemoved_fn(__this, elm);
}

// private void OnHistoryChanged(object sender) :80
void Navigator__OnHistoryChanged_fn(Navigator* __this, uObject* sender)
{
    __this->OnHistoryChanged(sender);
}

// protected override sealed void OnRooted() :88
void Navigator__OnRooted_fn(Navigator* __this)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnRooted()");
    Navigator__NavPage* collection1;
    ::g::Fuse::Controls::NavigationControl__OnRooted_fn(__this);
    __this->RootInteraction();
    __this->_current = Navigator__NavPage::New1();
    __this->CleanupChildren(NULL);
    uPtr(__this->Navigation1())->UpdateProgress(1);
    ::g::Fuse::Visual* ignore;
    ::g::Fuse::Reactive::ObserverMap* pages = (__this->AncestorRouterPage() != NULL) ? (::g::Fuse::Reactive::ObserverMap*)uPtr(__this->AncestorRouterPage())->ChildRouterPages() : NULL;

    if ((pages != NULL) && (uPtr(pages)->Count() > 0))
        ::g::Fuse::Navigation::IRouterOutlet::Goto(uInterface((uObject*)__this, ::g::Fuse::Navigation::IRouterOutlet_typeof()), (::g::Fuse::Navigation::RouterPage*)uPtr(pages)->Item(uPtr(pages)->Count() - 1), 1, 0, ::STRINGS[19/*""*/], &ignore);
    else
    {
        if (::g::Uno::String::op_Inequality(__this->DefaultPath(), NULL))
        {
            __this->_current = (collection1 = Navigator__NavPage::New1(), uPtr(collection1)->RouterPage = ::g::Fuse::Navigation::RouterPage::New1(__this->DefaultPath(), NULL, NULL), collection1);
            ::g::Fuse::Navigation::IRouterOutlet::Goto(uInterface((uObject*)__this, ::g::Fuse::Navigation::IRouterOutlet_typeof()), uPtr(__this->_current)->RouterPage, 1, 0, ::STRINGS[19/*""*/], &uPtr(__this->_current)->Visual);
        }

        if (pages != NULL)
            uPtr(pages)->Add(uPtr(__this->_current)->RouterPage);
    }
}

// private void OnSwitched(Fuse.Controls.NavigatorSwitchedArgs args) :650
void Navigator__OnSwitched_fn(Navigator* __this, ::g::Fuse::Controls::NavigatorSwitchedArgs* args)
{
    __this->OnSwitched(args);
}

// protected override sealed void OnUnrooted() :119
void Navigator__OnUnrooted_fn(Navigator* __this)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnUnrooted()");
    __this->UnrootInteraction();
    ::g::Fuse::Controls::NavigationControl__OnUnrooted_fn(__this);
}

// private void OnUpdate() :548
void Navigator__OnUpdate_fn(Navigator* __this)
{
    __this->OnUpdate();
}

// public Fuse.IArray get_Pages() :806
void Navigator__get_Pages_fn(Navigator* __this, uObject** __retval)
{
    *__retval = __this->Pages();
}

// public void set_Pages(Fuse.IArray value) :807
void Navigator__set_Pages_fn(Navigator* __this, uObject* value)
{
    __this->Pages(value);
}

// private Fuse.Controls.NavigatorSwipeDirection PageSwipeBackDirection(Fuse.Visual elm) :125
void Navigator__PageSwipeBackDirection_fn(Navigator* __this, ::g::Fuse::Visual* elm, int32_t* __retval)
{
    *__retval = __this->PageSwipeBackDirection(elm);
}

// private Fuse.Controls.Navigator.PrepareResult Prepare(Fuse.Controls.Navigator.NavPage curPage, Fuse.Navigation.RouterPage routerPage, Fuse.Navigation.RoutingOperation operation) :206
void Navigator__Prepare1_fn(Navigator* __this, Navigator__NavPage* curPage, ::g::Fuse::Navigation::RouterPage* routerPage, int32_t* operation, Navigator__PrepareResult* __retval)
{
    *__retval = __this->Prepare1(curPage, routerPage, *operation);
}

// internal void ReleasePage(Fuse.Visual v) :785
void Navigator__ReleasePage_fn(Navigator* __this, ::g::Fuse::Visual* v)
{
    __this->ReleasePage(v);
}

// public new Fuse.Controls.RemoveType get_Remove() :768
void Navigator__get_Remove_fn(Navigator* __this, int32_t* __retval)
{
    *__retval = __this->Remove2();
}

// public new void set_Remove(Fuse.Controls.RemoveType value) :769
void Navigator__set_Remove_fn(Navigator* __this, int32_t* value)
{
    __this->Remove2(*value);
}

// private void ResolveDeferred() :608
void Navigator__ResolveDeferred_fn(Navigator* __this)
{
    __this->ResolveDeferred();
}

// public Fuse.Controls.ReuseType get_Reuse() :722
void Navigator__get_Reuse_fn(Navigator* __this, int32_t* __retval)
{
    *__retval = __this->Reuse();
}

// public void set_Reuse(Fuse.Controls.ReuseType value) :723
void Navigator__set_Reuse_fn(Navigator* __this, int32_t* value)
{
    __this->Reuse(*value);
}

// private void RootInteraction() :44
void Navigator__RootInteraction_fn(Navigator* __this)
{
    __this->RootInteraction();
}

// public static void SetRemove(Fuse.Visual elm, Fuse.Controls.RemoveType value) :742
void Navigator__SetRemove_fn(::g::Fuse::Visual* elm, int32_t* value)
{
    Navigator::SetRemove(elm, *value);
}

// public static void SetReuse(Fuse.Visual elm, Fuse.Controls.ReuseType value) :696
void Navigator__SetReuse_fn(::g::Fuse::Visual* elm, int32_t* value)
{
    Navigator::SetReuse(elm, *value);
}

// public static void SetSwipeBack(Fuse.Visual elm, Fuse.Controls.NavigatorSwipeDirection value) :108
void Navigator__SetSwipeBack_fn(::g::Fuse::Visual* elm, int32_t* value)
{
    Navigator::SetSwipeBack(elm, *value);
}

// internal void SetTransitionState(object owner, bool on) :68
void Navigator__SetTransitionState_fn(Navigator* __this, uObject* owner, bool* on)
{
    __this->SetTransitionState(owner, *on);
}

// public Fuse.Controls.NavigatorSwipeDirection get_SwipeBack() :25
void Navigator__get_SwipeBack_fn(Navigator* __this, int32_t* __retval)
{
    *__retval = __this->SwipeBack();
}

// public void set_SwipeBack(Fuse.Controls.NavigatorSwipeDirection value) :26
void Navigator__set_SwipeBack_fn(Navigator* __this, int32_t* value)
{
    __this->SwipeBack(*value);
}

// private void SwitchDeferred() :581
void Navigator__SwitchDeferred_fn(Navigator* __this)
{
    __this->SwitchDeferred();
}

// internal generated void add_Switched(Fuse.Controls.NavigationSwitchedHandler value) :670
void Navigator__add_Switched_fn(Navigator* __this, uDelegate* value)
{
    __this->add_Switched(value);
}

// internal generated void remove_Switched(Fuse.Controls.NavigationSwitchedHandler value) :670
void Navigator__remove_Switched_fn(Navigator* __this, uDelegate* value)
{
    __this->remove_Switched(value);
}

// private void SwitchToPage(Fuse.Controls.Navigator.NavPage newPage, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, bool usedPrepared) :493
void Navigator__SwitchToPage_fn(Navigator* __this, Navigator__NavPage* newPage, int32_t* gotoMode, int32_t* operation, uString* operationStyle, bool* usedPrepared)
{
    __this->SwitchToPage(newPage, *gotoMode, *operation, operationStyle, *usedPrepared);
}

// private void UnrootInteraction() :76
void Navigator__UnrootInteraction_fn(Navigator* __this)
{
    __this->UnrootInteraction();
}

// private void UpdateNavigationState() :77
void Navigator__UpdateNavigationState_fn(Navigator* __this)
{
    __this->UpdateNavigationState();
}

uSStrong< ::g::Fuse::PropertyHandle*> Navigator::_propSwipeBack_;
uSStrong< ::g::Fuse::PropertyHandle*> Navigator::_propReuse_;
uSStrong< ::g::Fuse::PropertyHandle*> Navigator::_propRemove_;

// public Navigator() [instance] :54
void Navigator::ctor_8()
{
    uStackFrame __("Fuse.Controls.Navigator", ".ctor()");
    _gotoState = 1;
    _pathCache = ((::g::Uno::Collections::Dictionary*)::g::Uno::Collections::Dictionary::New1(::g::Uno::Collections::Dictionary_typeof()->MakeType(::TYPES[50/*string*/], ::g::Uno::Collections::List_typeof()->MakeType(::TYPES[7/*Fuse.Visual*/], NULL), NULL)));
    _current = Navigator__NavPage::New1();
    _deferPageSwitch = 8;
    _deferPageSwitchTimeout = 1.0f;
    _reuse = 4;
    _remove = 2;
    ctor_7();
    _transition = 2;
    SetNavigation(::g::Fuse::Navigation::ExplicitNavigation::New2());
}

// private void AddToCache(Fuse.Controls.Navigator.NavPage page, Fuse.Visual target) [instance] :314
void Navigator::AddToCache(Navigator__NavPage* page, ::g::Fuse::Visual* target)
{
    uStackFrame __("Fuse.Controls.Navigator", "AddToCache(Fuse.Controls.Navigator.NavPage,Fuse.Visual)");
    ::g::Fuse::Visual* visual = uPtr(page)->Visual;

    if (visual == target)
        return;

    if ((((visual != NULL) && ::g::Uno::String::op_Inequality(uPtr(page->RouterPage)->Path(), NULL)) && IsReuseLevel(visual, 2)) && uPtr(::g::Fuse::Controls::NavigationControl::GetControlPageData(visual, true))->FromTemplate)
        ::g::Uno::Collections::List__Add_fn(uPtr(GetCache(uPtr(uPtr(page)->RouterPage)->Path())), visual);
}

// private void BusyChanged() [instance] :543
void Navigator::BusyChanged()
{
    ::g::Fuse::UpdateManager::AddDeferredAction3(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Navigator__SwitchDeferred_fn, this), 4);
}

// private void CheckInteraction() [instance] :85
void Navigator::CheckInteraction()
{
    uStackFrame __("Fuse.Controls.Navigator", "CheckInteraction()");
    EnablePageSwipeBack();
}

// private void CleanupChildren([Fuse.Visual exclude]) [instance] :656
void Navigator::CleanupChildren(::g::Fuse::Visual* exclude)
{
    uStackFrame __("Fuse.Controls.Navigator", "CleanupChildren([Fuse.Visual])");

    for (::g::Fuse::Visual* c = (::g::Fuse::Visual*)LastChild(::TYPES[53/*Fuse.Visual.LastChild<Fuse.Visual>*/]); c != NULL; c = (::g::Fuse::Visual*)uPtr(c)->PreviousSibling(::g::Fuse::Node_typeof()->MakeMethod(4/*PreviousSibling<Fuse.Visual>*/, ::TYPES[7/*Fuse.Visual*/], NULL)))
        if (::g::Fuse::Navigation::Navigation::IsPage(c) && (c != exclude))
        {
            if (IsRemoveLevel(c, 2) || (Navigator::GetReuse(c) == 1))
                BeginRemoveChild(c, NULL);
            else if (::g::Uno::Math::Abs1(uPtr(Navigation1())->GetPageState(c).Progress) < 1.0f)
                uPtr(Navigation1())->SetPageProgress1(c, -1.0f, -1.0f, false);
        }
}

// private void CleanupListenBusy() [instance] :529
void Navigator::CleanupListenBusy()
{
    uStackFrame __("Fuse.Controls.Navigator", "CleanupListenBusy()");
    _listenTimeout = false;

    if (_listenBusy != NULL)
    {
        ::g::Fuse::Triggers::BusyTask::RemoveListener(_listenBusy, uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Navigator__BusyChanged_fn, this));
        ::g::Fuse::UpdateManager::RemoveAction1(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Navigator__OnUpdate_fn, this), 0);
        _listenBusy = NULL;
    }
}

// private void CleanupPrepared([Fuse.Visual newTarget]) [instance] :326
void Navigator::CleanupPrepared(::g::Fuse::Visual* newTarget)
{
    uStackFrame __("Fuse.Controls.Navigator", "CleanupPrepared([Fuse.Visual])");

    if (_prepared == NULL)
        return;

    ::g::Fuse::Visual* visual = uPtr(_prepared)->Visual;

    if (((visual != uPtr(_current)->Visual) && (visual != NULL)) && (visual != newTarget))
        uPtr(Navigation1())->SetPageProgress(visual, (float)(_prepareBack ? 1 : -1), true);

    AddToCache(_prepared, newTarget);
    _prepared = NULL;
}

// public generated string get_DefaultPath() [instance] :38
uString* Navigator::DefaultPath()
{
    return _DefaultPath;
}

// public generated void set_DefaultPath(string value) [instance] :38
void Navigator::DefaultPath(uString* value)
{
    _DefaultPath = value;
}

// public string get_DefaultTemplate() [instance] :24
uString* Navigator::DefaultTemplate()
{
    return DefaultPath();
}

// public void set_DefaultTemplate(string value) [instance] :25
void Navigator::DefaultTemplate(uString* value)
{
    DefaultPath(value);
    ::g::Fuse::Diagnostics::Deprecated(uString::Const("Use `DefaultPath` instead of `DefaultTemplate`"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 29, uString::Const("set_DefaultTemplate"));
}

// public Fuse.Triggers.BusyTaskActivity get_DeferPageSwitch() [instance] :564
int32_t Navigator::DeferPageSwitch()
{
    return _deferPageSwitch;
}

// public void set_DeferPageSwitch(Fuse.Triggers.BusyTaskActivity value) [instance] :565
void Navigator::DeferPageSwitch(int32_t value)
{
    _deferPageSwitch = value;
}

// public float get_DeferPageSwitchTimeout() [instance] :576
float Navigator::DeferPageSwitchTimeout()
{
    return _deferPageSwitchTimeout;
}

// public void set_DeferPageSwitchTimeout(float value) [instance] :577
void Navigator::DeferPageSwitchTimeout(float value)
{
    _deferPageSwitchTimeout = value;
}

// private void EnablePageSwipeBack() [instance] :90
void Navigator::EnablePageSwipeBack()
{
    uStackFrame __("Fuse.Controls.Navigator", "EnablePageSwipeBack()");

    if ((_navigatorSwipeBack != NULL) && (_router != NULL))
    {
        if (!uPtr(_router)->CanGoBack())
            uPtr(NavigatorSwipeBack())->IsEnabled(false);
        else
        {
            uPtr(NavigatorSwipeBack())->IsEnabled(true);
            uPtr(NavigatorSwipeBack())->Direction(PageSwipeBackDirection(uPtr(_current)->Visual));
        }
    }
}

// private Fuse.Visual FindPage(Uno.UX.Selector path) [instance] :447
::g::Fuse::Visual* Navigator::FindPage(::g::Uno::UX::Selector path)
{
    uStackFrame __("Fuse.Controls.Navigator", "FindPage(Uno.UX.Selector)");

    for (::g::Fuse::Visual* c = (::g::Fuse::Visual*)FirstChild(::TYPES[9/*Fuse.Visual.FirstChild<Fuse.Visual>*/]); c != NULL; c = (::g::Fuse::Visual*)uPtr(c)->NextSibling(::TYPES[42/*Fuse.Node.NextSibling<Fuse.Visual>*/]))
    {
        if (::g::Uno::UX::Selector__op_Inequality(uPtr(c)->Name(), path))
            continue;

        if (uPtr(::g::Fuse::Controls::NavigationControl::GetControlPageData(c, true))->FromTemplate)
            continue;

        return c;
    }

    return NULL;
}

// private Uno.Collections.List<Fuse.Visual> GetCache(string path) [instance] :130
::g::Uno::Collections::List* Navigator::GetCache(uString* path)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetCache(string)");
    bool ret13;
    ::g::Uno::Collections::List* ret14;

    if ((::g::Uno::Collections::Dictionary__ContainsKey_fn(uPtr(_pathCache), path, &ret13), ret13))
        return (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_pathCache), path, &ret14), ret14);

    ::g::Uno::Collections::List* v = (::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::g::Uno::Collections::List_typeof()->MakeType(::TYPES[7/*Fuse.Visual*/], NULL));
    ::g::Uno::Collections::Dictionary__set_Item_fn(uPtr(_pathCache), path, v);
    return v;
}

// private Fuse.Visual GetVisual(string path) [instance] :418
::g::Fuse::Visual* Navigator::GetVisual(uString* path)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetVisual(string)");
    ::g::Uno::UX::Template* f = FindTemplate(path);

    if (f != NULL)
        return InstantiateTemplate(f, path);

    ::g::Fuse::Visual* q = FindPage(::g::Uno::UX::Selector__New1(path));

    if (q != NULL)
        return q;

    ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(uString::Const("Can not navigate to '"), path), uString::Const("', not found!")), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 430, uString::Const("GetVisual"));
    return NULL;
}

// private Fuse.Navigation.RoutingResult GotoImpl(Fuse.Navigation.RouterPage routerPage, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, Fuse.Visual& pageVisual) [instance] :360
int32_t Navigator::GotoImpl(::g::Fuse::Navigation::RouterPage* routerPage, int32_t gotoMode, int32_t operation, uString* operationStyle, ::g::Fuse::Visual** pageVisual)
{
    uStackFrame __("Fuse.Controls.Navigator", "GotoImpl(Fuse.Navigation.RouterPage,Fuse.Navigation.NavigationGotoMode,Fuse.Navigation.RoutingOperation,string,Fuse.Visual&)");
    ::g::Fuse::Controls::NavigatorSwitchedArgs* collection9;
    *pageVisual = NULL;

    if (gotoMode == 2)
    {
        CleanupPrepared(NULL);
        Navigator__PrepareResult r = Prepare1(_current, routerPage, operation);

        if (r.Routing == 3)
            return 3;

        _prepared = r.Page;
        _prepareBack = (operation == 3);
        collection9 = ::g::Fuse::Controls::NavigatorSwitchedArgs::New3(this);
        uPtr(collection9)->OldPath = uPtr(uPtr(_current)->RouterPage)->Path();
        uPtr(collection9)->NewPath = uPtr(uPtr(_prepared)->RouterPage)->Path();
        uPtr(collection9)->OldParameter = uPtr(uPtr(_current)->RouterPage)->Parameter;
        uPtr(collection9)->NewParameter = uPtr(uPtr(_prepared)->RouterPage)->Parameter;
        uPtr(collection9)->OldVisual = uPtr(_current)->Visual;
        uPtr(collection9)->NewVisual = uPtr(_prepared)->Visual;
        uPtr(collection9)->Operation = operation;
        uPtr(collection9)->OperationStyle = operationStyle;
        uPtr(collection9)->Mode = gotoMode;
        ::g::Fuse::Controls::NavigatorSwitchedArgs* args = collection9;
        OnSwitched(args);
        *pageVisual = uPtr(_prepared)->Visual;
        UpdateNavigationState();
        return r.Routing;
    }

    ResolveDeferred();
    Navigator__PrepareResult result = Prepare1(_current, routerPage, operation);

    if (result.Routing == 3)
        return result.Routing;

    if (result.Page == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(uString::Const("Unexpected null page"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 402, uString::Const("GotoImpl"));
        return 3;
    }

    *pageVisual = uPtr(result.Page)->Visual;

    if (result.Routing != 2)
    {
        _current = result.Page;
        return result.Routing;
    }

    CleanupPrepared(uPtr(result.Page)->Visual);
    SwitchToPage(result.Page, gotoMode, operation, operationStyle, result.UsedPrepared);
    return 2;
}

// public Fuse.Controls.NavigatorGotoState get_GotoState() [instance] :50
int32_t Navigator::GotoState()
{
    return _gotoState;
}

// public void set_GotoState(Fuse.Controls.NavigatorGotoState value) [instance] :51
void Navigator::GotoState(int32_t value)
{
    _gotoState = value;
}

// private Fuse.Visual InstantiateTemplate(Uno.UX.Template f, string path) [instance] :434
::g::Fuse::Visual* Navigator::InstantiateTemplate(::g::Uno::UX::Template* f, uString* path)
{
    uStackFrame __("Fuse.Controls.Navigator", "InstantiateTemplate(Uno.UX.Template,string)");
    ::g::Fuse::Visual* useVisual = uAs< ::g::Fuse::Visual*>(uPtr(f)->New1(), ::TYPES[7/*Fuse.Visual*/]);

    if (useVisual == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(uString::Const("Result of '"), path), uString::Const("' template is not a Visual!")), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.uno"), 439, uString::Const("InstantiateTemplate"), NULL);
        return NULL;
    }

    uPtr(useVisual)->Name(::g::Uno::UX::Selector__op_Implicit(path));
    uPtr(::g::Fuse::Controls::NavigationControl::GetControlPageData(useVisual, true))->FromTemplate = true;
    return useVisual;
}

// private bool IsRemoveLevel(Fuse.Visual elm, Fuse.Controls.RemoveType type) [instance] :772
bool Navigator::IsRemoveLevel(::g::Fuse::Visual* elm, int32_t type)
{
    uStackFrame __("Fuse.Controls.Navigator", "IsRemoveLevel(Fuse.Visual,Fuse.Controls.RemoveType)");

    if (!uPtr(::g::Fuse::Controls::NavigationControl::GetControlPageData(elm, true))->FromTemplate)
        return false;

    int32_t q = Navigator::GetRemove(elm);

    if (q == 0)
        q = Remove2();

    return q >= type;
}

// private bool IsReuseLevel(Fuse.Visual elm, Fuse.Controls.ReuseType type) [instance] :726
bool Navigator::IsReuseLevel(::g::Fuse::Visual* elm, int32_t type)
{
    uStackFrame __("Fuse.Controls.Navigator", "IsReuseLevel(Fuse.Visual,Fuse.Controls.ReuseType)");

    if (!uPtr(::g::Fuse::Controls::NavigationControl::GetControlPageData(elm, true))->FromTemplate)
        return true;

    int32_t q = Navigator::GetReuse(elm);

    if (q == 0)
        q = Reuse();

    return q >= type;
}

// private new Fuse.Navigation.ExplicitNavigation get_Navigation() [instance] :64
::g::Fuse::Navigation::ExplicitNavigation* Navigator::Navigation1()
{
    return uAs< ::g::Fuse::Navigation::ExplicitNavigation*>(Navigation(), ::g::Fuse::Navigation::ExplicitNavigation_typeof());
}

// private Fuse.Controls.NavigatorSwipe get_NavigatorSwipeBack() [instance] :32
::g::Fuse::Controls::NavigatorSwipe* Navigator::NavigatorSwipeBack()
{
    uStackFrame __("Fuse.Controls.Navigator", "get_NavigatorSwipeBack()");

    if (_navigatorSwipeBack == NULL)
    {
        _navigatorSwipeBack = ::g::Fuse::Controls::NavigatorSwipe::New2();
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _navigatorSwipeBack);
    }

    return _navigatorSwipeBack;
}

// private void OnHistoryChanged(object sender) [instance] :80
void Navigator::OnHistoryChanged(uObject* sender)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnHistoryChanged(object)");
    EnablePageSwipeBack();
}

// private void OnSwitched(Fuse.Controls.NavigatorSwitchedArgs args) [instance] :650
void Navigator::OnSwitched(::g::Fuse::Controls::NavigatorSwitchedArgs* args)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnSwitched(Fuse.Controls.NavigatorSwitchedArgs)");

    if (::g::Uno::Delegate::op_Inequality(Switched1, NULL))
        uPtr(Switched1)->Invoke(2, this, args);
}

// private void OnUpdate() [instance] :548
void Navigator::OnUpdate()
{
    double elapsed = ::g::Fuse::Time::FrameTime() - _listenStart;

    if (elapsed > (double)DeferPageSwitchTimeout())
    {
        _listenTimeout = true;
        ::g::Fuse::UpdateManager::AddDeferredAction3(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Navigator__SwitchDeferred_fn, this), 4);
    }
}

// public Fuse.IArray get_Pages() [instance] :806
uObject* Navigator::Pages()
{
    return PageHistory();
}

// public void set_Pages(Fuse.IArray value) [instance] :807
void Navigator::Pages(uObject* value)
{
    uStackFrame __("Fuse.Controls.Navigator", "set_Pages(Fuse.IArray)");
    PageHistory(value);
}

// private Fuse.Controls.NavigatorSwipeDirection PageSwipeBackDirection(Fuse.Visual elm) [instance] :125
int32_t Navigator::PageSwipeBackDirection(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "PageSwipeBackDirection(Fuse.Visual)");
    int32_t n = Navigator::GetSwipeBack(elm);
    return (n == 1) ? SwipeBack() : n;
}

// private Fuse.Controls.Navigator.PrepareResult Prepare(Fuse.Controls.Navigator.NavPage curPage, Fuse.Navigation.RouterPage routerPage, Fuse.Navigation.RoutingOperation operation) [instance] :206
Navigator__PrepareResult Navigator::Prepare1(Navigator__NavPage* curPage, ::g::Fuse::Navigation::RouterPage* routerPage, int32_t operation)
{
    uStackFrame __("Fuse.Controls.Navigator", "Prepare(Fuse.Controls.Navigator.NavPage,Fuse.Navigation.RouterPage,Fuse.Navigation.RoutingOperation)");
    Navigator__PrepareResult collection2;
    Navigator__NavPage* collection3;
    Navigator__PrepareResult collection4;
    Navigator__PrepareResult collection5;
    Navigator__PrepareResult collection6;
    Navigator__NavPage* collection7;
    Navigator__PrepareResult collection8;
    ::g::Fuse::Visual* ret15;
    bool ret16;

    if (::g::Uno::String::op_Inequality(DefaultPath(), NULL))
        uPtr(routerPage)->DefaultPath(DefaultPath());

    ::g::Fuse::Visual* curPageVisual = uPtr(curPage)->Visual;

    if (::g::Uno::String::op_Equality(uPtr(routerPage)->Path(), uPtr(curPage->RouterPage)->Path()) && (curPageVisual != NULL))
    {
        if (::g::Uno::String::op_Equality(uPtr(routerPage)->Parameter, uPtr(uPtr(curPage)->RouterPage)->Parameter) && (uPtr(routerPage)->Context == uPtr(uPtr(curPage)->RouterPage)->Context))
        {
            collection2 = uDefault<Navigator__PrepareResult>();
            collection2.Page = curPage;
            collection2.Routing = 0;
            return collection2;
        }

        bool compat = CompatibleParameter(uPtr(routerPage)->Parameter, uPtr(uPtr(curPage)->RouterPage)->Parameter) && (uPtr(routerPage)->Context == uPtr(uPtr(curPage)->RouterPage)->Context);
        bool reuse = (operation == 0) && IsReuseLevel(curPageVisual, 5);
        bool replace = (operation == 2) && IsReuseLevel(curPageVisual, 4);
        bool nonTemplate = !uPtr(::g::Fuse::Controls::NavigationControl::GetControlPageData(curPageVisual, true))->FromTemplate;

        if (((compat || reuse) || replace) || nonTemplate)
        {
            collection3 = Navigator__NavPage::New1();
            uPtr(collection3)->Visual = curPageVisual;
            uPtr(collection3)->RouterPage = routerPage;
            Navigator__NavPage* np = collection3;
            collection4 = uDefault<Navigator__PrepareResult>();
            collection4.Page = np;
            collection4.Routing = 1;
            Navigator__PrepareResult result = collection4;
            uPtr(::g::Fuse::Navigation::PageData::GetOrCreate(curPageVisual, true))->AttachRouterPage(uPtr(result.Page)->RouterPage);
            return result;
        }
    }

    ::g::Fuse::Visual* preparedVisual = (_prepared != NULL) ? (::g::Fuse::Visual*)uPtr(_prepared)->Visual : NULL;

    if ((curPage != _prepared) && (preparedVisual != NULL))
    {
        if (::g::Uno::String::op_Equality(uPtr(uPtr(_prepared)->RouterPage)->Path(), uPtr(routerPage)->Path()) && ::g::Uno::String::op_Equality(uPtr(uPtr(_prepared)->RouterPage)->Parameter, uPtr(routerPage)->Parameter))
        {
            uPtr(::g::Fuse::Navigation::PageData::GetOrCreate(preparedVisual, true))->AttachRouterPage(uPtr(_prepared)->RouterPage);
            collection5 = uDefault<Navigator__PrepareResult>();
            collection5.Page = _prepared;
            collection5.Routing = 2;
            collection5.UsedPrepared = true;
            return collection5;
        }
    }

    ::g::Fuse::Visual* useVisual = NULL;

    if (::g::Uno::String::op_Equality(uPtr(routerPage)->Path(), NULL))
        useVisual = NULL;
    else
    {
        ::g::Uno::Collections::List* cache = GetCache(uPtr(routerPage)->Path());
        int32_t priority = 0;
        int32_t useAt = -1;

        for (int32_t i = 0; i < uPtr(cache)->Count(); i++)
        {
            ::g::Fuse::Visual* c = (::g::Uno::Collections::List__get_Item_fn(uPtr(cache), uCRef<int32_t>(i), &ret15), ret15);

            if (uPtr(c)->HasPendingRemove())
                continue;

            int32_t np1 = 0;

            if (uPtr(c)->IsRootingStarted())
            {
                if (::g::Uno::String::op_Equality(uPtr(c)->Parameter(), uPtr(routerPage)->Parameter))
                    np1 = 10;
                else if (IsReuseLevel(c, 3))
                    np1 = 5;
            }
            else if (IsReuseLevel(c, 2))
                np1 = 1;

            if (np1 > priority)
            {
                priority = np1;
                useAt = i;
                useVisual = c;
            }
        }

        if (useAt >= 0)
            uPtr(cache)->RemoveAt(useAt);

        if (useVisual == NULL)
        {
            useVisual = GetVisual(uPtr(routerPage)->Path());

            if (useVisual == NULL)
            {
                collection6 = uDefault<Navigator__PrepareResult>();
                collection6.Routing = 3;
                return collection6;
            }
        }
    }

    if (useVisual != NULL)
    {
        uPtr(::g::Fuse::Navigation::PageData::GetOrCreate(useVisual, true))->AttachRouterPage(routerPage);

        if (!(::g::Uno::Collections::ICollection::Contains_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), useVisual, &ret16), ret16))
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), useVisual);
    }

    collection7 = Navigator__NavPage::New1();
    uPtr(collection7)->Visual = useVisual;
    uPtr(collection7)->RouterPage = routerPage;
    Navigator__NavPage* nvp = collection7;
    collection8 = uDefault<Navigator__PrepareResult>();
    collection8.Page = nvp;
    collection8.Routing = 2;
    return collection8;
}

// internal void ReleasePage(Fuse.Visual v) [instance] :785
void Navigator::ReleasePage(::g::Fuse::Visual* v)
{
    uStackFrame __("Fuse.Controls.Navigator", "ReleasePage(Fuse.Visual)");

    if (IsRemoveLevel(v, 3) || (Navigator::GetReuse(v) == 1))
        BeginRemoveChild(v, NULL);
}

// public new Fuse.Controls.RemoveType get_Remove() [instance] :768
int32_t Navigator::Remove2()
{
    return _remove;
}

// public new void set_Remove(Fuse.Controls.RemoveType value) [instance] :769
void Navigator::Remove2(int32_t value)
{
    _remove = value;
}

// private void ResolveDeferred() [instance] :608
void Navigator::ResolveDeferred()
{
    uStackFrame __("Fuse.Controls.Navigator", "ResolveDeferred()");

    if (_deferred == NULL)
        return;

    Navigator__DeferSwitch* deferred = _deferred;
    _deferred = NULL;
    ::g::Fuse::Visual* deferredVisual = uPtr(uPtr(deferred)->Page)->Visual;
    ::g::Fuse::Visual* currentVisual = uPtr(_current)->Visual;

    if (((deferredVisual != currentVisual) && (currentVisual != NULL)) && (deferred->Operation != 0))
        uPtr(Navigation1())->SetPageProgress1(currentVisual, (float)((uPtr(deferred)->Operation == 1) ? -1 : 1), 0.0f, false);

    AddToCache(_current, deferredVisual);
    _current = deferred->Page;

    if (deferred->Operation == 0)
        CleanupChildren(deferredVisual);

    if ((deferredVisual != NULL) && (GotoState() == 1))
        BringToFront(deferredVisual);

    uPtr(Navigation1())->Goto(deferredVisual, deferred->GotoMode);
    CheckInteraction();
    UpdateNavigationState();
}

// public Fuse.Controls.ReuseType get_Reuse() [instance] :722
int32_t Navigator::Reuse()
{
    return _reuse;
}

// public void set_Reuse(Fuse.Controls.ReuseType value) [instance] :723
void Navigator::Reuse(int32_t value)
{
    _reuse = value;
}

// private void RootInteraction() [instance] :44
void Navigator::RootInteraction()
{
    uStackFrame __("Fuse.Controls.Navigator", "RootInteraction()");
    bool ret17;

    if (SwipeBack() == 0)
    {
        if (_navigatorSwipeBack != NULL)
        {
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _navigatorSwipeBack, &ret17);
            _navigatorSwipeBack = NULL;
        }

        return;
    }

    uPtr(NavigatorSwipeBack())->Direction(SwipeBack());
    uPtr(NavigatorSwipeBack())->How(0);
    HitTestMode(HitTestMode() | 2);
    _router = ::g::Fuse::Navigation::Router::TryFindRouter(this);

    if (_router == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("Navigator requires a Router for interaction"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\Navigator.Interaction.uno"), 67, uString::Const("RootInteraction"), NULL);
        return;
    }

    uPtr(_router)->add_HistoryChanged(uDelegate::New(::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/], (void*)Navigator__OnHistoryChanged_fn, this));
    OnHistoryChanged(NULL);
}

// internal void SetTransitionState(object owner, bool on) [instance] :68
void Navigator::SetTransitionState(uObject* owner, bool on)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetTransitionState(object,bool)");

    if (!on)
        _activeTransitions.Remove(::g::Fuse::Internal::MiniList_typeof()->MakeType(uObject_typeof(), NULL), owner);
    else if (!_activeTransitions.Contains(::g::Fuse::Internal::MiniList_typeof()->MakeType(uObject_typeof(), NULL), owner))
        _activeTransitions.Add(::g::Fuse::Internal::MiniList_typeof()->MakeType(uObject_typeof(), NULL), owner);

    UpdateNavigationState();
}

// public Fuse.Controls.NavigatorSwipeDirection get_SwipeBack() [instance] :25
int32_t Navigator::SwipeBack()
{
    return _swipeBack;
}

// public void set_SwipeBack(Fuse.Controls.NavigatorSwipeDirection value) [instance] :26
void Navigator::SwipeBack(int32_t value)
{
    _swipeBack = value;
}

// private void SwitchDeferred() [instance] :581
void Navigator::SwitchDeferred()
{
    uStackFrame __("Fuse.Controls.Navigator", "SwitchDeferred()");
    Navigator__DeferSwitch* deferred = _deferred;

    if (deferred == NULL)
        return;

    ::g::Fuse::Visual* deferredVisual = uPtr(uPtr(deferred)->Page)->Visual;

    if ((deferredVisual != NULL) && !_listenTimeout)
    {
        int32_t busy = ::g::Fuse::Triggers::BusyTask::GetBusyActivity(deferredVisual, 0);

        if ((busy & DeferPageSwitch()) != 0)
        {
            if (_listenBusy == NULL)
            {
                _listenBusy = deferredVisual;
                _listenStart = ::g::Fuse::Time::FrameTime();
                _listenTimeout = false;
                ::g::Fuse::Triggers::BusyTask::AddListener(_listenBusy, uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Navigator__BusyChanged_fn, this));
                ::g::Fuse::UpdateManager::AddAction1(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Navigator__OnUpdate_fn, this), 0);
            }

            return;
        }
    }

    ResolveDeferred();
}

// internal generated void add_Switched(Fuse.Controls.NavigationSwitchedHandler value) [instance] :670
void Navigator::add_Switched(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Navigator", "add_Switched(Fuse.Controls.NavigationSwitchedHandler)");
    Switched1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(Switched1, value), ::g::Fuse::Controls::NavigationSwitchedHandler_typeof());
}

// internal generated void remove_Switched(Fuse.Controls.NavigationSwitchedHandler value) [instance] :670
void Navigator::remove_Switched(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Navigator", "remove_Switched(Fuse.Controls.NavigationSwitchedHandler)");
    Switched1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(Switched1, value), ::g::Fuse::Controls::NavigationSwitchedHandler_typeof());
}

// private void SwitchToPage(Fuse.Controls.Navigator.NavPage newPage, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, bool usedPrepared) [instance] :493
void Navigator::SwitchToPage(Navigator__NavPage* newPage, int32_t gotoMode, int32_t operation, uString* operationStyle, bool usedPrepared)
{
    uStackFrame __("Fuse.Controls.Navigator", "SwitchToPage(Fuse.Controls.Navigator.NavPage,Fuse.Navigation.NavigationGotoMode,Fuse.Navigation.RoutingOperation,string,bool)");
    ::g::Fuse::Controls::NavigatorSwitchedArgs* collection10;
    Navigator__DeferSwitch* collection11;
    collection10 = ::g::Fuse::Controls::NavigatorSwitchedArgs::New3(this);
    uPtr(collection10)->OldPath = uPtr(uPtr(_current)->RouterPage)->Path();
    uPtr(collection10)->NewPath = uPtr(uPtr(newPage)->RouterPage)->Path();
    uPtr(collection10)->OldParameter = uPtr(uPtr(_current)->RouterPage)->Parameter;
    uPtr(collection10)->NewParameter = uPtr(uPtr(newPage)->RouterPage)->Parameter;
    uPtr(collection10)->OldVisual = uPtr(_current)->Visual;
    uPtr(collection10)->NewVisual = uPtr(newPage)->Visual;
    uPtr(collection10)->Operation = operation;
    uPtr(collection10)->OperationStyle = operationStyle;
    uPtr(collection10)->Mode = gotoMode;
    ::g::Fuse::Controls::NavigatorSwitchedArgs* args = collection10;
    OnSwitched(args);
    ::g::Fuse::Visual* newVisual = newPage->Visual;

    if ((newVisual != NULL) && !usedPrepared)
    {
        int32_t ds = (operation == 3) ? -1 : (operation == 0) ? 1 : 1;
        uPtr(Navigation1())->SetPageProgress1(newVisual, (float)ds, (float)ds, false);
        uPtr(Navigation1())->UpdateProgress(1);
    }

    _deferred = (collection11 = Navigator__DeferSwitch::New1(), uPtr(collection11)->Page = newPage, uPtr(collection11)->GotoMode = gotoMode, uPtr(collection11)->Operation = operation, collection11);
    CleanupListenBusy();
    UpdateNavigationState();
    ::g::Fuse::UpdateManager::AddDeferredAction3(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Navigator__SwitchDeferred_fn, this), 4);
}

// private void UnrootInteraction() [instance] :76
void Navigator::UnrootInteraction()
{
}

// private void UpdateNavigationState() [instance] :77
void Navigator::UpdateNavigationState()
{
    uStackFrame __("Fuse.Controls.Navigator", "UpdateNavigationState()");
    bool hasTrans = _activeTransitions.Count(::g::Fuse::Internal::MiniList_typeof()->MakeType(uObject_typeof(), NULL)) > 0;
    bool hasDefer = _deferred != NULL;
    bool hasPrepared = _prepared != NULL;
    bool isOn = hasTrans || hasDefer;
    uPtr(Navigation1())->SetState(hasPrepared ? 1 : isOn ? 2 : 0);
}

// public static Fuse.Controls.RemoveType GetRemove(Fuse.Visual elm) [static] :748
int32_t Navigator::GetRemove(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetRemove(Fuse.Visual)");
    Navigator_typeof()->Init();
    uObject* res;

    if (uPtr(uPtr(elm)->Properties())->TryGet(Navigator::_propRemove_, &res))
        return uUnbox<int32_t>(::g::Fuse::Controls::RemoveType_typeof(), res);

    return 0;
}

// public static Fuse.Controls.ReuseType GetReuse(Fuse.Visual elm) [static] :702
int32_t Navigator::GetReuse(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetReuse(Fuse.Visual)");
    Navigator_typeof()->Init();
    uObject* res;

    if (uPtr(uPtr(elm)->Properties())->TryGet(Navigator::_propReuse_, &res))
        return uUnbox<int32_t>(::g::Fuse::Controls::ReuseType_typeof(), res);

    return 0;
}

// public static Fuse.Controls.NavigatorSwipeDirection GetSwipeBack(Fuse.Visual elm) [static] :114
int32_t Navigator::GetSwipeBack(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetSwipeBack(Fuse.Visual)");
    Navigator_typeof()->Init();

    if (elm != NULL)
    {
        uObject* res;

        if (uPtr(uPtr(elm)->Properties())->TryGet(Navigator::_propSwipeBack_, &res))
            return uUnbox<int32_t>(::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), res);
    }

    return 1;
}

// public Navigator New() [static] :54
Navigator* Navigator::New4()
{
    Navigator* obj12 = (Navigator*)uNew(Navigator_typeof());
    obj12->ctor_8();
    return obj12;
}

// public static void SetRemove(Fuse.Visual elm, Fuse.Controls.RemoveType value) [static] :742
void Navigator::SetRemove(::g::Fuse::Visual* elm, int32_t value)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetRemove(Fuse.Visual,Fuse.Controls.RemoveType)");
    Navigator_typeof()->Init();
    uPtr(uPtr(elm)->Properties())->Set(Navigator::_propRemove_, uBox<int32_t>(::g::Fuse::Controls::RemoveType_typeof(), value));
}

// public static void SetReuse(Fuse.Visual elm, Fuse.Controls.ReuseType value) [static] :696
void Navigator::SetReuse(::g::Fuse::Visual* elm, int32_t value)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetReuse(Fuse.Visual,Fuse.Controls.ReuseType)");
    Navigator_typeof()->Init();
    uPtr(uPtr(elm)->Properties())->Set(Navigator::_propReuse_, uBox<int32_t>(::g::Fuse::Controls::ReuseType_typeof(), value));
}

// public static void SetSwipeBack(Fuse.Visual elm, Fuse.Controls.NavigatorSwipeDirection value) [static] :108
void Navigator::SetSwipeBack(::g::Fuse::Visual* elm, int32_t value)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetSwipeBack(Fuse.Visual,Fuse.Controls.NavigatorSwipeDirection)");
    Navigator_typeof()->Init();
    uPtr(uPtr(elm)->Properties())->Set(Navigator::_propSwipeBack_, uBox<int32_t>(::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), value));
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.Types.uno
// ------------------------------------------------------------------------------------------------------

// public enum NavigatorGotoState :7
uEnumType* NavigatorGotoState_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigatorGotoState", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Unchanged", 0LL,
        "BringToFront", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigatorSwipe.uno
// -----------------------------------------------------------------------------------------------------

// public sealed class NavigatorSwipe :77
// {
static void NavigatorSwipe_build(uType* type)
{
    ::STRINGS[42] = uString::Const("SwipeNavigator requires a Router for interaction");
    ::STRINGS[43] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\NavigatorSwipe.uno");
    ::STRINGS[44] = uString::Const("OnRooted");
    ::STRINGS[45] = uString::Const("SwipeNavigator requires an Element parent");
    ::TYPES[43] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Triggers::Actions::TriggerAction_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[8] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[44] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[45] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    type->SetDependencies(
        ::g::Fuse::Navigation::Router_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Node_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Node_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Node_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface5));
    type->SetFields(23,
        ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), offsetof(NavigatorSwipe, _direction), 0,
        ::g::Fuse::Controls::NavigatorSwipeHow_typeof(), offsetof(NavigatorSwipe, _how), 0,
        ::g::Fuse::Gestures::SwipeGesture_typeof(), offsetof(NavigatorSwipe, _swipeGesture), 0,
        ::g::Fuse::Gestures::SwipingAnimation_typeof(), offsetof(NavigatorSwipe, _swipeAnim), 0,
        ::g::Fuse::Gestures::Swiped_typeof(), offsetof(NavigatorSwipe, _swipedCompleted), 0,
        ::g::Fuse::Gestures::Swiped_typeof(), offsetof(NavigatorSwipe, _swipedCancelled), 0,
        ::g::Fuse::Navigation::RouterModify_typeof(), offsetof(NavigatorSwipe, _modify), 0,
        ::g::Fuse::Navigation::Router_typeof(), offsetof(NavigatorSwipe, _router), 0,
        ::g::Fuse::Animations::Animator_typeof(), offsetof(NavigatorSwipe, _prepareAnim), 0);
    type->Reflection.SetFunctions(11,
        new uFunction("get_Bookmark", NULL, (void*)NavigatorSwipe__get_Bookmark_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Bookmark", NULL, (void*)NavigatorSwipe__set_Bookmark_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_Direction", NULL, (void*)NavigatorSwipe__get_Direction_fn, 0, false, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), 0),
        new uFunction("set_Direction", NULL, (void*)NavigatorSwipe__set_Direction_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof()),
        new uFunction("get_How", NULL, (void*)NavigatorSwipe__get_How_fn, 0, false, ::g::Fuse::Controls::NavigatorSwipeHow_typeof(), 0),
        new uFunction("set_How", NULL, (void*)NavigatorSwipe__set_How_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigatorSwipeHow_typeof()),
        new uFunction("get_IsEnabled", NULL, (void*)NavigatorSwipe__get_IsEnabled_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsEnabled", NULL, (void*)NavigatorSwipe__set_IsEnabled_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)NavigatorSwipe__New2_fn, 0, true, type, 0),
        new uFunction("get_Style", NULL, (void*)NavigatorSwipe__get_Style_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Style", NULL, (void*)NavigatorSwipe__set_Style_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

::g::Fuse::Node_type* NavigatorSwipe_typeof()
{
    static uSStrong< ::g::Fuse::Node_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::NodeGroupBase_typeof();
    options.FieldCount = 32;
    options.InterfaceCount = 6;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(NavigatorSwipe);
    options.TypeSize = sizeof(::g::Fuse::Node_type);
    type = (::g::Fuse::Node_type*)uClassType::New("Fuse.Controls.NavigatorSwipe", options);
    type->fp_build_ = NavigatorSwipe_build;
    type->fp_ctor_ = (void*)NavigatorSwipe__New2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))NavigatorSwipe__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))NavigatorSwipe__OnUnrooted_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public NavigatorSwipe() :161
void NavigatorSwipe__ctor_4_fn(NavigatorSwipe* __this)
{
    __this->ctor_4();
}

// public string get_Bookmark() :142
void NavigatorSwipe__get_Bookmark_fn(NavigatorSwipe* __this, uString** __retval)
{
    *__retval = __this->Bookmark();
}

// public void set_Bookmark(string value) :143
void NavigatorSwipe__set_Bookmark_fn(NavigatorSwipe* __this, uString* value)
{
    __this->Bookmark(value);
}

// public Fuse.Controls.NavigatorSwipeDirection get_Direction() :82
void NavigatorSwipe__get_Direction_fn(NavigatorSwipe* __this, int32_t* __retval)
{
    *__retval = __this->Direction();
}

// public void set_Direction(Fuse.Controls.NavigatorSwipeDirection value) :83
void NavigatorSwipe__set_Direction_fn(NavigatorSwipe* __this, int32_t* value)
{
    __this->Direction(*value);
}

// private Fuse.Gestures.SwipeDirection get_GestureSwipeDirection() :96
void NavigatorSwipe__get_GestureSwipeDirection_fn(NavigatorSwipe* __this, int32_t* __retval)
{
    *__retval = __this->GestureSwipeDirection();
}

// public Fuse.Controls.NavigatorSwipeHow get_How() :120
void NavigatorSwipe__get_How_fn(NavigatorSwipe* __this, int32_t* __retval)
{
    *__retval = __this->How();
}

// public void set_How(Fuse.Controls.NavigatorSwipeHow value) :121
void NavigatorSwipe__set_How_fn(NavigatorSwipe* __this, int32_t* value)
{
    __this->How(*value);
}

// public bool get_IsEnabled() :113
void NavigatorSwipe__get_IsEnabled_fn(NavigatorSwipe* __this, bool* __retval)
{
    *__retval = __this->IsEnabled();
}

// public void set_IsEnabled(bool value) :114
void NavigatorSwipe__set_IsEnabled_fn(NavigatorSwipe* __this, bool* value)
{
    __this->IsEnabled(*value);
}

// public NavigatorSwipe New() :161
void NavigatorSwipe__New2_fn(NavigatorSwipe** __retval)
{
    *__retval = NavigatorSwipe::New2();
}

// protected override sealed void OnRooted() :184
void NavigatorSwipe__OnRooted_fn(NavigatorSwipe* __this)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "OnRooted()");
    ::g::Fuse::Animations::Change* collection3;
    ::g::Fuse::NodeGroupBase__OnRooted_fn(__this);
    __this->_router = ::g::Fuse::Navigation::Router::TryFindRouter(__this);

    if (__this->_router == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(::STRINGS[42/*"SwipeNaviga...*/], __this, ::STRINGS[43/*"C:\\Users\\...*/], 191, ::STRINGS[44/*"OnRooted"*/], NULL);
        return;
    }

    if (!uIs((::g::Fuse::Visual*)__this->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]))
    {
        ::g::Fuse::Diagnostics::UserError(::STRINGS[45/*"SwipeNaviga...*/], __this, ::STRINGS[43/*"C:\\Users\\...*/], 196, ::STRINGS[44/*"OnRooted"*/], NULL);
        return;
    }

    uPtr(__this->_swipeGesture)->Direction(__this->GestureSwipeDirection());
    uPtr(__this->_swipeGesture)->LengthNode(uAs< ::g::Fuse::Elements::Element*>(__this->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]));
    uPtr(__this->_swipeGesture)->IsEnabled(__this->Direction() != 0);
    __this->_prepareAnim = (collection3 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[44/*Fuse.Animations.Change<double>*/], ::g::Fuse::Controls::Router_PrepareProgress_Property::New1(__this->_router)), ::g::Fuse::Animations::Change__set_Value_fn(uPtr(collection3), uCRef(1.0)), 1.0, collection3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->_swipeAnim)->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), __this->_prepareAnim);
}

// protected override sealed void OnUnrooted() :210
void NavigatorSwipe__OnUnrooted_fn(NavigatorSwipe* __this)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "OnUnrooted()");
    bool ret5;
    ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(__this->_swipeAnim)->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), __this->_prepareAnim, &ret5);
    __this->_prepareAnim = NULL;
    __this->_router = NULL;
    ::g::Fuse::NodeGroupBase__OnUnrooted_fn(__this);
}

// public string get_Style() :148
void NavigatorSwipe__get_Style_fn(NavigatorSwipe* __this, uString** __retval)
{
    *__retval = __this->Style();
}

// public void set_Style(string value) :149
void NavigatorSwipe__set_Style_fn(NavigatorSwipe* __this, uString* value)
{
    __this->Style(value);
}

// public NavigatorSwipe() [instance] :161
void NavigatorSwipe::ctor_4()
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", ".ctor()");
    ::g::Fuse::Navigation::RouterModify* collection1;
    ::g::Fuse::Navigation::RouterModify* collection2;
    _swipeGesture = ::g::Fuse::Gestures::SwipeGesture::New2();
    _modify = (collection1 = ::g::Fuse::Navigation::RouterModify::New3(0), uPtr(collection1)->When(3), 3, collection1);
    ctor_3(0);
    UseContent(true);
    How(0);
    _swipeAnim = ::g::Fuse::Gestures::SwipingAnimation::New2(_swipeGesture);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_swipeAnim)->Actions()), ::TYPES[43/*Uno.Collections.ICollection<Fuse.Triggers.Actions.TriggerAction>*/]), _modify);
    _swipedCompleted = ::g::Fuse::Gestures::Swiped::New2(_swipeGesture);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_swipedCompleted)->Actions()), ::TYPES[43/*Uno.Collections.ICollection<Fuse.Triggers.Actions.TriggerAction>*/]), (collection2 = ::g::Fuse::Navigation::RouterModify::New3(0), uPtr(collection2)->How(7), 7, collection2));
    _swipedCancelled = ::g::Fuse::Gestures::Swiped::New2(_swipeGesture);
    uPtr(_swipedCancelled)->How(3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_swipedCancelled)->Actions()), ::TYPES[43/*Uno.Collections.ICollection<Fuse.Triggers.Actions.TriggerAction>*/]), ::g::Fuse::Navigation::RouterCancelNavigation::New2());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _swipeGesture);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _swipeAnim);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _swipedCompleted);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _swipedCancelled);
}

// public string get_Bookmark() [instance] :142
uString* NavigatorSwipe::Bookmark()
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "get_Bookmark()");
    return uPtr(_modify)->Bookmark();
}

// public void set_Bookmark(string value) [instance] :143
void NavigatorSwipe::Bookmark(uString* value)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "set_Bookmark(string)");
    uPtr(_modify)->Bookmark(value);
}

// public Fuse.Controls.NavigatorSwipeDirection get_Direction() [instance] :82
int32_t NavigatorSwipe::Direction()
{
    return _direction;
}

// public void set_Direction(Fuse.Controls.NavigatorSwipeDirection value) [instance] :83
void NavigatorSwipe::Direction(int32_t value)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "set_Direction(Fuse.Controls.NavigatorSwipeDirection)");
    _direction = value;

    if (_swipeGesture != NULL)
    {
        uPtr(_swipeGesture)->Direction(GestureSwipeDirection());
        uPtr(_swipeGesture)->IsEnabled(Direction() != 0);
    }
}

// private Fuse.Gestures.SwipeDirection get_GestureSwipeDirection() [instance] :96
int32_t NavigatorSwipe::GestureSwipeDirection()
{
    switch (Direction())
    {
        case 2:
            return 0;
        case 4:
            return 2;
        case 3:
            return 1;
        case 5:
            return 3;
    }

    return 0;
}

// public Fuse.Controls.NavigatorSwipeHow get_How() [instance] :120
int32_t NavigatorSwipe::How()
{
    return _how;
}

// public void set_How(Fuse.Controls.NavigatorSwipeHow value) [instance] :121
void NavigatorSwipe::How(int32_t value)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "set_How(Fuse.Controls.NavigatorSwipeHow)");
    _how = value;

    switch (_how)
    {
        case 0:
        {
            uPtr(_modify)->How(4);
            break;
        }
        case 1:
        {
            uPtr(_modify)->How(5);
            break;
        }
        case 2:
        {
            uPtr(_modify)->How(6);
            break;
        }
    }
}

// public bool get_IsEnabled() [instance] :113
bool NavigatorSwipe::IsEnabled()
{
    return UseContent();
}

// public void set_IsEnabled(bool value) [instance] :114
void NavigatorSwipe::IsEnabled(bool value)
{
    UseContent(value);
}

// public string get_Style() [instance] :148
uString* NavigatorSwipe::Style()
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "get_Style()");
    return uPtr(_modify)->Style();
}

// public void set_Style(string value) [instance] :149
void NavigatorSwipe::Style(uString* value)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "set_Style(string)");
    uPtr(_modify)->Style(value);
}

// public NavigatorSwipe New() [static] :161
NavigatorSwipe* NavigatorSwipe::New2()
{
    NavigatorSwipe* obj4 = (NavigatorSwipe*)uNew(NavigatorSwipe_typeof());
    obj4->ctor_4();
    return obj4;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigatorSwipe.uno
// -----------------------------------------------------------------------------------------------------

// public enum NavigatorSwipeDirection :12
uEnumType* NavigatorSwipeDirection_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigatorSwipeDirection", ::g::Uno::Int_typeof(), 6);
    type->SetLiterals(
        "None", 0LL,
        "Default", 1LL,
        "Left", 2LL,
        "Up", 3LL,
        "Right", 4LL,
        "Down", 5LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigatorSwipe.uno
// -----------------------------------------------------------------------------------------------------

// public enum NavigatorSwipeHow :24
uEnumType* NavigatorSwipeHow_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigatorSwipeHow", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Back", 0LL,
        "PushBookmark", 1LL,
        "GotoBookmark", 2LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.Types.uno
// ------------------------------------------------------------------------------------------------------

// internal sealed class NavigatorSwitchedArgs :15
// {
static void NavigatorSwitchedArgs_build(uType* type)
{
    type->SetInterfaces(
        ::g::Fuse::Scripting::IScriptEvent_typeof(), offsetof(::g::Fuse::VisualEventArgs_type, interface0));
    type->SetFields(2,
        ::g::Uno::String_typeof(), offsetof(NavigatorSwitchedArgs, OldPath), 0,
        ::g::Uno::String_typeof(), offsetof(NavigatorSwitchedArgs, NewPath), 0,
        ::g::Uno::String_typeof(), offsetof(NavigatorSwitchedArgs, OldParameter), 0,
        ::g::Uno::String_typeof(), offsetof(NavigatorSwitchedArgs, NewParameter), 0,
        ::g::Fuse::Visual_typeof(), offsetof(NavigatorSwitchedArgs, OldVisual), 0,
        ::g::Fuse::Visual_typeof(), offsetof(NavigatorSwitchedArgs, NewVisual), 0,
        ::g::Fuse::Navigation::RoutingOperation_typeof(), offsetof(NavigatorSwitchedArgs, Operation), 0,
        ::g::Uno::String_typeof(), offsetof(NavigatorSwitchedArgs, OperationStyle), 0,
        ::g::Fuse::Navigation::NavigationGotoMode_typeof(), offsetof(NavigatorSwitchedArgs, Mode), 0);
}

::g::Fuse::VisualEventArgs_type* NavigatorSwitchedArgs_typeof()
{
    static uSStrong< ::g::Fuse::VisualEventArgs_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::VisualEventArgs_typeof();
    options.FieldCount = 11;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(NavigatorSwitchedArgs);
    options.TypeSize = sizeof(::g::Fuse::VisualEventArgs_type);
    type = (::g::Fuse::VisualEventArgs_type*)uClassType::New("Fuse.Controls.NavigatorSwitchedArgs", options);
    type->fp_build_ = NavigatorSwitchedArgs_build;
    type->interface0.fp_Serialize = (void(*)(uObject*, uObject*))::g::Fuse::VisualEventArgs__FuseScriptingIScriptEventSerialize_fn;
    return type;
}

// public NavigatorSwitchedArgs(Fuse.Visual v) :24
void NavigatorSwitchedArgs__ctor_2_fn(NavigatorSwitchedArgs* __this, ::g::Fuse::Visual* v)
{
    __this->ctor_2(v);
}

// public NavigatorSwitchedArgs New(Fuse.Visual v) :24
void NavigatorSwitchedArgs__New3_fn(::g::Fuse::Visual* v, NavigatorSwitchedArgs** __retval)
{
    *__retval = NavigatorSwitchedArgs::New3(v);
}

// public NavigatorSwitchedArgs(Fuse.Visual v) [instance] :24
void NavigatorSwitchedArgs::ctor_2(::g::Fuse::Visual* v)
{
    uStackFrame __("Fuse.Controls.NavigatorSwitchedArgs", ".ctor(Fuse.Visual)");
    ctor_1(v);
}

// public NavigatorSwitchedArgs New(Fuse.Visual v) [static] :24
NavigatorSwitchedArgs* NavigatorSwitchedArgs::New3(::g::Fuse::Visual* v)
{
    NavigatorSwitchedArgs* obj1 = (NavigatorSwitchedArgs*)uNew(NavigatorSwitchedArgs_typeof());
    obj1->ctor_2(v);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.uno
// ------------------------------------------------------------------------------------------------

// private sealed class Navigator.NavPage :463
// {
static void Navigator__NavPage_build(uType* type)
{
    type->SetFields(0,
        ::g::Fuse::Visual_typeof(), offsetof(Navigator__NavPage, Visual), 0,
        ::g::Fuse::Navigation::RouterPage_typeof(), offsetof(Navigator__NavPage, RouterPage), 0);
}

uType* Navigator__NavPage_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.ObjectSize = sizeof(Navigator__NavPage);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.Navigator.NavPage", options);
    type->fp_build_ = Navigator__NavPage_build;
    type->fp_ctor_ = (void*)Navigator__NavPage__New1_fn;
    return type;
}

// public NavPage() :468
void Navigator__NavPage__ctor__fn(Navigator__NavPage* __this)
{
    __this->ctor_();
}

// public NavPage New() :468
void Navigator__NavPage__New1_fn(Navigator__NavPage** __retval)
{
    *__retval = Navigator__NavPage::New1();
}

// public NavPage() [instance] :468
void Navigator__NavPage::ctor_()
{
    RouterPage = ::g::Fuse::Navigation::RouterPage::CreateDefault();
}

// public NavPage New() [static] :468
Navigator__NavPage* Navigator__NavPage::New1()
{
    Navigator__NavPage* obj1 = (Navigator__NavPage*)uNew(Navigator__NavPage_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\Number.uno
// ----------------------------------------------------------------------------------------------------------

// public sealed class Number :10
// {
// static generated Number() :10
static void Number__cctor_4_fn(uType* __type)
{
    Number::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
}

static void Number_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[46] = uString::Const("F0");
    ::STRINGS[47] = uString::Const("{0:F0}");
    ::STRINGS[48] = uString::Const("The Number control has been deprecated. Use a Text control instead and do the formatting inside JavaScript.");
    ::STRINGS[49] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\TextControls\\Number.uno");
    ::STRINGS[50] = uString::Const(".ctor");
    ::STRINGS[51] = uString::Const("{0:");
    ::STRINGS[52] = uString::Const("}");
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[46] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[47] = ::g::Uno::Exception_typeof();
    ::TYPES[48] = uObject_typeof()->Array();
    ::TYPES[49] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Number_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Number_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Number_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Number_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Number_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Number_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Number_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Number_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(Number_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(Number_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(Number_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Number_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Number_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Number_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Number_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Number_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Number_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(Number_type, interface17),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(Number_type, interface18));
    type->SetFields(117,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(Number, _text), 0,
        ::g::Uno::String_typeof(), offsetof(Number, _format), 0,
        ::g::Uno::String_typeof(), offsetof(Number, _formatString), 0,
        ::g::Uno::Float_typeof(), offsetof(Number, _value), 0,
        ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/], offsetof(Number, ValueChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Number::_valueName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(9,
        new uFunction("get_Format", NULL, (void*)Number__get_Format_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Format", NULL, (void*)Number__set_Format_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_FormatString", NULL, (void*)Number__get_FormatString_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_FormatString", NULL, (void*)Number__set_FormatString_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction(".ctor", NULL, (void*)Number__New4_fn, 0, true, type, 0),
        new uFunction("get_Value", NULL, (void*)Number__get_Value_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)Number__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)Number__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)Number__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]));
}

Number_type* Number_typeof()
{
    static uSStrong<Number_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 123;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(Number);
    options.TypeSize = sizeof(Number_type);
    type = (Number_type*)uClassType::New("Fuse.Controls.Number", options);
    type->fp_build_ = Number_build;
    type->fp_ctor_ = (void*)Number__New4_fn;
    type->fp_cctor_ = Number__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Number__OnRooted_fn;
    type->interface18.fp_get_Value = (void(*)(uObject*, uTRef))Number__get_Value_fn;
    type->interface18.fp_set_Value = (void(*)(uObject*, void*))Number__set_Value_fn;
    type->interface18.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))Number__add_ValueChanged_fn;
    type->interface18.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))Number__remove_ValueChanged_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Number() :13
void Number__ctor_7_fn(Number* __this)
{
    __this->ctor_7();
}

// public string get_Format() :29
void Number__get_Format_fn(Number* __this, uString** __retval)
{
    *__retval = __this->Format();
}

// public void set_Format(string value) :30
void Number__set_Format_fn(Number* __this, uString* value)
{
    __this->Format(value);
}

// public string get_FormatString() :45
void Number__get_FormatString_fn(Number* __this, uString** __retval)
{
    *__retval = __this->FormatString();
}

// public void set_FormatString(string value) :46
void Number__set_FormatString_fn(Number* __this, uString* value)
{
    __this->FormatString(value);
}

// public Number New() :13
void Number__New4_fn(Number** __retval)
{
    *__retval = Number::New4();
}

// protected override sealed void OnRooted() :20
void Number__OnRooted_fn(Number* __this)
{
    uStackFrame __("Fuse.Controls.Number", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    __this->UpdateValue();
}

// private void OnValueChanged(float n, Uno.UX.IPropertyListener origin) :74
void Number__OnValueChanged_fn(Number* __this, float* n, uObject* origin)
{
    __this->OnValueChanged(*n, origin);
}

// private void UpdateValue() :84
void Number__UpdateValue_fn(Number* __this)
{
    __this->UpdateValue();
}

// public float get_Value() :59
void Number__get_Value_fn(Number* __this, float* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(float value) :60
void Number__set_Value_fn(Number* __this, float* value)
{
    __this->Value(*value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<float> value) :72
void Number__add_ValueChanged_fn(Number* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<float> value) :72
void Number__remove_ValueChanged_fn(Number* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

::g::Uno::UX::Selector Number::_valueName_;

// public Number() [instance] :13
void Number::ctor_7()
{
    uStackFrame __("Fuse.Controls.Number", ".ctor()");
    _format = ::STRINGS[46/*"F0"*/];
    _formatString = ::STRINGS[47/*"{0:F0}"*/];
    ctor_6();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[48/*"The Number ...*/], this, ::STRINGS[49/*"C:\\Users\\...*/], 15, ::STRINGS[50/*".ctor"*/]);
    _text = ::g::Fuse::Controls::Text::New3();
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _text);
}

// public string get_Format() [instance] :29
uString* Number::Format()
{
    return _format;
}

// public void set_Format(string value) [instance] :30
void Number::Format(uString* value)
{
    uStackFrame __("Fuse.Controls.Number", "set_Format(string)");
    uString* newFormatString = ::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(::STRINGS[51/*"{0:"*/], value), ::STRINGS[52/*"}"*/]);

    if (::g::Uno::String::op_Inequality(_format, value) || ::g::Uno::String::op_Inequality(_formatString, newFormatString))
    {
        _format = value;
        _formatString = newFormatString;
        UpdateValue();
    }
}

// public string get_FormatString() [instance] :45
uString* Number::FormatString()
{
    return _formatString;
}

// public void set_FormatString(string value) [instance] :46
void Number::FormatString(uString* value)
{
    uStackFrame __("Fuse.Controls.Number", "set_FormatString(string)");

    if (::g::Uno::String::op_Inequality(_formatString, value))
    {
        _formatString = value;
        UpdateValue();
    }
}

// private void OnValueChanged(float n, Uno.UX.IPropertyListener origin) [instance] :74
void Number::OnValueChanged(float n, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Number", "OnValueChanged(float,Uno.UX.IPropertyListener)");
    ::g::Uno::UX::ValueChangedArgs* ret2;
    OnPropertyChanged(Number::_valueName_);

    if (::g::Uno::Delegate::op_Inequality(ValueChanged1, NULL))
    {
        ::g::Uno::UX::ValueChangedArgs* args = (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[46/*Uno.UX.ValueChangedArgs<float>*/], uCRef(n), &ret2), ret2);
        uPtr(ValueChanged1)->Invoke(2, uBox(::g::Uno::Float_typeof(), n), args);
    }
}

// private void UpdateValue() [instance] :84
void Number::UpdateValue()
{
    uStackFrame __("Fuse.Controls.Number", "UpdateValue()");

    try
    {
        {
            uPtr(_text)->Value(::g::Uno::String::Format(FormatString(), uArray::Init<uObject*>(::TYPES[48/*object[]*/], 1, uBox(::g::Uno::Float_typeof(), Value()))));
        }
    }

    catch (const uThrowable& __t)
    {
        ::g::Uno::Exception* e = __t.Exception;
        U_THROW(e);
    }
}

// public float get_Value() [instance] :59
float Number::Value()
{
    return _value;
}

// public void set_Value(float value) [instance] :60
void Number::Value(float value)
{
    uStackFrame __("Fuse.Controls.Number", "set_Value(float)");

    if (_value != value)
    {
        _value = value;
        UpdateValue();
        OnValueChanged(value, (uObject*)this);
    }
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :72
void Number::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Number", "add_ValueChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :72
void Number::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Number", "remove_ValueChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public Number New() [static] :13
Number* Number::New4()
{
    Number* obj1 = (Number*)uNew(Number_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Page.uno
// -------------------------------------------------------------------------------------------

// public sealed class Page :46
// {
static void Page_build(uType* type)
{
    ::STRINGS[19] = uString::Const("");
    ::STRINGS[53] = uString::Const("Title");
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[19] = ::g::Uno::Action_typeof();
    ::TYPES[50] = ::g::Uno::String_typeof();
    type->SetDependencies(
        ::g::Fuse::Triggers::BusyTask_typeof(),
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(Page, _freezeTrigger), 0,
        ::g::Fuse::Controls::PageFreeze_typeof(), offsetof(Page, _freeze), 0,
        ::g::Fuse::Controls::PagePrepareBusy_typeof(), offsetof(Page, _prepare), 0,
        ::g::Fuse::Triggers::BusyTask_typeof(), offsetof(Page, _prepareBusy), 0,
        ::g::Uno::Int_typeof(), offsetof(Page, _busyFrames), 0,
        ::g::Uno::Bool_typeof(), offsetof(Page, _isBusy), 0);
    type->Reflection.SetFunctions(9,
        new uFunction("get_Freeze", NULL, (void*)Page__get_Freeze_fn, 0, false, ::g::Fuse::Controls::PageFreeze_typeof(), 0),
        new uFunction("set_Freeze", NULL, (void*)Page__set_Freeze_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::PageFreeze_typeof()),
        new uFunction(".ctor", NULL, (void*)Page__New4_fn, 0, true, type, 0),
        new uFunction("get_PrepareBusy", NULL, (void*)Page__get_PrepareBusy_fn, 0, false, ::g::Fuse::Controls::PagePrepareBusy_typeof(), 0),
        new uFunction("set_PrepareBusy", NULL, (void*)Page__set_PrepareBusy_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::PagePrepareBusy_typeof()),
        new uFunction("RestoreState", NULL, (void*)Page__RestoreState_fn, 0, false, uVoid_typeof(), 1, uObject_typeof()),
        new uFunction("SaveState", NULL, (void*)Page__SaveState_fn, 0, false, uObject_typeof(), 0),
        new uFunction("get_Title", NULL, (void*)Page__get_Title_fn, 0, false, ::TYPES[50/*string*/], 0),
        new uFunction("set_Title", NULL, (void*)Page__set_Title_fn, 0, false, uVoid_typeof(), 1, ::TYPES[50/*string*/]));
}

::g::Fuse::Controls::Panel_type* Page_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 123;
    options.InterfaceCount = 18;
    options.DependencyCount = 2;
    options.ObjectSize = sizeof(Page);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.Page", options);
    type->fp_build_ = Page_build;
    type->fp_ctor_ = (void*)Page__New4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Page__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Page__OnUnrooted_fn;
    type->fp_Prepare = (void(*)(::g::Fuse::Visual*, uString*))Page__Prepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Page() :48
void Page__ctor_7_fn(Page* __this)
{
    __this->ctor_7();
}

// private void CleanupBusy() :178
void Page__CleanupBusy_fn(Page* __this)
{
    __this->CleanupBusy();
}

// private void CleanupFreezeTrigger() :115
void Page__CleanupFreezeTrigger_fn(Page* __this)
{
    __this->CleanupFreezeTrigger();
}

// public Fuse.Controls.PageFreeze get_Freeze() :146
void Page__get_Freeze_fn(Page* __this, int32_t* __retval)
{
    *__retval = __this->Freeze();
}

// public void set_Freeze(Fuse.Controls.PageFreeze value) :147
void Page__set_Freeze_fn(Page* __this, int32_t* value)
{
    __this->Freeze(*value);
}

// private void ListenBusy() :184
void Page__ListenBusy_fn(Page* __this)
{
    __this->ListenBusy();
}

// public Page New() :48
void Page__New4_fn(Page** __retval)
{
    *__retval = Page::New4();
}

// private void OnBusyUpdate() :203
void Page__OnBusyUpdate_fn(Page* __this)
{
    __this->OnBusyUpdate();
}

// protected void OnRestoreState(object state) :69
void Page__OnRestoreState_fn(Page* __this, uObject* state)
{
    __this->OnRestoreState(state);
}

// protected override sealed void OnRooted() :93
void Page__OnRooted_fn(Page* __this)
{
    uStackFrame __("Fuse.Controls.Page", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    __this->SetupFreezeTrigger();
}

// protected object OnSaveState() :59
void Page__OnSaveState_fn(Page* __this, uObject** __retval)
{
    *__retval = __this->OnSaveState();
}

// protected override sealed void OnUnrooted() :124
void Page__OnUnrooted_fn(Page* __this)
{
    uStackFrame __("Fuse.Controls.Page", "OnUnrooted()");
    __this->CleanupFreezeTrigger();
    __this->CleanupBusy();
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// internal override sealed void Prepare(string parameter) :166
void Page__Prepare_fn(Page* __this, uString* parameter)
{
    uStackFrame __("Fuse.Controls.Page", "Prepare(string)");
    ::g::Fuse::Visual__Prepare_fn(__this, parameter);

    if (__this->PrepareBusy() == 1)
    {
        __this->_busyFrames = 2;
        __this->ListenBusy();
    }
}

// public Fuse.Controls.PagePrepareBusy get_PrepareBusy() :159
void Page__get_PrepareBusy_fn(Page* __this, int32_t* __retval)
{
    *__retval = __this->PrepareBusy();
}

// public void set_PrepareBusy(Fuse.Controls.PagePrepareBusy value) :160
void Page__set_PrepareBusy_fn(Page* __this, int32_t* value)
{
    __this->PrepareBusy(*value);
}

// public void RestoreState(object state) :64
void Page__RestoreState_fn(Page* __this, uObject* state)
{
    __this->RestoreState(state);
}

// public object SaveState() :54
void Page__SaveState_fn(Page* __this, uObject** __retval)
{
    *__retval = __this->SaveState();
}

// private void SetupFreezeTrigger() :99
void Page__SetupFreezeTrigger_fn(Page* __this)
{
    __this->SetupFreezeTrigger();
}

// public string get_Title() :75
void Page__get_Title_fn(Page* __this, uString** __retval)
{
    *__retval = __this->Title();
}

// public void set_Title(string value) :82
void Page__set_Title_fn(Page* __this, uString* value)
{
    __this->Title(value);
}

// public Page() [instance] :48
void Page::ctor_7()
{
    _prepare = 1;
    ctor_6();
    DeferFreeze(10);
}

// private void CleanupBusy() [instance] :178
void Page::CleanupBusy()
{
    _busyFrames = 0;
    ListenBusy();
}

// private void CleanupFreezeTrigger() [instance] :115
void Page::CleanupFreezeTrigger()
{
    uStackFrame __("Fuse.Controls.Page", "CleanupFreezeTrigger()");
    bool ret2;

    if (_freezeTrigger != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _freezeTrigger, &ret2);
        _freezeTrigger = NULL;
    }
}

// public Fuse.Controls.PageFreeze get_Freeze() [instance] :146
int32_t Page::Freeze()
{
    return _freeze;
}

// public void set_Freeze(Fuse.Controls.PageFreeze value) [instance] :147
void Page::Freeze(int32_t value)
{
    _freeze = value;
}

// private void ListenBusy() [instance] :184
void Page::ListenBusy()
{
    uStackFrame __("Fuse.Controls.Page", "ListenBusy()");
    bool should = _busyFrames > 0;

    if (should == _isBusy)
        return;

    _isBusy = should;

    if (_isBusy)
    {
        ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_prepareBusy, 8, ::STRINGS[19/*""*/]);
        ::g::Fuse::UpdateManager::AddAction1(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Page__OnBusyUpdate_fn, this), 0);
    }
    else
    {
        ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_prepareBusy, 0, ::STRINGS[19/*""*/]);
        ::g::Fuse::UpdateManager::RemoveAction1(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Page__OnBusyUpdate_fn, this), 0);
    }
}

// private void OnBusyUpdate() [instance] :203
void Page::OnBusyUpdate()
{
    uStackFrame __("Fuse.Controls.Page", "OnBusyUpdate()");
    _busyFrames--;
    ListenBusy();
}

// protected void OnRestoreState(object state) [instance] :69
void Page::OnRestoreState(uObject* state)
{
}

// protected object OnSaveState() [instance] :59
uObject* Page::OnSaveState()
{
    return NULL;
}

// public Fuse.Controls.PagePrepareBusy get_PrepareBusy() [instance] :159
int32_t Page::PrepareBusy()
{
    return _prepare;
}

// public void set_PrepareBusy(Fuse.Controls.PagePrepareBusy value) [instance] :160
void Page::PrepareBusy(int32_t value)
{
    _prepare = value;
}

// public void RestoreState(object state) [instance] :64
void Page::RestoreState(uObject* state)
{
    uStackFrame __("Fuse.Controls.Page", "RestoreState(object)");
    OnRestoreState(state);
}

// public object SaveState() [instance] :54
uObject* Page::SaveState()
{
    uStackFrame __("Fuse.Controls.Page", "SaveState()");
    return OnSaveState();
}

// private void SetupFreezeTrigger() [instance] :99
void Page::SetupFreezeTrigger()
{
    uStackFrame __("Fuse.Controls.Page", "SetupFreezeTrigger()");
    CleanupFreezeTrigger();

    switch (Freeze())
    {
        case 0:
            break;
        case 1:
        {
            _freezeTrigger = ::g::Fuse::Controls::NavigationInternal::PageWhileNavigatingFreeze::New3(this);
            break;
        }
    }

    if (_freezeTrigger != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _freezeTrigger);
}

// public string get_Title() [instance] :75
uString* Page::Title()
{
    uStackFrame __("Fuse.Controls.Page", "get_Title()");
    uObject* v;

    if (TryGetResource(::STRINGS[53/*"Title"*/], NULL, &v))
        return uAs<uString*>(v, ::TYPES[50/*string*/]);

    return NULL;
}

// public void set_Title(string value) [instance] :82
void Page::Title(uString* value)
{
    uStackFrame __("Fuse.Controls.Page", "set_Title(string)");

    if (::g::Uno::String::op_Inequality(Title(), value))
    {
        SetResource(::STRINGS[53/*"Title"*/], value);
        OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[53/*"Title"*/]));
    }
}

// public Page New() [static] :48
Page* Page::New4()
{
    Page* obj1 = (Page*)uNew(Page_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\PageControl.Pages.uno
// --------------------------------------------------------------------------------------------------------

// public partial sealed class PageControl :9
// {
// static PageControl() :82
static void PageControl__cctor_5_fn(uType* __type)
{
    ::g::Fuse::Scripting::ScriptClass_typeof()->Init();
    PageControl::ActiveIndexName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("ActiveIndex"));
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[29/*Fuse.Scripting.ScriptMember[]*/], 1, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), ::STRINGS[135/*"goto"*/], uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)PageControl__gotoPage_fn))));
}

static void PageControl_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Navigation::Navigation_typeof(),
        ::g::Fuse::Navigation::PageData_typeof(),
        ::g::Fuse::Navigation::VisualNavigation_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PageControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(PageControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(PageControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(PageControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PageControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PageControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(PageControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(PageControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(PageControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(PageControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(PageControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(PageControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(PageControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(PageControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(PageControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(PageControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(PageControl_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(PageControl_type, interface17),
        ::g::Fuse::Navigation::INavigation_typeof(), offsetof(PageControl_type, interface18),
        ::g::Fuse::Reactive::IObserver_typeof(), offsetof(PageControl_type, interface19),
        ::g::Fuse::Node__ISubtreeDataProvider_typeof(), offsetof(PageControl_type, interface20),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(PageControl_type, interface21),
        ::g::Fuse::Navigation::ISeekableNavigation_typeof(), offsetof(PageControl_type, interface22),
        ::g::Fuse::Navigation::IRouterOutlet_typeof(), offsetof(PageControl_type, interface23));
    type->SetFields(126,
        PageControl__PagesMap_typeof(), offsetof(PageControl, _pagesMap), 0,
        ::g::Fuse::IArray_typeof(), offsetof(PageControl, _pages), 0,
        ::g::Uno::Collections::List_typeof()->MakeType(PageControl__AddedPage_typeof(), NULL), offsetof(PageControl, _addedPages), 0,
        ::g::Fuse::Controls::NavigationControlInactiveState_typeof(), offsetof(PageControl, _inactive), 0,
        ::g::Fuse::Navigation::SwipeNavigate_typeof(), offsetof(PageControl, _swipe), 0,
        ::g::Fuse::Navigation::AllowedNavigationDirections_typeof(), offsetof(PageControl, _swipeAllow), 0,
        ::g::Fuse::Controls::NavigationControlInteraction_typeof(), offsetof(PageControl, _interaction), 0,
        ::g::Fuse::Layouts::Orientation_typeof(), offsetof(PageControl, _orient), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&PageControl::ActiveIndexName_, uFieldFlagsStatic);
    type->Reflection.SetFields(1,
        new uField("ActiveIndexName", 134));
    type->Reflection.SetFunctions(16,
        new uFunction("get_ActiveIndex", NULL, (void*)PageControl__get_ActiveIndex_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_ActiveIndex", NULL, (void*)PageControl__set_ActiveIndex_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_AllowedSwipeDirections", NULL, (void*)PageControl__get_AllowedSwipeDirections_fn, 0, false, ::g::Fuse::Navigation::AllowedNavigationDirections_typeof(), 0),
        new uFunction("set_AllowedSwipeDirections", NULL, (void*)PageControl__set_AllowedSwipeDirections_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::AllowedNavigationDirections_typeof()),
        new uFunction("get_InactiveState", NULL, (void*)PageControl__get_InactiveState_fn, 0, false, ::g::Fuse::Controls::NavigationControlInactiveState_typeof(), 0),
        new uFunction("set_InactiveState", NULL, (void*)PageControl__set_InactiveState_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigationControlInactiveState_typeof()),
        new uFunction("get_Interaction", NULL, (void*)PageControl__get_Interaction_fn, 0, false, ::g::Fuse::Controls::NavigationControlInteraction_typeof(), 0),
        new uFunction("set_Interaction", NULL, (void*)PageControl__set_Interaction_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigationControlInteraction_typeof()),
        new uFunction("get_Motion", NULL, (void*)PageControl__get_Motion_fn, 0, false, ::g::Fuse::Motion::MotionConfig_typeof(), 0),
        new uFunction("set_Motion", NULL, (void*)PageControl__set_Motion_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Motion::MotionConfig_typeof()),
        new uFunction(".ctor", NULL, (void*)PageControl__New4_fn, 0, true, type, 0),
        new uFunction("get_Orientation", NULL, (void*)PageControl__get_Orientation_fn, 0, false, ::g::Fuse::Layouts::Orientation_typeof(), 0),
        new uFunction("set_Orientation", NULL, (void*)PageControl__set_Orientation_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::Orientation_typeof()),
        new uFunction("get_Pages", NULL, (void*)PageControl__get_Pages_fn, 0, false, ::g::Fuse::IArray_typeof(), 0),
        new uFunction("set_Pages", NULL, (void*)PageControl__set_Pages_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::IArray_typeof()),
        new uFunction("SetActiveIndex", NULL, (void*)PageControl__SetActiveIndex_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Int_typeof(), ::g::Uno::UX::IPropertyListener_typeof()));
}

PageControl_type* PageControl_typeof()
{
    static uSStrong<PageControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::NavigationControl_typeof();
    options.FieldCount = 135;
    options.InterfaceCount = 24;
    options.DependencyCount = 3;
    options.ObjectSize = sizeof(PageControl);
    options.TypeSize = sizeof(PageControl_type);
    type = (PageControl_type*)uClassType::New("Fuse.Controls.PageControl", options);
    type->fp_build_ = PageControl_build;
    type->fp_ctor_ = (void*)PageControl__New4_fn;
    type->fp_cctor_ = PageControl__cctor_5_fn;
    type->fp_CreateTriggers = (void(*)(::g::Fuse::Controls::NavigationControl*, ::g::Fuse::Elements::Element*, ::g::Fuse::Controls::NavigationControl__ControlPageData*))PageControl__CreateTriggers_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))PageControl__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))PageControl__OnUnrooted_fn;
    type->fp_UpdateInteraction = (void(*)(::g::Fuse::Controls::NavigationControl*))PageControl__UpdateInteraction_fn;
    type->fp_UpdateProgress = (void(*)(::g::Fuse::Controls::NavigationControl*, ::g::Fuse::Elements::Element*, ::g::Fuse::Navigation::NavigationPageState*, ::g::Fuse::Controls::NavigationControl__ControlPageData*))PageControl__UpdateProgress_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))PageControl__UnoUXIPropertyListenerOnPropertyChanged_fn;
    type->interface23.fp_PartialPrepareGoto = (void(*)(uObject*, double*))PageControl__FuseNavigationIRouterOutletPartialPrepareGoto_fn;
    type->interface23.fp_CancelPrepare = (void(*)(uObject*))PageControl__FuseNavigationIRouterOutletCancelPrepare_fn;
    type->interface23.fp_CompareCurrent = (void(*)(uObject*, ::g::Fuse::Navigation::RouterPage*, ::g::Fuse::Visual**, int32_t*))PageControl__FuseNavigationIRouterOutletCompareCurrent_fn;
    type->interface23.fp_Goto = (void(*)(uObject*, ::g::Fuse::Navigation::RouterPage*, int32_t*, int32_t*, uString*, ::g::Fuse::Visual**, int32_t*))PageControl__FuseNavigationIRouterOutletGoto_fn;
    type->interface23.fp_GetCurrent = (void(*)(uObject*, ::g::Fuse::Visual**, ::g::Fuse::Navigation::RouterPage**))PageControl__FuseNavigationIRouterOutletGetCurrent_fn;
    type->interface22.fp_BeginSeek = (void(*)(uObject*))PageControl__FuseNavigationISeekableNavigationBeginSeek_fn;
    type->interface22.fp_Seek = (void(*)(uObject*, ::g::Fuse::Navigation::UpdateSeekArgs*))PageControl__FuseNavigationISeekableNavigationSeek_fn;
    type->interface22.fp_EndSeek = (void(*)(uObject*, ::g::Fuse::Navigation::EndSeekArgs*))PageControl__FuseNavigationISeekableNavigationEndSeek_fn;
    type->interface23.fp_get_Type = (void(*)(uObject*, int32_t*))PageControl__FuseNavigationIRouterOutletget_Type_fn;
    type->interface22.fp_get_SeekRange = (void(*)(uObject*, ::g::Uno::Float2*))PageControl__FuseNavigationISeekableNavigationget_SeekRange_fn;
    type->interface18.fp_Goto = (void(*)(uObject*, ::g::Fuse::Visual*, int32_t*))::g::Fuse::Controls::NavigationControl__Goto_fn;
    type->interface18.fp_Toggle = (void(*)(uObject*, ::g::Fuse::Visual*))::g::Fuse::Controls::NavigationControl__Toggle_fn;
    type->interface18.fp_add_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageCountChanged_fn;
    type->interface18.fp_remove_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageCountChanged_fn;
    type->interface18.fp_add_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageProgressChanged_fn;
    type->interface18.fp_remove_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageProgressChanged_fn;
    type->interface18.fp_add_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_Navigated_fn;
    type->interface18.fp_remove_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_Navigated_fn;
    type->interface18.fp_add_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_ActivePageChanged_fn;
    type->interface18.fp_remove_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_ActivePageChanged_fn;
    type->interface18.fp_add_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_StateChanged_fn;
    type->interface18.fp_remove_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_StateChanged_fn;
    type->interface21.fp_GoForward = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoForward_fn;
    type->interface21.fp_GoBack = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoBack_fn;
    type->interface21.fp_get_CanGoBack = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoBack_fn;
    type->interface21.fp_get_CanGoForward = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoForward_fn;
    type->interface21.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_HistoryChanged_fn;
    type->interface21.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_HistoryChanged_fn;
    type->interface19.fp_OnSet = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnSet_fn;
    type->interface19.fp_OnFailed = (void(*)(uObject*, uString*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnFailed_fn;
    type->interface19.fp_OnAdd = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnAdd_fn;
    type->interface19.fp_OnRemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnRemoveAt_fn;
    type->interface19.fp_OnInsertAt = (void(*)(uObject*, int32_t*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnInsertAt_fn;
    type->interface19.fp_OnNewAt = (void(*)(uObject*, int32_t*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnNewAt_fn;
    type->interface19.fp_OnNewAll = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnNewAll_fn;
    type->interface19.fp_OnClear = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnClear_fn;
    type->interface20.fp_TryGetDataProvider = (void(*)(uObject*, ::g::Fuse::Node*, int32_t*, uObject**, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNodeISubtreeDataProviderTryGetDataProvider_fn;
    type->interface18.fp_GetPage = (void(*)(uObject*, int32_t*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPage_fn;
    type->interface18.fp_GetPageState = (void(*)(uObject*, ::g::Fuse::Visual*, ::g::Fuse::Navigation::NavigationPageState*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPageState_fn;
    type->interface18.fp_get_PageCount = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageCount_fn;
    type->interface18.fp_get_PageProgress = (void(*)(uObject*, double*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageProgress_fn;
    type->interface18.fp_get_ActivePage = (void(*)(uObject*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_ActivePage_fn;
    type->interface18.fp_get_State = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_State_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public PageControl() :106
void PageControl__ctor_8_fn(PageControl* __this)
{
    __this->ctor_8();
}

// public int get_ActiveIndex() :417
void PageControl__get_ActiveIndex_fn(PageControl* __this, int32_t* __retval)
{
    *__retval = __this->ActiveIndex();
}

// public void set_ActiveIndex(int value) :418
void PageControl__set_ActiveIndex_fn(PageControl* __this, int32_t* value)
{
    __this->ActiveIndex(*value);
}

// public Fuse.Navigation.AllowedNavigationDirections get_AllowedSwipeDirections() :346
void PageControl__get_AllowedSwipeDirections_fn(PageControl* __this, int32_t* __retval)
{
    *__retval = __this->AllowedSwipeDirections();
}

// public void set_AllowedSwipeDirections(Fuse.Navigation.AllowedNavigationDirections value) :347
void PageControl__set_AllowedSwipeDirections_fn(PageControl* __this, int32_t* value)
{
    __this->AllowedSwipeDirections(*value);
}

// private bool get_CollapseInactive() :308
void PageControl__get_CollapseInactive_fn(PageControl* __this, bool* __retval)
{
    *__retval = __this->CollapseInactive();
}

// protected override sealed void CreateTriggers(Fuse.Elements.Element c, Fuse.Controls.NavigationControl.ControlPageData pd) :284
void PageControl__CreateTriggers_fn(PageControl* __this, ::g::Fuse::Elements::Element* c, ::g::Fuse::Controls::NavigationControl__ControlPageData* pd)
{
    uStackFrame __("Fuse.Controls.PageControl", "CreateTriggers(Fuse.Elements.Element,Fuse.Controls.NavigationControl.ControlPageData)");

    switch (__this->PageTransition(c))
    {
        case 1:
            break;
        case 2:
        {
            if (__this->IsHorizontal())
            {
                uPtr(pd)->Enter = ::g::Fuse::Controls::NavigationInternal::EnterHorizontal::New3();
                pd->Exit = ::g::Fuse::Controls::NavigationInternal::ExitHorizontal::New3();
            }
            else
            {
                uPtr(pd)->Enter = ::g::Fuse::Controls::NavigationInternal::EnterVertical::New3();
                pd->Exit = ::g::Fuse::Controls::NavigationInternal::ExitVertical::New3();
            }

            break;
        }
    }
}

// private bool get_DisableInactive() :313
void PageControl__get_DisableInactive_fn(PageControl* __this, bool* __retval)
{
    *__retval = __this->DisableInactive();
}

// private Fuse.Visual FindPath(string path) :167
void PageControl__FindPath_fn(PageControl* __this, uString* path, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->FindPath(path);
}

// private void Fuse.Navigation.IRouterOutlet.CancelPrepare() :163
void PageControl__FuseNavigationIRouterOutletCancelPrepare_fn(PageControl* __this)
{
}

// private Fuse.Navigation.RoutingResult Fuse.Navigation.IRouterOutlet.CompareCurrent(Fuse.Navigation.RouterPage routerPage, Fuse.Visual& pageVisual) :188
void PageControl__FuseNavigationIRouterOutletCompareCurrent_fn(PageControl* __this, ::g::Fuse::Navigation::RouterPage* routerPage, ::g::Fuse::Visual** pageVisual, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.IRouterOutlet.CompareCurrent(Fuse.Navigation.RouterPage,Fuse.Visual&)");
    *pageVisual = NULL;
    ::g::Fuse::Visual* useVisual = __this->FindPath(uPtr(routerPage)->Path());

    if (useVisual == NULL)
        return *__retval = 3, void();

    if (__this->Active() != useVisual)
        return *__retval = 2, void();

    *pageVisual = useVisual;
    ::g::Fuse::Navigation::PageData* pageData = ::g::Fuse::Navigation::PageData::GetOrCreate(*pageVisual, true);

    if (::g::Uno::String::op_Equality(uPtr(useVisual)->Parameter(), routerPage->Parameter) && (routerPage->Context == uPtr(pageData)->Context()))
        return *__retval = 0, void();

    return *__retval = __this->CompatibleParameter(uPtr(useVisual)->Parameter(), routerPage->Parameter) ? 1 : 2, void();
}

// private Fuse.Navigation.RouterPage Fuse.Navigation.IRouterOutlet.GetCurrent(Fuse.Visual& pageVisual) :254
void PageControl__FuseNavigationIRouterOutletGetCurrent_fn(PageControl* __this, ::g::Fuse::Visual** pageVisual, ::g::Fuse::Navigation::RouterPage** __retval)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.IRouterOutlet.GetCurrent(Fuse.Visual&)");
    *pageVisual = __this->Active();

    if (__this->Active() == NULL)
        return *__retval = ::g::Fuse::Navigation::RouterPage::New1(::STRINGS[19/*""*/], NULL, NULL), void();
    else
        return *__retval = uPtr(::g::Fuse::Navigation::PageData::GetOrCreate(__this->Active(), true))->RouterPage(), void();
}

// private Fuse.Navigation.RoutingResult Fuse.Navigation.IRouterOutlet.Goto(Fuse.Navigation.RouterPage routerPage, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, Fuse.Visual& pageVisual) :209
void PageControl__FuseNavigationIRouterOutletGoto_fn(PageControl* __this, ::g::Fuse::Navigation::RouterPage* routerPage, int32_t* gotoMode, int32_t* operation, uString* operationStyle, ::g::Fuse::Visual** pageVisual, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.IRouterOutlet.Goto(Fuse.Navigation.RouterPage,Fuse.Navigation.NavigationGotoMode,Fuse.Navigation.RoutingOperation,string,Fuse.Visual&)");
    int32_t gotoMode_ = *gotoMode;
    *pageVisual = NULL;
    ::g::Fuse::Visual* useVisual = __this->FindPath(uPtr(routerPage)->Path());

    if (useVisual == NULL)
        return *__retval = 3, void();

    *pageVisual = useVisual;
    ::g::Fuse::Navigation::PageData* pageData = ::g::Fuse::Navigation::PageData::GetOrCreate(useVisual, true);
    bool same = ::g::Uno::String::op_Equality(uPtr(useVisual)->Parameter(), routerPage->Parameter) && (uPtr(pageData)->Context() == routerPage->Context);
    pageData->AttachRouterPage(routerPage);

    if (useVisual == __this->Active())
        return *__retval = same ? 0 : 1, void();

    uPtr(__this->Navigation1())->Goto(useVisual, gotoMode_);
    return *__retval = 2, void();
}

// private void Fuse.Navigation.IRouterOutlet.PartialPrepareGoto(double progress) :159
void PageControl__FuseNavigationIRouterOutletPartialPrepareGoto_fn(PageControl* __this, double* progress)
{
}

// private Fuse.Navigation.OutletType Fuse.Navigation.IRouterOutlet.get_Type() :157
void PageControl__FuseNavigationIRouterOutletget_Type_fn(PageControl* __this, int32_t* __retval)
{
    return *__retval = __this->RouterOutletType(), void();
}

// private void Fuse.Navigation.ISeekableNavigation.BeginSeek() :426
void PageControl__FuseNavigationISeekableNavigationBeginSeek_fn(PageControl* __this)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.ISeekableNavigation.BeginSeek()");
    ::g::Fuse::Navigation::ISeekableNavigation::BeginSeek(uInterface(uPtr(uAs<uObject*>(__this->Navigation1(), ::g::Fuse::Navigation::ISeekableNavigation_typeof())), ::g::Fuse::Navigation::ISeekableNavigation_typeof()));
}

// private void Fuse.Navigation.ISeekableNavigation.EndSeek(Fuse.Navigation.EndSeekArgs args) :429
void PageControl__FuseNavigationISeekableNavigationEndSeek_fn(PageControl* __this, ::g::Fuse::Navigation::EndSeekArgs* args)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.ISeekableNavigation.EndSeek(Fuse.Navigation.EndSeekArgs)");
    ::g::Fuse::Navigation::ISeekableNavigation::EndSeek(uInterface(uPtr(uAs<uObject*>(__this->Navigation1(), ::g::Fuse::Navigation::ISeekableNavigation_typeof())), ::g::Fuse::Navigation::ISeekableNavigation_typeof()), args);
}

// private void Fuse.Navigation.ISeekableNavigation.Seek(Fuse.Navigation.UpdateSeekArgs args) :428
void PageControl__FuseNavigationISeekableNavigationSeek_fn(PageControl* __this, ::g::Fuse::Navigation::UpdateSeekArgs* args)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.ISeekableNavigation.Seek(Fuse.Navigation.UpdateSeekArgs)");
    ::g::Fuse::Navigation::ISeekableNavigation::Seek(uInterface(uPtr(uAs<uObject*>(__this->Navigation1(), ::g::Fuse::Navigation::ISeekableNavigation_typeof())), ::g::Fuse::Navigation::ISeekableNavigation_typeof()), args);
}

// private float2 Fuse.Navigation.ISeekableNavigation.get_SeekRange() :427
void PageControl__FuseNavigationISeekableNavigationget_SeekRange_fn(PageControl* __this, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.ISeekableNavigation.get_SeekRange()");
    return *__retval = uPtr(__this->Navigation1())->SeekRange(), void();
}

// private static void gotoPage(Fuse.Controls.PageControl pc, object[] args) :94
void PageControl__gotoPage_fn(PageControl* pc, uArray* args)
{
    PageControl::gotoPage(pc, args);
}

// public Fuse.Controls.NavigationControlInactiveState get_InactiveState() :269
void PageControl__get_InactiveState_fn(PageControl* __this, int32_t* __retval)
{
    *__retval = __this->InactiveState();
}

// public void set_InactiveState(Fuse.Controls.NavigationControlInactiveState value) :270
void PageControl__set_InactiveState_fn(PageControl* __this, int32_t* value)
{
    __this->InactiveState(*value);
}

// public Fuse.Controls.NavigationControlInteraction get_Interaction() :363
void PageControl__get_Interaction_fn(PageControl* __this, int32_t* __retval)
{
    *__retval = __this->Interaction();
}

// public void set_Interaction(Fuse.Controls.NavigationControlInteraction value) :364
void PageControl__set_Interaction_fn(PageControl* __this, int32_t* value)
{
    __this->Interaction(*value);
}

// private bool get_IsHorizontal() :404
void PageControl__get_IsHorizontal_fn(PageControl* __this, bool* __retval)
{
    *__retval = __this->IsHorizontal();
}

// public Fuse.Motion.MotionConfig get_Motion() :381
void PageControl__get_Motion_fn(PageControl* __this, ::g::Fuse::Motion::MotionConfig** __retval)
{
    *__retval = __this->Motion();
}

// public void set_Motion(Fuse.Motion.MotionConfig value) :386
void PageControl__set_Motion_fn(PageControl* __this, ::g::Fuse::Motion::MotionConfig* value)
{
    __this->Motion(value);
}

// internal new Fuse.Navigation.DynamicLinearNavigation get_Navigation() :103
void PageControl__get_Navigation1_fn(PageControl* __this, ::g::Fuse::Navigation::DynamicLinearNavigation** __retval)
{
    *__retval = __this->Navigation1();
}

// public PageControl New() :106
void PageControl__New4_fn(PageControl** __retval)
{
    *__retval = PageControl::New4();
}

// private void OnActivePageChanged(object sender, Fuse.Visual active) :230
void PageControl__OnActivePageChanged_fn(PageControl* __this, uObject* sender, ::g::Fuse::Visual* active)
{
    __this->OnActivePageChanged(sender, active);
}

// private void OnPagesChanged() :62
void PageControl__OnPagesChanged_fn(PageControl* __this)
{
    __this->OnPagesChanged();
}

// private void OnPagesUnrooted() :80
void PageControl__OnPagesUnrooted_fn(PageControl* __this)
{
    __this->OnPagesUnrooted();
}

// protected override sealed void OnRooted() :120
void PageControl__OnRooted_fn(PageControl* __this)
{
    uStackFrame __("Fuse.Controls.PageControl", "OnRooted()");
    ::g::Fuse::Controls::NavigationControl__OnRooted_fn(__this);
    __this->OnPagesChanged();
    ::g::Fuse::Reactive::ObserverMap* pages = (__this->AncestorRouterPage() != NULL) ? (::g::Fuse::Reactive::ObserverMap*)uPtr(__this->AncestorRouterPage())->ChildRouterPages() : NULL;

    if ((pages != NULL) && (uPtr(pages)->Count() > 0))
    {
        ::g::Fuse::Visual* ignore;
        ::g::Fuse::Navigation::IRouterOutlet::Goto(uInterface((uObject*)__this, ::g::Fuse::Navigation::IRouterOutlet_typeof()), (::g::Fuse::Navigation::RouterPage*)uPtr(pages)->Item(uPtr(pages)->Count() - 1), 1, 0, ::STRINGS[19/*""*/], &ignore);
    }
    else
        __this->OnActivePageChanged(__this, uPtr(__this->Navigation1())->Active());

    uPtr(__this->Navigation1())->add_ActivePageChanged(uDelegate::New(::g::Fuse::Navigation::ActivePageChangedHandler_typeof(), (void*)PageControl__OnActivePageChanged_fn, __this));
}

// protected override sealed void OnUnrooted() :141
void PageControl__OnUnrooted_fn(PageControl* __this)
{
    uStackFrame __("Fuse.Controls.PageControl", "OnUnrooted()");
    __this->OnPagesUnrooted();
    ::g::Fuse::Controls::NavigationControl__OnUnrooted_fn(__this);
}

// public Fuse.Layouts.Orientation get_Orientation() :400
void PageControl__get_Orientation_fn(PageControl* __this, int32_t* __retval)
{
    *__retval = __this->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) :401
void PageControl__set_Orientation_fn(PageControl* __this, int32_t* value)
{
    __this->Orientation(*value);
}

// public Fuse.IArray get_Pages() :54
void PageControl__get_Pages_fn(PageControl* __this, uObject** __retval)
{
    *__retval = __this->Pages();
}

// public void set_Pages(Fuse.IArray value) :55
void PageControl__set_Pages_fn(PageControl* __this, uObject* value)
{
    __this->Pages(value);
}

// public void SetActiveIndex(int value, Uno.UX.IPropertyListener origin) :420
void PageControl__SetActiveIndex_fn(PageControl* __this, int32_t* value, uObject* origin)
{
    __this->SetActiveIndex(*value, origin);
}

// private void Uno.UX.IPropertyListener.OnPropertyChanged(Uno.UX.PropertyObject obj, Uno.UX.Selector property) :147
void PageControl__UnoUXIPropertyListenerOnPropertyChanged_fn(PageControl* __this, ::g::Uno::UX::PropertyObject* obj, ::g::Uno::UX::Selector* property)
{
    uStackFrame __("Fuse.Controls.PageControl", "Uno.UX.IPropertyListener.OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector property_ = *property;

    if (obj == __this->Navigation1())
    {
        if (::g::Uno::UX::Selector__op_Equality(property_, ::g::Fuse::Navigation::VisualNavigation::ActiveIndexName()))
            __this->OnPropertyChanged(PageControl::ActiveIndexName_);
    }
}

// protected override sealed void UpdateInteraction() :318
void PageControl__UpdateInteraction_fn(PageControl* __this)
{
    uStackFrame __("Fuse.Controls.PageControl", "UpdateInteraction()");
    bool ret2;
    bool needSwipe = __this->_interaction == 1;

    if (needSwipe)
    {
        if (__this->_swipe == NULL)
        {
            __this->_swipe = ::g::Fuse::Navigation::SwipeNavigate::New2();
            uPtr(__this->_swipe)->SwipeDirection(__this->IsHorizontal() ? 1 : 3);
            uPtr(__this->_swipe)->AllowedDirections(__this->_swipeAllow);
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_swipe);
        }
    }
    else
    {
        if (__this->_swipe != NULL)
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_swipe, &ret2);

        __this->_swipe = NULL;
    }
}

// private void UpdatePages() :93
void PageControl__UpdatePages_fn(PageControl* __this)
{
    __this->UpdatePages();
}

// protected override sealed void UpdateProgress(Fuse.Elements.Element page, Fuse.Navigation.NavigationPageState state, Fuse.Controls.NavigationControl.ControlPageData pd) :273
void PageControl__UpdateProgress_fn(PageControl* __this, ::g::Fuse::Elements::Element* page, ::g::Fuse::Navigation::NavigationPageState* state, ::g::Fuse::Controls::NavigationControl__ControlPageData* pd)
{
    uStackFrame __("Fuse.Controls.PageControl", "UpdateProgress(Fuse.Elements.Element,Fuse.Navigation.NavigationPageState,Fuse.Controls.NavigationControl.ControlPageData)");
    ::g::Fuse::Navigation::NavigationPageState state_ = *state;
    bool active = ::g::Uno::Math::Abs1(state_.Progress) < 1.0f;
    ::g::Fuse::Elements::Element* elm = uAs< ::g::Fuse::Elements::Element*>(page, ::TYPES[8/*Fuse.Elements.Element*/]);

    if ((elm != NULL) && __this->CollapseInactive())
        uPtr(elm)->Visibility(!active ? 1 : 0);

    if (__this->DisableInactive())
        uPtr(page)->IsEnabled(active);
}

::g::Uno::UX::Selector PageControl::ActiveIndexName_;

// public PageControl() [instance] :106
void PageControl::ctor_8()
{
    uStackFrame __("Fuse.Controls.PageControl", ".ctor()");
    _pagesMap = PageControl__PagesMap::New1();
    _addedPages = ((::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::g::Uno::Collections::List_typeof()->MakeType(PageControl__AddedPage_typeof(), NULL)));
    _swipeAllow = 3;
    _interaction = 1;
    ctor_7();
    HitTestMode(6);
    _interaction = 1;
    _transition = 2;
    ::g::Fuse::Navigation::DynamicLinearNavigation* nav = ::g::Fuse::Navigation::DynamicLinearNavigation::New2();
    nav->AddPropertyListener((uObject*)this);
    SetNavigation(nav);
}

// public int get_ActiveIndex() [instance] :417
int32_t PageControl::ActiveIndex()
{
    uStackFrame __("Fuse.Controls.PageControl", "get_ActiveIndex()");
    return uPtr(Navigation1())->DesiredActiveIndex();
}

// public void set_ActiveIndex(int value) [instance] :418
void PageControl::ActiveIndex(int32_t value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_ActiveIndex(int)");
    uPtr(Navigation1())->DesiredActiveIndex(value);
}

// public Fuse.Navigation.AllowedNavigationDirections get_AllowedSwipeDirections() [instance] :346
int32_t PageControl::AllowedSwipeDirections()
{
    return _swipeAllow;
}

// public void set_AllowedSwipeDirections(Fuse.Navigation.AllowedNavigationDirections value) [instance] :347
void PageControl::AllowedSwipeDirections(int32_t value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_AllowedSwipeDirections(Fuse.Navigation.AllowedNavigationDirections)");
    _swipeAllow = value;

    if (_swipe != NULL)
        uPtr(_swipe)->AllowedDirections(value);
}

// private bool get_CollapseInactive() [instance] :308
bool PageControl::CollapseInactive()
{
    return _inactive == 0;
}

// private bool get_DisableInactive() [instance] :313
bool PageControl::DisableInactive()
{
    return (_inactive == 0) || (_inactive == 1);
}

// private Fuse.Visual FindPath(string path) [instance] :167
::g::Fuse::Visual* PageControl::FindPath(uString* path)
{
    uStackFrame __("Fuse.Controls.PageControl", "FindPath(string)");
    ::g::Fuse::Visual* useVisual = NULL;

    for (::g::Fuse::Visual* n = (::g::Fuse::Visual*)FirstChild(::TYPES[9/*Fuse.Visual.FirstChild<Fuse.Visual>*/]); n != NULL; n = (::g::Fuse::Visual*)uPtr(n)->NextSibling(::TYPES[42/*Fuse.Node.NextSibling<Fuse.Visual>*/]))
        if (::g::Uno::String::op_Equality(::g::Uno::UX::Selector__op_Implicit1(uPtr(n)->Name()), path))
        {
            useVisual = n;
            break;
        }

    if (!::g::Fuse::Navigation::Navigation::IsPage(useVisual))
    {
        ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(uString::Const("Can not navigate to '"), path), uString::Const("', not found!")), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\PageControl.uno"), 181, uString::Const("FindPath"));
        return NULL;
    }

    return useVisual;
}

// public Fuse.Controls.NavigationControlInactiveState get_InactiveState() [instance] :269
int32_t PageControl::InactiveState()
{
    return _inactive;
}

// public void set_InactiveState(Fuse.Controls.NavigationControlInactiveState value) [instance] :270
void PageControl::InactiveState(int32_t value)
{
    _inactive = value;
}

// public Fuse.Controls.NavigationControlInteraction get_Interaction() [instance] :363
int32_t PageControl::Interaction()
{
    return _interaction;
}

// public void set_Interaction(Fuse.Controls.NavigationControlInteraction value) [instance] :364
void PageControl::Interaction(int32_t value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_Interaction(Fuse.Controls.NavigationControlInteraction)");

    if (_interaction == value)
        return;

    _interaction = value;

    if (IsRootingCompleted())
        UpdateInteraction();
}

// private bool get_IsHorizontal() [instance] :404
bool PageControl::IsHorizontal()
{
    return _orient == 0;
}

// public Fuse.Motion.MotionConfig get_Motion() [instance] :381
::g::Fuse::Motion::MotionConfig* PageControl::Motion()
{
    uStackFrame __("Fuse.Controls.PageControl", "get_Motion()");
    ::g::Fuse::Navigation::DynamicLinearNavigation* q = Navigation1();
    return (q == NULL) ? uCast< ::g::Fuse::Motion::MotionConfig*>(NULL, ::g::Fuse::Motion::MotionConfig_typeof()) : (::g::Fuse::Motion::MotionConfig*)uPtr(q)->Motion();
}

// public void set_Motion(Fuse.Motion.MotionConfig value) [instance] :386
void PageControl::Motion(::g::Fuse::Motion::MotionConfig* value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_Motion(Fuse.Motion.MotionConfig)");
    ::g::Fuse::Navigation::DynamicLinearNavigation* q = Navigation1();

    if (q != NULL)
        uPtr(q)->Motion(value);
}

// internal new Fuse.Navigation.DynamicLinearNavigation get_Navigation() [instance] :103
::g::Fuse::Navigation::DynamicLinearNavigation* PageControl::Navigation1()
{
    return uAs< ::g::Fuse::Navigation::DynamicLinearNavigation*>(this->Navigation(), ::g::Fuse::Navigation::DynamicLinearNavigation_typeof());
}

// private void OnActivePageChanged(object sender, Fuse.Visual active) [instance] :230
void PageControl::OnActivePageChanged(uObject* sender, ::g::Fuse::Visual* active)
{
    uStackFrame __("Fuse.Controls.PageControl", "OnActivePageChanged(object,Fuse.Visual)");

    if (AncestorRouterPage() != NULL)
    {
        ::g::Fuse::Visual* ignore;
        ::g::Fuse::Navigation::RouterPage* current = ::g::Fuse::Navigation::IRouterOutlet::GetCurrent(uInterface(uPtr(uAs<uObject*>(this, ::g::Fuse::Navigation::IRouterOutlet_typeof())), ::g::Fuse::Navigation::IRouterOutlet_typeof()), &ignore);
        ::g::Fuse::Reactive::ObserverMap* pages = uPtr(AncestorRouterPage())->ChildRouterPages();
        bool changed = false;

        if (uPtr(pages)->Count() == 0)
        {
            uPtr(pages)->Add(current);
            changed = true;
        }
        else if (((::g::Fuse::Navigation::RouterPage*)uPtr(pages)->Item(uPtr(pages)->Count() - 1)) != current)
        {
            uPtr(pages)->Item(uPtr(pages)->Count() - 1, current);
            changed = true;
        }

        if (changed)
            ::g::Fuse::Navigation::RouterPage::BubbleHistoryChanged(this);
    }
}

// private void OnPagesChanged() [instance] :62
void PageControl::OnPagesChanged()
{
    uStackFrame __("Fuse.Controls.PageControl", "OnPagesChanged()");

    if (!IsRootingStarted())
        return;

    uPtr(_pagesMap)->Detach1();

    if (_pages != NULL)
        uPtr(_pagesMap)->Attach1(this, _pages);
    else
    {
        uPtr(_pagesMap)->Clear();
        UpdatePages();
    }
}

// private void OnPagesUnrooted() [instance] :80
void PageControl::OnPagesUnrooted()
{
    uStackFrame __("Fuse.Controls.PageControl", "OnPagesUnrooted()");
    uPtr(_pagesMap)->Detach1();
}

// public Fuse.Layouts.Orientation get_Orientation() [instance] :400
int32_t PageControl::Orientation()
{
    return _orient;
}

// public void set_Orientation(Fuse.Layouts.Orientation value) [instance] :401
void PageControl::Orientation(int32_t value)
{
    _orient = value;
}

// public Fuse.IArray get_Pages() [instance] :54
uObject* PageControl::Pages()
{
    return _pages;
}

// public void set_Pages(Fuse.IArray value) [instance] :55
void PageControl::Pages(uObject* value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_Pages(Fuse.IArray)");
    _pages = value;
    OnPagesChanged();
}

// public void SetActiveIndex(int value, Uno.UX.IPropertyListener origin) [instance] :420
void PageControl::SetActiveIndex(int32_t value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.PageControl", "SetActiveIndex(int,Uno.UX.IPropertyListener)");
    uPtr(Navigation1())->DesiredActiveIndex(value);
}

// private void UpdatePages() [instance] :93
void PageControl::UpdatePages()
{
    uStackFrame __("Fuse.Controls.PageControl", "UpdatePages()");
    bool ret3;
    PageControl__AddedPage* ret4;
    int32_t visualCount = 0;

    for (int32_t i = 0; i < uPtr(_pagesMap)->Count(); ++i)
    {
        PageControl__AddedPage* mp = (PageControl__AddedPage*)uPtr(_pagesMap)->Item(i);

        if (::g::Uno::String::op_Inequality(uPtr(mp)->Template, NULL) && (uPtr(mp)->Visual != NULL))
        {
            visualCount++;
            continue;
        }

        if (uPtr(mp)->Data == NULL)
        {
            ::g::Fuse::Diagnostics::UserError(uString::Const("null page in list"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\PageControl.Pages.uno"), 109, uString::Const("UpdatePages"), NULL);
            continue;
        }

        uPtr(mp)->Template = ::g::Fuse::Navigation::PagesMap::GetObjectPath(uPtr(mp)->Data);

        if (::g::Uno::String::op_Equality(mp->Template, NULL))
        {
            ::g::Fuse::Diagnostics::UserError(uString::Const("Model is missing a $template or $page property"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\PageControl.Pages.uno"), 116, uString::Const("UpdatePages"), NULL);
            continue;
        }

        ::g::Uno::UX::Template* f = FindTemplate(mp->Template);

        if (f == NULL)
        {
            ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(uString::Const("No matching template path: "), uPtr(mp)->Template), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\PageControl.Pages.uno"), 123, uString::Const("UpdatePages"), NULL);
            continue;
        }

        if (mp->Visual == NULL)
        {
            uPtr(mp)->Visual = uAs< ::g::Fuse::Visual*>(uPtr(f)->New1(), ::TYPES[7/*Fuse.Visual*/]);

            if (mp->Visual == NULL)
            {
                ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(uString::Const("Template is not a Visual: "), uPtr(mp)->Template), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\PageControl.Pages.uno"), 132, uString::Const("UpdatePages"), NULL);
                continue;
            }
        }

        mp->Page = ::g::Fuse::Navigation::RouterPage::New1(mp->Template, NULL, mp->Data);
        uPtr(::g::Fuse::Navigation::PageData::GetOrCreate(mp->Visual, true))->AttachRouterPage(mp->Page);
        visualCount++;
    }

    for (int32_t i1 = 0; i1 < uPtr(_pagesMap)->Count(); ++i1)
        ::g::Uno::Collections::List__Remove_fn(uPtr(_addedPages), (PageControl__AddedPage*)uPtr(_pagesMap)->Item(i1), &ret3);

    for (int32_t i2 = 0; i2 < uPtr(_addedPages)->Count(); ++i2)
        BeginRemoveChild(uPtr((::g::Uno::Collections::List__get_Item_fn(uPtr(_addedPages), uCRef<int32_t>(i2), &ret4), ret4))->Visual, NULL);

    uPtr(_addedPages)->Clear();
    uArray* ta = uArray::New(::g::Fuse::Node_typeof()->Array(), visualCount);
    int32_t vc = 0;

    for (int32_t i3 = 0; i3 < uPtr(_pagesMap)->Count(); ++i3)
    {
        if (uPtr((PageControl__AddedPage*)uPtr(_pagesMap)->Item(i3))->Visual == NULL)
            continue;

        uPtr(ta)->Strong< ::g::Fuse::Node*>(vc++) = uPtr((PageControl__AddedPage*)uPtr(_pagesMap)->Item(i3))->Visual;
        ::g::Uno::Collections::List__Add_fn(uPtr(_addedPages), (PageControl__AddedPage*)uPtr(_pagesMap)->Item(i3));
    }

    InsertOrMoveNodesAfter(Navigation1(), (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface((uObject*)((::g::Uno::Runtime::Implementation::Internal::ArrayEnumerable*)::g::Uno::Runtime::Implementation::Internal::ArrayEnumerable::New1(::g::Uno::Runtime::Implementation::Internal::ArrayEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), ta)), ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL))));
}

// private static void gotoPage(Fuse.Controls.PageControl pc, object[] args) [static] :94
void PageControl::gotoPage(PageControl* pc, uArray* args)
{
    uStackFrame __("Fuse.Controls.PageControl", "gotoPage(Fuse.Controls.PageControl,object[])");
    PageControl_typeof()->Init();
    ::g::Fuse::Visual* target = uAs< ::g::Fuse::Visual*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[7/*Fuse.Visual*/]);

    if (target != NULL)
        uPtr(pc)->Active(target);
    else
        ::g::Fuse::Diagnostics::UserError(uString::Const("PageControl.goto() : Argument must be a node object"), pc, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Navigation\\1.7.2\\PageControl.uno"), 98, uString::Const("gotoPage"), NULL);
}

// public PageControl New() [static] :106
PageControl* PageControl::New4()
{
    PageControl* obj1 = (PageControl*)uNew(PageControl_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Page.uno
// -------------------------------------------------------------------------------------------

// public enum PageFreeze :7
uEnumType* PageFreeze_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.PageFreeze", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Never", 0LL,
        "WhileNavigating", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\PageIndicator.uno
// ----------------------------------------------------------------------------------------------------

// public partial sealed class PageIndicator :45
// {
// static PageIndicator() :6
static void PageIndicator__cctor_4_fn(uType* __type)
{
}

static void PageIndicator_build(uType* type)
{
    ::STRINGS[54] = uString::Const("Dot");
    ::TYPES[51] = ::g::Fuse::Navigation::INavigation_typeof();
    ::TYPES[52] = ::g::Fuse::Navigation::NavigationPageCountHandler_typeof();
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[53] = ::g::Fuse::Visual_typeof()->MakeMethod(7/*LastChild<Fuse.Visual>*/, ::g::Fuse::Visual_typeof(), NULL);
    ::TYPES[7] = ::g::Fuse::Visual_typeof();
    ::TYPES[9] = ::TYPES[7/*Fuse.Visual*/]->MakeMethod(2/*FirstChild<Fuse.Visual>*/, ::TYPES[7/*Fuse.Visual*/], NULL);
    ::TYPES[42] = ::g::Fuse::Node_typeof()->MakeMethod(3/*NextSibling<Fuse.Visual>*/, ::TYPES[7/*Fuse.Visual*/], NULL);
    type->SetDependencies(
        ::g::Fuse::Navigation::Navigation_typeof(),
        ::g::Fuse::Navigation::NavigationPageProperty_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[7/*Fuse.Visual*/], NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(118,
        ::TYPES[51/*Fuse.Navigation.INavigation*/], offsetof(PageIndicator, _pageProgress), 0,
        ::g::Uno::UX::Template_typeof(), offsetof(PageIndicator, _dotTemplate), 0);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PageIndicator__New5_fn, 0, true, type, 1, ::TYPES[51/*Fuse.Navigation.INavigation*/]));
}

::g::Fuse::Controls::Panel_type* PageIndicator_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::StackPanel_typeof();
    options.FieldCount = 120;
    options.InterfaceCount = 18;
    options.DependencyCount = 2;
    options.ObjectSize = sizeof(PageIndicator);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.PageIndicator", options);
    type->fp_build_ = PageIndicator_build;
    type->fp_cctor_ = PageIndicator__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))PageIndicator__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))PageIndicator__OnUnrooted_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public PageIndicator(Fuse.Navigation.INavigation navigation) :50
void PageIndicator__ctor_8_fn(PageIndicator* __this, uObject* navigation)
{
    __this->ctor_8(navigation);
}

// private Uno.UX.Template get_DotTemplate() :61
void PageIndicator__get_DotTemplate_fn(PageIndicator* __this, ::g::Uno::UX::Template** __retval)
{
    *__retval = __this->DotTemplate();
}

// private void InitializeUX() :9
void PageIndicator__InitializeUX_fn(PageIndicator* __this)
{
    __this->InitializeUX();
}

// public PageIndicator New(Fuse.Navigation.INavigation navigation) :50
void PageIndicator__New5_fn(uObject* navigation, PageIndicator** __retval)
{
    *__retval = PageIndicator::New5(navigation);
}

// protected override sealed void OnRooted() :64
void PageIndicator__OnRooted_fn(PageIndicator* __this)
{
    uStackFrame __("Fuse.Controls.PageIndicator", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    ::g::Fuse::Navigation::INavigation::add_PageCountChanged(uInterface(uPtr(__this->_pageProgress), ::TYPES[51/*Fuse.Navigation.INavigation*/]), uDelegate::New(::TYPES[52/*Fuse.Navigation.NavigationPageCountHandler*/], (void*)PageIndicator__UpdateCount_fn, __this));
    __this->UpdateCount(NULL);
}

// protected override sealed void OnUnrooted() :71
void PageIndicator__OnUnrooted_fn(PageIndicator* __this)
{
    uStackFrame __("Fuse.Controls.PageIndicator", "OnUnrooted()");
    ::g::Fuse::Navigation::INavigation::remove_PageCountChanged(uInterface(uPtr(__this->_pageProgress), ::TYPES[51/*Fuse.Navigation.INavigation*/]), uDelegate::New(::TYPES[52/*Fuse.Navigation.NavigationPageCountHandler*/], (void*)PageIndicator__UpdateCount_fn, __this));
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// private void RecreateDots() :82
void PageIndicator__RecreateDots_fn(PageIndicator* __this)
{
    __this->RecreateDots();
}

// private void UpdateCount(object s) :77
void PageIndicator__UpdateCount_fn(PageIndicator* __this, uObject* s)
{
    __this->UpdateCount(s);
}

// public PageIndicator(Fuse.Navigation.INavigation navigation) [instance] :50
void PageIndicator::ctor_8(uObject* navigation)
{
    uStackFrame __("Fuse.Controls.PageIndicator", ".ctor(Fuse.Navigation.INavigation)");
    ctor_7();
    InitializeUX();
    _pageProgress = navigation;
    _dotTemplate = ::g::Fuse::Controls::PageIndicatorDotTemplate::New2();
    ::g::Fuse::Navigation::Navigation::SetNavigationNavigation(this, navigation);
}

// private Uno.UX.Template get_DotTemplate() [instance] :61
::g::Uno::UX::Template* PageIndicator::DotTemplate()
{
    ::g::Uno::UX::Template* ind1;
    ind1 = FindTemplate(::STRINGS[54/*"Dot"*/]);
    return (ind1 != NULL) ? ind1 : (::g::Uno::UX::Template*)_dotTemplate;
}

// private void InitializeUX() [instance] :9
void PageIndicator::InitializeUX()
{
    uStackFrame __("Fuse.Controls.PageIndicator", "InitializeUX()");
    Orientation(0);
}

// private void RecreateDots() [instance] :82
void PageIndicator::RecreateDots()
{
    uStackFrame __("Fuse.Controls.PageIndicator", "RecreateDots()");
    bool ret3;
    int32_t count = ::g::Fuse::Navigation::INavigation::PageCount(uInterface(uPtr(_pageProgress), ::TYPES[51/*Fuse.Navigation.INavigation*/]));

    while (VisualChildCount() > count)
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), (::g::Fuse::Visual*)LastChild(::TYPES[53/*Fuse.Visual.LastChild<Fuse.Visual>*/]), &ret3);

    while (VisualChildCount() < count)
    {
        ::g::Fuse::Visual* dot = uAs< ::g::Fuse::Visual*>(uPtr(DotTemplate())->New1(), ::TYPES[7/*Fuse.Visual*/]);
        ::g::Fuse::Visual* page = ::g::Fuse::Navigation::INavigation::GetPage(uInterface(uPtr(_pageProgress), ::TYPES[51/*Fuse.Navigation.INavigation*/]), VisualChildCount());
        ::g::Fuse::Navigation::NavigationPageProperty::SetNavigationPage(dot, page);
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), dot);
    }

    int32_t p = 0;

    for (::g::Fuse::Visual* v = (::g::Fuse::Visual*)FirstChild(::TYPES[9/*Fuse.Visual.FirstChild<Fuse.Visual>*/]); v != NULL; v = (::g::Fuse::Visual*)uPtr(v)->NextSibling(::TYPES[42/*Fuse.Node.NextSibling<Fuse.Visual>*/]))
    {
        ::g::Fuse::Visual* page1 = ::g::Fuse::Navigation::INavigation::GetPage(uInterface(uPtr(_pageProgress), ::TYPES[51/*Fuse.Navigation.INavigation*/]), p++);
        ::g::Fuse::Navigation::NavigationPageProperty::SetNavigationPage(v, page1);
    }
}

// private void UpdateCount(object s) [instance] :77
void PageIndicator::UpdateCount(uObject* s)
{
    uStackFrame __("Fuse.Controls.PageIndicator", "UpdateCount(object)");
    RecreateDots();
}

// public PageIndicator New(Fuse.Navigation.INavigation navigation) [static] :50
PageIndicator* PageIndicator::New5(uObject* navigation)
{
    PageIndicator* obj2 = (PageIndicator*)uNew(PageIndicator_typeof());
    obj2->ctor_8(navigation);
    return obj2;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\.uno\ux13\Fuse.Controls.PageIndicatorDot.g.uno
// ---------------------------------------------------------------------------------------------------------------------------------

// public partial sealed class PageIndicatorDot :4
// {
// static PageIndicatorDot() :8
static void PageIndicatorDot__cctor_4_fn(uType* __type)
{
    PageIndicatorDot::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[55/*"Color"*/]);
    PageIndicatorDot::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[56/*"TheCircle"*/]);
}

static void PageIndicatorDot_build(uType* type)
{
    ::STRINGS[55] = uString::Const("Color");
    ::STRINGS[56] = uString::Const("TheCircle");
    ::TYPES[54] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL);
    ::TYPES[45] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(PageIndicatorDot, TheCircle_Color_inst), 0,
        ::g::Fuse::Controls::Circle_typeof(), offsetof(PageIndicatorDot, TheCircle), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&PageIndicatorDot::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&PageIndicatorDot::__selector1_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PageIndicatorDot__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* PageIndicatorDot_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 121;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(PageIndicatorDot);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.PageIndicatorDot", options);
    type->fp_build_ = PageIndicatorDot_build;
    type->fp_ctor_ = (void*)PageIndicatorDot__New4_fn;
    type->fp_cctor_ = PageIndicatorDot__cctor_4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public PageIndicatorDot() :12
void PageIndicatorDot__ctor_7_fn(PageIndicatorDot* __this)
{
    __this->ctor_7();
}

// private void InitializeUX() :16
void PageIndicatorDot__InitializeUX_fn(PageIndicatorDot* __this)
{
    __this->InitializeUX();
}

// public PageIndicatorDot New() :12
void PageIndicatorDot__New4_fn(PageIndicatorDot** __retval)
{
    *__retval = PageIndicatorDot::New4();
}

::g::Uno::UX::Selector PageIndicatorDot::__selector0_;
::g::Uno::UX::Selector PageIndicatorDot::__selector1_;

// public PageIndicatorDot() [instance] :12
void PageIndicatorDot::ctor_7()
{
    uStackFrame __("Fuse.Controls.PageIndicatorDot", ".ctor()");
    ctor_6();
    InitializeUX();
}

// private void InitializeUX() [instance] :16
void PageIndicatorDot::InitializeUX()
{
    uStackFrame __("Fuse.Controls.PageIndicatorDot", "InitializeUX()");
    TheCircle = ::g::Fuse::Controls::Circle::New3();
    TheCircle_Color_inst = ::g::FuseControlsNavigation_FuseControlsShape_Color_Property::New1(TheCircle, PageIndicatorDot::__selector0_);
    ::g::Fuse::Navigation::ActivatingAnimation* temp = ::g::Fuse::Navigation::ActivatingAnimation::New2();
    ::g::Fuse::Animations::Scale* temp1 = ::g::Fuse::Animations::Scale::New2();
    ::g::Fuse::Animations::Change* temp2 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], TheCircle_Color_inst);
    Width(::g::Uno::UX::Size__New1(6.0f, 1));
    Height(::g::Uno::UX::Size__New1(6.0f, 1));
    Margin(::g::Uno::Float4__New2(5.0f, 5.0f, 5.0f, 5.0f));
    uPtr(TheCircle)->Color(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 0.3f));
    uPtr(TheCircle)->Name(PageIndicatorDot::__selector1_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp2);
    temp1->Factor(1.2f);
    ::g::Fuse::Animations::Change__set_Value_fn(temp2, uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), TheCircle);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
}

// public PageIndicatorDot New() [static] :12
PageIndicatorDot* PageIndicatorDot::New4()
{
    PageIndicatorDot* obj1 = (PageIndicatorDot*)uNew(PageIndicatorDot_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\PageIndicator.uno
// ----------------------------------------------------------------------------------------------------

// internal sealed class PageIndicatorDotTemplate :107
// {
static void PageIndicatorDotTemplate_build(uType* type)
{
    type->SetFields(2);
}

::g::Uno::UX::Template_type* PageIndicatorDotTemplate_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(PageIndicatorDotTemplate);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.PageIndicatorDotTemplate", options);
    type->fp_build_ = PageIndicatorDotTemplate_build;
    type->fp_ctor_ = (void*)PageIndicatorDotTemplate__New2_fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))PageIndicatorDotTemplate__New1_fn;
    return type;
}

// public PageIndicatorDotTemplate() :109
void PageIndicatorDotTemplate__ctor_1_fn(PageIndicatorDotTemplate* __this)
{
    __this->ctor_1();
}

// public override sealed object New() :111
void PageIndicatorDotTemplate__New1_fn(PageIndicatorDotTemplate* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.PageIndicatorDotTemplate", "New()");
    return *__retval = ::g::Fuse::Controls::PageIndicatorDot::New4(), void();
}

// public PageIndicatorDotTemplate New() :109
void PageIndicatorDotTemplate__New2_fn(PageIndicatorDotTemplate** __retval)
{
    *__retval = PageIndicatorDotTemplate::New2();
}

// public PageIndicatorDotTemplate() [instance] :109
void PageIndicatorDotTemplate::ctor_1()
{
    ctor_(NULL, false);
}

// public PageIndicatorDotTemplate New() [static] :109
PageIndicatorDotTemplate* PageIndicatorDotTemplate::New2()
{
    PageIndicatorDotTemplate* obj1 = (PageIndicatorDotTemplate*)uNew(PageIndicatorDotTemplate_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Page.uno
// -------------------------------------------------------------------------------------------

// public enum PagePrepareBusy :15
uEnumType* PagePrepareBusy_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.PagePrepareBusy", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "None", 0LL,
        "FrameDelay", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\PageControl.Pages.uno
// --------------------------------------------------------------------------------------------------------

// private sealed class PageControl.PagesMap :12
// {
static void PageControl__PagesMap_build(uType* type)
{
    type->SetBase(::g::Fuse::Reactive::ObserverMap_typeof()->MakeType(::g::Fuse::Controls::PageControl__AddedPage_typeof(), NULL));
    type->SetInterfaces(
        ::g::Fuse::Reactive::IObserver_typeof(), offsetof(::g::Fuse::Reactive::ObserverMap_type, interface0));
    type->SetFields(6,
        ::g::Fuse::Controls::PageControl_typeof(), offsetof(PageControl__PagesMap, PageControl), 0);
}

::g::Fuse::Reactive::ObserverMap_type* PageControl__PagesMap_typeof()
{
    static uSStrong< ::g::Fuse::Reactive::ObserverMap_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Reactive::ObserverMap_typeof();
    options.FieldCount = 7;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(PageControl__PagesMap);
    options.TypeSize = sizeof(::g::Fuse::Reactive::ObserverMap_type);
    type = (::g::Fuse::Reactive::ObserverMap_type*)uClassType::New("Fuse.Controls.PageControl.PagesMap", options);
    type->fp_build_ = PageControl__PagesMap_build;
    type->fp_ctor_ = (void*)PageControl__PagesMap__New1_fn;
    type->fp_Map = (void(*)(::g::Fuse::Reactive::ObserverMap*, uObject*, uObject**))PageControl__PagesMap__Map_fn;
    type->fp_OnUpdated = (void(*)(::g::Fuse::Reactive::ObserverMap*))PageControl__PagesMap__OnUpdated_fn;
    type->fp_Unmap = (void(*)(::g::Fuse::Reactive::ObserverMap*, uObject*, uObject**))PageControl__PagesMap__Unmap_fn;
    type->interface0.fp_OnClear = (void(*)(uObject*))::g::Fuse::Reactive::ObserverMap__FuseReactiveIObserverOnClear_fn;
    type->interface0.fp_OnNewAll = (void(*)(uObject*, uObject*))::g::Fuse::Reactive::ObserverMap__FuseReactiveIObserverOnNewAll_fn;
    type->interface0.fp_OnNewAt = (void(*)(uObject*, int32_t*, uObject*))::g::Fuse::Reactive::ObserverMap__FuseReactiveIObserverOnNewAt_fn;
    type->interface0.fp_OnSet = (void(*)(uObject*, uObject*))::g::Fuse::Reactive::ObserverMap__FuseReactiveIObserverOnSet_fn;
    type->interface0.fp_OnAdd = (void(*)(uObject*, uObject*))::g::Fuse::Reactive::ObserverMap__FuseReactiveIObserverOnAdd_fn;
    type->interface0.fp_OnRemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Reactive::ObserverMap__FuseReactiveIObserverOnRemoveAt_fn;
    type->interface0.fp_OnInsertAt = (void(*)(uObject*, int32_t*, uObject*))::g::Fuse::Reactive::ObserverMap__FuseReactiveIObserverOnInsertAt_fn;
    type->interface0.fp_OnFailed = (void(*)(uObject*, uString*))::g::Fuse::Reactive::ObserverMap__FuseReactiveIObserverOnFailed_fn;
    return type;
}

// public generated PagesMap() :12
void PageControl__PagesMap__ctor_1_fn(PageControl__PagesMap* __this)
{
    __this->ctor_1();
}

// public void Attach(Fuse.Controls.PageControl pageControl, Fuse.IArray obs) :16
void PageControl__PagesMap__Attach1_fn(PageControl__PagesMap* __this, ::g::Fuse::Controls::PageControl* pageControl, uObject* obs)
{
    __this->Attach1(pageControl, obs);
}

// public new void Detach() :22
void PageControl__PagesMap__Detach1_fn(PageControl__PagesMap* __this)
{
    __this->Detach1();
}

// protected override sealed Fuse.Controls.PageControl.AddedPage Map(object v) :28
void PageControl__PagesMap__Map_fn(PageControl__PagesMap* __this, uObject* v, ::g::Fuse::Controls::PageControl__AddedPage** __retval)
{
    uStackFrame __("Fuse.Controls.PageControl.PagesMap", "Map(object)");
    ::g::Fuse::Controls::PageControl__AddedPage* collection1;
    collection1 = ::g::Fuse::Controls::PageControl__AddedPage::New1();
    uPtr(collection1)->Data = v;
    return *__retval = collection1, void();
}

// public generated PagesMap New() :12
void PageControl__PagesMap__New1_fn(PageControl__PagesMap** __retval)
{
    *__retval = PageControl__PagesMap::New1();
}

// protected override sealed void OnUpdated() :38
void PageControl__PagesMap__OnUpdated_fn(PageControl__PagesMap* __this)
{
    uStackFrame __("Fuse.Controls.PageControl.PagesMap", "OnUpdated()");

    if (__this->PageControl != NULL)
        uPtr(__this->PageControl)->UpdatePages();
}

// protected override sealed object Unmap(Fuse.Controls.PageControl.AddedPage mv) :33
void PageControl__PagesMap__Unmap_fn(PageControl__PagesMap* __this, ::g::Fuse::Controls::PageControl__AddedPage* mv, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.PageControl.PagesMap", "Unmap(Fuse.Controls.PageControl.AddedPage)");
    return *__retval = uPtr(mv)->Data, void();
}

// public generated PagesMap() [instance] :12
void PageControl__PagesMap::ctor_1()
{
    ctor_();
}

// public void Attach(Fuse.Controls.PageControl pageControl, Fuse.IArray obs) [instance] :16
void PageControl__PagesMap::Attach1(::g::Fuse::Controls::PageControl* pageControl, uObject* obs)
{
    uStackFrame __("Fuse.Controls.PageControl.PagesMap", "Attach(Fuse.Controls.PageControl,Fuse.IArray)");
    PageControl = pageControl;
    Attach(obs, NULL);
}

// public new void Detach() [instance] :22
void PageControl__PagesMap::Detach1()
{
    uStackFrame __("Fuse.Controls.PageControl.PagesMap", "Detach()");
    PageControl = NULL;
    Detach();
}

// public generated PagesMap New() [static] :12
PageControl__PagesMap* PageControl__PagesMap::New1()
{
    PageControl__PagesMap* obj2 = (PageControl__PagesMap*)uNew(PageControl__PagesMap_typeof());
    obj2->ctor_1();
    return obj2;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\PageView.uno
// -----------------------------------------------------------------------------------------------

// public sealed class PageView :13
// {
static void PageView_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface17),
        ::g::Fuse::Navigation::INavigation_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface18),
        ::g::Fuse::Reactive::IObserver_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface19),
        ::g::Fuse::Node__ISubtreeDataProvider_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface20),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface21),
        ::g::Fuse::Navigation::IRouterOutlet_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface22));
    type->SetFields(145);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PageView__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Navigator_type* PageView_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Navigator_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Navigator_typeof();
    options.FieldCount = 145;
    options.InterfaceCount = 23;
    options.ObjectSize = sizeof(PageView);
    options.TypeSize = sizeof(::g::Fuse::Controls::Navigator_type);
    type = (::g::Fuse::Controls::Navigator_type*)uClassType::New("Fuse.Controls.PageView", options);
    type->fp_build_ = PageView_build;
    type->fp_ctor_ = (void*)PageView__New5_fn;
    type->interface22.fp_PartialPrepareGoto = (void(*)(uObject*, double*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletPartialPrepareGoto_fn;
    type->interface22.fp_CancelPrepare = (void(*)(uObject*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletCancelPrepare_fn;
    type->interface22.fp_CompareCurrent = (void(*)(uObject*, ::g::Fuse::Navigation::RouterPage*, ::g::Fuse::Visual**, int32_t*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletCompareCurrent_fn;
    type->interface22.fp_Goto = (void(*)(uObject*, ::g::Fuse::Navigation::RouterPage*, int32_t*, int32_t*, uString*, ::g::Fuse::Visual**, int32_t*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletGoto_fn;
    type->interface22.fp_GetCurrent = (void(*)(uObject*, ::g::Fuse::Visual**, ::g::Fuse::Navigation::RouterPage**))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletGetCurrent_fn;
    type->interface22.fp_get_Type = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletget_Type_fn;
    type->interface19.fp_OnSet = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnSet_fn;
    type->interface19.fp_OnFailed = (void(*)(uObject*, uString*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnFailed_fn;
    type->interface19.fp_OnAdd = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnAdd_fn;
    type->interface19.fp_OnRemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnRemoveAt_fn;
    type->interface19.fp_OnInsertAt = (void(*)(uObject*, int32_t*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnInsertAt_fn;
    type->interface19.fp_OnNewAt = (void(*)(uObject*, int32_t*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnNewAt_fn;
    type->interface19.fp_OnNewAll = (void(*)(uObject*, uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnNewAll_fn;
    type->interface19.fp_OnClear = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__FuseReactiveIObserverOnClear_fn;
    type->interface20.fp_TryGetDataProvider = (void(*)(uObject*, ::g::Fuse::Node*, int32_t*, uObject**, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNodeISubtreeDataProviderTryGetDataProvider_fn;
    type->interface18.fp_GetPage = (void(*)(uObject*, int32_t*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPage_fn;
    type->interface18.fp_GetPageState = (void(*)(uObject*, ::g::Fuse::Visual*, ::g::Fuse::Navigation::NavigationPageState*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPageState_fn;
    type->interface18.fp_get_PageCount = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageCount_fn;
    type->interface18.fp_get_PageProgress = (void(*)(uObject*, double*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageProgress_fn;
    type->interface18.fp_get_ActivePage = (void(*)(uObject*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_ActivePage_fn;
    type->interface18.fp_get_State = (void(*)(uObject*, int32_t*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_State_fn;
    type->interface18.fp_Goto = (void(*)(uObject*, ::g::Fuse::Visual*, int32_t*))::g::Fuse::Controls::NavigationControl__Goto_fn;
    type->interface18.fp_Toggle = (void(*)(uObject*, ::g::Fuse::Visual*))::g::Fuse::Controls::NavigationControl__Toggle_fn;
    type->interface18.fp_add_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageCountChanged_fn;
    type->interface18.fp_remove_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageCountChanged_fn;
    type->interface18.fp_add_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageProgressChanged_fn;
    type->interface18.fp_remove_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageProgressChanged_fn;
    type->interface18.fp_add_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_Navigated_fn;
    type->interface18.fp_remove_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_Navigated_fn;
    type->interface18.fp_add_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_ActivePageChanged_fn;
    type->interface18.fp_remove_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_ActivePageChanged_fn;
    type->interface18.fp_add_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_StateChanged_fn;
    type->interface18.fp_remove_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_StateChanged_fn;
    type->interface21.fp_GoForward = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoForward_fn;
    type->interface21.fp_GoBack = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoBack_fn;
    type->interface21.fp_get_CanGoBack = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoBack_fn;
    type->interface21.fp_get_CanGoForward = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoForward_fn;
    type->interface21.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_HistoryChanged_fn;
    type->interface21.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_HistoryChanged_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public PageView() :15
void PageView__ctor_9_fn(PageView* __this)
{
    __this->ctor_9();
}

// public PageView New() :15
void PageView__New5_fn(PageView** __retval)
{
    *__retval = PageView::New5();
}

// public PageView() [instance] :15
void PageView::ctor_9()
{
    uStackFrame __("Fuse.Controls.PageView", ".ctor()");
    ctor_8();
    Transition(1);
    GotoState(0);
}

// public PageView New() [static] :15
PageView* PageView::New5()
{
    PageView* obj1 = (PageView*)uNew(PageView_typeof());
    obj1->ctor_9();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\Panel.Freeze.uno
// -----------------------------------------------------------------------------------------------

// public partial class Panel :10
// {
// static generated Panel() :10
static void Panel__cctor_3_fn(uType* __type)
{
    Panel::ColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[55/*"Color"*/]);
}

static void Panel_build(uType* type)
{
    ::STRINGS[55] = uString::Const("Color");
    ::STRINGS[19] = uString::Const("");
    ::STRINGS[57] = uString::Const("unable to freeze non-flat or infinite element");
    ::STRINGS[58] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\Panel.Freeze.uno");
    ::STRINGS[59] = uString::Const("OnPrepared");
    ::STRINGS[60] = uString::Const("unable to freeze element");
    ::STRINGS[61] = uString::Const("Panel.IsFrozen cannot be used when a Panel is in a Surface");
    ::STRINGS[62] = uString::Const("SetupListener");
    ::TYPES[55] = ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::DrawContext_typeof(), NULL);
    ::TYPES[19] = ::g::Uno::Action_typeof();
    ::TYPES[56] = ::g::Uno::UX::IPropertyListener_typeof();
    ::TYPES[20] = ::g::Fuse::Drawing::SolidColor_typeof();
    ::TYPES[57] = ::g::Fuse::Visual_typeof()->MakeMethod(10/*Set<float4>*/, ::g::Uno::Float4_typeof(), NULL);
    ::TYPES[58] = ::g::Fuse::Visual_typeof()->MakeMethod(4/*Get<float4>*/, ::g::Uno::Float4_typeof(), NULL);
    type->SetDependencies(
        ::g::Fuse::Common::Blitter_typeof(),
        ::g::Fuse::Triggers::BusyTask_typeof(),
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Panel_type, interface6),
        ::TYPES[56/*Uno.UX.IPropertyListener*/], offsetof(Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(Panel_type, interface17));
    type->SetFields(110,
        ::g::Uno::Bool_typeof(), offsetof(Panel, _freezeAwaitPrepared), 0,
        ::g::Uno::Graphics::Framebuffer_typeof(), offsetof(Panel, _frozenBuffer), 0,
        ::g::Uno::Bool_typeof(), offsetof(Panel, _isFrozen), 0,
        ::g::Fuse::Triggers::BusyTask_typeof(), offsetof(Panel, _freezeBusyTask), 0,
        ::g::Fuse::Triggers::BusyTaskActivity_typeof(), offsetof(Panel, _deferFreeze), 0,
        ::g::Uno::Float2_typeof(), offsetof(Panel, _frozenActualSize), 0,
        ::g::Fuse::VisualBounds_typeof(), offsetof(Panel, _frozenRenderBounds), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Panel::ColorPropertyName_, uFieldFlagsStatic);
    type->Reflection.SetFields(1,
        new uField("ColorPropertyName", 117));
    type->Reflection.SetFunctions(8,
        new uFunction("get_Color", NULL, (void*)Panel__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)Panel__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_DeferFreeze", NULL, (void*)Panel__get_DeferFreeze_fn, 0, false, ::g::Fuse::Triggers::BusyTaskActivity_typeof(), 0),
        new uFunction("set_DeferFreeze", NULL, (void*)Panel__set_DeferFreeze_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Triggers::BusyTaskActivity_typeof()),
        new uFunction("get_IsFrozen", NULL, (void*)Panel__get_IsFrozen_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsFrozen", NULL, (void*)Panel__set_IsFrozen_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)Panel__New3_fn, 0, true, type, 0),
        new uFunction("SetColor", NULL, (void*)Panel__SetColor_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float4_typeof(), ::TYPES[56/*Uno.UX.IPropertyListener*/]));
}

Panel_type* Panel_typeof()
{
    static uSStrong<Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.DependencyCount = 3;
    options.ObjectSize = sizeof(Panel);
    options.TypeSize = sizeof(Panel_type);
    type = (Panel_type*)uClassType::New("Fuse.Controls.Panel", options);
    type->fp_build_ = Panel_build;
    type->fp_ctor_ = (void*)Panel__New3_fn;
    type->fp_cctor_ = Panel__cctor_3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))Panel__ArrangePaddingBox_fn;
    type->fp_Draw = (void(*)(::g::Fuse::Visual*, ::g::Fuse::DrawContext*))Panel__Draw_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))Panel__FastTrackDrawWithOpacity_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Panel__GetContentSize_fn;
    type->fp_get_IsLayoutRoot = (void(*)(::g::Fuse::Visual*, bool*))Panel__get_IsLayoutRoot_fn;
    type->fp_get_LocalRenderBounds = (void(*)(::g::Fuse::Visual*, ::g::Fuse::VisualBounds**))Panel__get_LocalRenderBounds_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Panel__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Panel__OnUnrooted_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Panel() :10
void Panel__ctor_6_fn(Panel* __this)
{
    __this->ctor_6();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :161
void Panel__ArrangePaddingBox_fn(Panel* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.Panel", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->HasFreezePrepared())
        return;

    ::g::Fuse::Controls::LayoutControl__ArrangePaddingBox_fn(__this, uCRef(lp_));
}

// private void CleanupBuffer() :55
void Panel__CleanupBuffer_fn(Panel* __this)
{
    __this->CleanupBuffer();
}

// private void CleanupListener([bool nextFrame]) :64
void Panel__CleanupListener_fn(Panel* __this, bool* nextFrame)
{
    __this->CleanupListener(*nextFrame);
}

// public float4 get_Color() :39
void Panel__get_Color_fn(Panel* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :40
void Panel__set_Color_fn(Panel* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// public Fuse.Triggers.BusyTaskActivity get_DeferFreeze() :108
void Panel__get_DeferFreeze_fn(Panel* __this, int32_t* __retval)
{
    *__retval = __this->DeferFreeze();
}

// public void set_DeferFreeze(Fuse.Triggers.BusyTaskActivity value) :109
void Panel__set_DeferFreeze_fn(Panel* __this, int32_t* value)
{
    __this->DeferFreeze(*value);
}

// public override sealed void Draw(Fuse.DrawContext dc) :203
void Panel__Draw_fn(Panel* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Panel", "Draw(Fuse.DrawContext)");

    if (!__this->IsFrozen() || !__this->HasFreezePrepared())
    {
        ::g::Fuse::Elements::Element__Draw_fn(__this, dc);
        return;
    }

    ::g::Uno::Rect rect = ::g::Uno::Rect__Scale1(uPtr(__this->_frozenRenderBounds)->FlatRect(), __this->Scale());
    uPtr(::g::Fuse::Common::Blitter::Singleton())->Blit1(uPtr(__this->_frozenBuffer)->ColorBuffer(), rect, uPtr(dc)->GetLocalToClipTransform(__this), __this->Opacity(), true, 0);
}

// private void EndBusy() :78
void Panel__EndBusy_fn(Panel* __this)
{
    __this->EndBusy();
}

// protected override sealed bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :178
void Panel__FastTrackDrawWithOpacity_fn(Panel* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    uStackFrame __("Fuse.Controls.Panel", "FastTrackDrawWithOpacity(Fuse.DrawContext)");
    bool ret2;

    if (__this->IsFrozen() && __this->HasFreezePrepared())
    {
        ::g::Uno::Rect rect = ::g::Uno::Rect__Scale1(uPtr(__this->_frozenRenderBounds)->FlatRect(), __this->Scale());
        uPtr(::g::Fuse::Common::Blitter::Singleton())->Blit1(uPtr(__this->_frozenBuffer)->ColorBuffer(), rect, uPtr(dc)->GetLocalToClipTransform(__this), __this->Opacity(), true, 0);
        return *__retval = true, void();
    }

    return *__retval = (::g::Fuse::Controls::LayoutControl__FastTrackDrawWithOpacity_fn(__this, dc, &ret2), ret2), void();
}

// private void FreezeRooted() :112
void Panel__FreezeRooted_fn(Panel* __this)
{
    __this->FreezeRooted();
}

// private void FreezeUnrooted() :118
void Panel__FreezeUnrooted_fn(Panel* __this)
{
    __this->FreezeUnrooted();
}

// private void Fuse.Drawing.ISurfaceDrawable.Draw(Fuse.Drawing.Surface surface) :64
void Panel__FuseDrawingISurfaceDrawableDraw_fn(Panel* __this, ::g::Fuse::Drawing::Surface* surface)
{
    uStackFrame __("Fuse.Controls.Panel", "Fuse.Drawing.ISurfaceDrawable.Draw(Fuse.Drawing.Surface)");
    __this->ISurfaceDrawableDraw(surface);
}

// private float2 Fuse.Drawing.ISurfaceDrawable.get_ElementSize() :66
void Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn(Panel* __this, ::g::Uno::Float2* __retval)
{
    return *__retval = __this->ActualSize(), void();
}

// private bool Fuse.Drawing.ISurfaceDrawable.get_IsPrimary() :65
void Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn(Panel* __this, bool* __retval)
{
    return *__retval = false, void();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :154
void Panel__GetContentSize_fn(Panel* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Panel", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 ret3;
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->HasFreezePrepared())
        return *__retval = __this->_frozenActualSize, void();

    return *__retval = (::g::Fuse::Controls::LayoutControl__GetContentSize_fn(__this, uCRef(lp_), &ret3), ret3), void();
}

// private bool get_HasFreezePrepared() :14
void Panel__get_HasFreezePrepared_fn(Panel* __this, bool* __retval)
{
    *__retval = __this->HasFreezePrepared();
}

// public bool get_IsFrozen() :31
void Panel__get_IsFrozen_fn(Panel* __this, bool* __retval)
{
    *__retval = __this->IsFrozen();
}

// public void set_IsFrozen(bool value) :32
void Panel__set_IsFrozen_fn(Panel* __this, bool* value)
{
    __this->IsFrozen(*value);
}

// internal override sealed bool get_IsLayoutRoot() :225
void Panel__get_IsLayoutRoot_fn(Panel* __this, bool* __retval)
{
    return *__retval = __this->HasFreezePrepared(), void();
}

// public override sealed Fuse.VisualBounds get_LocalRenderBounds() :170
void Panel__get_LocalRenderBounds_fn(Panel* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Panel", "get_LocalRenderBounds()");
    ::g::Fuse::VisualBounds* ret6;

    if (__this->HasFreezePrepared())
        return *__retval = uPtr(__this->_frozenRenderBounds)->Scale(::g::Uno::Float3__New4(__this->Scale(), 1.0f)), void();

    return *__retval = (::g::Fuse::Elements::Element__get_LocalRenderBounds_fn(__this, &ret6), ret6), void();
}

// public generated Panel New() :10
void Panel__New3_fn(Panel** __retval)
{
    *__retval = Panel::New3();
}

// private void OnColorChanged(float4 value, Uno.UX.IPropertyListener origin) :54
void Panel__OnColorChanged_fn(Panel* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->OnColorChanged(*value, origin);
}

// private void OnPrepared(Fuse.DrawContext dc) :126
void Panel__OnPrepared_fn(Panel* __this, ::g::Fuse::DrawContext* dc)
{
    __this->OnPrepared(dc);
}

// protected override void OnRooted() :68
void Panel__OnRooted_fn(Panel* __this)
{
    uStackFrame __("Fuse.Controls.Panel", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
    __this->SurfaceRooted(false);
    __this->FreezeRooted();
}

// protected override void OnUnrooted() :75
void Panel__OnUnrooted_fn(Panel* __this)
{
    uStackFrame __("Fuse.Controls.Panel", "OnUnrooted()");
    __this->FreezeUnrooted();
    __this->SurfaceUnrooted();
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// private float2 get_Scale() :201
void Panel__get_Scale_fn(Panel* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Scale();
}

// public void SetColor(float4 value, Uno.UX.IPropertyListener origin) :43
void Panel__SetColor_fn(Panel* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->SetColor(*value, origin);
}

// private void SetupListener() :84
void Panel__SetupListener_fn(Panel* __this)
{
    __this->SetupListener();
}

::g::Uno::UX::Selector Panel::ColorPropertyName_;

// public generated Panel() [instance] :10
void Panel::ctor_6()
{
    ctor_5();
}

// private void CleanupBuffer() [instance] :55
void Panel::CleanupBuffer()
{
    uStackFrame __("Fuse.Controls.Panel", "CleanupBuffer()");

    if (_frozenBuffer != NULL)
    {
        ::g::Fuse::FramebufferPool::Release(_frozenBuffer);
        _frozenBuffer = NULL;
    }
}

// private void CleanupListener([bool nextFrame]) [instance] :64
void Panel::CleanupListener(bool nextFrame)
{
    uStackFrame __("Fuse.Controls.Panel", "CleanupListener([bool])");

    if (_freezeAwaitPrepared)
    {
        ::g::Fuse::Internal::DrawManager::remove_Prepared(uDelegate::New(::TYPES[55/*Uno.Action<Fuse.DrawContext>*/], (void*)Panel__OnPrepared_fn, this));

        if (nextFrame)
            ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)Panel__EndBusy_fn, this), 0, 1);
        else
            EndBusy();

        _freezeAwaitPrepared = false;
    }
}

// public float4 get_Color() [instance] :39
::g::Uno::Float4 Panel::Color()
{
    uStackFrame __("Fuse.Controls.Panel", "get_Color()");
    ::g::Uno::Float4 ret5;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[58/*Fuse.Visual.Get<float4>*/], uCRef<int32_t>(1), uCRef(::g::Uno::Float4__New1(0.0f)), &ret5), ret5);
}

// public void set_Color(float4 value) [instance] :40
void Panel::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Panel", "set_Color(float4)");
    SetColor(value, (uObject*)this);
}

// public Fuse.Triggers.BusyTaskActivity get_DeferFreeze() [instance] :108
int32_t Panel::DeferFreeze()
{
    return _deferFreeze;
}

// public void set_DeferFreeze(Fuse.Triggers.BusyTaskActivity value) [instance] :109
void Panel::DeferFreeze(int32_t value)
{
    _deferFreeze = value;
}

// private void EndBusy() [instance] :78
void Panel::EndBusy()
{
    uStackFrame __("Fuse.Controls.Panel", "EndBusy()");
    ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_freezeBusyTask, 0, ::STRINGS[19/*""*/]);
}

// private void FreezeRooted() [instance] :112
void Panel::FreezeRooted()
{
    if (IsFrozen())
        SetupListener();
}

// private void FreezeUnrooted() [instance] :118
void Panel::FreezeUnrooted()
{
    uStackFrame __("Fuse.Controls.Panel", "FreezeUnrooted()");
    CleanupBuffer();
    CleanupListener(false);
}

// private bool get_HasFreezePrepared() [instance] :14
bool Panel::HasFreezePrepared()
{
    return _frozenBuffer != NULL;
}

// public bool get_IsFrozen() [instance] :31
bool Panel::IsFrozen()
{
    return _isFrozen;
}

// public void set_IsFrozen(bool value) [instance] :32
void Panel::IsFrozen(bool value)
{
    uStackFrame __("Fuse.Controls.Panel", "set_IsFrozen(bool)");

    if (_isFrozen == value)
        return;

    _isFrozen = value;

    if (!IsRootingCompleted())
        return;

    CleanupBuffer();

    if (_isFrozen && !HasFreezePrepared())
        SetupListener();
    else
        CleanupListener(false);

    if (!_isFrozen)
    {
        InvalidateLayout(2);
        InvalidateVisual();
    }
}

// private void OnColorChanged(float4 value, Uno.UX.IPropertyListener origin) [instance] :54
void Panel::OnColorChanged(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Panel", "OnColorChanged(float4,Uno.UX.IPropertyListener)");
    OnPropertyChanged1(Panel::ColorPropertyName_, uAs<uObject*>(origin, ::TYPES[56/*Uno.UX.IPropertyListener*/]));

    if (!uIs((::g::Fuse::Drawing::Brush*)Background(), ::TYPES[20/*Fuse.Drawing.SolidColor*/]))
        Background(::g::Fuse::Drawing::SolidColor::New3(value));
    else
        uPtr(uCast< ::g::Fuse::Drawing::SolidColor*>(Background(), ::TYPES[20/*Fuse.Drawing.SolidColor*/]))->Color(value);
}

// private void OnPrepared(Fuse.DrawContext dc) [instance] :126
void Panel::OnPrepared(::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Panel", "OnPrepared(Fuse.DrawContext)");
    ::g::Fuse::VisualBounds* ret4;

    if (DeferFreeze() != 0)
    {
        int32_t b = ::g::Fuse::Triggers::BusyTask::GetBusyActivity(this, 1);

        if ((b & DeferFreeze()) != 0)
            return;
    }

    CleanupListener(true);
    _frozenRenderBounds = (::g::Fuse::Elements::Element__get_LocalRenderBounds_fn(this, &ret4), ret4);

    if (!uPtr(_frozenRenderBounds)->IsFlat() || uPtr(_frozenRenderBounds)->IsInfinite())
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[57/*"unable to f...*/], this, ::STRINGS[58/*"C:\\Users\\...*/], 140, ::STRINGS[59/*"OnPrepared"*/]);
        return;
    }

    _frozenBuffer = CaptureRegion(dc, uPtr(_frozenRenderBounds)->FlatRect(), ::g::Uno::Float2__New1(0.0f));

    if (_frozenBuffer == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[60/*"unable to f...*/], this, ::STRINGS[58/*"C:\\Users\\...*/], 147, ::STRINGS[59/*"OnPrepared"*/]);
        return;
    }

    _frozenActualSize = ActualSize();
}

// private float2 get_Scale() [instance] :201
::g::Uno::Float2 Panel::Scale()
{
    return ::g::Uno::Float2__op_Division2(ActualSize(), _frozenActualSize);
}

// public void SetColor(float4 value, Uno.UX.IPropertyListener origin) [instance] :43
void Panel::SetColor(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Panel", "SetColor(float4,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float4__op_Inequality(Color(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[57/*Fuse.Visual.Set<float4>*/], uCRef<int32_t>(1), uCRef(value), uCRef(::g::Uno::Float4__New1(0.0f)));
        OnColorChanged(value, origin);
    }
}

// private void SetupListener() [instance] :84
void Panel::SetupListener()
{
    uStackFrame __("Fuse.Controls.Panel", "SetupListener()");

    if (LayoutSurface() != NULL)
    {
        ::g::Fuse::Diagnostics::UserError(::STRINGS[61/*"Panel.IsFro...*/], this, ::STRINGS[58/*"C:\\Users\\...*/], 88, ::STRINGS[62/*"SetupListener"*/], NULL);
        return;
    }

    if (!_freezeAwaitPrepared)
    {
        ::g::Fuse::Internal::DrawManager::add_Prepared(uDelegate::New(::TYPES[55/*Uno.Action<Fuse.DrawContext>*/], (void*)Panel__OnPrepared_fn, this));
        ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_freezeBusyTask, 8, ::STRINGS[19/*""*/]);
        _freezeAwaitPrepared = true;
    }
}

// public generated Panel New() [static] :10
Panel* Panel::New3()
{
    Panel* obj1 = (Panel*)uNew(Panel_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Path.Surface.uno
// ----------------------------------------------------------------------------------------------------------

// public partial sealed class Path :8
// {
static void Path_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::SegmentedShape_type, interface18));
    type->SetFields(126,
        ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Drawing::LineSegment_typeof(), NULL), offsetof(Path, _segments1), 0,
        ::g::Uno::String_typeof(), offsetof(Path, _data), 0,
        ::g::Fuse::Internal::SizingContainer_typeof(), offsetof(Path, sizing), 0,
        ::g::Fuse::Drawing::FillRule_typeof(), offsetof(Path, _fillRule), 0,
        ::g::Fuse::Controls::FitMode_typeof(), offsetof(Path, _fitMode), 0,
        ::g::Uno::Float4_typeof(), offsetof(Path, _extents), 0);
    type->Reflection.SetFunctions(15,
        new uFunction("get_ContentAlignment", NULL, (void*)Path__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)Path__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_Data", NULL, (void*)Path__get_Data_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Data", NULL, (void*)Path__set_Data_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_Extents", NULL, (void*)Path__get_Extents_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Extents", NULL, (void*)Path__set_Extents_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_FillRule", NULL, (void*)Path__get_FillRule_fn, 0, false, ::g::Fuse::Drawing::FillRule_typeof(), 0),
        new uFunction("set_FillRule", NULL, (void*)Path__set_FillRule_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::FillRule_typeof()),
        new uFunction("get_FitMode", NULL, (void*)Path__get_FitMode_fn, 0, false, ::g::Fuse::Controls::FitMode_typeof(), 0),
        new uFunction("set_FitMode", NULL, (void*)Path__set_FitMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::FitMode_typeof()),
        new uFunction(".ctor", NULL, (void*)Path__New3_fn, 0, true, type, 0),
        new uFunction("get_StretchDirection", NULL, (void*)Path__get_StretchDirection_fn, 0, false, ::g::Fuse::Elements::StretchDirection_typeof(), 0),
        new uFunction("set_StretchDirection", NULL, (void*)Path__set_StretchDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchDirection_typeof()),
        new uFunction("get_StretchMode", NULL, (void*)Path__get_StretchMode_fn, 0, false, ::g::Fuse::Elements::StretchMode_typeof(), 0),
        new uFunction("set_StretchMode", NULL, (void*)Path__set_StretchMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchMode_typeof()));
}

::g::Fuse::Controls::SegmentedShape_type* Path_typeof()
{
    static uSStrong< ::g::Fuse::Controls::SegmentedShape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::SegmentedShape_typeof();
    options.FieldCount = 132;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(Path);
    options.TypeSize = sizeof(::g::Fuse::Controls::SegmentedShape_type);
    type = (::g::Fuse::Controls::SegmentedShape_type*)uClassType::New("Fuse.Controls.Path", options);
    type->fp_build_ = Path_build;
    type->fp_ctor_ = (void*)Path__New3_fn;
    type->fp_CalcShapeExtents = (void(*)(::g::Fuse::Controls::Shape*, ::g::Uno::Rect*))Path__CalcShapeExtents_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Path__GetContentSize_fn;
    type->fp_GetSegments = (void(*)(::g::Fuse::Controls::SegmentedShape*, uObject**))Path__GetSegments_fn;
    type->fp_InvalidateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*))Path__InvalidateSurfacePath_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Path() :8
void Path__ctor_8_fn(Path* __this)
{
    __this->ctor_8();
}

// private Uno.Rect CalcNaturalExtents() :189
void Path__CalcNaturalExtents_fn(Path* __this, ::g::Uno::Rect* __retval)
{
    *__retval = __this->CalcNaturalExtents();
}

// private Fuse.Controls.Path.Positioning CalcPositioning() :219
void Path__CalcPositioning_fn(Path* __this, Path__Positioning* __retval)
{
    *__retval = __this->CalcPositioning();
}

// protected override sealed Uno.Rect CalcShapeExtents() :194
void Path__CalcShapeExtents_fn(Path* __this, ::g::Uno::Rect* __retval)
{
    uStackFrame __("Fuse.Controls.Path", "CalcShapeExtents()");
    Path__Positioning pos = __this->CalcPositioning();
    ::g::Uno::Float2 mn = ::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Multiply2(::g::Uno::Float2__op_Subtraction2(pos.NaturalExtents.Minimum(), pos.Extents.Minimum()), pos.Scale), pos.Offset), pos.Extents.Minimum());
    ::g::Uno::Float2 mx = ::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Multiply2(::g::Uno::Float2__op_Subtraction2(pos.NaturalExtents.Maximum(), pos.Extents.Minimum()), pos.Scale), pos.Offset), pos.Extents.Minimum());
    ::g::Uno::Rect r = ::g::Uno::Rect__New2(mn, ::g::Uno::Float2__op_Subtraction2(mx, mn));
    return *__retval = r, void();
}

// public Fuse.Elements.Alignment get_ContentAlignment() :85
void Path__get_ContentAlignment_fn(Path* __this, int32_t* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :86
void Path__set_ContentAlignment_fn(Path* __this, int32_t* value)
{
    __this->ContentAlignment(*value);
}

// public string get_Data() :39
void Path__get_Data_fn(Path* __this, uString** __retval)
{
    *__retval = __this->Data();
}

// public void set_Data(string value) :40
void Path__set_Data_fn(Path* __this, uString* value)
{
    __this->Data(value);
}

// public float4 get_Extents() :138
void Path__get_Extents_fn(Path* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Extents();
}

// public void set_Extents(float4 value) :139
void Path__set_Extents_fn(Path* __this, ::g::Uno::Float4* value)
{
    __this->Extents(*value);
}

// public Fuse.Drawing.FillRule get_FillRule() :99
void Path__get_FillRule_fn(Path* __this, int32_t* __retval)
{
    *__retval = __this->FillRule();
}

// public void set_FillRule(Fuse.Drawing.FillRule value) :100
void Path__set_FillRule_fn(Path* __this, int32_t* value)
{
    __this->FillRule(*value);
}

// public Fuse.Controls.FitMode get_FitMode() :113
void Path__get_FitMode_fn(Path* __this, int32_t* __retval)
{
    *__retval = __this->FitMode();
}

// public void set_FitMode(Fuse.Controls.FitMode value) :114
void Path__set_FitMode_fn(Path* __this, int32_t* value)
{
    __this->FitMode(*value);
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :179
void Path__GetContentSize_fn(Path* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Path", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 natural = __this->GetDesiredContentSize();
    ::g::Uno::Float2 r = uPtr(__this->Sizing())->ExpandFillSize(natural, lp_);
    return *__retval = r, void();
}

// private float2 GetDesiredContentSize() :150
void Path__GetDesiredContentSize_fn(Path* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->GetDesiredContentSize();
}

// internal override sealed Uno.Collections.IList<Fuse.Drawing.LineSegment> GetSegments() :10
void Path__GetSegments_fn(Path* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Path", "GetSegments()");
    ::g::Fuse::Drawing::LineSegment ret8;
    Path__Positioning pos = __this->CalcPositioning();
    ::g::Uno::Collections::List* list = (::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[65/*Uno.Collections.List<Fuse.Drawing.LineSegment>*/]);

    for (int32_t i = 0; i < uPtr(__this->_segments1)->Count(); ++i)
    {
        ::g::Fuse::Drawing::LineSegment seg = (::g::Uno::Collections::List__get_Item_fn(uPtr(__this->_segments1), uCRef<int32_t>(i), &ret8), ret8);
        seg.Translate(::g::Uno::Float2__op_UnaryNegation(pos.Extents.Minimum()));
        seg.Scale(pos.Scale);
        seg.Translate(::g::Uno::Float2__op_Addition2(pos.Offset, pos.Extents.Minimum()));
        ::g::Uno::Collections::List__Add_fn(uPtr(list), uCRef(seg));
    }

    return *__retval = (uObject*)list, void();
}

// protected override sealed void InvalidateSurfacePath() :205
void Path__InvalidateSurfacePath_fn(Path* __this)
{
    uStackFrame __("Fuse.Controls.Path", "InvalidateSurfacePath()");
    ::g::Fuse::Controls::SegmentedShape__InvalidateSurfacePath_fn(__this);
    __this->InvalidateRenderBounds();
}

// public generated Path New() :8
void Path__New3_fn(Path** __retval)
{
    *__retval = Path::New3();
}

// private void OnShapeLayoutChanged() :124
void Path__OnShapeLayoutChanged_fn(Path* __this)
{
    __this->OnShapeLayoutChanged();
}

// internal Fuse.Internal.SizingContainer get_Sizing() :52
void Path__get_Sizing_fn(Path* __this, ::g::Fuse::Internal::SizingContainer** __retval)
{
    *__retval = __this->Sizing();
}

// public Fuse.Elements.StretchDirection get_StretchDirection() :72
void Path__get_StretchDirection_fn(Path* __this, int32_t* __retval)
{
    *__retval = __this->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) :73
void Path__set_StretchDirection_fn(Path* __this, int32_t* value)
{
    __this->StretchDirection(*value);
}

// public Fuse.Elements.StretchMode get_StretchMode() :59
void Path__get_StretchMode_fn(Path* __this, int32_t* __retval)
{
    *__retval = __this->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) :60
void Path__set_StretchMode_fn(Path* __this, int32_t* value)
{
    __this->StretchMode(*value);
}

// public generated Path() [instance] :8
void Path::ctor_8()
{
    _segments1 = ((::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[65/*Uno.Collections.List<Fuse.Drawing.LineSegment>*/]));
    sizing = ::g::Fuse::Internal::SizingContainer::New1();
    _fitMode = 1;
    ctor_7();
}

// private Uno.Rect CalcNaturalExtents() [instance] :189
::g::Uno::Rect Path::CalcNaturalExtents()
{
    uStackFrame __("Fuse.Controls.Path", "CalcNaturalExtents()");
    return ::g::Fuse::Drawing::LineMetrics::GetBounds((uObject*)_segments1);
}

// private Fuse.Controls.Path.Positioning CalcPositioning() [instance] :219
Path__Positioning Path::CalcPositioning()
{
    uStackFrame __("Fuse.Controls.Path", "CalcPositioning()");
    ::g::Uno::Float4 ind4;
    ::g::Uno::Float4 ind5;
    ::g::Uno::Float4 ind6;
    Path__Positioning collection1;
    ::g::Uno::Rect naturalExtents = CalcNaturalExtents();
    ::g::Uno::Float2 desiredSize = GetDesiredContentSize();
    ::g::Uno::Float2 scale = uPtr(Sizing())->CalcScale(ActualSize(), desiredSize);
    ::g::Uno::Float2 offset = uPtr(Sizing())->CalcOrigin(ActualSize(), ::g::Uno::Float2__op_Multiply2(desiredSize, scale));
    ::g::Uno::Rect extents = naturalExtents;

    switch (FitMode())
    {
        case 0:
            break;
        case 1:
        {
            offset = ::g::Uno::Float2__op_Subtraction2(offset, extents.Minimum());
            break;
        }
        case 2:
        {
            offset = ::g::Uno::Float2__op_Subtraction2(offset, extents.Minimum());
            extents = ::g::Uno::Rect__New2((ind4 = Extents(), ::g::Uno::Float2__New2(ind4.X, ind4.Y)), ::g::Uno::Float2__op_Subtraction2((ind5 = Extents(), ::g::Uno::Float2__New2(ind5.Z, ind5.W)), (ind6 = Extents(), ::g::Uno::Float2__New2(ind6.X, ind6.Y))));
            break;
        }
    }

    collection1 = uDefault<Path__Positioning>();
    collection1.Scale = scale;
    collection1.Offset = offset;
    collection1.NaturalExtents = naturalExtents;
    collection1.Extents = extents;
    return collection1;
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :85
int32_t Path::ContentAlignment()
{
    uStackFrame __("Fuse.Controls.Path", "get_ContentAlignment()");
    return uPtr(sizing)->align;
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :86
void Path::ContentAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.Path", "set_ContentAlignment(Fuse.Elements.Alignment)");

    if (uPtr(sizing)->SetAlignment(value))
        OnShapeLayoutChanged();
}

// public string get_Data() [instance] :39
uString* Path::Data()
{
    return _data;
}

// public void set_Data(string value) [instance] :40
void Path::Data(uString* value)
{
    uStackFrame __("Fuse.Controls.Path", "set_Data(string)");

    if (::g::Uno::String::op_Equality(_data, value))
        return;

    _data = value;
    uPtr(_segments1)->Clear();
    ::g::Fuse::Drawing::LineParser::ParseSVGPath(value, (uObject*)_segments1);
    InvalidateSurfacePath();
}

// public float4 get_Extents() [instance] :138
::g::Uno::Float4 Path::Extents()
{
    return _extents;
}

// public void set_Extents(float4 value) [instance] :139
void Path::Extents(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Path", "set_Extents(float4)");

    if (::g::Uno::Float4__op_Equality(_extents, value) && (_fitMode == 2))
        return;

    _extents = value;
    _fitMode = 2;
    OnShapeLayoutChanged();
}

// public Fuse.Drawing.FillRule get_FillRule() [instance] :99
int32_t Path::FillRule()
{
    return _fillRule;
}

// public void set_FillRule(Fuse.Drawing.FillRule value) [instance] :100
void Path::FillRule(int32_t value)
{
    uStackFrame __("Fuse.Controls.Path", "set_FillRule(Fuse.Drawing.FillRule)");
    _fillRule = value;
    OnShapeLayoutChanged();
}

// public Fuse.Controls.FitMode get_FitMode() [instance] :113
int32_t Path::FitMode()
{
    return _fitMode;
}

// public void set_FitMode(Fuse.Controls.FitMode value) [instance] :114
void Path::FitMode(int32_t value)
{
    uStackFrame __("Fuse.Controls.Path", "set_FitMode(Fuse.Controls.FitMode)");

    if (value != _fitMode)
    {
        _fitMode = value;
        OnShapeLayoutChanged();
    }
}

// private float2 GetDesiredContentSize() [instance] :150
::g::Uno::Float2 Path::GetDesiredContentSize()
{
    uStackFrame __("Fuse.Controls.Path", "GetDesiredContentSize()");
    ::g::Uno::Float4 ind2;
    ::g::Uno::Float4 ind3;
    ::g::Uno::Float2 hi = ::g::Uno::Float2__New1(0.0f);
    ::g::Uno::Float2 lo = ::g::Uno::Float2__New1(0.0f);
    ::g::Uno::Rect bounds = CalcNaturalExtents();

    switch (FitMode())
    {
        case 0:
        {
            lo = ::g::Uno::Float2__New1(0.0f);
            hi = bounds.Maximum();
            break;
        }
        case 1:
        {
            lo = bounds.Minimum();
            hi = bounds.Maximum();
            break;
        }
        case 2:
        {
            lo = (ind2 = Extents(), ::g::Uno::Float2__New2(ind2.X, ind2.Y));
            hi = (ind3 = Extents(), ::g::Uno::Float2__New2(ind3.Z, ind3.W));
            break;
        }
    }

    ::g::Uno::Float2 natural = ::g::Uno::Float2__op_Subtraction2(hi, lo);
    return natural;
}

// private void OnShapeLayoutChanged() [instance] :124
void Path::OnShapeLayoutChanged()
{
    uStackFrame __("Fuse.Controls.Path", "OnShapeLayoutChanged()");
    InvalidateSurfacePath();
    InvalidateLayout(2);
}

// internal Fuse.Internal.SizingContainer get_Sizing() [instance] :52
::g::Fuse::Internal::SizingContainer* Path::Sizing()
{
    return sizing;
}

// public Fuse.Elements.StretchDirection get_StretchDirection() [instance] :72
int32_t Path::StretchDirection()
{
    uStackFrame __("Fuse.Controls.Path", "get_StretchDirection()");
    return uPtr(sizing)->stretchDirection;
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) [instance] :73
void Path::StretchDirection(int32_t value)
{
    uStackFrame __("Fuse.Controls.Path", "set_StretchDirection(Fuse.Elements.StretchDirection)");

    if (uPtr(sizing)->SetStretchDirection(value))
        OnShapeLayoutChanged();
}

// public Fuse.Elements.StretchMode get_StretchMode() [instance] :59
int32_t Path::StretchMode()
{
    uStackFrame __("Fuse.Controls.Path", "get_StretchMode()");
    return uPtr(sizing)->stretchMode;
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) [instance] :60
void Path::StretchMode(int32_t value)
{
    uStackFrame __("Fuse.Controls.Path", "set_StretchMode(Fuse.Elements.StretchMode)");

    if (uPtr(sizing)->SetStretchMode(value))
        OnShapeLayoutChanged();
}

// public generated Path New() [static] :8
Path* Path::New3()
{
    Path* obj7 = (Path*)uNew(Path_typeof());
    obj7->ctor_8();
    return obj7;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\PathExpression.uno
// ------------------------------------------------------------------------------------------------------------

// public abstract class PathExpression :10
// {
static void PathExpression_build(uType* type)
{
    type->SetInterfaces(
        ::g::Fuse::Reactive::IExpression_typeof(), offsetof(PathExpression_type, interface0));
    type->SetFields(0,
        ::g::Fuse::Reactive::Expression_typeof(), offsetof(PathExpression, _path), 0,
        ::g::Fuse::Reactive::Expression_typeof(), offsetof(PathExpression, _arg), 0,
        ::g::Uno::String_typeof(), offsetof(PathExpression, _name), 0);
}

PathExpression_type* PathExpression_typeof()
{
    static uSStrong<PathExpression_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Reactive::Expression_typeof();
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(PathExpression);
    options.TypeSize = sizeof(PathExpression_type);
    type = (PathExpression_type*)uClassType::New("Fuse.Controls.PathExpression", options);
    type->fp_build_ = PathExpression_build;
    type->fp_Subscribe = (void(*)(::g::Fuse::Reactive::Expression*, uObject*, uObject*, uObject**))PathExpression__Subscribe_fn;
    type->fp_ToString = (void(*)(uObject*, uString**))PathExpression__ToString_fn;
    type->interface0.fp_Subscribe = (void(*)(uObject*, uObject*, uObject*, uObject**))PathExpression__Subscribe_fn;
    return type;
}

// internal PathExpression(Fuse.Reactive.Expression path, Fuse.Reactive.Expression arg, string name) :14
void PathExpression__ctor_1_fn(PathExpression* __this, ::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* arg, uString* name)
{
    __this->ctor_1(path, arg, name);
}

// public override sealed Uno.IDisposable Subscribe(Fuse.Reactive.IContext context, Fuse.Reactive.IListener listener) :26
void PathExpression__Subscribe_fn(PathExpression* __this, uObject* context, uObject* listener, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.PathExpression", "Subscribe(Fuse.Reactive.IContext,Fuse.Reactive.IListener)");
    PathExpression__PathSubscription* sub = PathExpression__PathSubscription::New1(__this, context, listener);
    sub->Init(context);
    return *__retval = (uObject*)sub, void();
}

// public override sealed string ToString() :21
void PathExpression__ToString_fn(PathExpression* __this, uString** __retval)
{
    uStackFrame __("Fuse.Controls.PathExpression", "ToString()");
    return *__retval = ::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition1(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition1(::g::Uno::String::op_Addition2(__this->_name, uString::Const("(")), __this->_path), uString::Const(", ")), __this->_arg), uString::Const(")")), void();
}

// internal PathExpression(Fuse.Reactive.Expression path, Fuse.Reactive.Expression arg, string name) [instance] :14
void PathExpression::ctor_1(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* arg, uString* name)
{
    ctor_();
    _path = path;
    _arg = arg;
    _name = name;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\SegmentedShape.uno
// ------------------------------------------------------------------------------------------------------------

// public enum PathMeasureMode :11
uEnumType* PathMeasureMode_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.PathMeasureMode", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Time", 0LL,
        "Distance", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\PathExpression.uno
// ------------------------------------------------------------------------------------------------------------

// public sealed class PathPointAtDistance :118
// {
static void PathPointAtDistance_build(uType* type)
{
    ::STRINGS[63] = uString::Const("pathPointAtDistance");
    ::TYPES[59] = ::g::Fuse::Marshal_typeof()->MakeMethod(0/*ToType<float>*/, ::g::Uno::Float_typeof(), NULL);
    type->SetInterfaces(
        ::g::Fuse::Reactive::IExpression_typeof(), offsetof(::g::Fuse::Controls::PathExpression_type, interface0));
    type->SetFields(3);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PathPointAtDistance__New1_fn, 0, true, type, 2, ::g::Fuse::Reactive::Expression_typeof(), ::g::Fuse::Reactive::Expression_typeof()));
}

::g::Fuse::Controls::PathExpression_type* PathPointAtDistance_typeof()
{
    static uSStrong< ::g::Fuse::Controls::PathExpression_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::PathExpression_typeof();
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(PathPointAtDistance);
    options.TypeSize = sizeof(::g::Fuse::Controls::PathExpression_type);
    type = (::g::Fuse::Controls::PathExpression_type*)uClassType::New("Fuse.Controls.PathPointAtDistance", options);
    type->fp_build_ = PathPointAtDistance_build;
    type->fp_Calculate = (void(*)(::g::Fuse::Controls::PathExpression*, ::g::Fuse::Controls::SegmentedShape*, uObject*, uObject**))PathPointAtDistance__Calculate_fn;
    type->interface0.fp_Subscribe = (void(*)(uObject*, uObject*, uObject*, uObject**))::g::Fuse::Controls::PathExpression__Subscribe_fn;
    return type;
}

// public PathPointAtDistance(Fuse.Reactive.Expression path, Fuse.Reactive.Expression distance) :121
void PathPointAtDistance__ctor_2_fn(PathPointAtDistance* __this, ::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* distance)
{
    __this->ctor_2(path, distance);
}

// protected override sealed object Calculate(Fuse.Controls.SegmentedShape path, object param) :126
void PathPointAtDistance__Calculate_fn(PathPointAtDistance* __this, ::g::Fuse::Controls::SegmentedShape* path, uObject* param, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.PathPointAtDistance", "Calculate(Fuse.Controls.SegmentedShape,object)");
    float ret2;
    return *__retval = uBox(::g::Uno::Float2_typeof(), uPtr(path)->PointAtDistance((::g::Fuse::Marshal__ToType_fn(::TYPES[59/*Fuse.Marshal.ToType<float>*/], param, &ret2), ret2))), void();
}

// public PathPointAtDistance New(Fuse.Reactive.Expression path, Fuse.Reactive.Expression distance) :121
void PathPointAtDistance__New1_fn(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* distance, PathPointAtDistance** __retval)
{
    *__retval = PathPointAtDistance::New1(path, distance);
}

// public PathPointAtDistance(Fuse.Reactive.Expression path, Fuse.Reactive.Expression distance) [instance] :121
void PathPointAtDistance::ctor_2(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* distance)
{
    ctor_1(path, distance, ::STRINGS[63/*"pathPointAt...*/]);
}

// public PathPointAtDistance New(Fuse.Reactive.Expression path, Fuse.Reactive.Expression distance) [static] :121
PathPointAtDistance* PathPointAtDistance::New1(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* distance)
{
    PathPointAtDistance* obj1 = (PathPointAtDistance*)uNew(PathPointAtDistance_typeof());
    obj1->ctor_2(path, distance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\PathExpression.uno
// ------------------------------------------------------------------------------------------------------------

// public sealed class PathPointAtTime :157
// {
static void PathPointAtTime_build(uType* type)
{
    ::STRINGS[64] = uString::Const("pathPointAtTime");
    ::TYPES[59] = ::g::Fuse::Marshal_typeof()->MakeMethod(0/*ToType<float>*/, ::g::Uno::Float_typeof(), NULL);
    type->SetInterfaces(
        ::g::Fuse::Reactive::IExpression_typeof(), offsetof(::g::Fuse::Controls::PathExpression_type, interface0));
    type->SetFields(3);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PathPointAtTime__New1_fn, 0, true, type, 2, ::g::Fuse::Reactive::Expression_typeof(), ::g::Fuse::Reactive::Expression_typeof()));
}

::g::Fuse::Controls::PathExpression_type* PathPointAtTime_typeof()
{
    static uSStrong< ::g::Fuse::Controls::PathExpression_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::PathExpression_typeof();
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(PathPointAtTime);
    options.TypeSize = sizeof(::g::Fuse::Controls::PathExpression_type);
    type = (::g::Fuse::Controls::PathExpression_type*)uClassType::New("Fuse.Controls.PathPointAtTime", options);
    type->fp_build_ = PathPointAtTime_build;
    type->fp_Calculate = (void(*)(::g::Fuse::Controls::PathExpression*, ::g::Fuse::Controls::SegmentedShape*, uObject*, uObject**))PathPointAtTime__Calculate_fn;
    type->interface0.fp_Subscribe = (void(*)(uObject*, uObject*, uObject*, uObject**))::g::Fuse::Controls::PathExpression__Subscribe_fn;
    return type;
}

// public PathPointAtTime(Fuse.Reactive.Expression path, Fuse.Reactive.Expression time) :160
void PathPointAtTime__ctor_2_fn(PathPointAtTime* __this, ::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* time)
{
    __this->ctor_2(path, time);
}

// protected override sealed object Calculate(Fuse.Controls.SegmentedShape path, object param) :165
void PathPointAtTime__Calculate_fn(PathPointAtTime* __this, ::g::Fuse::Controls::SegmentedShape* path, uObject* param, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.PathPointAtTime", "Calculate(Fuse.Controls.SegmentedShape,object)");
    float ret2;
    return *__retval = uBox(::g::Uno::Float2_typeof(), uPtr(path)->PointAtTime((::g::Fuse::Marshal__ToType_fn(::TYPES[59/*Fuse.Marshal.ToType<float>*/], param, &ret2), ret2))), void();
}

// public PathPointAtTime New(Fuse.Reactive.Expression path, Fuse.Reactive.Expression time) :160
void PathPointAtTime__New1_fn(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* time, PathPointAtTime** __retval)
{
    *__retval = PathPointAtTime::New1(path, time);
}

// public PathPointAtTime(Fuse.Reactive.Expression path, Fuse.Reactive.Expression time) [instance] :160
void PathPointAtTime::ctor_2(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* time)
{
    ctor_1(path, time, ::STRINGS[64/*"pathPointAt...*/]);
}

// public PathPointAtTime New(Fuse.Reactive.Expression path, Fuse.Reactive.Expression time) [static] :160
PathPointAtTime* PathPointAtTime::New1(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* time)
{
    PathPointAtTime* obj1 = (PathPointAtTime*)uNew(PathPointAtTime_typeof());
    obj1->ctor_2(path, time);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\PathExpression.uno
// ------------------------------------------------------------------------------------------------------------

// private sealed class PathExpression.PathSubscription :35
// {
static void PathExpression__PathSubscription_build(uType* type)
{
    ::STRINGS[65] = uString::Const(" requires a SegmentedShape as first argument");
    ::STRINGS[66] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\Shapes\\PathExpression.uno");
    ::STRINGS[67] = uString::Const("OnArguments");
    ::TYPES[60] = ::g::Fuse::Reactive::Expression_typeof()->Array();
    ::TYPES[19] = ::g::Uno::Action_typeof();
    ::TYPES[61] = ::g::Fuse::Controls::SegmentedShape_typeof();
    type->SetDependencies(
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(::g::Fuse::Reactive::ExpressionListener_type, interface0),
        ::g::Fuse::Reactive::IListener_typeof(), offsetof(::g::Fuse::Reactive::ExpressionListener_type, interface1));
    type->SetFields(9,
        ::g::Fuse::Reactive::IListener_typeof(), offsetof(PathExpression__PathSubscription, _listener1), 0,
        ::g::Fuse::Controls::PathExpression_typeof(), offsetof(PathExpression__PathSubscription, _expr), 0,
        ::TYPES[61/*Fuse.Controls.SegmentedShape*/], offsetof(PathExpression__PathSubscription, _path), 0,
        uObject_typeof(), offsetof(PathExpression__PathSubscription, _param), 0);
}

::g::Fuse::Reactive::ExpressionListener_type* PathExpression__PathSubscription_typeof()
{
    static uSStrong< ::g::Fuse::Reactive::ExpressionListener_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Reactive::ExpressionListener_typeof();
    options.FieldCount = 13;
    options.InterfaceCount = 2;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(PathExpression__PathSubscription);
    options.TypeSize = sizeof(::g::Fuse::Reactive::ExpressionListener_type);
    type = (::g::Fuse::Reactive::ExpressionListener_type*)uClassType::New("Fuse.Controls.PathExpression.PathSubscription", options);
    type->fp_build_ = PathExpression__PathSubscription_build;
    type->fp_Dispose = (void(*)(::g::Fuse::Reactive::InnerListener*))PathExpression__PathSubscription__Dispose_fn;
    type->fp_OnArguments = (void(*)(::g::Fuse::Reactive::ExpressionSubscriber*, uArray*))PathExpression__PathSubscription__OnArguments_fn;
    type->fp_OnDataCleared = (void(*)(::g::Fuse::Reactive::ExpressionListener*))PathExpression__PathSubscription__OnDataCleared_fn;
    type->interface1.fp_OnNewData = (void(*)(uObject*, uObject*, uObject*))::g::Fuse::Reactive::InnerListener__FuseReactiveIListenerOnNewData_fn;
    type->interface1.fp_OnLostData = (void(*)(uObject*, uObject*))::g::Fuse::Reactive::InnerListener__FuseReactiveIListenerOnLostData_fn;
    type->interface0.fp_Dispose = (void(*)(uObject*))PathExpression__PathSubscription__Dispose_fn;
    return type;
}

// public PathSubscription(Fuse.Controls.PathExpression expr, Fuse.Reactive.IContext context, Fuse.Reactive.IListener listener) :41
void PathExpression__PathSubscription__ctor_3_fn(PathExpression__PathSubscription* __this, ::g::Fuse::Controls::PathExpression* expr, uObject* context, uObject* listener)
{
    __this->ctor_3(expr, context, listener);
}

// public override sealed void Dispose() :100
void PathExpression__PathSubscription__Dispose_fn(PathExpression__PathSubscription* __this)
{
    uStackFrame __("Fuse.Controls.PathExpression.PathSubscription", "Dispose()");
    __this->_listener1 = NULL;

    if (__this->_path != NULL)
    {
        uPtr(__this->_path)->remove_SegmentsChanged(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)PathExpression__PathSubscription__SegmentsChanged_fn, __this));
        __this->_path = NULL;
    }

    ::g::Fuse::Reactive::ExpressionListener__Dispose_fn(__this);
}

// public PathSubscription New(Fuse.Controls.PathExpression expr, Fuse.Reactive.IContext context, Fuse.Reactive.IListener listener) :41
void PathExpression__PathSubscription__New1_fn(::g::Fuse::Controls::PathExpression* expr, uObject* context, uObject* listener, PathExpression__PathSubscription** __retval)
{
    *__retval = PathExpression__PathSubscription::New1(expr, context, listener);
}

// protected override sealed void OnArguments(Fuse.Reactive.Expression.Argument[] args) :48
void PathExpression__PathSubscription__OnArguments_fn(PathExpression__PathSubscription* __this, uArray* args)
{
    uStackFrame __("Fuse.Controls.PathExpression.PathSubscription", "OnArguments(Fuse.Reactive.Expression.Argument[])");

    if (uPtr(args)->Length() < 2)
        return;

    ::g::Fuse::Controls::SegmentedShape* ss = uAs< ::g::Fuse::Controls::SegmentedShape*>(uPtr(uPtr(args)->Strong< ::g::Fuse::Reactive::Expression__Argument*>(0))->Value(), ::TYPES[61/*Fuse.Controls.SegmentedShape*/]);

    if (ss == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(uPtr(__this->_expr)->_name, ::STRINGS[65/*" requires a...*/]), __this, ::STRINGS[66/*"C:\\Users\\...*/], 56, ::STRINGS[67/*"OnArguments"*/], NULL);
        __this->ClearData();
        return;
    }

    __this->SwitchPath(ss);
    __this->_param = uPtr(args->Strong< ::g::Fuse::Reactive::Expression__Argument*>(1))->Value();
    __this->UpdateValue();
}

// protected override sealed void OnDataCleared() :66
void PathExpression__PathSubscription__OnDataCleared_fn(PathExpression__PathSubscription* __this)
{
    uStackFrame __("Fuse.Controls.PathExpression.PathSubscription", "OnDataCleared()");
    ::g::Fuse::Reactive::ExpressionListener__OnDataCleared_fn(__this);
    __this->SwitchPath(NULL);
}

// private void SegmentsChanged() :94
void PathExpression__PathSubscription__SegmentsChanged_fn(PathExpression__PathSubscription* __this)
{
    __this->SegmentsChanged();
}

// private void SwitchPath(Fuse.Controls.SegmentedShape path) :81
void PathExpression__PathSubscription__SwitchPath_fn(PathExpression__PathSubscription* __this, ::g::Fuse::Controls::SegmentedShape* path)
{
    __this->SwitchPath(path);
}

// private void UpdateValue() :72
void PathExpression__PathSubscription__UpdateValue_fn(PathExpression__PathSubscription* __this)
{
    __this->UpdateValue();
}

// public PathSubscription(Fuse.Controls.PathExpression expr, Fuse.Reactive.IContext context, Fuse.Reactive.IListener listener) [instance] :41
void PathExpression__PathSubscription::ctor_3(::g::Fuse::Controls::PathExpression* expr, uObject* context, uObject* listener)
{
    uStackFrame __("Fuse.Controls.PathExpression.PathSubscription", ".ctor(Fuse.Controls.PathExpression,Fuse.Reactive.IContext,Fuse.Reactive.IListener)");
    ctor_2(expr, listener, uArray::Init< ::g::Fuse::Reactive::Expression*>(::TYPES[60/*Fuse.Reactive.Expression[]*/], 2, (::g::Fuse::Reactive::Expression*)uPtr(expr)->_path, (::g::Fuse::Reactive::Expression*)uPtr(expr)->_arg), 0);
    _expr = expr;
}

// private void SegmentsChanged() [instance] :94
void PathExpression__PathSubscription::SegmentsChanged()
{
    uStackFrame __("Fuse.Controls.PathExpression.PathSubscription", "SegmentsChanged()");

    if (_path != NULL)
        ::g::Fuse::UpdateManager::AddDeferredAction2(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)PathExpression__PathSubscription__UpdateValue_fn, this), -1, 2);
}

// private void SwitchPath(Fuse.Controls.SegmentedShape path) [instance] :81
void PathExpression__PathSubscription::SwitchPath(::g::Fuse::Controls::SegmentedShape* path)
{
    uStackFrame __("Fuse.Controls.PathExpression.PathSubscription", "SwitchPath(Fuse.Controls.SegmentedShape)");

    if (_path == path)
        return;

    if (_path != NULL)
        uPtr(_path)->remove_SegmentsChanged(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)PathExpression__PathSubscription__SegmentsChanged_fn, this));

    _path = path;

    if (_path != NULL)
        uPtr(_path)->add_SegmentsChanged(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)PathExpression__PathSubscription__SegmentsChanged_fn, this));
}

// private void UpdateValue() [instance] :72
void PathExpression__PathSubscription::UpdateValue()
{
    uStackFrame __("Fuse.Controls.PathExpression.PathSubscription", "UpdateValue()");

    if (_path != NULL)
    {
        uObject* result = uPtr(_expr)->Calculate(_path, _param);
        SetData(result);
    }
}

// public PathSubscription New(Fuse.Controls.PathExpression expr, Fuse.Reactive.IContext context, Fuse.Reactive.IListener listener) [static] :41
PathExpression__PathSubscription* PathExpression__PathSubscription::New1(::g::Fuse::Controls::PathExpression* expr, uObject* context, uObject* listener)
{
    PathExpression__PathSubscription* obj1 = (PathExpression__PathSubscription*)uNew(PathExpression__PathSubscription_typeof());
    obj1->ctor_3(expr, context, listener);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\PathExpression.uno
// ------------------------------------------------------------------------------------------------------------

// public sealed class PathTangentAngleAtDistance :137
// {
static void PathTangentAngleAtDistance_build(uType* type)
{
    ::STRINGS[68] = uString::Const("pathTangentAngleAtDistance");
    ::TYPES[59] = ::g::Fuse::Marshal_typeof()->MakeMethod(0/*ToType<float>*/, ::g::Uno::Float_typeof(), NULL);
    type->SetInterfaces(
        ::g::Fuse::Reactive::IExpression_typeof(), offsetof(::g::Fuse::Controls::PathExpression_type, interface0));
    type->SetFields(3);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PathTangentAngleAtDistance__New1_fn, 0, true, type, 2, ::g::Fuse::Reactive::Expression_typeof(), ::g::Fuse::Reactive::Expression_typeof()));
}

::g::Fuse::Controls::PathExpression_type* PathTangentAngleAtDistance_typeof()
{
    static uSStrong< ::g::Fuse::Controls::PathExpression_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::PathExpression_typeof();
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(PathTangentAngleAtDistance);
    options.TypeSize = sizeof(::g::Fuse::Controls::PathExpression_type);
    type = (::g::Fuse::Controls::PathExpression_type*)uClassType::New("Fuse.Controls.PathTangentAngleAtDistance", options);
    type->fp_build_ = PathTangentAngleAtDistance_build;
    type->fp_Calculate = (void(*)(::g::Fuse::Controls::PathExpression*, ::g::Fuse::Controls::SegmentedShape*, uObject*, uObject**))PathTangentAngleAtDistance__Calculate_fn;
    type->interface0.fp_Subscribe = (void(*)(uObject*, uObject*, uObject*, uObject**))::g::Fuse::Controls::PathExpression__Subscribe_fn;
    return type;
}

// public PathTangentAngleAtDistance(Fuse.Reactive.Expression path, Fuse.Reactive.Expression distance) :140
void PathTangentAngleAtDistance__ctor_2_fn(PathTangentAngleAtDistance* __this, ::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* distance)
{
    __this->ctor_2(path, distance);
}

// protected override sealed object Calculate(Fuse.Controls.SegmentedShape path, object param) :145
void PathTangentAngleAtDistance__Calculate_fn(PathTangentAngleAtDistance* __this, ::g::Fuse::Controls::SegmentedShape* path, uObject* param, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.PathTangentAngleAtDistance", "Calculate(Fuse.Controls.SegmentedShape,object)");
    float ret2;
    ::g::Uno::Float2 tangent = uPtr(path)->TangentAtDistance((::g::Fuse::Marshal__ToType_fn(::TYPES[59/*Fuse.Marshal.ToType<float>*/], param, &ret2), ret2));
    return *__retval = uBox(::g::Uno::Float_typeof(), ::g::Uno::Math::Atan22(tangent.Y, tangent.X)), void();
}

// public PathTangentAngleAtDistance New(Fuse.Reactive.Expression path, Fuse.Reactive.Expression distance) :140
void PathTangentAngleAtDistance__New1_fn(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* distance, PathTangentAngleAtDistance** __retval)
{
    *__retval = PathTangentAngleAtDistance::New1(path, distance);
}

// public PathTangentAngleAtDistance(Fuse.Reactive.Expression path, Fuse.Reactive.Expression distance) [instance] :140
void PathTangentAngleAtDistance::ctor_2(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* distance)
{
    ctor_1(path, distance, ::STRINGS[68/*"pathTangent...*/]);
}

// public PathTangentAngleAtDistance New(Fuse.Reactive.Expression path, Fuse.Reactive.Expression distance) [static] :140
PathTangentAngleAtDistance* PathTangentAngleAtDistance::New1(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* distance)
{
    PathTangentAngleAtDistance* obj1 = (PathTangentAngleAtDistance*)uNew(PathTangentAngleAtDistance_typeof());
    obj1->ctor_2(path, distance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\PathExpression.uno
// ------------------------------------------------------------------------------------------------------------

// public sealed class PathTangentAngleAtTime :176
// {
static void PathTangentAngleAtTime_build(uType* type)
{
    ::STRINGS[69] = uString::Const("pathTangentAngleAtTime");
    ::TYPES[59] = ::g::Fuse::Marshal_typeof()->MakeMethod(0/*ToType<float>*/, ::g::Uno::Float_typeof(), NULL);
    type->SetInterfaces(
        ::g::Fuse::Reactive::IExpression_typeof(), offsetof(::g::Fuse::Controls::PathExpression_type, interface0));
    type->SetFields(3);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PathTangentAngleAtTime__New1_fn, 0, true, type, 2, ::g::Fuse::Reactive::Expression_typeof(), ::g::Fuse::Reactive::Expression_typeof()));
}

::g::Fuse::Controls::PathExpression_type* PathTangentAngleAtTime_typeof()
{
    static uSStrong< ::g::Fuse::Controls::PathExpression_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::PathExpression_typeof();
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(PathTangentAngleAtTime);
    options.TypeSize = sizeof(::g::Fuse::Controls::PathExpression_type);
    type = (::g::Fuse::Controls::PathExpression_type*)uClassType::New("Fuse.Controls.PathTangentAngleAtTime", options);
    type->fp_build_ = PathTangentAngleAtTime_build;
    type->fp_Calculate = (void(*)(::g::Fuse::Controls::PathExpression*, ::g::Fuse::Controls::SegmentedShape*, uObject*, uObject**))PathTangentAngleAtTime__Calculate_fn;
    type->interface0.fp_Subscribe = (void(*)(uObject*, uObject*, uObject*, uObject**))::g::Fuse::Controls::PathExpression__Subscribe_fn;
    return type;
}

// public PathTangentAngleAtTime(Fuse.Reactive.Expression path, Fuse.Reactive.Expression time) :179
void PathTangentAngleAtTime__ctor_2_fn(PathTangentAngleAtTime* __this, ::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* time)
{
    __this->ctor_2(path, time);
}

// protected override sealed object Calculate(Fuse.Controls.SegmentedShape path, object param) :184
void PathTangentAngleAtTime__Calculate_fn(PathTangentAngleAtTime* __this, ::g::Fuse::Controls::SegmentedShape* path, uObject* param, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.PathTangentAngleAtTime", "Calculate(Fuse.Controls.SegmentedShape,object)");
    float ret2;
    ::g::Uno::Float2 tangent = uPtr(path)->TangentAtTime((::g::Fuse::Marshal__ToType_fn(::TYPES[59/*Fuse.Marshal.ToType<float>*/], param, &ret2), ret2));
    return *__retval = uBox(::g::Uno::Float_typeof(), ::g::Uno::Math::Atan22(tangent.Y, tangent.X)), void();
}

// public PathTangentAngleAtTime New(Fuse.Reactive.Expression path, Fuse.Reactive.Expression time) :179
void PathTangentAngleAtTime__New1_fn(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* time, PathTangentAngleAtTime** __retval)
{
    *__retval = PathTangentAngleAtTime::New1(path, time);
}

// public PathTangentAngleAtTime(Fuse.Reactive.Expression path, Fuse.Reactive.Expression time) [instance] :179
void PathTangentAngleAtTime::ctor_2(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* time)
{
    ctor_1(path, time, ::STRINGS[69/*"pathTangent...*/]);
}

// public PathTangentAngleAtTime New(Fuse.Reactive.Expression path, Fuse.Reactive.Expression time) [static] :179
PathTangentAngleAtTime* PathTangentAngleAtTime::New1(::g::Fuse::Reactive::Expression* path, ::g::Fuse::Reactive::Expression* time)
{
    PathTangentAngleAtTime* obj1 = (PathTangentAngleAtTime*)uNew(PathTangentAngleAtTime_typeof());
    obj1->ctor_2(path, time);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\MultiLayoutPanel.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class Placeholder :117
// {
static void Placeholder_build(uType* type)
{
    ::STRINGS[70] = uString::Const("ContentFactory is deprecated, use ContentTemplate instead");
    ::STRINGS[71] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\MultiLayoutPanel.uno");
    ::STRINGS[72] = uString::Const("set_ContentFactory");
    ::TYPES[8] = ::g::Fuse::Elements::Element_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface16));
    type->SetFields(108,
        ::g::Uno::UX::Template_typeof(), offsetof(Placeholder, _contentTemplate), 0,
        ::TYPES[8/*Fuse.Elements.Element*/], offsetof(Placeholder, _Target), 0);
    type->Reflection.SetFunctions(9,
        new uFunction("get_ContentFactory", NULL, (void*)Placeholder__get_ContentFactory_fn, 0, false, ::g::Uno::UX::Template_typeof(), 0),
        new uFunction("set_ContentFactory", NULL, (void*)Placeholder__set_ContentFactory_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::Template_typeof()),
        new uFunction("get_ContentTemplate", NULL, (void*)Placeholder__get_ContentTemplate_fn, 0, false, ::g::Uno::UX::Template_typeof(), 0),
        new uFunction("set_ContentTemplate", NULL, (void*)Placeholder__set_ContentTemplate_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::Template_typeof()),
        new uFunction(".ctor", NULL, (void*)Placeholder__New3_fn, 0, true, type, 0),
        new uFunction("get_PlaceholderContent", NULL, (void*)Placeholder__get_PlaceholderContent_fn, 0, false, ::TYPES[8/*Fuse.Elements.Element*/], 0),
        new uFunction("set_PlaceholderContent", NULL, (void*)Placeholder__set_PlaceholderContent_fn, 0, false, uVoid_typeof(), 1, ::TYPES[8/*Fuse.Elements.Element*/]),
        new uFunction("get_Target", NULL, (void*)Placeholder__get_Target_fn, 0, false, ::TYPES[8/*Fuse.Elements.Element*/], 0),
        new uFunction("set_Target", NULL, (void*)Placeholder__set_Target_fn, 0, false, uVoid_typeof(), 1, ::TYPES[8/*Fuse.Elements.Element*/]));
}

::g::Fuse::Controls::ContentControl_type* Placeholder_typeof()
{
    static uSStrong< ::g::Fuse::Controls::ContentControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ContentControl_typeof();
    options.FieldCount = 110;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(Placeholder);
    options.TypeSize = sizeof(::g::Fuse::Controls::ContentControl_type);
    type = (::g::Fuse::Controls::ContentControl_type*)uClassType::New("Fuse.Controls.Placeholder", options);
    type->fp_build_ = Placeholder_build;
    type->fp_ctor_ = (void*)Placeholder__New3_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))Placeholder__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))Placeholder__OnChildRemoved_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Placeholder() :117
void Placeholder__ctor_6_fn(Placeholder* __this)
{
    __this->ctor_6();
}

// internal void AcquireTarget() :174
void Placeholder__AcquireTarget_fn(Placeholder* __this)
{
    __this->AcquireTarget();
}

// public Uno.UX.Template get_ContentFactory() :154
void Placeholder__get_ContentFactory_fn(Placeholder* __this, ::g::Uno::UX::Template** __retval)
{
    *__retval = __this->ContentFactory();
}

// public void set_ContentFactory(Uno.UX.Template value) :155
void Placeholder__set_ContentFactory_fn(Placeholder* __this, ::g::Uno::UX::Template* value)
{
    __this->ContentFactory(value);
}

// public Uno.UX.Template get_ContentTemplate() :138
void Placeholder__get_ContentTemplate_fn(Placeholder* __this, ::g::Uno::UX::Template** __retval)
{
    *__retval = __this->ContentTemplate();
}

// public void set_ContentTemplate(Uno.UX.Template value) :139
void Placeholder__set_ContentTemplate_fn(Placeholder* __this, ::g::Uno::UX::Template* value)
{
    __this->ContentTemplate(value);
}

// public generated Placeholder New() :117
void Placeholder__New3_fn(Placeholder** __retval)
{
    *__retval = Placeholder::New3();
}

// protected override sealed void OnChildAdded(Fuse.Node n) :162
void Placeholder__OnChildAdded_fn(Placeholder* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.Placeholder", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Node* ind1;
    ::g::Fuse::Controls::ContentControl__OnChildAdded_fn(__this, n);
    uPtr(n)->OverrideContextParent = (ind1 = uPtr(n)->OverrideContextParent, ((ind1 != NULL) ? ind1 : __this));
}

// protected override sealed void OnChildRemoved(Fuse.Node n) :168
void Placeholder__OnChildRemoved_fn(Placeholder* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.Placeholder", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Controls::ContentControl__OnChildRemoved_fn(__this, n);

    if (uPtr(n)->OverrideContextParent == __this)
        uPtr(n)->OverrideContextParent = NULL;
}

// public Fuse.Elements.Element get_PlaceholderContent() :127
void Placeholder__get_PlaceholderContent_fn(Placeholder* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->PlaceholderContent();
}

// public void set_PlaceholderContent(Fuse.Elements.Element value) :128
void Placeholder__set_PlaceholderContent_fn(Placeholder* __this, ::g::Fuse::Elements::Element* value)
{
    __this->PlaceholderContent(value);
}

// public generated Fuse.Elements.Element get_Target() :121
void Placeholder__get_Target_fn(Placeholder* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->Target();
}

// public generated void set_Target(Fuse.Elements.Element value) :121
void Placeholder__set_Target_fn(Placeholder* __this, ::g::Fuse::Elements::Element* value)
{
    __this->Target(value);
}

// public generated Placeholder() [instance] :117
void Placeholder::ctor_6()
{
    ctor_5();
}

// internal void AcquireTarget() [instance] :174
void Placeholder::AcquireTarget()
{
    uStackFrame __("Fuse.Controls.Placeholder", "AcquireTarget()");

    if (Target() == NULL)
        return;

    if (Content() == Target())
        return;

    Placeholder* oldParent = uAs<Placeholder*>(uPtr(Target())->Parent(), __type);

    if (oldParent == NULL)
        return;

    uPtr(Target())->PreserveRootFrame();
    uPtr(oldParent)->Content(NULL);
    Content(Target());
}

// public Uno.UX.Template get_ContentFactory() [instance] :154
::g::Uno::UX::Template* Placeholder::ContentFactory()
{
    return ContentTemplate();
}

// public void set_ContentFactory(Uno.UX.Template value) [instance] :155
void Placeholder::ContentFactory(::g::Uno::UX::Template* value)
{
    uStackFrame __("Fuse.Controls.Placeholder", "set_ContentFactory(Uno.UX.Template)");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[70/*"ContentFact...*/], this, ::STRINGS[71/*"C:\\Users\\...*/], 157, ::STRINGS[72/*"set_Content...*/]);
    ContentTemplate(value);
}

// public Uno.UX.Template get_ContentTemplate() [instance] :138
::g::Uno::UX::Template* Placeholder::ContentTemplate()
{
    return _contentTemplate;
}

// public void set_ContentTemplate(Uno.UX.Template value) [instance] :139
void Placeholder::ContentTemplate(::g::Uno::UX::Template* value)
{
    uStackFrame __("Fuse.Controls.Placeholder", "set_ContentTemplate(Uno.UX.Template)");

    if (_contentTemplate == value)
        return;

    _contentTemplate = value;

    if (_contentTemplate == NULL)
        Content(NULL);
    else
        Content(uAs< ::g::Fuse::Elements::Element*>(uPtr(_contentTemplate)->New1(), ::TYPES[8/*Fuse.Elements.Element*/]));
}

// public Fuse.Elements.Element get_PlaceholderContent() [instance] :127
::g::Fuse::Elements::Element* Placeholder::PlaceholderContent()
{
    uStackFrame __("Fuse.Controls.Placeholder", "get_PlaceholderContent()");
    return Content();
}

// public void set_PlaceholderContent(Fuse.Elements.Element value) [instance] :128
void Placeholder::PlaceholderContent(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.Placeholder", "set_PlaceholderContent(Fuse.Elements.Element)");
    Content(value);
    Target(value);
}

// public generated Fuse.Elements.Element get_Target() [instance] :121
::g::Fuse::Elements::Element* Placeholder::Target()
{
    return _Target;
}

// public generated void set_Target(Fuse.Elements.Element value) [instance] :121
void Placeholder::Target(::g::Fuse::Elements::Element* value)
{
    _Target = value;
}

// public generated Placeholder New() [static] :117
Placeholder* Placeholder::New3()
{
    Placeholder* obj2 = (Placeholder*)uNew(Placeholder_typeof());
    obj2->ctor_6();
    return obj2;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Path.uno
// --------------------------------------------------------------------------------------------------

// private struct Path.Positioning :211
// {
static void Path__Positioning_build(uType* type)
{
    type->SetFields(0,
        ::g::Uno::Float2_typeof(), offsetof(Path__Positioning, Scale), 0,
        ::g::Uno::Float2_typeof(), offsetof(Path__Positioning, Offset), 0,
        ::g::Uno::Rect_typeof(), offsetof(Path__Positioning, NaturalExtents), 0,
        ::g::Uno::Rect_typeof(), offsetof(Path__Positioning, Extents), 0);
}

uStructType* Path__Positioning_typeof()
{
    static uSStrong<uStructType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 4;
    options.Alignment = alignof(Path__Positioning);
    options.ValueSize = sizeof(Path__Positioning);
    options.TypeSize = sizeof(uStructType);
    type = uStructType::New("Fuse.Controls.Path.Positioning", options);
    type->fp_build_ = Path__Positioning_build;
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.uno
// ------------------------------------------------------------------------------------------------

// private struct Navigator.PrepareResult :177
// {
static void Navigator__PrepareResult_build(uType* type)
{
    type->SetFields(0,
        ::g::Fuse::Navigation::RoutingResult_typeof(), offsetof(Navigator__PrepareResult, Routing), 0,
        ::g::Uno::Bool_typeof(), offsetof(Navigator__PrepareResult, UsedPrepared), 0,
        ::g::Fuse::Controls::Navigator__NavPage_typeof(), offsetof(Navigator__PrepareResult, Page), 0);
}

uStructType* Navigator__PrepareResult_typeof()
{
    static uSStrong<uStructType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 3;
    options.Alignment = alignof(Navigator__PrepareResult);
    options.ValueSize = sizeof(Navigator__PrepareResult);
    options.TypeSize = sizeof(uStructType);
    type = uStructType::New("Fuse.Controls.Navigator.PrepareResult", options);
    type->fp_build_ = Navigator__PrepareResult_build;
    return type;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\RangeControls\RangeControl.uno
// -----------------------------------------------------------------------------------------------------------------

// public class RangeControl :42
// {
// static generated RangeControl() :42
static void RangeControl__cctor_4_fn(uType* __type)
{
    RangeControl::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    RangeControl::_relativeValueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[73/*"RelativeValue"*/]);
    RangeControl::_progressName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[74/*"Progress"*/]);
}

static void RangeControl_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[73] = uString::Const("RelativeValue");
    ::STRINGS[74] = uString::Const("Progress");
    ::TYPES[62] = ::g::Fuse::Controls::Native::IRangeView_typeof();
    ::TYPES[26] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(RangeControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(RangeControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(RangeControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(RangeControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(RangeControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(RangeControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(RangeControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(RangeControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(RangeControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(RangeControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(RangeControl_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(RangeControl_type, interface17),
        ::g::Fuse::Triggers::IProgress_typeof(), offsetof(RangeControl_type, interface18),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Double_typeof(), NULL), offsetof(RangeControl_type, interface19),
        ::g::Fuse::Controls::Native::IRangeViewHost_typeof(), offsetof(RangeControl_type, interface20));
    type->SetFields(117,
        ::g::Uno::Double_typeof(), offsetof(RangeControl, _minimum), 0,
        ::g::Uno::Double_typeof(), offsetof(RangeControl, _maximum), 0,
        ::g::Uno::Double_typeof(), offsetof(RangeControl, _value), 0,
        ::g::Uno::Double_typeof(), offsetof(RangeControl, _userStep), 0,
        ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/], offsetof(RangeControl, ValueChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&RangeControl::_valueName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&RangeControl::_relativeValueName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&RangeControl::_progressName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(22,
        new uFunction("get_Maximum", NULL, (void*)RangeControl__get_Maximum_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Maximum", NULL, (void*)RangeControl__set_Maximum_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_Minimum", NULL, (void*)RangeControl__get_Minimum_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Minimum", NULL, (void*)RangeControl__set_Minimum_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction(".ctor", NULL, (void*)RangeControl__New4_fn, 0, true, type, 0),
        new uFunction("get_Progress", NULL, (void*)RangeControl__get_Progress_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Progress", NULL, (void*)RangeControl__set_Progress_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("add_ProgressChanged", NULL, (void*)RangeControl__add_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("remove_ProgressChanged", NULL, (void*)RangeControl__remove_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("get_Range", NULL, (void*)RangeControl__get_Range_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_Range", NULL, (void*)RangeControl__set_Range_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_RelativeUserStep", NULL, (void*)RangeControl__get_RelativeUserStep_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_RelativeUserStep", NULL, (void*)RangeControl__set_RelativeUserStep_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_RelativeValue", NULL, (void*)RangeControl__get_RelativeValue_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_RelativeValue", NULL, (void*)RangeControl__set_RelativeValue_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("SetValue", NULL, (void*)RangeControl__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Double_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_UserStep", NULL, (void*)RangeControl__get_UserStep_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_UserStep", NULL, (void*)RangeControl__set_UserStep_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_Value", NULL, (void*)RangeControl__get_Value_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)RangeControl__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)RangeControl__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)RangeControl__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]));
}

RangeControl_type* RangeControl_typeof()
{
    static uSStrong<RangeControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 125;
    options.InterfaceCount = 21;
    options.ObjectSize = sizeof(RangeControl);
    options.TypeSize = sizeof(RangeControl_type);
    type = (RangeControl_type*)uClassType::New("Fuse.Controls.RangeControl", options);
    type->fp_build_ = RangeControl_build;
    type->fp_ctor_ = (void*)RangeControl__New4_fn;
    type->fp_cctor_ = RangeControl__cctor_4_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))RangeControl__PushPropertiesToNativeView_fn;
    type->interface20.fp_OnProgressChanged = (void(*)(uObject*, double*))RangeControl__FuseControlsNativeIRangeViewHostOnProgressChanged_fn;
    type->interface20.fp_get_RelativeUserStep = (void(*)(uObject*, double*))RangeControl__FuseControlsNativeIRangeViewHostget_RelativeUserStep_fn;
    type->interface18.fp_get_Progress = (void(*)(uObject*, double*))RangeControl__get_Progress_fn;
    type->interface18.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))RangeControl__add_ProgressChanged_fn;
    type->interface18.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))RangeControl__remove_ProgressChanged_fn;
    type->interface19.fp_get_Value = (void(*)(uObject*, uTRef))RangeControl__get_Value_fn;
    type->interface19.fp_set_Value = (void(*)(uObject*, void*))RangeControl__set_Value_fn;
    type->interface19.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))RangeControl__add_ValueChanged_fn;
    type->interface19.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))RangeControl__remove_ValueChanged_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated RangeControl() :42
void RangeControl__ctor_7_fn(RangeControl* __this)
{
    __this->ctor_7();
}

// private void Fuse.Controls.Native.IRangeViewHost.OnProgressChanged(double newProgress) :238
void RangeControl__FuseControlsNativeIRangeViewHostOnProgressChanged_fn(RangeControl* __this, double* newProgress)
{
    uStackFrame __("Fuse.Controls.RangeControl", "Fuse.Controls.Native.IRangeViewHost.OnProgressChanged(double)");
    double newProgress_ = *newProgress;
    __this->SetValue(__this->ValueFromRelative(newProgress_), NULL);
}

// private double Fuse.Controls.Native.IRangeViewHost.get_RelativeUserStep() :245
void RangeControl__FuseControlsNativeIRangeViewHostget_RelativeUserStep_fn(RangeControl* __this, double* __retval)
{
    return *__retval = __this->RelativeUserStep(), void();
}

// public double get_Maximum() :74
void RangeControl__get_Maximum_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->Maximum();
}

// public void set_Maximum(double value) :75
void RangeControl__set_Maximum_fn(RangeControl* __this, double* value)
{
    __this->Maximum(*value);
}

// public double get_Minimum() :53
void RangeControl__get_Minimum_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->Minimum();
}

// public void set_Minimum(double value) :54
void RangeControl__set_Minimum_fn(RangeControl* __this, double* value)
{
    __this->Minimum(*value);
}

// public generated RangeControl New() :42
void RangeControl__New4_fn(RangeControl** __retval)
{
    *__retval = RangeControl::New4();
}

// protected void OnProgressChanged() :199
void RangeControl__OnProgressChanged_fn(RangeControl* __this)
{
    __this->OnProgressChanged();
}

// private void OnRangeChanged() :183
void RangeControl__OnRangeChanged_fn(RangeControl* __this)
{
    __this->OnRangeChanged();
}

// private void OnValueChanged(double value, Uno.UX.IPropertyListener origin) :188
void RangeControl__OnValueChanged_fn(RangeControl* __this, double* value, uObject* origin)
{
    __this->OnValueChanged(*value, origin);
}

// public double get_Progress() :210
void RangeControl__get_Progress_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->Progress();
}

// public void set_Progress(double value) :211
void RangeControl__set_Progress_fn(RangeControl* __this, double* value)
{
    __this->Progress(*value);
}

// public void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :179
void RangeControl__add_ProgressChanged_fn(RangeControl* __this, uDelegate* value)
{
    __this->add_ProgressChanged(value);
}

// public void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :180
void RangeControl__remove_ProgressChanged_fn(RangeControl* __this, uDelegate* value)
{
    __this->remove_ProgressChanged(value);
}

// protected override sealed void PushPropertiesToNativeView() :122
void RangeControl__PushPropertiesToNativeView_fn(RangeControl* __this)
{
    uStackFrame __("Fuse.Controls.RangeControl", "PushPropertiesToNativeView()");
    uObject* r = __this->RangeView();

    if (r != NULL)
        ::g::Fuse::Controls::Native::IRangeView::Progress(uInterface(uPtr(r), ::TYPES[62/*Fuse.Controls.Native.IRangeView*/]), __this->ValueToRelative(__this->Value()));
}

// public float2 get_Range() :96
void RangeControl__get_Range_fn(RangeControl* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Range();
}

// public void set_Range(float2 value) :97
void RangeControl__set_Range_fn(RangeControl* __this, ::g::Uno::Float2* value)
{
    __this->Range(*value);
}

// private Fuse.Controls.Native.IRangeView get_RangeView() :119
void RangeControl__get_RangeView_fn(RangeControl* __this, uObject** __retval)
{
    *__retval = __this->RangeView();
}

// public double get_RelativeUserStep() :171
void RangeControl__get_RelativeUserStep_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->RelativeUserStep();
}

// public void set_RelativeUserStep(double value) :172
void RangeControl__set_RelativeUserStep_fn(RangeControl* __this, double* value)
{
    __this->RelativeUserStep(*value);
}

// public double get_RelativeValue() :152
void RangeControl__get_RelativeValue_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->RelativeValue();
}

// public void set_RelativeValue(double value) :153
void RangeControl__set_RelativeValue_fn(RangeControl* __this, double* value)
{
    __this->RelativeValue(*value);
}

// public void SetValue(double value, Uno.UX.IPropertyListener origin) :131
void RangeControl__SetValue_fn(RangeControl* __this, double* value, uObject* origin)
{
    __this->SetValue(*value, origin);
}

// internal double StepValueFromRelative(double relative) :233
void RangeControl__StepValueFromRelative_fn(RangeControl* __this, double* relative, double* __retval)
{
    *__retval = __this->StepValueFromRelative(*relative);
}

// internal double StepValueToRelative(double value) :229
void RangeControl__StepValueToRelative_fn(RangeControl* __this, double* value, double* __retval)
{
    *__retval = __this->StepValueToRelative(*value);
}

// public double get_UserStep() :165
void RangeControl__get_UserStep_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->UserStep();
}

// public void set_UserStep(double value) :166
void RangeControl__set_UserStep_fn(RangeControl* __this, double* value)
{
    __this->UserStep(*value);
}

// public double get_Value() :111
void RangeControl__get_Value_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(double value) :112
void RangeControl__set_Value_fn(RangeControl* __this, double* value)
{
    __this->Value(*value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<double> value) :175
void RangeControl__add_ValueChanged_fn(RangeControl* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<double> value) :175
void RangeControl__remove_ValueChanged_fn(RangeControl* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

// internal double ValueFromRelative(double relative) :214
void RangeControl__ValueFromRelative_fn(RangeControl* __this, double* relative, double* __retval)
{
    *__retval = __this->ValueFromRelative(*relative);
}

// internal double ValueToRelative(double value) :219
void RangeControl__ValueToRelative_fn(RangeControl* __this, double* value, double* __retval)
{
    *__retval = __this->ValueToRelative(*value);
}

::g::Uno::UX::Selector RangeControl::_valueName_;
::g::Uno::UX::Selector RangeControl::_relativeValueName_;
::g::Uno::UX::Selector RangeControl::_progressName_;

// public generated RangeControl() [instance] :42
void RangeControl::ctor_7()
{
    _minimum = 0.0;
    _maximum = 100.0;
    ctor_6();
}

// public double get_Maximum() [instance] :74
double RangeControl::Maximum()
{
    return _maximum;
}

// public void set_Maximum(double value) [instance] :75
void RangeControl::Maximum(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Maximum(double)");

    if (_maximum != value)
    {
        _maximum = value;
        OnRangeChanged();
    }
}

// public double get_Minimum() [instance] :53
double RangeControl::Minimum()
{
    return _minimum;
}

// public void set_Minimum(double value) [instance] :54
void RangeControl::Minimum(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Minimum(double)");

    if (_minimum != value)
    {
        _minimum = value;
        OnRangeChanged();
    }
}

// protected void OnProgressChanged() [instance] :199
void RangeControl::OnProgressChanged()
{
    uStackFrame __("Fuse.Controls.RangeControl", "OnProgressChanged()");
    OnPropertyChanged(RangeControl::_progressName_);
    OnPropertyChanged(RangeControl::_relativeValueName_);
}

// private void OnRangeChanged() [instance] :183
void RangeControl::OnRangeChanged()
{
    uStackFrame __("Fuse.Controls.RangeControl", "OnRangeChanged()");
    OnProgressChanged();
}

// private void OnValueChanged(double value, Uno.UX.IPropertyListener origin) [instance] :188
void RangeControl::OnValueChanged(double value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl", "OnValueChanged(double,Uno.UX.IPropertyListener)");
    OnPropertyChanged1(RangeControl::_valueName_, origin);

    if (::g::Uno::Delegate::op_Inequality(ValueChanged1, NULL))
        uPtr(ValueChanged1)->Invoke(2, this, (::g::Fuse::Scripting::DoubleChangedArgs*)::g::Fuse::Scripting::DoubleChangedArgs::New3(value));

    OnProgressChanged();
}

// public double get_Progress() [instance] :210
double RangeControl::Progress()
{
    return ValueToRelative(Value());
}

// public void set_Progress(double value) [instance] :211
void RangeControl::Progress(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Progress(double)");
    Value(ValueFromRelative(value));
}

// public void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :179
void RangeControl::add_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "add_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    add_ValueChanged(value);
}

// public void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :180
void RangeControl::remove_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "remove_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    remove_ValueChanged(value);
}

// public float2 get_Range() [instance] :96
::g::Uno::Float2 RangeControl::Range()
{
    return ::g::Uno::Float2__New2((float)Minimum(), (float)Maximum());
}

// public void set_Range(float2 value) [instance] :97
void RangeControl::Range(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Range(float2)");
    Minimum((double)value.Item(0));
    Maximum((double)value.Item(1));
}

// private Fuse.Controls.Native.IRangeView get_RangeView() [instance] :119
uObject* RangeControl::RangeView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[62/*Fuse.Controls.Native.IRangeView*/]);
}

// public double get_RelativeUserStep() [instance] :171
double RangeControl::RelativeUserStep()
{
    return StepValueToRelative(UserStep());
}

// public void set_RelativeUserStep(double value) [instance] :172
void RangeControl::RelativeUserStep(double value)
{
    UserStep(StepValueFromRelative(value));
}

// public double get_RelativeValue() [instance] :152
double RangeControl::RelativeValue()
{
    return ValueToRelative(Value());
}

// public void set_RelativeValue(double value) [instance] :153
void RangeControl::RelativeValue(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_RelativeValue(double)");
    Value(ValueFromRelative(value));
}

// public void SetValue(double value, Uno.UX.IPropertyListener origin) [instance] :131
void RangeControl::SetValue(double value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl", "SetValue(double,Uno.UX.IPropertyListener)");

    if (value != _value)
    {
        _value = value;
        OnValueChanged(value, origin);
    }

    uObject* rv = RangeView();

    if ((rv != NULL) && (origin != rv))
        ::g::Fuse::Controls::Native::IRangeView::Progress(uInterface(uPtr(rv), ::TYPES[62/*Fuse.Controls.Native.IRangeView*/]), ValueToRelative(value));
}

// internal double StepValueFromRelative(double relative) [instance] :233
double RangeControl::StepValueFromRelative(double relative)
{
    return ::g::Uno::Math::Abs(relative * (Maximum() - Minimum()));
}

// internal double StepValueToRelative(double value) [instance] :229
double RangeControl::StepValueToRelative(double value)
{
    return ::g::Uno::Math::Abs(value / (Maximum() - Minimum()));
}

// public double get_UserStep() [instance] :165
double RangeControl::UserStep()
{
    return _userStep;
}

// public void set_UserStep(double value) [instance] :166
void RangeControl::UserStep(double value)
{
    _userStep = value;
}

// public double get_Value() [instance] :111
double RangeControl::Value()
{
    return _value;
}

// public void set_Value(double value) [instance] :112
void RangeControl::Value(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Value(double)");
    SetValue(value, (uObject*)this);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :175
void RangeControl::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "add_ValueChanged(Uno.UX.ValueChangedHandler<double>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :175
void RangeControl::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "remove_ValueChanged(Uno.UX.ValueChangedHandler<double>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]);
}

// internal double ValueFromRelative(double relative) [instance] :214
double RangeControl::ValueFromRelative(double relative)
{
    return (relative * (Maximum() - Minimum())) + Minimum();
}

// internal double ValueToRelative(double value) [instance] :219
double RangeControl::ValueToRelative(double value)
{
    double range = Maximum() - Minimum();
    double q = (value - Minimum()) / (Maximum() - Minimum());

    if ((range == 0.0) || ::g::Uno::Double::IsInfinity(q))
        return 0.0;

    return q;
}

// public generated RangeControl New() [static] :42
RangeControl* RangeControl::New4()
{
    RangeControl* obj1 = (RangeControl*)uNew(RangeControl_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\RangeControls\RangeControl2D.uno
// -------------------------------------------------------------------------------------------------------------------

// public sealed class RangeControl2D :11
// {
// static generated RangeControl2D() :11
static void RangeControl2D__cctor_4_fn(uType* __type)
{
    RangeControl2D::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    RangeControl2D::_valueXName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[75/*"ValueX"*/]);
    RangeControl2D::_valueYName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[76/*"ValueY"*/]);
}

static void RangeControl2D_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[75] = uString::Const("ValueX");
    ::STRINGS[76] = uString::Const("ValueY");
    ::TYPES[63] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Float2_typeof(), NULL);
    ::TYPES[46] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[64] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Float2_typeof(), NULL);
    ::TYPES[49] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl2D_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(RangeControl2D_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(RangeControl2D_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(RangeControl2D_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl2D_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl2D_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl2D_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(RangeControl2D_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(RangeControl2D_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(RangeControl2D_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl2D_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl2D_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(RangeControl2D_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(RangeControl2D_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(RangeControl2D_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(RangeControl2D_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(RangeControl2D_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(RangeControl2D_type, interface17),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Float2_typeof(), NULL), offsetof(RangeControl2D_type, interface18));
    type->SetFields(117,
        ::g::Uno::Float2_typeof(), offsetof(RangeControl2D, _minimum), 0,
        ::g::Uno::Float2_typeof(), offsetof(RangeControl2D, _maximum), 0,
        ::g::Uno::Float2_typeof(), offsetof(RangeControl2D, _value), 0,
        ::g::Uno::Float2_typeof(), offsetof(RangeControl2D, _userStep), 0,
        ::TYPES[64/*Uno.UX.ValueChangedHandler<float2>*/], offsetof(RangeControl2D, ValueChanged1), 0,
        ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/], offsetof(RangeControl2D, ValueXChanged1), 0,
        ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/], offsetof(RangeControl2D, ValueYChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&RangeControl2D::_valueName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&RangeControl2D::_valueXName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&RangeControl2D::_valueYName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(26,
        new uFunction("get_Maximum", NULL, (void*)RangeControl2D__get_Maximum_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_Maximum", NULL, (void*)RangeControl2D__set_Maximum_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_Minimum", NULL, (void*)RangeControl2D__get_Minimum_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_Minimum", NULL, (void*)RangeControl2D__set_Minimum_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction(".ctor", NULL, (void*)RangeControl2D__New4_fn, 0, true, type, 0),
        new uFunction("get_RelativeUserStep", NULL, (void*)RangeControl2D__get_RelativeUserStep_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_RelativeUserStep", NULL, (void*)RangeControl2D__set_RelativeUserStep_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_RelativeValue", NULL, (void*)RangeControl2D__get_RelativeValue_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_RelativeValue", NULL, (void*)RangeControl2D__set_RelativeValue_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("SetValue", NULL, (void*)RangeControl2D__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float2_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetValueX", NULL, (void*)RangeControl2D__SetValueX_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetValueY", NULL, (void*)RangeControl2D__SetValueY_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_UserStep", NULL, (void*)RangeControl2D__get_UserStep_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_UserStep", NULL, (void*)RangeControl2D__set_UserStep_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_Value", NULL, (void*)RangeControl2D__get_Value_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)RangeControl2D__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)RangeControl2D__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[64/*Uno.UX.ValueChangedHandler<float2>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)RangeControl2D__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[64/*Uno.UX.ValueChangedHandler<float2>*/]),
        new uFunction("get_ValueX", NULL, (void*)RangeControl2D__get_ValueX_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ValueX", NULL, (void*)RangeControl2D__set_ValueX_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("add_ValueXChanged", NULL, (void*)RangeControl2D__add_ValueXChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]),
        new uFunction("remove_ValueXChanged", NULL, (void*)RangeControl2D__remove_ValueXChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]),
        new uFunction("get_ValueY", NULL, (void*)RangeControl2D__get_ValueY_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ValueY", NULL, (void*)RangeControl2D__set_ValueY_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("add_ValueYChanged", NULL, (void*)RangeControl2D__add_ValueYChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]),
        new uFunction("remove_ValueYChanged", NULL, (void*)RangeControl2D__remove_ValueYChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]));
}

RangeControl2D_type* RangeControl2D_typeof()
{
    static uSStrong<RangeControl2D_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 127;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(RangeControl2D);
    options.TypeSize = sizeof(RangeControl2D_type);
    type = (RangeControl2D_type*)uClassType::New("Fuse.Controls.RangeControl2D", options);
    type->fp_build_ = RangeControl2D_build;
    type->fp_ctor_ = (void*)RangeControl2D__New4_fn;
    type->fp_cctor_ = RangeControl2D__cctor_4_fn;
    type->interface18.fp_get_Value = (void(*)(uObject*, uTRef))RangeControl2D__get_Value_fn;
    type->interface18.fp_set_Value = (void(*)(uObject*, void*))RangeControl2D__set_Value_fn;
    type->interface18.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))RangeControl2D__add_ValueChanged_fn;
    type->interface18.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))RangeControl2D__remove_ValueChanged_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated RangeControl2D() :11
void RangeControl2D__ctor_7_fn(RangeControl2D* __this)
{
    __this->ctor_7();
}

// public float2 get_Maximum() :30
void RangeControl2D__get_Maximum_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Maximum();
}

// public void set_Maximum(float2 value) :31
void RangeControl2D__set_Maximum_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->Maximum(*value);
}

// public float2 get_Minimum() :16
void RangeControl2D__get_Minimum_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Minimum();
}

// public void set_Minimum(float2 value) :17
void RangeControl2D__set_Minimum_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->Minimum(*value);
}

// public generated RangeControl2D New() :11
void RangeControl2D__New4_fn(RangeControl2D** __retval)
{
    *__retval = RangeControl2D::New4();
}

// private void OnRangeChanged() :89
void RangeControl2D__OnRangeChanged_fn(RangeControl2D* __this)
{
    __this->OnRangeChanged();
}

// private void OnValueChanged(float2 value, Uno.UX.IPropertyListener origin) :93
void RangeControl2D__OnValueChanged_fn(RangeControl2D* __this, ::g::Uno::Float2* value, uObject* origin)
{
    __this->OnValueChanged(*value, origin);
}

// public float2 get_RelativeUserStep() :81
void RangeControl2D__get_RelativeUserStep_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeUserStep();
}

// public void set_RelativeUserStep(float2 value) :82
void RangeControl2D__set_RelativeUserStep_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->RelativeUserStep(*value);
}

// public float2 get_RelativeValue() :64
void RangeControl2D__get_RelativeValue_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeValue();
}

// public void set_RelativeValue(float2 value) :65
void RangeControl2D__set_RelativeValue_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->RelativeValue(*value);
}

// public void SetValue(float2 value, Uno.UX.IPropertyListener origin) :53
void RangeControl2D__SetValue_fn(RangeControl2D* __this, ::g::Uno::Float2* value, uObject* origin)
{
    __this->SetValue(*value, origin);
}

// public void SetValueX(float value, Uno.UX.IPropertyListener origin) :130
void RangeControl2D__SetValueX_fn(RangeControl2D* __this, float* value, uObject* origin)
{
    __this->SetValueX(*value, origin);
}

// public void SetValueY(float value, Uno.UX.IPropertyListener origin) :142
void RangeControl2D__SetValueY_fn(RangeControl2D* __this, float* value, uObject* origin)
{
    __this->SetValueY(*value, origin);
}

// public float2 get_UserStep() :75
void RangeControl2D__get_UserStep_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->UserStep();
}

// public void set_UserStep(float2 value) :76
void RangeControl2D__set_UserStep_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->UserStep(*value);
}

// public float2 get_Value() :45
void RangeControl2D__get_Value_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(float2 value) :46
void RangeControl2D__set_Value_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->Value(*value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<float2> value) :85
void RangeControl2D__add_ValueChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<float2> value) :85
void RangeControl2D__remove_ValueChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

// internal float2 ValueFromRelative(float2 relative) :107
void RangeControl2D__ValueFromRelative_fn(RangeControl2D* __this, ::g::Uno::Float2* relative, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ValueFromRelative(*relative);
}

// internal float2 ValueToRelative(float2 value) :112
void RangeControl2D__ValueToRelative_fn(RangeControl2D* __this, ::g::Uno::Float2* value, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ValueToRelative(*value);
}

// public float get_ValueX() :126
void RangeControl2D__get_ValueX_fn(RangeControl2D* __this, float* __retval)
{
    *__retval = __this->ValueX();
}

// public void set_ValueX(float value) :127
void RangeControl2D__set_ValueX_fn(RangeControl2D* __this, float* value)
{
    __this->ValueX(*value);
}

// public generated void add_ValueXChanged(Uno.UX.ValueChangedHandler<float> value) :86
void RangeControl2D__add_ValueXChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->add_ValueXChanged(value);
}

// public generated void remove_ValueXChanged(Uno.UX.ValueChangedHandler<float> value) :86
void RangeControl2D__remove_ValueXChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->remove_ValueXChanged(value);
}

// public float get_ValueY() :138
void RangeControl2D__get_ValueY_fn(RangeControl2D* __this, float* __retval)
{
    *__retval = __this->ValueY();
}

// public void set_ValueY(float value) :139
void RangeControl2D__set_ValueY_fn(RangeControl2D* __this, float* value)
{
    __this->ValueY(*value);
}

// public generated void add_ValueYChanged(Uno.UX.ValueChangedHandler<float> value) :87
void RangeControl2D__add_ValueYChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->add_ValueYChanged(value);
}

// public generated void remove_ValueYChanged(Uno.UX.ValueChangedHandler<float> value) :87
void RangeControl2D__remove_ValueYChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->remove_ValueYChanged(value);
}

::g::Uno::UX::Selector RangeControl2D::_valueName_;
::g::Uno::UX::Selector RangeControl2D::_valueXName_;
::g::Uno::UX::Selector RangeControl2D::_valueYName_;

// public generated RangeControl2D() [instance] :11
void RangeControl2D::ctor_7()
{
    _minimum = ::g::Uno::Float2__New1(0.0f);
    _maximum = ::g::Uno::Float2__New1(100.0f);
    ctor_6();
}

// public float2 get_Maximum() [instance] :30
::g::Uno::Float2 RangeControl2D::Maximum()
{
    return _maximum;
}

// public void set_Maximum(float2 value) [instance] :31
void RangeControl2D::Maximum(::g::Uno::Float2 value)
{
    if (::g::Uno::Float2__op_Inequality(_maximum, value))
    {
        _maximum = value;
        OnRangeChanged();
    }
}

// public float2 get_Minimum() [instance] :16
::g::Uno::Float2 RangeControl2D::Minimum()
{
    return _minimum;
}

// public void set_Minimum(float2 value) [instance] :17
void RangeControl2D::Minimum(::g::Uno::Float2 value)
{
    if (::g::Uno::Float2__op_Inequality(_minimum, value))
    {
        _minimum = value;
        OnRangeChanged();
    }
}

// private void OnRangeChanged() [instance] :89
void RangeControl2D::OnRangeChanged()
{
}

// private void OnValueChanged(float2 value, Uno.UX.IPropertyListener origin) [instance] :93
void RangeControl2D::OnValueChanged(::g::Uno::Float2 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "OnValueChanged(float2,Uno.UX.IPropertyListener)");
    ::g::Uno::UX::ValueChangedArgs* ret2;
    ::g::Uno::UX::ValueChangedArgs* ret3;
    ::g::Uno::UX::ValueChangedArgs* ret4;
    OnPropertyChanged1(RangeControl2D::_valueName_, origin);
    OnPropertyChanged1(RangeControl2D::_valueXName_, origin);
    OnPropertyChanged1(RangeControl2D::_valueYName_, origin);

    if (::g::Uno::Delegate::op_Inequality(ValueChanged1, NULL))
        uPtr(ValueChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[63/*Uno.UX.ValueChangedArgs<float2>*/], uCRef(value), &ret2), ret2));

    if (::g::Uno::Delegate::op_Inequality(ValueXChanged1, NULL))
        uPtr(ValueXChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[46/*Uno.UX.ValueChangedArgs<float>*/], uCRef(value.X), &ret3), ret3));

    if (::g::Uno::Delegate::op_Inequality(ValueYChanged1, NULL))
        uPtr(ValueYChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[46/*Uno.UX.ValueChangedArgs<float>*/], uCRef(value.Y), &ret4), ret4));
}

// public float2 get_RelativeUserStep() [instance] :81
::g::Uno::Float2 RangeControl2D::RelativeUserStep()
{
    return ValueToRelative(UserStep());
}

// public void set_RelativeUserStep(float2 value) [instance] :82
void RangeControl2D::RelativeUserStep(::g::Uno::Float2 value)
{
    UserStep(ValueFromRelative(value));
}

// public float2 get_RelativeValue() [instance] :64
::g::Uno::Float2 RangeControl2D::RelativeValue()
{
    return ValueToRelative(Value());
}

// public void set_RelativeValue(float2 value) [instance] :65
void RangeControl2D::RelativeValue(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "set_RelativeValue(float2)");
    Value(ValueFromRelative(value));
}

// public void SetValue(float2 value, Uno.UX.IPropertyListener origin) [instance] :53
void RangeControl2D::SetValue(::g::Uno::Float2 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "SetValue(float2,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float2__op_Inequality(value, _value))
    {
        _value = value;
        OnValueChanged(value, origin);
    }
}

// public void SetValueX(float value, Uno.UX.IPropertyListener origin) [instance] :130
void RangeControl2D::SetValueX(float value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "SetValueX(float,Uno.UX.IPropertyListener)");
    SetValue(::g::Uno::Float2__New2(value, Value().Y), origin);
}

// public void SetValueY(float value, Uno.UX.IPropertyListener origin) [instance] :142
void RangeControl2D::SetValueY(float value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "SetValueY(float,Uno.UX.IPropertyListener)");
    SetValue(::g::Uno::Float2__New2(Value().X, value), origin);
}

// public float2 get_UserStep() [instance] :75
::g::Uno::Float2 RangeControl2D::UserStep()
{
    return _userStep;
}

// public void set_UserStep(float2 value) [instance] :76
void RangeControl2D::UserStep(::g::Uno::Float2 value)
{
    _userStep = value;
}

// public float2 get_Value() [instance] :45
::g::Uno::Float2 RangeControl2D::Value()
{
    return _value;
}

// public void set_Value(float2 value) [instance] :46
void RangeControl2D::Value(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "set_Value(float2)");
    SetValue(value, (uObject*)this);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<float2> value) [instance] :85
void RangeControl2D::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "add_ValueChanged(Uno.UX.ValueChangedHandler<float2>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[64/*Uno.UX.ValueChangedHandler<float2>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<float2> value) [instance] :85
void RangeControl2D::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "remove_ValueChanged(Uno.UX.ValueChangedHandler<float2>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[64/*Uno.UX.ValueChangedHandler<float2>*/]);
}

// internal float2 ValueFromRelative(float2 relative) [instance] :107
::g::Uno::Float2 RangeControl2D::ValueFromRelative(::g::Uno::Float2 relative)
{
    return ::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Multiply2(relative, ::g::Uno::Float2__op_Subtraction2(Maximum(), Minimum())), Minimum());
}

// internal float2 ValueToRelative(float2 value) [instance] :112
::g::Uno::Float2 RangeControl2D::ValueToRelative(::g::Uno::Float2 value)
{
    ::g::Uno::Float2 range = ::g::Uno::Float2__op_Subtraction2(Maximum(), Minimum());
    float zeroTolerance = 1e-05f;
    float x = (::g::Uno::Math::Abs1(range.X) > 1e-05f) ? value.X / range.X : (float)((value.X >= Maximum().X) ? 1 : 0);
    float y = (::g::Uno::Math::Abs1(range.Y) > 1e-05f) ? value.Y / range.Y : (float)((value.Y >= Maximum().Y) ? 1 : 0);
    return ::g::Uno::Float2__New2(x, y);
}

// public float get_ValueX() [instance] :126
float RangeControl2D::ValueX()
{
    return Value().X;
}

// public void set_ValueX(float value) [instance] :127
void RangeControl2D::ValueX(float value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "set_ValueX(float)");
    Value(::g::Uno::Float2__New2(value, Value().Y));
}

// public generated void add_ValueXChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :86
void RangeControl2D::add_ValueXChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "add_ValueXChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueXChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueXChanged1, value), ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public generated void remove_ValueXChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :86
void RangeControl2D::remove_ValueXChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "remove_ValueXChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueXChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueXChanged1, value), ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public float get_ValueY() [instance] :138
float RangeControl2D::ValueY()
{
    return Value().Y;
}

// public void set_ValueY(float value) [instance] :139
void RangeControl2D::ValueY(float value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "set_ValueY(float)");
    Value(::g::Uno::Float2__New2(Value().X, value));
}

// public generated void add_ValueYChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :87
void RangeControl2D::add_ValueYChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "add_ValueYChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueYChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueYChanged1, value), ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public generated void remove_ValueYChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :87
void RangeControl2D::remove_ValueYChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "remove_ValueYChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueYChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueYChanged1, value), ::TYPES[49/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public generated RangeControl2D New() [static] :11
RangeControl2D* RangeControl2D::New4()
{
    RangeControl2D* obj1 = (RangeControl2D*)uNew(RangeControl2D_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Rectangle.Surface.uno
// ---------------------------------------------------------------------------------------------------------------

// public partial sealed class Rectangle :8
// {
// static generated Rectangle() :8
static void Rectangle__cctor_4_fn(uType* __type)
{
    Rectangle::CornerRadiusPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[77/*"CornerRadius"*/]);
}

static void Rectangle_build(uType* type)
{
    ::STRINGS[77] = uString::Const("CornerRadius");
    ::TYPES[65] = ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Drawing::LineSegment_typeof(), NULL);
    ::TYPES[66] = ::g::Fuse::Controls::Native::IRectangleView_typeof();
    type->SetDependencies(
        ::g::Fuse::Drawing::Primitives::Rectangle_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface18));
    type->SetFields(118,
        ::g::Uno::Float4_typeof(), offsetof(Rectangle, _cornerRadius), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Rectangle::CornerRadiusPropertyName_, uFieldFlagsStatic);
    type->Reflection.SetFields(1,
        new uField("CornerRadiusPropertyName", 119));
    type->Reflection.SetFunctions(4,
        new uFunction("get_CornerRadius", NULL, (void*)Rectangle__get_CornerRadius_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_CornerRadius", NULL, (void*)Rectangle__set_CornerRadius_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction(".ctor", NULL, (void*)Rectangle__New3_fn, 0, true, type, 0),
        new uFunction("SetCornerRadius", NULL, (void*)Rectangle__SetCornerRadius_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float4_typeof(), ::g::Uno::UX::IPropertyListener_typeof()));
}

::g::Fuse::Controls::Shape_type* Rectangle_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Shape_typeof();
    options.FieldCount = 120;
    options.InterfaceCount = 19;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(Rectangle);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.Rectangle", options);
    type->fp_build_ = Rectangle_build;
    type->fp_ctor_ = (void*)Rectangle__New3_fn;
    type->fp_cctor_ = Rectangle__cctor_4_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))Rectangle__CreateNativeView_fn;
    type->fp_CreateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::Drawing::Surface*, ::g::Fuse::Drawing::SurfacePath**))Rectangle__CreateSurfacePath_fn;
    type->fp_DrawFill = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Brush*))Rectangle__DrawFill_fn;
    type->fp_DrawStroke = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Stroke*))Rectangle__DrawStroke_fn;
    type->fp_get_NeedSurface = (void(*)(::g::Fuse::Controls::Shape*, bool*))Rectangle__get_NeedSurface_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Rectangle__OnHitTestLocalVisual_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))Rectangle__PushPropertiesToNativeView_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Rectangle() :8
void Rectangle__ctor_7_fn(Rectangle* __this)
{
    __this->ctor_7();
}

// private float4 get_ConstrainedCornerRadius() :69
void Rectangle__get_ConstrainedCornerRadius_fn(Rectangle* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->ConstrainedCornerRadius();
}

// public float4 get_CornerRadius() :51
void Rectangle__get_CornerRadius_fn(Rectangle* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->CornerRadius();
}

// public void set_CornerRadius(float4 value) :52
void Rectangle__set_CornerRadius_fn(Rectangle* __this, ::g::Uno::Float4* value)
{
    __this->CornerRadius(*value);
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :93
void Rectangle__CreateNativeView_fn(Rectangle* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Rectangle", "CreateNativeView()");
    return *__retval = (uObject*)::g::Fuse::Controls::Native::Android::Rectangle::New5(), void();
}

// protected override sealed Fuse.Drawing.SurfacePath CreateSurfacePath(Fuse.Drawing.Surface surface) :15
void Rectangle__CreateSurfacePath_fn(Rectangle* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    uStackFrame __("Fuse.Controls.Rectangle", "CreateSurfacePath(Fuse.Drawing.Surface)");
    ::g::Uno::Collections::List* collection1;
    ::g::Fuse::Drawing::LineSegment collection2;
    ::g::Fuse::Drawing::LineSegment collection3;
    ::g::Fuse::Drawing::LineSegment collection4;
    ::g::Fuse::Drawing::LineSegment collection5;
    ::g::Fuse::Drawing::LineSegment collection6;
    ::g::Fuse::Drawing::LineSegment collection7;
    ::g::Fuse::Drawing::LineSegment collection8;
    ::g::Fuse::Drawing::LineSegment collection9;
    ::g::Fuse::Drawing::LineSegment collection10;
    ::g::Fuse::Drawing::LineSegment collection11;
    ::g::Uno::Float2 rs = __this->ActualSize();
    ::g::Uno::Float4 useCornerRadius = __this->ConstrainedCornerRadius();
    collection1 = (::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[65/*Uno.Collections.List<Fuse.Drawing.LineSegment>*/]);
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection2 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection2.Type = 0, collection2.To = ::g::Uno::Float2__New2(useCornerRadius.Item(0), 0.0f), collection2)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection3 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection3.Type = 1, collection3.To = ::g::Uno::Float2__New2(rs.X - useCornerRadius.Item(1), 0.0f), collection3)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection4 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection4.Type = 3, collection4.To = ::g::Uno::Float2__New2(rs.X, useCornerRadius.Item(1)), collection4.A = ::g::Uno::Float2__New1(useCornerRadius.Item(1)), collection4.B = ::g::Uno::Float2__New1(0.0f), collection4.Flags = 2, collection4)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection5 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection5.Type = 1, collection5.To = ::g::Uno::Float2__New2(rs.X, rs.Y - useCornerRadius.Item(2)), collection5)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection6 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection6.Type = 3, collection6.To = ::g::Uno::Float2__New2(rs.X - useCornerRadius.Item(2), rs.Y), collection6.A = ::g::Uno::Float2__New1(useCornerRadius.Item(2)), collection6.B = ::g::Uno::Float2__New1(0.0f), collection6.Flags = 2, collection6)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection7 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection7.Type = 1, collection7.To = ::g::Uno::Float2__New2(useCornerRadius.Item(3), rs.Y), collection7)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection8 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection8.Type = 3, collection8.To = ::g::Uno::Float2__New2(0.0f, rs.Y - useCornerRadius.Item(3)), collection8.A = ::g::Uno::Float2__New1(useCornerRadius.Item(3)), collection8.B = ::g::Uno::Float2__New1(0.0f), collection8.Flags = 2, collection8)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection9 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection9.Type = 1, collection9.To = ::g::Uno::Float2__New2(0.0f, useCornerRadius.Item(0)), collection9)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection10 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection10.Type = 3, collection10.To = ::g::Uno::Float2__New2(useCornerRadius.Item(0), 0.0f), collection10.A = ::g::Uno::Float2__New1(useCornerRadius.Item(0)), collection10.B = ::g::Uno::Float2__New1(0.0f), collection10.Flags = 2, collection10)));
    ::g::Uno::Collections::List__Add_fn(uPtr(collection1), uCRef((collection11 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection11.Type = 4, collection11)));
    ::g::Uno::Collections::List* rect = collection1;
    return *__retval = uPtr(surface)->CreatePath((uObject*)rect, 0), void();
}

// protected override sealed void DrawFill(Fuse.DrawContext dc, Fuse.Drawing.Brush fill) :10
void Rectangle__DrawFill_fn(Rectangle* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Brush* fill)
{
    uStackFrame __("Fuse.Controls.Rectangle", "DrawFill(Fuse.DrawContext,Fuse.Drawing.Brush)");
    uPtr(::g::Fuse::Drawing::Primitives::Rectangle::Singleton())->Fill(dc, __this, __this->ActualSize(), __this->CornerRadius(), fill, ::g::Uno::Float2__New1(0.0f), __this->Smoothness());
}

// protected override sealed void DrawStroke(Fuse.DrawContext dc, Fuse.Drawing.Stroke stroke) :16
void Rectangle__DrawStroke_fn(Rectangle* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Stroke* stroke)
{
    uStackFrame __("Fuse.Controls.Rectangle", "DrawStroke(Fuse.DrawContext,Fuse.Drawing.Stroke)");
    uPtr(::g::Fuse::Drawing::Primitives::Rectangle::Singleton())->Stroke(dc, __this, __this->ActualSize(), __this->CornerRadius(), stroke, ::g::Uno::Float2__New1(0.0f), __this->Smoothness());
}

// private float4 GetConstrainedCornerRadius(float2 sz) :58
void Rectangle__GetConstrainedCornerRadius_fn(Rectangle* __this, ::g::Uno::Float2* sz, ::g::Uno::Float4* __retval)
{
    *__retval = __this->GetConstrainedCornerRadius(*sz);
}

// private Fuse.Controls.Native.IRectangleView get_NativeRect() :90
void Rectangle__get_NativeRect_fn(Rectangle* __this, uObject** __retval)
{
    *__retval = __this->NativeRect();
}

// protected override sealed bool get_NeedSurface() :12
void Rectangle__get_NeedSurface_fn(Rectangle* __this, bool* __retval)
{
    uStackFrame __("Fuse.Controls.Rectangle", "get_NeedSurface()");
    return *__retval = __this->VisualContext() != 1, void();
}

// public generated Rectangle New() :8
void Rectangle__New3_fn(Rectangle** __retval)
{
    *__retval = Rectangle::New3();
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :22
void Rectangle__OnHitTestLocalVisual_fn(Rectangle* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Rectangle", "OnHitTestLocalVisual(Fuse.HitTestContext)");
    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);
    ::g::Uno::Float2 lp = uPtr(htc)->LocalPoint();

    if (!__this->HasFills() || !__this->IsPointInside(lp))
        return;

    ::g::Uno::Float4 cr = __this->ConstrainedCornerRadius();

    if ((lp.X < cr.Item(0)) && (lp.Y < cr.Item(0)))
    {
        if (::g::Uno::Vector::Distance(lp, ::g::Uno::Float2__New1(cr.Item(0))) > cr.Item(0))
            return;
    }
    else if ((lp.X > (__this->ActualSize().X - cr.Item(1))) && (lp.Y < cr.Item(1)))
    {
        if (::g::Uno::Vector::Distance(lp, ::g::Uno::Float2__New2(__this->ActualSize().X - cr.Item(1), cr.Item(1))) > cr.Item(1))
            return;
    }
    else if ((lp.X < cr.Item(3)) && (lp.Y > (__this->ActualSize().Y - cr.Item(3))))
    {
        if (::g::Uno::Vector::Distance(lp, ::g::Uno::Float2__New2(cr.Item(3), __this->ActualSize().Y - cr.Item(3))) > cr.Item(3))
            return;
    }
    else if ((lp.X > (__this->ActualSize().X - cr.Item(2))) && (lp.Y > (__this->ActualSize().Y - cr.Item(2))))
    {
        if (::g::Uno::Vector::Distance(lp, ::g::Uno::Float2__New2(__this->ActualSize().X - cr.Item(2), __this->ActualSize().Y - cr.Item(2))) > cr.Item(2))
            return;
    }

    htc->Hit(__this);
}

// protected override sealed void PushPropertiesToNativeView() :106
void Rectangle__PushPropertiesToNativeView_fn(Rectangle* __this)
{
    uStackFrame __("Fuse.Controls.Rectangle", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Shape__PushPropertiesToNativeView_fn(__this);
    uObject* nr = __this->NativeRect();

    if (nr != NULL)
        ::g::Fuse::Controls::Native::IRectangleView::CornerRadius(uInterface(uPtr(nr), ::TYPES[66/*Fuse.Controls.Native.IRectangleView*/]), __this->CornerRadius());
}

// public void SetCornerRadius(float4 value, Uno.UX.IPropertyListener origin) :73
void Rectangle__SetCornerRadius_fn(Rectangle* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->SetCornerRadius(*value, origin);
}

::g::Uno::UX::Selector Rectangle::CornerRadiusPropertyName_;

// public generated Rectangle() [instance] :8
void Rectangle::ctor_7()
{
    ctor_6();
}

// private float4 get_ConstrainedCornerRadius() [instance] :69
::g::Uno::Float4 Rectangle::ConstrainedCornerRadius()
{
    uStackFrame __("Fuse.Controls.Rectangle", "get_ConstrainedCornerRadius()");
    return GetConstrainedCornerRadius(ActualSize());
}

// public float4 get_CornerRadius() [instance] :51
::g::Uno::Float4 Rectangle::CornerRadius()
{
    return _cornerRadius;
}

// public void set_CornerRadius(float4 value) [instance] :52
void Rectangle::CornerRadius(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Rectangle", "set_CornerRadius(float4)");
    SetCornerRadius(value, (uObject*)this);
}

// private float4 GetConstrainedCornerRadius(float2 sz) [instance] :58
::g::Uno::Float4 Rectangle::GetConstrainedCornerRadius(::g::Uno::Float2 sz)
{
    uStackFrame __("Fuse.Controls.Rectangle", "GetConstrainedCornerRadius(float2)");
    ::g::Uno::Float4 useCornerRadius = CornerRadius();
    float mn = ::g::Uno::Math::Min1(sz.X / 2.0f, sz.Y / 2.0f);

    for (int32_t i = 0; i < 4; ++i)
        useCornerRadius.Item(i, ::g::Uno::Math::Clamp1(useCornerRadius.Item(i), 0.0f, mn));

    return useCornerRadius;
}

// private Fuse.Controls.Native.IRectangleView get_NativeRect() [instance] :90
uObject* Rectangle::NativeRect()
{
    return uAs<uObject*>(NativeView(), ::TYPES[66/*Fuse.Controls.Native.IRectangleView*/]);
}

// public void SetCornerRadius(float4 value, Uno.UX.IPropertyListener origin) [instance] :73
void Rectangle::SetCornerRadius(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Rectangle", "SetCornerRadius(float4,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float4__op_Inequality(_cornerRadius, value))
    {
        _cornerRadius = value;
        uObject* nr = NativeRect();

        if (nr != NULL)
            ::g::Fuse::Controls::Native::IRectangleView::CornerRadius(uInterface(uPtr(nr), ::TYPES[66/*Fuse.Controls.Native.IRectangleView*/]), CornerRadius());

        OnPropertyChanged1(Rectangle::CornerRadiusPropertyName_, origin);
        InvalidateSurfacePath();
    }
}

// public generated Rectangle New() [static] :8
Rectangle* Rectangle::New3()
{
    Rectangle* obj12 = (Rectangle*)uNew(Rectangle_typeof());
    obj12->ctor_7();
    return obj12;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\RegularPolygon.Surface.uno
// --------------------------------------------------------------------------------------------------------------------

// public partial sealed class RegularPolygon :8
// {
static void RegularPolygon_build(uType* type)
{
    ::STRINGS[78] = uString::Const("Sides");
    ::TYPES[65] = ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Drawing::LineSegment_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface18));
    type->SetFields(118,
        ::g::Uno::Int_typeof(), offsetof(RegularPolygon, _sides), 0);
    type->Reflection.SetFunctions(3,
        new uFunction(".ctor", NULL, (void*)RegularPolygon__New3_fn, 0, true, type, 0),
        new uFunction("get_Sides", NULL, (void*)RegularPolygon__get_Sides_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_Sides", NULL, (void*)RegularPolygon__set_Sides_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()));
}

::g::Fuse::Controls::Shape_type* RegularPolygon_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Shape_typeof();
    options.FieldCount = 119;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(RegularPolygon);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.RegularPolygon", options);
    type->fp_build_ = RegularPolygon_build;
    type->fp_ctor_ = (void*)RegularPolygon__New3_fn;
    type->fp_CreateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::Drawing::Surface*, ::g::Fuse::Drawing::SurfacePath**))RegularPolygon__CreateSurfacePath_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated RegularPolygon() :8
void RegularPolygon__ctor_7_fn(RegularPolygon* __this)
{
    __this->ctor_7();
}

// protected override sealed Fuse.Drawing.SurfacePath CreateSurfacePath(Fuse.Drawing.Surface surface) :10
void RegularPolygon__CreateSurfacePath_fn(RegularPolygon* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    uStackFrame __("Fuse.Controls.RegularPolygon", "CreateSurfacePath(Fuse.Drawing.Surface)");
    ::g::Fuse::Drawing::LineSegment collection1;
    ::g::Fuse::Drawing::LineSegment collection2;
    ::g::Fuse::Drawing::LineSegment collection3;
    float radius = ::g::Uno::Math::Min1(__this->ActualSize().X, __this->ActualSize().Y) * 0.5f;
    ::g::Uno::Float2 center = ::g::Uno::Float2__op_Division1(__this->ActualSize(), 2.0f);
    ::g::Uno::Collections::List* list = (::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[65/*Uno.Collections.List<Fuse.Drawing.LineSegment>*/]);

    if (__this->Sides() >= 3)
    {
        float t = -6.28318548f / (float)__this->Sides();
        ::g::Uno::Collections::List__Add_fn(uPtr(list), uCRef((collection1 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection1.Type = 0, collection1.To = ::g::Uno::Float2__New2(center.X, center.Y - radius), collection1)));

        for (int32_t i = 1; i < __this->Sides(); i++)
            ::g::Uno::Collections::List__Add_fn(uPtr(list), uCRef((collection2 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection2.Type = 1, collection2.To = ::g::Uno::Float2__New2(center.X + (::g::Uno::Math::Sin1(t * (float)i) * radius), center.Y - (::g::Uno::Math::Cos1(t * (float)i) * radius)), collection2)));

        ::g::Uno::Collections::List__Add_fn(list, uCRef((collection3 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection3.Type = 4, collection3)));
    }

    return *__retval = uPtr(surface)->CreatePath((uObject*)list, 0), void();
}

// public generated RegularPolygon New() :8
void RegularPolygon__New3_fn(RegularPolygon** __retval)
{
    *__retval = RegularPolygon::New3();
}

// public int get_Sides() :16
void RegularPolygon__get_Sides_fn(RegularPolygon* __this, int32_t* __retval)
{
    *__retval = __this->Sides();
}

// public void set_Sides(int value) :17
void RegularPolygon__set_Sides_fn(RegularPolygon* __this, int32_t* value)
{
    __this->Sides(*value);
}

// public generated RegularPolygon() [instance] :8
void RegularPolygon::ctor_7()
{
    _sides = 5;
    ctor_6();
}

// public int get_Sides() [instance] :16
int32_t RegularPolygon::Sides()
{
    return _sides;
}

// public void set_Sides(int value) [instance] :17
void RegularPolygon::Sides(int32_t value)
{
    uStackFrame __("Fuse.Controls.RegularPolygon", "set_Sides(int)");

    if (value == _sides)
        return;

    _sides = value;
    InvalidateSurfacePath();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[78/*"Sides"*/]));
}

// public generated RegularPolygon New() [static] :8
RegularPolygon* RegularPolygon::New3()
{
    RegularPolygon* obj4 = (RegularPolygon*)uNew(RegularPolygon_typeof());
    obj4->ctor_7();
    return obj4;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.Types.uno
// ------------------------------------------------------------------------------------------------------

// public enum RemoveType :54
uEnumType* RemoveType_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.RemoveType", ::g::Uno::Int_typeof(), 4);
    type->SetLiterals(
        "Default", 0LL,
        "None", 1LL,
        "Cleared", 2LL,
        "Released", 3LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\MobileTextEdit.uno
// ------------------------------------------------------------------------------------------------------------------

// private sealed class TextEditRenderer.Renderer :226
// {
static void TextEditRenderer__Renderer_build(uType* type)
{
    ::TYPES[67] = ::g::Fuse::Controls::Native::IViewHandleRenderer_typeof();
    ::TYPES[68] = ::g::Uno::IDisposable_typeof();
    type->SetDependencies(
        ::g::Fuse::Controls::TextEditRenderer_typeof());
    type->SetInterfaces(
        ::TYPES[67/*Fuse.Controls.Native.IViewHandleRenderer*/], offsetof(TextEditRenderer__Renderer_type, interface0),
        ::TYPES[68/*Uno.IDisposable*/], offsetof(TextEditRenderer__Renderer_type, interface1));
    type->SetFields(0,
        ::TYPES[67/*Fuse.Controls.Native.IViewHandleRenderer*/], offsetof(TextEditRenderer__Renderer, _renderer), 0,
        ::g::Uno::Bool_typeof(), offsetof(TextEditRenderer__Renderer, _isMultiline), 0,
        ::g::Fuse::Controls::TextEdit_typeof(), offsetof(TextEditRenderer__Renderer, _textEdit), 0,
        ::g::Fuse::Controls::TextAlignment_typeof(), offsetof(TextEditRenderer__Renderer, _prevTextAlignment), 0,
        ::g::Uno::Bool_typeof(), offsetof(TextEditRenderer__Renderer, _firstFrame), 0);
}

TextEditRenderer__Renderer_type* TextEditRenderer__Renderer_typeof()
{
    static uSStrong<TextEditRenderer__Renderer_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 5;
    options.InterfaceCount = 2;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(TextEditRenderer__Renderer);
    options.TypeSize = sizeof(TextEditRenderer__Renderer_type);
    type = (TextEditRenderer__Renderer_type*)uClassType::New("Fuse.Controls.TextEditRenderer.Renderer", options);
    type->fp_build_ = TextEditRenderer__Renderer_build;
    type->interface0.fp_Draw = (void(*)(uObject*, ::g::Fuse::Controls::Native::ViewHandle*, ::g::Uno::Float4x4*, ::g::Uno::Float2*, ::g::Uno::Float2*, float*))TextEditRenderer__Renderer__FuseControlsNativeIViewHandleRendererDraw_fn;
    type->interface0.fp_Invalidate = (void(*)(uObject*))TextEditRenderer__Renderer__FuseControlsNativeIViewHandleRendererInvalidate_fn;
    type->interface1.fp_Dispose = (void(*)(uObject*))TextEditRenderer__Renderer__UnoIDisposableDispose_fn;
    return type;
}

// public Renderer(Fuse.Controls.TextEdit textEdit, bool isMultiline) :236
void TextEditRenderer__Renderer__ctor__fn(TextEditRenderer__Renderer* __this, ::g::Fuse::Controls::TextEdit* textEdit, bool* isMultiline)
{
    __this->ctor_(textEdit, *isMultiline);
}

// private void Fuse.Controls.Native.IViewHandleRenderer.Draw(Fuse.Controls.Native.ViewHandle viewHandle, float4x4 localToClipTransform, float2 position, float2 size, float density) :243
void TextEditRenderer__Renderer__FuseControlsNativeIViewHandleRendererDraw_fn(TextEditRenderer__Renderer* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, ::g::Uno::Float4x4* localToClipTransform, ::g::Uno::Float2* position, ::g::Uno::Float2* size, float* density)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer.Renderer", "Fuse.Controls.Native.IViewHandleRenderer.Draw(Fuse.Controls.Native.ViewHandle,float4x4,float2,float2,float)");
    ::g::Uno::Float4x4 localToClipTransform_ = *localToClipTransform;
    ::g::Uno::Float2 position_ = *position;
    ::g::Uno::Float2 size_ = *size;
    float density_ = *density;
    bool updateTextAlignment = __this->_firstFrame || (__this->_prevTextAlignment != uPtr(__this->_textEdit)->TextAlignment());
    __this->_prevTextAlignment = uPtr(__this->_textEdit)->TextAlignment();
    uPtr(::g::Fuse::Controls::TextEditRenderer::Instance())->Draw(__this->_renderer, viewHandle, localToClipTransform_, position_, size_, density_, updateTextAlignment, __this->_isMultiline);
    __this->_firstFrame = false;
}

// private void Fuse.Controls.Native.IViewHandleRenderer.Invalidate() :264
void TextEditRenderer__Renderer__FuseControlsNativeIViewHandleRendererInvalidate_fn(TextEditRenderer__Renderer* __this)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer.Renderer", "Fuse.Controls.Native.IViewHandleRenderer.Invalidate()");
    ::g::Fuse::Controls::Native::IViewHandleRenderer::Invalidate(uInterface(uPtr(__this->_renderer), ::TYPES[67/*Fuse.Controls.Native.IViewHandleRenderer*/]));
}

// public Renderer New(Fuse.Controls.TextEdit textEdit, bool isMultiline) :236
void TextEditRenderer__Renderer__New1_fn(::g::Fuse::Controls::TextEdit* textEdit, bool* isMultiline, TextEditRenderer__Renderer** __retval)
{
    *__retval = TextEditRenderer__Renderer::New1(textEdit, *isMultiline);
}

// private void Uno.IDisposable.Dispose() :269
void TextEditRenderer__Renderer__UnoIDisposableDispose_fn(TextEditRenderer__Renderer* __this)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer.Renderer", "Uno.IDisposable.Dispose()");
    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(__this->_renderer), ::TYPES[68/*Uno.IDisposable*/]));
    __this->_renderer = NULL;
}

// public Renderer(Fuse.Controls.TextEdit textEdit, bool isMultiline) [instance] :236
void TextEditRenderer__Renderer::ctor_(::g::Fuse::Controls::TextEdit* textEdit, bool isMultiline)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer.Renderer", ".ctor(Fuse.Controls.TextEdit,bool)");
    _renderer = (uObject*)::g::Fuse::Controls::Native::NativeViewRenderer::New1();
    _firstFrame = true;
    _textEdit = textEdit;
    _isMultiline = isMultiline;
    _prevTextAlignment = uPtr(_textEdit)->TextAlignment();
}

// public Renderer New(Fuse.Controls.TextEdit textEdit, bool isMultiline) [static] :236
TextEditRenderer__Renderer* TextEditRenderer__Renderer::New1(::g::Fuse::Controls::TextEdit* textEdit, bool isMultiline)
{
    TextEditRenderer__Renderer* obj1 = (TextEditRenderer__Renderer*)uNew(TextEditRenderer__Renderer_typeof());
    obj1->ctor_(textEdit, isMultiline);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\SingleViewHost.uno
// -------------------------------------------------------------------------------------------------

// public enum SingleViewHost.RenderState :12
uEnumType* SingleViewHost__RenderState_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.SingleViewHost.RenderState", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Enabled", 0LL,
        "Disabled", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Shape.Resources.uno
// -------------------------------------------------------------------------------------------------------------

// private sealed class Shape.ResourceWatcher :23
// {
static void Shape__ResourceWatcher_build(uType* type)
{
    type->SetFields(0,
        ::g::Uno::Bool_typeof(), offsetof(Shape__ResourceWatcher, IsWatching), 0);
}

uType* Shape__ResourceWatcher_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.ObjectSize = sizeof(Shape__ResourceWatcher);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.Shape.ResourceWatcher", options);
    type->fp_build_ = Shape__ResourceWatcher_build;
    type->fp_ctor_ = (void*)Shape__ResourceWatcher__New1_fn;
    return type;
}

// public generated ResourceWatcher() :23
void Shape__ResourceWatcher__ctor__fn(Shape__ResourceWatcher* __this)
{
    __this->ctor_();
}

// public generated ResourceWatcher New() :23
void Shape__ResourceWatcher__New1_fn(Shape__ResourceWatcher** __retval)
{
    *__retval = Shape__ResourceWatcher::New1();
}

// public generated ResourceWatcher() [instance] :23
void Shape__ResourceWatcher::ctor_()
{
}

// public generated ResourceWatcher New() [static] :23
Shape__ResourceWatcher* Shape__ResourceWatcher::New1()
{
    Shape__ResourceWatcher* obj1 = (Shape__ResourceWatcher*)uNew(Shape__ResourceWatcher_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\Navigator.Types.uno
// ------------------------------------------------------------------------------------------------------

// public enum ReuseType :35
uEnumType* ReuseType_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.ReuseType", ::g::Uno::Int_typeof(), 6);
    type->SetLiterals(
        "Default", 0LL,
        "None", 1LL,
        "Removed", 2LL,
        "Inactive", 3LL,
        "Replace", 4LL,
        "Any", 5LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\Backgrounds\RightFrameBackground.uno
// -------------------------------------------------------------------------------------------------------------------

// public sealed class RightFrameBackground :6
// {
static void RightFrameBackground_build(uType* type)
{
    ::STRINGS[79] = uString::Const("Fuse.Controls.RightFrameBackground has been deprecated, as it's no longer needed, and does nothing. Please remove the usage");
    ::STRINGS[80] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Panels\\1.7.2\\Backgrounds\\RightFrameBackground.uno");
    ::STRINGS[50] = uString::Const(".ctor");
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface16));
    type->SetFields(108);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)RightFrameBackground__New2_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* RightFrameBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 108;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(RightFrameBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.RightFrameBackground", options);
    type->fp_build_ = RightFrameBackground_build;
    type->fp_ctor_ = (void*)RightFrameBackground__New2_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))RightFrameBackground__GetContentSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public RightFrameBackground() :8
void RightFrameBackground__ctor_5_fn(RightFrameBackground* __this)
{
    __this->ctor_5();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :13
void RightFrameBackground__GetContentSize_fn(RightFrameBackground* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    return *__retval = ::g::Uno::Float2__New2(0.0f, 0.0f), void();
}

// public RightFrameBackground New() :8
void RightFrameBackground__New2_fn(RightFrameBackground** __retval)
{
    *__retval = RightFrameBackground::New2();
}

// public RightFrameBackground() [instance] :8
void RightFrameBackground::ctor_5()
{
    ctor_4();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[79/*"Fuse.Contro...*/], this, ::STRINGS[80/*"C:\\Users\\...*/], 10, ::STRINGS[50/*".ctor"*/]);
}

// public RightFrameBackground New() [static] :8
RightFrameBackground* RightFrameBackground::New2()
{
    RightFrameBackground* obj1 = (RightFrameBackground*)uNew(RightFrameBackground_typeof());
    obj1->ctor_5();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigatorSwipe.uno
// -----------------------------------------------------------------------------------------------------

// internal sealed class Router_PrepareProgress_Property :219
// {
static void Router_PrepareProgress_Property_build(uType* type)
{
    ::STRINGS[81] = uString::Const("PrepareProgress");
    ::TYPES[69] = ::g::Fuse::Navigation::Router_typeof();
    type->SetBase(::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Double_typeof(), NULL));
    type->SetFields(1,
        ::TYPES[69/*Fuse.Navigation.Router*/], offsetof(Router_PrepareProgress_Property, _obj), 0);
}

::g::Uno::UX::Property1_type* Router_PrepareProgress_Property_typeof()
{
    static uSStrong< ::g::Uno::UX::Property1_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Property1_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(Router_PrepareProgress_Property);
    options.TypeSize = sizeof(::g::Uno::UX::Property1_type);
    type = (::g::Uno::UX::Property1_type*)uClassType::New("Fuse.Controls.Router_PrepareProgress_Property", options);
    type->fp_build_ = Router_PrepareProgress_Property_build;
    type->fp_Get1 = (void(*)(::g::Uno::UX::Property1*, ::g::Uno::UX::PropertyObject*, uTRef))Router_PrepareProgress_Property__Get1_fn;
    type->fp_get_Object = (void(*)(::g::Uno::UX::Property*, ::g::Uno::UX::PropertyObject**))Router_PrepareProgress_Property__get_Object_fn;
    type->fp_Set1 = (void(*)(::g::Uno::UX::Property1*, ::g::Uno::UX::PropertyObject*, void*, uObject*))Router_PrepareProgress_Property__Set1_fn;
    type->fp_get_SupportsOriginSetter = (void(*)(::g::Uno::UX::PropertyAccessor*, bool*))Router_PrepareProgress_Property__get_SupportsOriginSetter_fn;
    return type;
}

// public Router_PrepareProgress_Property(Fuse.Navigation.Router obj) :222
void Router_PrepareProgress_Property__ctor_3_fn(Router_PrepareProgress_Property* __this, ::g::Fuse::Navigation::Router* obj)
{
    __this->ctor_3(obj);
}

// public override sealed double Get(Uno.UX.PropertyObject obj) :224
void Router_PrepareProgress_Property__Get1_fn(Router_PrepareProgress_Property* __this, ::g::Uno::UX::PropertyObject* obj, double* __retval)
{
    uStackFrame __("Fuse.Controls.Router_PrepareProgress_Property", "Get(Uno.UX.PropertyObject)");
    return *__retval = uPtr(uCast< ::g::Fuse::Navigation::Router*>(obj, ::TYPES[69/*Fuse.Navigation.Router*/]))->PrepareProgress(), void();
}

// public Router_PrepareProgress_Property New(Fuse.Navigation.Router obj) :222
void Router_PrepareProgress_Property__New1_fn(::g::Fuse::Navigation::Router* obj, Router_PrepareProgress_Property** __retval)
{
    *__retval = Router_PrepareProgress_Property::New1(obj);
}

// public override sealed Uno.UX.PropertyObject get_Object() :223
void Router_PrepareProgress_Property__get_Object_fn(Router_PrepareProgress_Property* __this, ::g::Uno::UX::PropertyObject** __retval)
{
    return *__retval = __this->_obj, void();
}

// public override sealed void Set(Uno.UX.PropertyObject obj, double v, Uno.UX.IPropertyListener origin) :225
void Router_PrepareProgress_Property__Set1_fn(Router_PrepareProgress_Property* __this, ::g::Uno::UX::PropertyObject* obj, double* v, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Router_PrepareProgress_Property", "Set(Uno.UX.PropertyObject,double,Uno.UX.IPropertyListener)");
    double v_ = *v;
    uPtr(uCast< ::g::Fuse::Navigation::Router*>(obj, ::TYPES[69/*Fuse.Navigation.Router*/]))->PrepareProgress(v_);
}

// public override sealed bool get_SupportsOriginSetter() :226
void Router_PrepareProgress_Property__get_SupportsOriginSetter_fn(Router_PrepareProgress_Property* __this, bool* __retval)
{
    return *__retval = false, void();
}

// public Router_PrepareProgress_Property(Fuse.Navigation.Router obj) [instance] :222
void Router_PrepareProgress_Property::ctor_3(::g::Fuse::Navigation::Router* obj)
{
    uStackFrame __("Fuse.Controls.Router_PrepareProgress_Property", ".ctor(Fuse.Navigation.Router)");
    ctor_2(::g::Uno::UX::Selector__op_Implicit(::STRINGS[81/*"PrepareProg...*/]));
    _obj = obj;
}

// public Router_PrepareProgress_Property New(Fuse.Navigation.Router obj) [static] :222
Router_PrepareProgress_Property* Router_PrepareProgress_Property::New1(::g::Fuse::Navigation::Router* obj)
{
    Router_PrepareProgress_Property* obj1 = (Router_PrepareProgress_Property*)uNew(Router_PrepareProgress_Property_typeof());
    obj1->ctor_3(obj);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\Enums.uno
// ----------------------------------------------------------------------------------------

// public enum ScrollDirections :9
uEnumType* ScrollDirections_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.ScrollDirections", ::g::Uno::Int_typeof(), 8);
    type->SetLiterals(
        "Left", 1LL,
        "Right", 2LL,
        "Up", 4LL,
        "Down", 8LL,
        "Horizontal", 3LL,
        "Vertical", 12LL,
        "Both", 15LL,
        "All", 15LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollView.uno
// -------------------------------------------------------------------------------------------------

// public sealed class ScrollPositionChangedArgs :13
// {
static void ScrollPositionChangedArgs_build(uType* type)
{
    ::STRINGS[82] = uString::Const("value");
    ::STRINGS[83] = uString::Const("relativePosition");
    ::TYPES[70] = ::g::Fuse::Scripting::IEventSerializer_typeof();
    type->SetBase(::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Float2_typeof(), NULL));
    type->SetInterfaces(
        ::g::Fuse::Scripting::IScriptEvent_typeof(), offsetof(ScrollPositionChangedArgs_type, interface0));
    type->SetFields(1,
        ::g::Uno::Float2_typeof(), offsetof(ScrollPositionChangedArgs, _ArrangeOffset), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollPositionChangedArgs, _IsAdjustment), 0,
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(ScrollPositionChangedArgs, _Origin), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollPositionChangedArgs, _RelativeScrollPosition), 0);
    type->Reflection.SetFunctions(5,
        new uFunction("get_ArrangeOffset", NULL, (void*)ScrollPositionChangedArgs__get_ArrangeOffset_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_IsAdjustment", NULL, (void*)ScrollPositionChangedArgs__get_IsAdjustment_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction(".ctor", NULL, (void*)ScrollPositionChangedArgs__New3_fn, 0, true, type, 5, ::g::Uno::Float2_typeof(), ::g::Uno::Float2_typeof(), ::g::Uno::Bool_typeof(), ::g::Uno::UX::IPropertyListener_typeof(), ::g::Uno::Float2_typeof()),
        new uFunction("get_Origin", NULL, (void*)ScrollPositionChangedArgs__get_Origin_fn, 0, false, ::g::Uno::UX::IPropertyListener_typeof(), 0),
        new uFunction("get_RelativeScrollPosition", NULL, (void*)ScrollPositionChangedArgs__get_RelativeScrollPosition_fn, 0, false, ::g::Uno::Float2_typeof(), 0));
}

ScrollPositionChangedArgs_type* ScrollPositionChangedArgs_typeof()
{
    static uSStrong<ScrollPositionChangedArgs_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::ValueChangedArgs_typeof();
    options.FieldCount = 5;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(ScrollPositionChangedArgs);
    options.TypeSize = sizeof(ScrollPositionChangedArgs_type);
    type = (ScrollPositionChangedArgs_type*)uClassType::New("Fuse.Controls.ScrollPositionChangedArgs", options);
    type->fp_build_ = ScrollPositionChangedArgs_build;
    type->interface0.fp_Serialize = (void(*)(uObject*, uObject*))ScrollPositionChangedArgs__FuseScriptingIScriptEventSerialize_fn;
    return type;
}

// public ScrollPositionChangedArgs(float2 scrollPos, float2 arrangeOffset, bool isAdjustment, Uno.UX.IPropertyListener origin, float2 relativeScrollPos) :23
void ScrollPositionChangedArgs__ctor_2_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* scrollPos, ::g::Uno::Float2* arrangeOffset, bool* isAdjustment, uObject* origin, ::g::Uno::Float2* relativeScrollPos)
{
    __this->ctor_2(*scrollPos, *arrangeOffset, *isAdjustment, origin, *relativeScrollPos);
}

// public generated float2 get_ArrangeOffset() :17
void ScrollPositionChangedArgs__get_ArrangeOffset_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ArrangeOffset();
}

// private generated void set_ArrangeOffset(float2 value) :17
void ScrollPositionChangedArgs__set_ArrangeOffset_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* value)
{
    __this->ArrangeOffset(*value);
}

// private void Fuse.Scripting.IScriptEvent.Serialize(Fuse.Scripting.IEventSerializer s) :33
void ScrollPositionChangedArgs__FuseScriptingIScriptEventSerialize_fn(ScrollPositionChangedArgs* __this, uObject* s)
{
    uStackFrame __("Fuse.Controls.ScrollPositionChangedArgs", "Fuse.Scripting.IScriptEvent.Serialize(Fuse.Scripting.IEventSerializer)");
    ::g::Uno::Float2 ret2;
    ::g::Fuse::Scripting::IEventSerializer::AddObject(uInterface(uPtr(s), ::TYPES[70/*Fuse.Scripting.IEventSerializer*/]), ::STRINGS[82/*"value"*/], uBox(::g::Uno::Float2_typeof(), (::g::Uno::UX::ValueChangedArgs__get_Value_fn(__this, &ret2), ret2)));
    ::g::Fuse::Scripting::IEventSerializer::AddObject(uInterface(s, ::TYPES[70/*Fuse.Scripting.IEventSerializer*/]), ::STRINGS[83/*"relativePos...*/], uBox(::g::Uno::Float2_typeof(), __this->RelativeScrollPosition()));
}

// public generated bool get_IsAdjustment() :15
void ScrollPositionChangedArgs__get_IsAdjustment_fn(ScrollPositionChangedArgs* __this, bool* __retval)
{
    *__retval = __this->IsAdjustment();
}

// private generated void set_IsAdjustment(bool value) :15
void ScrollPositionChangedArgs__set_IsAdjustment_fn(ScrollPositionChangedArgs* __this, bool* value)
{
    __this->IsAdjustment(*value);
}

// public ScrollPositionChangedArgs New(float2 scrollPos, float2 arrangeOffset, bool isAdjustment, Uno.UX.IPropertyListener origin, float2 relativeScrollPos) :23
void ScrollPositionChangedArgs__New3_fn(::g::Uno::Float2* scrollPos, ::g::Uno::Float2* arrangeOffset, bool* isAdjustment, uObject* origin, ::g::Uno::Float2* relativeScrollPos, ScrollPositionChangedArgs** __retval)
{
    *__retval = ScrollPositionChangedArgs::New3(*scrollPos, *arrangeOffset, *isAdjustment, origin, *relativeScrollPos);
}

// public generated Uno.UX.IPropertyListener get_Origin() :19
void ScrollPositionChangedArgs__get_Origin_fn(ScrollPositionChangedArgs* __this, uObject** __retval)
{
    *__retval = __this->Origin();
}

// private generated void set_Origin(Uno.UX.IPropertyListener value) :19
void ScrollPositionChangedArgs__set_Origin_fn(ScrollPositionChangedArgs* __this, uObject* value)
{
    __this->Origin(value);
}

// public generated float2 get_RelativeScrollPosition() :21
void ScrollPositionChangedArgs__get_RelativeScrollPosition_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeScrollPosition();
}

// private generated void set_RelativeScrollPosition(float2 value) :21
void ScrollPositionChangedArgs__set_RelativeScrollPosition_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* value)
{
    __this->RelativeScrollPosition(*value);
}

// public ScrollPositionChangedArgs(float2 scrollPos, float2 arrangeOffset, bool isAdjustment, Uno.UX.IPropertyListener origin, float2 relativeScrollPos) [instance] :23
void ScrollPositionChangedArgs::ctor_2(::g::Uno::Float2 scrollPos, ::g::Uno::Float2 arrangeOffset, bool isAdjustment, uObject* origin, ::g::Uno::Float2 relativeScrollPos)
{
    ::g::Uno::UX::ValueChangedArgs__ctor_1_fn(this, uCRef(scrollPos));
    ArrangeOffset(arrangeOffset);
    Origin(origin);
    IsAdjustment(isAdjustment);
    RelativeScrollPosition(relativeScrollPos);
}

// public generated float2 get_ArrangeOffset() [instance] :17
::g::Uno::Float2 ScrollPositionChangedArgs::ArrangeOffset()
{
    return _ArrangeOffset;
}

// private generated void set_ArrangeOffset(float2 value) [instance] :17
void ScrollPositionChangedArgs::ArrangeOffset(::g::Uno::Float2 value)
{
    _ArrangeOffset = value;
}

// public generated bool get_IsAdjustment() [instance] :15
bool ScrollPositionChangedArgs::IsAdjustment()
{
    return _IsAdjustment;
}

// private generated void set_IsAdjustment(bool value) [instance] :15
void ScrollPositionChangedArgs::IsAdjustment(bool value)
{
    _IsAdjustment = value;
}

// public generated Uno.UX.IPropertyListener get_Origin() [instance] :19
uObject* ScrollPositionChangedArgs::Origin()
{
    return _Origin;
}

// private generated void set_Origin(Uno.UX.IPropertyListener value) [instance] :19
void ScrollPositionChangedArgs::Origin(uObject* value)
{
    _Origin = value;
}

// public generated float2 get_RelativeScrollPosition() [instance] :21
::g::Uno::Float2 ScrollPositionChangedArgs::RelativeScrollPosition()
{
    return _RelativeScrollPosition;
}

// private generated void set_RelativeScrollPosition(float2 value) [instance] :21
void ScrollPositionChangedArgs::RelativeScrollPosition(::g::Uno::Float2 value)
{
    _RelativeScrollPosition = value;
}

// public ScrollPositionChangedArgs New(float2 scrollPos, float2 arrangeOffset, bool isAdjustment, Uno.UX.IPropertyListener origin, float2 relativeScrollPos) [static] :23
ScrollPositionChangedArgs* ScrollPositionChangedArgs::New3(::g::Uno::Float2 scrollPos, ::g::Uno::Float2 arrangeOffset, bool isAdjustment, uObject* origin, ::g::Uno::Float2 relativeScrollPos)
{
    ScrollPositionChangedArgs* obj1 = (ScrollPositionChangedArgs*)uNew(ScrollPositionChangedArgs_typeof());
    obj1->ctor_2(scrollPos, arrangeOffset, isAdjustment, origin, relativeScrollPos);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollView.uno
// -------------------------------------------------------------------------------------------------

// public delegate void ScrollPositionChangedHandler(object sender, Fuse.Controls.ScrollPositionChangedArgs args) :40
uDelegateType* ScrollPositionChangedHandler_typeof()
{
    static uSStrong<uDelegateType*> type;
    if (type != NULL) return type;

    type = uDelegateType::New("Fuse.Controls.ScrollPositionChangedHandler", 2, 0);
    type->SetSignature(uVoid_typeof(),
        uObject_typeof(),
        ::g::Fuse::Controls::ScrollPositionChangedArgs_typeof());
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollView.ux.uno
// ----------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView :58
// {
// static ScrollView() :69
static void ScrollView__cctor_4_fn(uType* __type)
{
    ScrollView::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("s"));
}

static void ScrollView_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface16),
        ::g::Fuse::Controls::Native::IScrollViewHost_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface17));
    type->SetFields(131,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ScrollView::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::ScrollViewBase_type* ScrollView_typeof()
{
    static uSStrong< ::g::Fuse::Controls::ScrollViewBase_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ScrollViewBase_typeof();
    options.FieldCount = 132;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(ScrollView);
    options.TypeSize = sizeof(::g::Fuse::Controls::ScrollViewBase_type);
    type = (::g::Fuse::Controls::ScrollViewBase_type*)uClassType::New("Fuse.Controls.ScrollView", options);
    type->fp_build_ = ScrollView_build;
    type->fp_ctor_ = (void*)ScrollView__New4_fn;
    type->fp_cctor_ = ScrollView__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))ScrollView__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))ScrollView__OnUnrooted_fn;
    type->interface17.fp_OnScrollPositionChanged = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::ScrollViewBase__FuseControlsNativeIScrollViewHostOnScrollPositionChanged_fn;
    type->interface17.fp_get_PixelsPerPoint = (void(*)(uObject*, float*))::g::Fuse::Controls::ScrollViewBase__FuseControlsNativeIScrollViewHostget_PixelsPerPoint_fn;
    type->interface17.fp_get_ContentSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::ScrollViewBase__FuseControlsNativeIScrollViewHostget_ContentSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public ScrollView() :73
void ScrollView__ctor_7_fn(ScrollView* __this)
{
    __this->ctor_7();
}

// private void InitializeUX() :77
void ScrollView__InitializeUX_fn(ScrollView* __this)
{
    __this->InitializeUX();
}

// public ScrollView New() :73
void ScrollView__New4_fn(ScrollView** __retval)
{
    *__retval = ScrollView::New4();
}

// protected override sealed void OnRooted() :60
void ScrollView__OnRooted_fn(ScrollView* __this)
{
    uStackFrame __("Fuse.Controls.ScrollView", "OnRooted()");
    ::g::Fuse::Controls::ScrollViewBase__OnRooted_fn(__this);

    if (__this->VisualContext() != 2)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), ::g::Fuse::Gestures::Scroller::New3(true));

    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), ScrollView__DefaultTrigger::New3(__this));
}

// protected override sealed void OnUnrooted() :68
void ScrollView__OnUnrooted_fn(ScrollView* __this)
{
    uStackFrame __("Fuse.Controls.ScrollView", "OnUnrooted()");
    __this->RemoveAllChildren(::TYPES[7/*Fuse.Visual*/]->MakeMethod(8/*RemoveAllChildren<Fuse.Gestures.Scroller>*/, ::g::Fuse::Gestures::Scroller_typeof(), NULL));
    __this->RemoveAllChildren(::TYPES[7/*Fuse.Visual*/]->MakeMethod(8/*RemoveAllChildren<Fuse.Controls.ScrollView.DefaultTrigger>*/, ScrollView__DefaultTrigger_typeof(), NULL));
    ::g::Fuse::Controls::ScrollViewBase__OnUnrooted_fn(__this);
}

::g::Uno::UX::Selector ScrollView::__selector0_;

// public ScrollView() [instance] :73
void ScrollView::ctor_7()
{
    uStackFrame __("Fuse.Controls.ScrollView", ".ctor()");
    ctor_6();
    InitializeUX();
}

// private void InitializeUX() [instance] :77
void ScrollView::InitializeUX()
{
    uStackFrame __("Fuse.Controls.ScrollView", "InitializeUX()");
    ScrollView__Template* AndroidAppearance = ScrollView__Template::New2(this, this);
    ScrollView__Template1* iOSAppearance = ScrollView__Template1::New2(this, this);
    Name(ScrollView::__selector0_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iOSAppearance);
}

// public ScrollView New() [static] :73
ScrollView* ScrollView::New4()
{
    ScrollView* obj1 = (ScrollView*)uNew(ScrollView_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollView.Layout.uno
// --------------------------------------------------------------------------------------------------------

// public partial class ScrollViewBase :21
// {
// static ScrollViewBase() :10
static void ScrollViewBase__cctor_3_fn(uType* __type)
{
    ::g::Fuse::Scripting::ScriptClass_typeof()->Init();
    ScrollViewBase::SizingChanged_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("SizingChanged"));
    ScrollViewBase::UserScrollName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("UserScroll"));
    ScrollViewBase::GesturePriorityName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("GesturePriority"));
    ScrollViewBase::_keepFocusInViewName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("KeepFocusInView"));
    ScrollViewBase::_allowedScrollDirectionsName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("AllowedScrollDirections"));
    ScrollViewBase::ScrollPositionName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("ScrollPosition"));
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[29/*Fuse.Scripting.ScriptMember[]*/], 4, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), ::STRINGS[135/*"goto"*/], uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)ScrollViewBase__goto__fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("gotoRelative"), uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)ScrollViewBase__gotoRelative_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("seekTo"), uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)ScrollViewBase__seekTo_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("seekToRelative"), uDelegate::New(::g::Uno::Action2_typeof()->MakeType(__type, ::TYPES[48/*object[]*/], NULL), (void*)ScrollViewBase__seekToRelative_fn))));
}

static void ScrollViewBase_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Layouts::Layout_typeof(),
        ::g::Fuse::Marshal_typeof(),
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewBase_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(ScrollViewBase_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(ScrollViewBase_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(ScrollViewBase_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewBase_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewBase_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ScrollViewBase_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(ScrollViewBase_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(ScrollViewBase_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(ScrollViewBase_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ScrollViewBase_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ScrollViewBase_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(ScrollViewBase_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(ScrollViewBase_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(ScrollViewBase_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(ScrollViewBase_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(ScrollViewBase_type, interface16),
        ::g::Fuse::Controls::Native::IScrollViewHost_typeof(), offsetof(ScrollViewBase_type, interface17));
    type->SetFields(108,
        ::g::Fuse::Controls::ScrollViewLayoutMode_typeof(), offsetof(ScrollViewBase, _layoutMode), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewBase, _hasPrevArrange), 0,
        ::g::Fuse::Elements::Element_typeof(), offsetof(ScrollViewBase, _placeAnchor), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewBase, _oldMinScroll), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewBase, _oldMaxScroll), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewBase, _placePosition), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewBase, _oldScrollPosition), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewBase, _oldActualSize), 0,
        ::g::Fuse::Elements::Alignment_typeof(), offsetof(ScrollViewBase, _contentAlignment), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewBase, _contentMarginSize), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewBase, _userScroll), 0,
        ::g::Fuse::Input::GesturePriority_typeof(), offsetof(ScrollViewBase, _gesturePriority), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewBase, _snapMinTransform), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewBase, _snapMaxTransform), 0,
        ::g::Fuse::Visual_typeof(), offsetof(ScrollViewBase, _currentContent), 0,
        ::g::Fuse::Gestures::Scroller_typeof(), offsetof(ScrollViewBase, _scroller), 0,
        ::g::Fuse::Motion::MotionConfig_typeof(), offsetof(ScrollViewBase, _motion), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewBase, _keepFocusInView), 0,
        ::g::Fuse::Controls::ScrollDirections_typeof(), offsetof(ScrollViewBase, _allowedScrollDirections), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewBase, _scrollPosition), 0,
        ::g::Fuse::Translation_typeof(), offsetof(ScrollViewBase, _scrollTranslation), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewBase, _previousRelative), 0,
        ::g::Fuse::Controls::ScrollPositionChangedHandler_typeof(), offsetof(ScrollViewBase, ScrollPositionChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ScrollViewBase::SizingChanged_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ScrollViewBase::UserScrollName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ScrollViewBase::GesturePriorityName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ScrollViewBase::_keepFocusInViewName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ScrollViewBase::_allowedScrollDirectionsName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ScrollViewBase::ScrollPositionName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(32,
        new uFunction("get_AllowedScrollDirections", NULL, (void*)ScrollViewBase__get_AllowedScrollDirections_fn, 0, false, ::g::Fuse::Controls::ScrollDirections_typeof(), 0),
        new uFunction("set_AllowedScrollDirections", NULL, (void*)ScrollViewBase__set_AllowedScrollDirections_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::ScrollDirections_typeof()),
        new uFunction("get_GesturePriority", NULL, (void*)ScrollViewBase__get_GesturePriority_fn, 0, false, ::g::Fuse::Input::GesturePriority_typeof(), 0),
        new uFunction("set_GesturePriority", NULL, (void*)ScrollViewBase__set_GesturePriority_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Input::GesturePriority_typeof()),
        new uFunction("GetVisualScrollPosition", NULL, (void*)ScrollViewBase__GetVisualScrollPosition_fn, 0, false, ::g::Uno::Float2_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("Goto", NULL, (void*)ScrollViewBase__Goto_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("GotoRelative", NULL, (void*)ScrollViewBase__GotoRelative_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_KeepFocusInView", NULL, (void*)ScrollViewBase__get_KeepFocusInView_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_KeepFocusInView", NULL, (void*)ScrollViewBase__set_KeepFocusInView_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_LayoutMode", NULL, (void*)ScrollViewBase__get_LayoutMode_fn, 0, false, ::g::Fuse::Controls::ScrollViewLayoutMode_typeof(), 0),
        new uFunction("set_LayoutMode", NULL, (void*)ScrollViewBase__set_LayoutMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::ScrollViewLayoutMode_typeof()),
        new uFunction("get_MaxOverflow", NULL, (void*)ScrollViewBase__get_MaxOverflow_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_MaxScroll", NULL, (void*)ScrollViewBase__get_MaxScroll_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_MinOverflow", NULL, (void*)ScrollViewBase__get_MinOverflow_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_MinScroll", NULL, (void*)ScrollViewBase__get_MinScroll_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_Motion", NULL, (void*)ScrollViewBase__get_Motion_fn, 0, false, ::g::Fuse::Motion::MotionConfig_typeof(), 0),
        new uFunction("set_Motion", NULL, (void*)ScrollViewBase__set_Motion_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Motion::MotionConfig_typeof()),
        new uFunction(".ctor", NULL, (void*)ScrollViewBase__New3_fn, 0, true, type, 0),
        new uFunction("get_RelativeScrollPosition", NULL, (void*)ScrollViewBase__get_RelativeScrollPosition_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_RelativeScrollPosition", NULL, (void*)ScrollViewBase__set_RelativeScrollPosition_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_Scroller", NULL, (void*)ScrollViewBase__get_Scroller_fn, 0, false, ::g::Fuse::Gestures::Scroller_typeof(), 0),
        new uFunction("get_ScrollPosition", NULL, (void*)ScrollViewBase__get_ScrollPosition_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_ScrollPosition", NULL, (void*)ScrollViewBase__set_ScrollPosition_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("add_ScrollPositionChanged", NULL, (void*)ScrollViewBase__add_ScrollPositionChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::ScrollPositionChangedHandler_typeof()),
        new uFunction("remove_ScrollPositionChanged", NULL, (void*)ScrollViewBase__remove_ScrollPositionChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::ScrollPositionChangedHandler_typeof()),
        new uFunction("SetScrollPosition", NULL, (void*)ScrollViewBase__SetScrollPosition1_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float2_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_SnapMaxTransform", NULL, (void*)ScrollViewBase__get_SnapMaxTransform_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_SnapMaxTransform", NULL, (void*)ScrollViewBase__set_SnapMaxTransform_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_SnapMinTransform", NULL, (void*)ScrollViewBase__get_SnapMinTransform_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_SnapMinTransform", NULL, (void*)ScrollViewBase__set_SnapMinTransform_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_UserScroll", NULL, (void*)ScrollViewBase__get_UserScroll_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_UserScroll", NULL, (void*)ScrollViewBase__set_UserScroll_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
}

ScrollViewBase_type* ScrollViewBase_typeof()
{
    static uSStrong<ScrollViewBase_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ContentControl_typeof();
    options.FieldCount = 137;
    options.InterfaceCount = 18;
    options.DependencyCount = 3;
    options.ObjectSize = sizeof(ScrollViewBase);
    options.TypeSize = sizeof(ScrollViewBase_type);
    type = (ScrollViewBase_type*)uClassType::New("Fuse.Controls.ScrollViewBase", options);
    type->fp_build_ = ScrollViewBase_build;
    type->fp_ctor_ = (void*)ScrollViewBase__New3_fn;
    type->fp_cctor_ = ScrollViewBase__cctor_3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))ScrollViewBase__ArrangePaddingBox_fn;
    type->fp_CompensateForScrollView = (void(*)(::g::Fuse::Controls::Control*, ::g::Uno::Float4x4*))ScrollViewBase__CompensateForScrollView_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))ScrollViewBase__GetContentSize_fn;
    type->fp_IsMarginBoxDependent = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Visual*, int32_t*))ScrollViewBase__IsMarginBoxDependent_fn;
    type->fp_OnContentChanged = (void(*)(::g::Fuse::Controls::ContentControl*))ScrollViewBase__OnContentChanged_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))ScrollViewBase__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))ScrollViewBase__OnUnrooted_fn;
    type->interface17.fp_OnScrollPositionChanged = (void(*)(uObject*, ::g::Uno::Float2*))ScrollViewBase__FuseControlsNativeIScrollViewHostOnScrollPositionChanged_fn;
    type->interface17.fp_get_PixelsPerPoint = (void(*)(uObject*, float*))ScrollViewBase__FuseControlsNativeIScrollViewHostget_PixelsPerPoint_fn;
    type->interface17.fp_get_ContentSize = (void(*)(uObject*, ::g::Uno::Float2*))ScrollViewBase__FuseControlsNativeIScrollViewHostget_ContentSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public ScrollViewBase() :169
void ScrollViewBase__ctor_6_fn(ScrollViewBase* __this)
{
    __this->ctor_6();
}

// public Fuse.Controls.ScrollDirections get_AllowedScrollDirections() :249
void ScrollViewBase__get_AllowedScrollDirections_fn(ScrollViewBase* __this, int32_t* __retval)
{
    *__retval = __this->AllowedScrollDirections();
}

// public void set_AllowedScrollDirections(Fuse.Controls.ScrollDirections value) :250
void ScrollViewBase__set_AllowedScrollDirections_fn(ScrollViewBase* __this, int32_t* value)
{
    __this->AllowedScrollDirections(*value);
}

// private void ArrangeContent(Fuse.LayoutParams lp) :143
void ScrollViewBase__ArrangeContent_fn(ScrollViewBase* __this, ::g::Fuse::LayoutParams* lp)
{
    __this->ArrangeContent(*lp);
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :39
void ScrollViewBase__ArrangePaddingBox_fn(ScrollViewBase* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->Element() == NULL)
    {
        __this->_contentMarginSize = ::g::Uno::Float2__New1(0.0f);
        __this->_placeAnchor = NULL;
    }
    else
    {
        __this->_placeAnchor = ((!__this->_hasPrevArrange || (__this->LayoutMode() == 0)) ? uCast< ::g::Fuse::Elements::Element*>(NULL, ::TYPES[8/*Fuse.Elements.Element*/]) : (::g::Fuse::Elements::Element*)__this->FindAnchorElement());

        if (__this->_placeAnchor != NULL)
        {
            __this->_oldMinScroll = __this->MinScroll();
            __this->_oldMaxScroll = __this->MaxScroll();
            __this->_oldScrollPosition = __this->ScrollPosition();
            __this->_oldActualSize = __this->ActualSize();
            __this->_placePosition = ::g::Uno::Float2__op_Addition2(uPtr(__this->_placeAnchor)->ActualPosition(), uPtr(__this->Content())->ActualPosition());
        }

        __this->ArrangeContent(lp_);
        __this->_hasPrevArrange = true;
    }

    ::g::Fuse::UpdateManager::AddDeferredAction3(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)ScrollViewBase__UpdateScrollPosition_fn, __this), 4);
}

// internal override sealed void CompensateForScrollView(float4x4& t) :34
void ScrollViewBase__CompensateForScrollView_fn(ScrollViewBase* __this, ::g::Uno::Float4x4* t)
{
    (*t).M41 = ((*t).M41 + __this->ScrollPosition().X);
    (*t).M42 = ((*t).M42 + __this->ScrollPosition().Y);
}

// internal float2 Constrain(float2 t) :505
void ScrollViewBase__Constrain_fn(ScrollViewBase* __this, ::g::Uno::Float2* t, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Constrain(*t);
}

// private float2 ConstrainDown(float2 t) :515
void ScrollViewBase__ConstrainDown_fn(ScrollViewBase* __this, ::g::Uno::Float2* t, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ConstrainDown(*t);
}

// internal float2 ConstrainExtents(float2 t) :496
void ScrollViewBase__ConstrainExtents_fn(ScrollViewBase* __this, ::g::Uno::Float2* t, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ConstrainExtents(*t);
}

// private float2 ConstrainUp(float2 t) :510
void ScrollViewBase__ConstrainUp_fn(ScrollViewBase* __this, ::g::Uno::Float2* t, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ConstrainUp(*t);
}

// internal float2 get_ContentMarginSize() :141
void ScrollViewBase__get_ContentMarginSize_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ContentMarginSize();
}

// internal float2 DistanceFromView(float2 position, Fuse.Controls.ScrollViewBase.DistanceFromViewTarget target) :246
void ScrollViewBase__DistanceFromView_fn(ScrollViewBase* __this, ::g::Uno::Float2* position, int32_t* target, ::g::Uno::Float2* __retval)
{
    *__retval = __this->DistanceFromView(*position, *target);
}

// internal float4 DistanceToView(float2 min, float2 max) :222
void ScrollViewBase__DistanceToView_fn(ScrollViewBase* __this, ::g::Uno::Float2* min, ::g::Uno::Float2* max, ::g::Uno::Float4* __retval)
{
    *__retval = __this->DistanceToView(*min, *max);
}

// private Fuse.Elements.Element get_Element() :80
void ScrollViewBase__get_Element_fn(ScrollViewBase* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->Element();
}

// private Fuse.Elements.Element FindAnchorElement() :112
void ScrollViewBase__FindAnchorElement_fn(ScrollViewBase* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->FindAnchorElement();
}

// private float2 FromScalarPosition(float value) :389
void ScrollViewBase__FromScalarPosition_fn(ScrollViewBase* __this, float* value, ::g::Uno::Float2* __retval)
{
    *__retval = __this->FromScalarPosition(*value);
}

// private float2 Fuse.Controls.Native.IScrollViewHost.get_ContentSize() :27
void ScrollViewBase__FuseControlsNativeIScrollViewHostget_ContentSize_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "Fuse.Controls.Native.IScrollViewHost.get_ContentSize()");
    ::g::Fuse::Node* ret13;
    ::g::Fuse::Elements::Element* content = uAs< ::g::Fuse::Elements::Element*>((::g::Uno::Collections::EnumerableExtensions__FirstOrDefault_fn(::g::Uno::Collections::EnumerableExtensions_typeof()->MakeMethod(3/*FirstOrDefault<Fuse.Node>*/, ::g::Fuse::Node_typeof(), NULL), __this->Children(), &ret13), ret13), ::TYPES[8/*Fuse.Elements.Element*/]);
    return *__retval = (content != NULL) ? uPtr(content)->ActualSize() : ::g::Uno::Float2__New1(0.0f), void();
}

// private void Fuse.Controls.Native.IScrollViewHost.OnScrollPositionChanged(float2 newScrollPosition) :20
void ScrollViewBase__FuseControlsNativeIScrollViewHostOnScrollPositionChanged_fn(ScrollViewBase* __this, ::g::Uno::Float2* newScrollPosition)
{
    ::g::Uno::Float2 newScrollPosition_ = *newScrollPosition;
    __this->SetScrollPosition1(newScrollPosition_, NULL);
}

// private float Fuse.Controls.Native.IScrollViewHost.get_PixelsPerPoint() :17
void ScrollViewBase__FuseControlsNativeIScrollViewHostget_PixelsPerPoint_fn(ScrollViewBase* __this, float* __retval)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "Fuse.Controls.Native.IScrollViewHost.get_PixelsPerPoint()");
    return *__retval = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/])), void();
}

// public Fuse.Input.GesturePriority get_GesturePriority() :113
void ScrollViewBase__get_GesturePriority_fn(ScrollViewBase* __this, int32_t* __retval)
{
    *__retval = __this->GesturePriority();
}

// public void set_GesturePriority(Fuse.Input.GesturePriority value) :114
void ScrollViewBase__set_GesturePriority_fn(ScrollViewBase* __this, int32_t* value)
{
    __this->GesturePriority(*value);
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :207
void ScrollViewBase__GetContentSize_fn(ScrollViewBase* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float4 ind6;
    ::g::Uno::Float4 ind7;
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->Element() != NULL)
    {
        ::g::Fuse::LayoutParams nlp = lp_.CloneAndDerive();
        nlp.RemoveSize(::g::Uno::Float2__op_Addition2((ind6 = __this->Padding(), ::g::Uno::Float2__New2(ind6.X, ind6.Y)), (ind7 = __this->Padding(), ::g::Uno::Float2__New2(ind7.Z, ind7.W))));
        ::g::Uno::Float2 r = uPtr(__this->Element())->GetMarginSize(nlp);
        return *__retval = r, void();
    }

    return *__retval = ::g::Uno::Float2__New1(0.0f), void();
}

// private static bool getParams(Fuse.Controls.ScrollViewBase s, object[] args, string func, float2& pos) :19
void ScrollViewBase__getParams_fn(ScrollViewBase* s, uArray* args, uString* func, ::g::Uno::Float2* pos, bool* __retval)
{
    *__retval = ScrollViewBase::getParams(s, args, func, pos);
}

// public float2 GetVisualScrollPosition(Fuse.Visual n) :345
void ScrollViewBase__GetVisualScrollPosition_fn(ScrollViewBase* __this, ::g::Fuse::Visual* n, ::g::Uno::Float2* __retval)
{
    *__retval = __this->GetVisualScrollPosition(n);
}

// public void Goto(float2 position) :366
void ScrollViewBase__Goto_fn(ScrollViewBase* __this, ::g::Uno::Float2* position)
{
    __this->Goto(*position);
}

// private static void goto_(Fuse.Controls.ScrollViewBase s, object[] args) :40
void ScrollViewBase__goto__fn(ScrollViewBase* s, uArray* args)
{
    ScrollViewBase::goto_(s, args);
}

// private static void gotoRelative(Fuse.Controls.ScrollViewBase s, object[] args) :54
void ScrollViewBase__gotoRelative_fn(ScrollViewBase* s, uArray* args)
{
    ScrollViewBase::gotoRelative(s, args);
}

// public void GotoRelative(float2 position) :379
void ScrollViewBase__GotoRelative_fn(ScrollViewBase* __this, ::g::Uno::Float2* position)
{
    __this->GotoRelative(*position);
}

// protected override sealed Fuse.LayoutDependent IsMarginBoxDependent(Fuse.Visual child) :201
void ScrollViewBase__IsMarginBoxDependent_fn(ScrollViewBase* __this, ::g::Fuse::Visual* child, int32_t* __retval)
{
    return *__retval = 3, void();
}

// public bool get_KeepFocusInView() :221
void ScrollViewBase__get_KeepFocusInView_fn(ScrollViewBase* __this, bool* __retval)
{
    *__retval = __this->KeepFocusInView();
}

// public void set_KeepFocusInView(bool value) :222
void ScrollViewBase__set_KeepFocusInView_fn(ScrollViewBase* __this, bool* value)
{
    __this->KeepFocusInView(*value);
}

// public Fuse.Controls.ScrollViewLayoutMode get_LayoutMode() :31
void ScrollViewBase__get_LayoutMode_fn(ScrollViewBase* __this, int32_t* __retval)
{
    *__retval = __this->LayoutMode();
}

// public void set_LayoutMode(Fuse.Controls.ScrollViewLayoutMode value) :32
void ScrollViewBase__set_LayoutMode_fn(ScrollViewBase* __this, int32_t* value)
{
    __this->LayoutMode(*value);
}

// public float2 get_MaxOverflow() :466
void ScrollViewBase__get_MaxOverflow_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->MaxOverflow();
}

// public float2 get_MaxScroll() :451
void ScrollViewBase__get_MaxScroll_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->MaxScroll();
}

// public float2 get_MinOverflow() :490
void ScrollViewBase__get_MinOverflow_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->MinOverflow();
}

// public float2 get_MinScroll() :477
void ScrollViewBase__get_MinScroll_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->MinScroll();
}

// public Fuse.Motion.MotionConfig get_Motion() :200
void ScrollViewBase__get_Motion_fn(ScrollViewBase* __this, ::g::Fuse::Motion::MotionConfig** __retval)
{
    *__retval = __this->Motion();
}

// public void set_Motion(Fuse.Motion.MotionConfig value) :206
void ScrollViewBase__set_Motion_fn(ScrollViewBase* __this, ::g::Fuse::Motion::MotionConfig* value)
{
    __this->Motion(value);
}

// private Fuse.Controls.Native.IScrollView get_NativeScrollView() :12
void ScrollViewBase__get_NativeScrollView_fn(ScrollViewBase* __this, uObject** __retval)
{
    *__retval = __this->NativeScrollView();
}

// public ScrollViewBase New() :169
void ScrollViewBase__New3_fn(ScrollViewBase** __retval)
{
    *__retval = ScrollViewBase::New3();
}

// protected override sealed void OnContentChanged() :146
void ScrollViewBase__OnContentChanged_fn(ScrollViewBase* __this)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnContentChanged()");
    bool ret12;
    ::g::Fuse::Controls::ContentControl__OnContentChanged_fn(__this);

    if ((__this->Content() != NULL) && !uIs((::g::Fuse::Elements::Element*)__this->Content(), ::TYPES[8/*Fuse.Elements.Element*/]))
        U_THROW(::g::Uno::Exception::New2(uString::Const("Visual content of ScrollView must be of type Element")));

    if (__this->_currentContent != NULL)
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(__this->_currentContent)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_scrollTranslation, &ret12);

    __this->_currentContent = __this->Content();

    if (__this->_currentContent != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->_currentContent)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_scrollTranslation);

    __this->_hasPrevArrange = false;
}

// protected override void OnRooted() :158
void ScrollViewBase__OnRooted_fn(ScrollViewBase* __this)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);
    __this->_hasPrevArrange = false;
}

// private void OnScrollPositionChanged(float2 arrangeOffset, bool adjustment, Uno.UX.IPropertyListener origin) :436
void ScrollViewBase__OnScrollPositionChanged_fn(ScrollViewBase* __this, ::g::Uno::Float2* arrangeOffset, bool* adjustment, uObject* origin)
{
    __this->OnScrollPositionChanged(*arrangeOffset, *adjustment, origin);
}

// private void OnScrollPropertyChanged(Uno.UX.Selector name, Uno.UX.IPropertyListener origin) :265
void ScrollViewBase__OnScrollPropertyChanged_fn(ScrollViewBase* __this, ::g::Uno::UX::Selector* name, uObject* origin)
{
    __this->OnScrollPropertyChanged(*name, origin);
}

// protected override void OnUnrooted() :164
void ScrollViewBase__OnUnrooted_fn(ScrollViewBase* __this)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnUnrooted()");
    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
}

// public float2 get_RelativeScrollPosition() :412
void ScrollViewBase__get_RelativeScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeScrollPosition();
}

// public void set_RelativeScrollPosition(float2 value) :424
void ScrollViewBase__set_RelativeScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* value)
{
    __this->RelativeScrollPosition(*value);
}

// internal float2 RelativeToAbsolutePosition(float2 pos) :384
void ScrollViewBase__RelativeToAbsolutePosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* pos, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeToAbsolutePosition(*pos);
}

// public Fuse.Gestures.Scroller get_Scroller() :185
void ScrollViewBase__get_Scroller_fn(ScrollViewBase* __this, ::g::Fuse::Gestures::Scroller** __retval)
{
    *__retval = __this->Scroller();
}

// public float2 get_ScrollPosition() :280
void ScrollViewBase__get_ScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ScrollPosition();
}

// public void set_ScrollPosition(float2 value) :281
void ScrollViewBase__set_ScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* value)
{
    __this->ScrollPosition(*value);
}

// public generated void add_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler value) :433
void ScrollViewBase__add_ScrollPositionChanged_fn(ScrollViewBase* __this, uDelegate* value)
{
    __this->add_ScrollPositionChanged(value);
}

// public generated void remove_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler value) :433
void ScrollViewBase__remove_ScrollPositionChanged_fn(ScrollViewBase* __this, uDelegate* value)
{
    __this->remove_ScrollPositionChanged(value);
}

// private static void seekTo(Fuse.Controls.ScrollViewBase s, object[] args) :68
void ScrollViewBase__seekTo_fn(ScrollViewBase* s, uArray* args)
{
    ScrollViewBase::seekTo(s, args);
}

// private static void seekToRelative(Fuse.Controls.ScrollViewBase s, object[] args) :82
void ScrollViewBase__seekToRelative_fn(ScrollViewBase* s, uArray* args)
{
    ScrollViewBase::seekToRelative(s, args);
}

// private void SetScrollPosition(float2 position, float2 arrangeOffset, Uno.UX.IPropertyListener origin) :292
void ScrollViewBase__SetScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* position, ::g::Uno::Float2* arrangeOffset, uObject* origin)
{
    __this->SetScrollPosition(*position, *arrangeOffset, origin);
}

// public void SetScrollPosition(float2 position, Uno.UX.IPropertyListener origin) :287
void ScrollViewBase__SetScrollPosition1_fn(ScrollViewBase* __this, ::g::Uno::Float2* position, uObject* origin)
{
    __this->SetScrollPosition1(*position, origin);
}

// private void SetScrollPositionImpl(float2 position, float2 arrangeOffset, bool adjustment, Uno.UX.IPropertyListener origin) :297
void ScrollViewBase__SetScrollPositionImpl_fn(ScrollViewBase* __this, ::g::Uno::Float2* position, ::g::Uno::Float2* arrangeOffset, bool* adjustment, uObject* origin)
{
    __this->SetScrollPositionImpl(*position, *arrangeOffset, *adjustment, origin);
}

// public bool get_SnapMaxTransform() :141
void ScrollViewBase__get_SnapMaxTransform_fn(ScrollViewBase* __this, bool* __retval)
{
    *__retval = __this->SnapMaxTransform();
}

// public void set_SnapMaxTransform(bool value) :142
void ScrollViewBase__set_SnapMaxTransform_fn(ScrollViewBase* __this, bool* value)
{
    __this->SnapMaxTransform(*value);
}

// public bool get_SnapMinTransform() :131
void ScrollViewBase__get_SnapMinTransform_fn(ScrollViewBase* __this, bool* __retval)
{
    *__retval = __this->SnapMinTransform();
}

// public void set_SnapMinTransform(bool value) :132
void ScrollViewBase__set_SnapMinTransform_fn(ScrollViewBase* __this, bool* value)
{
    __this->SnapMinTransform(*value);
}

// internal float ToScalarPosition(float2 value) :398
void ScrollViewBase__ToScalarPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* value, float* __retval)
{
    *__retval = __this->ToScalarPosition(*value);
}

// private void UpdateScrollPosition() :68
void ScrollViewBase__UpdateScrollPosition_fn(ScrollViewBase* __this)
{
    __this->UpdateScrollPosition();
}

// public bool get_UserScroll() :90
void ScrollViewBase__get_UserScroll_fn(ScrollViewBase* __this, bool* __retval)
{
    *__retval = __this->UserScroll();
}

// public void set_UserScroll(bool value) :91
void ScrollViewBase__set_UserScroll_fn(ScrollViewBase* __this, bool* value)
{
    __this->UserScroll(*value);
}

::g::Uno::UX::Selector ScrollViewBase::SizingChanged_;
::g::Uno::UX::Selector ScrollViewBase::UserScrollName_;
::g::Uno::UX::Selector ScrollViewBase::GesturePriorityName_;
::g::Uno::UX::Selector ScrollViewBase::_keepFocusInViewName_;
::g::Uno::UX::Selector ScrollViewBase::_allowedScrollDirectionsName_;
::g::Uno::UX::Selector ScrollViewBase::ScrollPositionName_;

// public ScrollViewBase() [instance] :169
void ScrollViewBase::ctor_6()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", ".ctor()");
    _userScroll = true;
    _gesturePriority = 1;
    _snapMinTransform = true;
    _snapMaxTransform = true;
    _keepFocusInView = true;
    _allowedScrollDirections = 12;
    _scrollTranslation = ::g::Fuse::Translation::New2();
    _previousRelative = ::g::Uno::Float2__New1(FLT_INF);
    ctor_5();
    ClipToBounds(true);
    HitTestMode(6);
}

// public Fuse.Controls.ScrollDirections get_AllowedScrollDirections() [instance] :249
int32_t ScrollViewBase::AllowedScrollDirections()
{
    return _allowedScrollDirections;
}

// public void set_AllowedScrollDirections(Fuse.Controls.ScrollDirections value) [instance] :250
void ScrollViewBase::AllowedScrollDirections(int32_t value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_AllowedScrollDirections(Fuse.Controls.ScrollDirections)");

    if (_allowedScrollDirections != value)
    {
        _allowedScrollDirections = value;
        OnScrollPropertyChanged(ScrollViewBase::_allowedScrollDirectionsName_, (uObject*)this);
        uObject* s = NativeScrollView();

        if (s != NULL)
            ::g::Fuse::Controls::Native::IScrollView::AllowedScrollDirections(uInterface(uPtr(s), ::g::Fuse::Controls::Native::IScrollView_typeof()), _allowedScrollDirections);
    }
}

// private void ArrangeContent(Fuse.LayoutParams lp) [instance] :143
void ScrollViewBase::ArrangeContent(::g::Fuse::LayoutParams lp)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "ArrangeContent(Fuse.LayoutParams)");
    ::g::Uno::Float4 ind1;
    ::g::Uno::Float4 ind2;
    ::g::Uno::Float4 ind3;
    ::g::Uno::Float4 ind4;
    ::g::Uno::Float4 ind5;
    ::g::Fuse::LayoutParams nlp = lp.CloneAndDerive();
    nlp.RemoveSize(::g::Uno::Float2__op_Addition2((ind1 = Padding(), ::g::Uno::Float2__New2(ind1.X, ind1.Y)), (ind2 = Padding(), ::g::Uno::Float2__New2(ind2.Z, ind2.W))));
    nlp.SetRelativeSize(lp.GetAvailableSize(), true, true);
    int32_t align = 0;
    bool setWidth = false;
    bool setHeight = false;

    if (AllowedScrollDirections() == 15)
    {
        align = 5;
        setWidth = true;
        setHeight = true;
    }
    else if (AllowedScrollDirections() == 3)
    {
        align = 1;
        setWidth = true;
    }
    else if (AllowedScrollDirections() == 12)
    {
        align = 4;
        setHeight = true;
    }
    else
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition1(uString::Const("AllowedScrollDirections is not valid: "), uBox<int32_t>(::g::Fuse::Controls::ScrollDirections_typeof(), AllowedScrollDirections())), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.ScrollView\\1.7.2\\ScrollView.Layout.uno"), 171, uString::Const("ArrangeContent"), NULL);

    int32_t hAlign = 0;

    if (setWidth)
    {
        hAlign = ::g::Fuse::Elements::AlignmentHelpers::GetHorizontalAlign(uPtr(Content())->Alignment());

        if (hAlign == 0)
            hAlign = ::g::Fuse::Elements::AlignmentHelpers::GetHorizontalAlign(align);
    }

    int32_t vAlign = 0;

    if (setHeight)
    {
        vAlign = ::g::Fuse::Elements::AlignmentHelpers::GetVerticalAlign(uPtr(Content())->Alignment());

        if (vAlign == 0)
            vAlign = ::g::Fuse::Elements::AlignmentHelpers::GetVerticalAlign(align);
    }

    align = hAlign | vAlign;
    nlp.RetainAxesXY(!setWidth, !setHeight);
    ::g::Uno::Float2 sz = uPtr(Content())->ArrangeMarginBox((ind3 = Padding(), ::g::Uno::Float2__New2(ind3.X, ind3.Y)), nlp);
    ::g::Fuse::Layouts::Layout::AdjustAlignBox(Content(), sz, ::g::Uno::Float4__New7((ind4 = Padding(), ::g::Uno::Float2__New2(ind4.X, ind4.Y)), ::g::Uno::Float2__op_Subtraction2(lp.Size(), (ind5 = Padding(), ::g::Uno::Float2__New2(ind5.Z, ind5.W)))), align);
    _contentMarginSize = sz;
    _contentAlignment = align;
}

// internal float2 Constrain(float2 t) [instance] :505
::g::Uno::Float2 ScrollViewBase::Constrain(::g::Uno::Float2 t)
{
    return IfSnap(ConstrainExtents(t));
}

// private float2 ConstrainDown(float2 t) [instance] :515
::g::Uno::Float2 ScrollViewBase::ConstrainDown(::g::Uno::Float2 t)
{
    return IfSnapDown(ConstrainExtents(t));
}

// internal float2 ConstrainExtents(float2 t) [instance] :496
::g::Uno::Float2 ScrollViewBase::ConstrainExtents(::g::Uno::Float2 t)
{
    if (AllowedScrollDirections() == 3)
        t.Y = 0.0f;
    else if (AllowedScrollDirections() == 12)
        t.X = 0.0f;

    return t;
}

// private float2 ConstrainUp(float2 t) [instance] :510
::g::Uno::Float2 ScrollViewBase::ConstrainUp(::g::Uno::Float2 t)
{
    return IfSnapUp(ConstrainExtents(t));
}

// internal float2 get_ContentMarginSize() [instance] :141
::g::Uno::Float2 ScrollViewBase::ContentMarginSize()
{
    return _contentMarginSize;
}

// internal float2 DistanceFromView(float2 position, Fuse.Controls.ScrollViewBase.DistanceFromViewTarget target) [instance] :246
::g::Uno::Float2 ScrollViewBase::DistanceFromView(::g::Uno::Float2 position, int32_t target)
{
    float x = 0.0f;
    float y = 0.0f;

    switch (target)
    {
        case 0:
        {
            x = position.X - ScrollPosition().X;
            y = position.Y - ScrollPosition().Y;
            break;
        }
        case 1:
        {
            x = (ScrollPosition().X + ActualSize().X) - position.X;
            y = (ScrollPosition().Y + ActualSize().Y) - position.Y;
            break;
        }
    }

    return ::g::Uno::Float2__New2(x, y);
}

// internal float4 DistanceToView(float2 min, float2 max) [instance] :222
::g::Uno::Float4 ScrollViewBase::DistanceToView(::g::Uno::Float2 min, ::g::Uno::Float2 max)
{
    ::g::Uno::Float2 fromStart = DistanceFromView(min, 0);
    ::g::Uno::Float2 fromEnd = DistanceFromView(max, 1);
    return ::g::Uno::Float4__New2(fromStart.X, fromStart.Y, fromEnd.X, fromEnd.Y);
}

// private Fuse.Elements.Element get_Element() [instance] :80
::g::Fuse::Elements::Element* ScrollViewBase::Element()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_Element()");
    return uAs< ::g::Fuse::Elements::Element*>(Content(), ::TYPES[8/*Fuse.Elements.Element*/]);
}

// private Fuse.Elements.Element FindAnchorElement() [instance] :112
::g::Fuse::Elements::Element* ScrollViewBase::FindAnchorElement()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "FindAnchorElement()");
    ::g::Fuse::Elements::Element* cur = NULL;
    float curDist = 0.0f;
    ::g::Uno::Float2 relAnchor = ::g::Fuse::Elements::AlignmentHelpers::GetAnchor(_contentAlignment);
    ::g::Uno::Float2 anchor = ::g::Uno::Float2__op_Multiply2(relAnchor, ActualSize());

    for (::g::Fuse::Elements::Element* c = (::g::Fuse::Elements::Element*)uPtr(Element())->FirstChild(::TYPES[7/*Fuse.Visual*/]->MakeMethod(2/*FirstChild<Fuse.Elements.Element>*/, ::TYPES[8/*Fuse.Elements.Element*/], NULL)); c != NULL; c = (::g::Fuse::Elements::Element*)uPtr(c)->NextSibling(::g::Fuse::Node_typeof()->MakeMethod(3/*NextSibling<Fuse.Elements.Element>*/, ::TYPES[8/*Fuse.Elements.Element*/], NULL)))
    {
        if (!uPtr(c)->HasMarginBox() || (uPtr(c)->LayoutRole() != 0))
            continue;

        ::g::Uno::Float2 cAnchor = ::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Subtraction2(uPtr(Content())->ActualPosition(), ScrollPosition()), uPtr(c)->ActualPosition()), ::g::Uno::Float2__op_Multiply2(uPtr(c)->ActualSize(), relAnchor));
        float dist = ::g::Uno::Vector::Length(::g::Uno::Float2__op_Subtraction2(cAnchor, anchor));

        if ((dist < curDist) || (cur == NULL))
        {
            cur = c;
            curDist = dist;
        }
    }

    return cur;
}

// private float2 FromScalarPosition(float value) [instance] :389
::g::Uno::Float2 ScrollViewBase::FromScalarPosition(float value)
{
    if (AllowedScrollDirections() == 3)
        return ::g::Uno::Float2__New2(value, 0.0f);
    else if (AllowedScrollDirections() == 12)
        return ::g::Uno::Float2__New2(0.0f, value);

    return ::g::Uno::Float2__New1(value);
}

// public Fuse.Input.GesturePriority get_GesturePriority() [instance] :113
int32_t ScrollViewBase::GesturePriority()
{
    return _gesturePriority;
}

// public void set_GesturePriority(Fuse.Input.GesturePriority value) [instance] :114
void ScrollViewBase::GesturePriority(int32_t value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_GesturePriority(Fuse.Input.GesturePriority)");

    if (_gesturePriority == value)
        return;

    _gesturePriority = value;
    OnScrollPropertyChanged(ScrollViewBase::GesturePriorityName_, (uObject*)this);
}

// public float2 GetVisualScrollPosition(Fuse.Visual n) [instance] :345
::g::Uno::Float2 ScrollViewBase::GetVisualScrollPosition(::g::Fuse::Visual* n)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "GetVisualScrollPosition(Fuse.Visual)");

    if ((n == NULL) || (Element() == NULL))
        return ::g::Uno::Float2__New1(0.0f);

    ::g::Uno::Float4x4 trans = uPtr(n)->GetTransformTo(Element());
    ::g::Uno::Float4 local = ::g::Uno::Vector::Transform4(::g::Uno::Float3__New1(0.0f), trans);
    ::g::Fuse::Elements::Element* elm = uAs< ::g::Fuse::Elements::Element*>(n, ::TYPES[8/*Fuse.Elements.Element*/]);

    if (elm == NULL)
        return ::g::Uno::Float2__New2(local.X, local.Y);

    return ::g::Uno::Float2__op_Subtraction2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__New2(local.X, local.Y), ::g::Uno::Float2__op_Division1(uPtr(elm)->ActualSize(), 2.0f)), ::g::Uno::Float2__op_Division1(ActualSize(), 2.0f));
}

// public void Goto(float2 position) [instance] :366
void ScrollViewBase::Goto(::g::Uno::Float2 position)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "Goto(float2)");

    if (_scroller == NULL)
        ScrollPosition(::g::Uno::Math::Min3(MaxScroll(), ::g::Uno::Math::Max3(MinScroll(), ScrollPosition())));
    else
        uPtr(_scroller)->Goto(position);
}

// public void GotoRelative(float2 position) [instance] :379
void ScrollViewBase::GotoRelative(::g::Uno::Float2 position)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "GotoRelative(float2)");
    Goto(RelativeToAbsolutePosition(position));
}

// public bool get_KeepFocusInView() [instance] :221
bool ScrollViewBase::KeepFocusInView()
{
    return _keepFocusInView;
}

// public void set_KeepFocusInView(bool value) [instance] :222
void ScrollViewBase::KeepFocusInView(bool value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_KeepFocusInView(bool)");

    if (_keepFocusInView != value)
    {
        _keepFocusInView = value;
        OnScrollPropertyChanged(ScrollViewBase::_keepFocusInViewName_, (uObject*)this);
    }
}

// public Fuse.Controls.ScrollViewLayoutMode get_LayoutMode() [instance] :31
int32_t ScrollViewBase::LayoutMode()
{
    return _layoutMode;
}

// public void set_LayoutMode(Fuse.Controls.ScrollViewLayoutMode value) [instance] :32
void ScrollViewBase::LayoutMode(int32_t value)
{
    _layoutMode = value;
}

// public float2 get_MaxOverflow() [instance] :466
::g::Uno::Float2 ScrollViewBase::MaxOverflow()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_MaxOverflow()");
    return ::g::Uno::Float2__op_Addition2(MaxScroll(), ConstrainUp((_scroller == NULL) ? ::g::Uno::Float2__New1(0.0f) : uPtr(_scroller)->OverflowExtent()));
}

// public float2 get_MaxScroll() [instance] :451
::g::Uno::Float2 ScrollViewBase::MaxScroll()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_MaxScroll()");
    ::g::Uno::Float4 ind8;
    ::g::Uno::Float4 ind9;

    if (Element() == NULL)
        return ::g::Uno::Float2__New1(0.0f);

    return ConstrainUp(::g::Uno::Math::Max3(::g::Uno::Float2__op_Subtraction2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Addition2(ContentMarginSize(), uPtr(Element())->ActualPosition()), (ind8 = Padding(), ::g::Uno::Float2__New2(ind8.X, ind8.Y))), (ind9 = Padding(), ::g::Uno::Float2__New2(ind9.Z, ind9.W))), ActualSize()), ::g::Uno::Float2__New1(0.0f)));
}

// public float2 get_MinOverflow() [instance] :490
::g::Uno::Float2 ScrollViewBase::MinOverflow()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_MinOverflow()");
    return ::g::Uno::Float2__op_Subtraction2(MinScroll(), ConstrainDown((_scroller == NULL) ? ::g::Uno::Float2__New1(0.0f) : uPtr(_scroller)->OverflowExtent()));
}

// public float2 get_MinScroll() [instance] :477
::g::Uno::Float2 ScrollViewBase::MinScroll()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_MinScroll()");
    ::g::Uno::Float4 ind10;

    if (Element() == NULL)
        return ::g::Uno::Float2__New1(0.0f);

    return ConstrainDown(::g::Uno::Math::Min3(::g::Uno::Float2__New1(0.0f), ::g::Uno::Float2__op_Subtraction2(uPtr(Element())->ActualPosition(), (ind10 = Padding(), ::g::Uno::Float2__New2(ind10.X, ind10.Y)))));
}

// public Fuse.Motion.MotionConfig get_Motion() [instance] :200
::g::Fuse::Motion::MotionConfig* ScrollViewBase::Motion()
{
    if (_motion == NULL)
        _motion = ::g::Fuse::Motion::ScrollViewMotion::New2();

    return _motion;
}

// public void set_Motion(Fuse.Motion.MotionConfig value) [instance] :206
void ScrollViewBase::Motion(::g::Fuse::Motion::MotionConfig* value)
{
    _motion = value;

    if (IsRootingCompleted())
        ::g::Fuse::Diagnostics::UserError(uString::Const("Motion should not be changed post-rooting"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.ScrollView\\1.7.2\\ScrollView.uno"), 210, uString::Const("set_Motion"), NULL);
}

// private Fuse.Controls.Native.IScrollView get_NativeScrollView() [instance] :12
uObject* ScrollViewBase::NativeScrollView()
{
    return uAs<uObject*>(NativeView(), ::g::Fuse::Controls::Native::IScrollView_typeof());
}

// private void OnScrollPositionChanged(float2 arrangeOffset, bool adjustment, Uno.UX.IPropertyListener origin) [instance] :436
void ScrollViewBase::OnScrollPositionChanged(::g::Uno::Float2 arrangeOffset, bool adjustment, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnScrollPositionChanged(float2,bool,Uno.UX.IPropertyListener)");
    OnPropertyChanged1(ScrollViewBase::ScrollPositionName_, origin);
    uDelegate* handler = ScrollPositionChanged1;

    if (::g::Uno::Delegate::op_Inequality(handler, NULL))
        uPtr(handler)->Invoke(2, this, (::g::Fuse::Controls::ScrollPositionChangedArgs*)::g::Fuse::Controls::ScrollPositionChangedArgs::New3(ScrollPosition(), arrangeOffset, adjustment, origin, RelativeScrollPosition()));
}

// private void OnScrollPropertyChanged(Uno.UX.Selector name, Uno.UX.IPropertyListener origin) [instance] :265
void ScrollViewBase::OnScrollPropertyChanged(::g::Uno::UX::Selector name, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnScrollPropertyChanged(Uno.UX.Selector,Uno.UX.IPropertyListener)");
    InvalidateLayout(2);
    OnPropertyChanged1(name, origin);
}

// public float2 get_RelativeScrollPosition() [instance] :412
::g::Uno::Float2 ScrollViewBase::RelativeScrollPosition()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_RelativeScrollPosition()");
    ::g::Uno::Float2 r = ::g::Uno::Float2__op_Subtraction2(MaxScroll(), MinScroll());
    ::g::Uno::Float2 q = ::g::Uno::Float2__op_Division2(::g::Uno::Float2__op_Subtraction2(ScrollPosition(), MinScroll()), ::g::Uno::Float2__op_Subtraction2(MaxScroll(), MinScroll()));

    if (r.X < 1e-05f)
        q.X = ((Element() == NULL) ? 0.5f : ::g::Fuse::Elements::AlignmentHelpers::GetAnchor(uPtr(Element())->Alignment()).X);

    if (r.Y < 1e-05f)
        q.Y = ((Element() == NULL) ? 0.5f : ::g::Fuse::Elements::AlignmentHelpers::GetAnchor(uPtr(Element())->Alignment()).Y);

    return q;
}

// public void set_RelativeScrollPosition(float2 value) [instance] :424
void ScrollViewBase::RelativeScrollPosition(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_RelativeScrollPosition(float2)");
    ScrollPosition(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Multiply2(value, ::g::Uno::Float2__op_Subtraction2(MaxScroll(), MinScroll())), MinScroll()));
}

// internal float2 RelativeToAbsolutePosition(float2 pos) [instance] :384
::g::Uno::Float2 ScrollViewBase::RelativeToAbsolutePosition(::g::Uno::Float2 pos)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "RelativeToAbsolutePosition(float2)");
    return ::g::Uno::Float2__op_Addition2(MinScroll(), ::g::Uno::Float2__op_Multiply2(::g::Uno::Float2__op_Subtraction2(MaxScroll(), MinScroll()), pos));
}

// public Fuse.Gestures.Scroller get_Scroller() [instance] :185
::g::Fuse::Gestures::Scroller* ScrollViewBase::Scroller()
{
    return _scroller;
}

// public float2 get_ScrollPosition() [instance] :280
::g::Uno::Float2 ScrollViewBase::ScrollPosition()
{
    return _scrollPosition;
}

// public void set_ScrollPosition(float2 value) [instance] :281
void ScrollViewBase::ScrollPosition(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_ScrollPosition(float2)");
    SetScrollPosition1(value, (uObject*)this);
}

// public generated void add_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler value) [instance] :433
void ScrollViewBase::add_ScrollPositionChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "add_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler)");
    ScrollPositionChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ScrollPositionChanged1, value), ::g::Fuse::Controls::ScrollPositionChangedHandler_typeof());
}

// public generated void remove_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler value) [instance] :433
void ScrollViewBase::remove_ScrollPositionChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "remove_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler)");
    ScrollPositionChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ScrollPositionChanged1, value), ::g::Fuse::Controls::ScrollPositionChangedHandler_typeof());
}

// private void SetScrollPosition(float2 position, float2 arrangeOffset, Uno.UX.IPropertyListener origin) [instance] :292
void ScrollViewBase::SetScrollPosition(::g::Uno::Float2 position, ::g::Uno::Float2 arrangeOffset, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "SetScrollPosition(float2,float2,Uno.UX.IPropertyListener)");
    SetScrollPositionImpl(position, arrangeOffset, true, origin);
}

// public void SetScrollPosition(float2 position, Uno.UX.IPropertyListener origin) [instance] :287
void ScrollViewBase::SetScrollPosition1(::g::Uno::Float2 position, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "SetScrollPosition(float2,Uno.UX.IPropertyListener)");
    SetScrollPositionImpl(position, ::g::Uno::Float2__New1(0.0f), false, origin);
}

// private void SetScrollPositionImpl(float2 position, float2 arrangeOffset, bool adjustment, Uno.UX.IPropertyListener origin) [instance] :297
void ScrollViewBase::SetScrollPositionImpl(::g::Uno::Float2 position, ::g::Uno::Float2 arrangeOffset, bool adjustment, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "SetScrollPositionImpl(float2,float2,bool,Uno.UX.IPropertyListener)");
    bool changed = false;
    position = Constrain(position);

    if (::g::Uno::Vector::LengthSquared(::g::Uno::Float2__op_Subtraction2(position, _scrollPosition)) > 1e-05f)
    {
        _scrollPosition = position;
        changed = true;
    }

    if (!SnapMinTransform())
        position = ::g::Uno::Math::Max3(MinScroll(), position);

    if (!SnapMaxTransform())
        position = ::g::Uno::Math::Min3(MaxScroll(), position);

    ::g::Uno::Float3 nv = ::g::Uno::Float3__New4(::g::Uno::Float2__op_UnaryNegation(position), 0.0f);

    if (::g::Uno::Vector::LengthSquared1(::g::Uno::Float3__op_Subtraction2(nv, uPtr(_scrollTranslation)->Vector())) > 1e-05f)
    {
        uPtr(_scrollTranslation)->Vector(nv);
        changed = true;
    }

    ::g::Uno::Float2 nRel = RelativeScrollPosition();

    if (::g::Uno::Vector::LengthSquared(::g::Uno::Float2__op_Subtraction2(nRel, _previousRelative)) > 1e-05f)
    {
        _previousRelative = nRel;
        changed = true;
    }

    if (origin != NULL)
    {
        uObject* sv = NativeScrollView();

        if (sv != NULL)
            ::g::Fuse::Controls::Native::IScrollView::ScrollPosition(uInterface(uPtr(sv), ::g::Fuse::Controls::Native::IScrollView_typeof()), position);
    }

    if (changed)
        OnScrollPositionChanged(arrangeOffset, adjustment, origin);
}

// public bool get_SnapMaxTransform() [instance] :141
bool ScrollViewBase::SnapMaxTransform()
{
    return _snapMaxTransform;
}

// public void set_SnapMaxTransform(bool value) [instance] :142
void ScrollViewBase::SnapMaxTransform(bool value)
{
    _snapMaxTransform = value;
}

// public bool get_SnapMinTransform() [instance] :131
bool ScrollViewBase::SnapMinTransform()
{
    return _snapMinTransform;
}

// public void set_SnapMinTransform(bool value) [instance] :132
void ScrollViewBase::SnapMinTransform(bool value)
{
    _snapMinTransform = value;
}

// internal float ToScalarPosition(float2 value) [instance] :398
float ScrollViewBase::ToScalarPosition(::g::Uno::Float2 value)
{
    if (AllowedScrollDirections() == 3)
        return value.X;
    else if (AllowedScrollDirections() == 12)
        return value.Y;

    return (value.X + value.Y) / 2.0f;
}

// private void UpdateScrollPosition() [instance] :68
void ScrollViewBase::UpdateScrollPosition()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "UpdateScrollPosition()");

    if (_placeAnchor != NULL)
    {
        ::g::Uno::Float2 relAnchor = ::g::Fuse::Elements::AlignmentHelpers::GetAnchor(_contentAlignment);
        ::g::Uno::Float2 oldAnchor = ::g::Uno::Float2__op_Multiply2(relAnchor, _oldActualSize);
        ::g::Uno::Float2 oldOffset = ::g::Uno::Float2__op_Subtraction2(_placePosition, oldAnchor);
        ::g::Uno::Float2 newAnchor = ::g::Uno::Float2__op_Multiply2(relAnchor, ActualSize());
        ::g::Uno::Float2 newOffset = ::g::Uno::Float2__op_Subtraction2(::g::Uno::Float2__op_Addition2(uPtr(Content())->ActualPosition(), uPtr(_placeAnchor)->ActualPosition()), newAnchor);
        ::g::Uno::Float2 diff = ::g::Uno::Float2__op_Subtraction2(newOffset, oldOffset);
        ::g::Uno::Float2 nsp = ::g::Uno::Float2__op_Addition2(ScrollPosition(), diff);
        ::g::Uno::Float2 ndiff = ::g::Uno::Float2__op_Subtraction2(nsp, ScrollPosition());
        SetScrollPosition(nsp, ndiff, (uObject*)this);
    }

    if ((_scroller != NULL) && IsRootingCompleted())
        ::g::Fuse::UpdateManager::AddDeferredAction3(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)::g::Fuse::Gestures::Scroller__CheckLimits_fn, uPtr(_scroller)), 4);
    else
    {
        ScrollPosition(::g::Uno::Math::Min3(MaxScroll(), ::g::Uno::Math::Max3(MinScroll(), ScrollPosition())));
        OnScrollPositionChanged(::g::Uno::Float2__New1(0.0f), false, (uObject*)this);
    }

    OnPropertyChanged(ScrollViewBase::SizingChanged_);
}

// public bool get_UserScroll() [instance] :90
bool ScrollViewBase::UserScroll()
{
    return _userScroll;
}

// public void set_UserScroll(bool value) [instance] :91
void ScrollViewBase::UserScroll(bool value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_UserScroll(bool)");

    if (_userScroll == value)
        return;

    _userScroll = value;
    OnScrollPropertyChanged(ScrollViewBase::UserScrollName_, (uObject*)this);
}

// private static bool getParams(Fuse.Controls.ScrollViewBase s, object[] args, string func, float2& pos) [static] :19
bool ScrollViewBase::getParams(ScrollViewBase* s, uArray* args, uString* func, ::g::Uno::Float2* pos)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "getParams(Fuse.Controls.ScrollViewBase,object[],string,float2&)");
    ScrollViewBase_typeof()->Init();

    if ((uPtr(args)->Length() == 0) || (uPtr(args)->Length() > 2))
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(uString::Const("ScrollViewBase."), func), uString::Const(" requires 1 or 2 arguments")), s, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.ScrollView\\1.7.2\\ScrollView.ScriptClass.uno"), 23, uString::Const("getParams"), NULL);
        *pos = ::g::Uno::Float2__New1(0.0f);
        return false;
    }

    *pos = (uPtr(args)->Length() == 1) ? uPtr(s)->FromScalarPosition(::g::Fuse::Marshal::ToFloat(uPtr(args)->Strong<uObject*>(0))) : ::g::Uno::Float2__New2(::g::Fuse::Marshal::ToFloat(uPtr(args)->Strong<uObject*>(0)), ::g::Fuse::Marshal::ToFloat(uPtr(args)->Strong<uObject*>(1)));
    return true;
}

// private static void goto_(Fuse.Controls.ScrollViewBase s, object[] args) [static] :40
void ScrollViewBase::goto_(ScrollViewBase* s, uArray* args)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "goto_(Fuse.Controls.ScrollViewBase,object[])");
    ScrollViewBase_typeof()->Init();
    ::g::Uno::Float2 pos;

    if (!ScrollViewBase::getParams(s, args, ::STRINGS[135/*"goto"*/], &pos))
        return;

    uPtr(s)->Goto(pos);
}

// private static void gotoRelative(Fuse.Controls.ScrollViewBase s, object[] args) [static] :54
void ScrollViewBase::gotoRelative(ScrollViewBase* s, uArray* args)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "gotoRelative(Fuse.Controls.ScrollViewBase,object[])");
    ScrollViewBase_typeof()->Init();
    ::g::Uno::Float2 pos;

    if (!ScrollViewBase::getParams(s, args, uString::Const("gotoToRelative"), &pos))
        return;

    uPtr(s)->GotoRelative(pos);
}

// public ScrollViewBase New() [static] :169
ScrollViewBase* ScrollViewBase::New3()
{
    ScrollViewBase* obj11 = (ScrollViewBase*)uNew(ScrollViewBase_typeof());
    obj11->ctor_6();
    return obj11;
}

// private static void seekTo(Fuse.Controls.ScrollViewBase s, object[] args) [static] :68
void ScrollViewBase::seekTo(ScrollViewBase* s, uArray* args)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "seekTo(Fuse.Controls.ScrollViewBase,object[])");
    ScrollViewBase_typeof()->Init();
    ::g::Uno::Float2 pos;

    if (!ScrollViewBase::getParams(s, args, uString::Const("seekTo"), &pos))
        return;

    uPtr(s)->ScrollPosition(pos);
}

// private static void seekToRelative(Fuse.Controls.ScrollViewBase s, object[] args) [static] :82
void ScrollViewBase::seekToRelative(ScrollViewBase* s, uArray* args)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "seekToRelative(Fuse.Controls.ScrollViewBase,object[])");
    ScrollViewBase_typeof()->Init();
    ::g::Uno::Float2 pos;

    if (!ScrollViewBase::getParams(s, args, uString::Const("seekToRelative"), &pos))
        return;

    uPtr(s)->RelativeScrollPosition(pos);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollView.Layout.uno
// --------------------------------------------------------------------------------------------------------

// public enum ScrollViewLayoutMode :11
uEnumType* ScrollViewLayoutMode_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.ScrollViewLayoutMode", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "PreserveScrollPosition", 0LL,
        "PreserveVisual", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollViewPager.ScriptClass.uno
// ------------------------------------------------------------------------------------------------------------------

// public partial sealed class ScrollViewPager :7
// {
// static ScrollViewPager() :9
static void ScrollViewPager__cctor_1_fn(uType* __type)
{
    ::g::Fuse::Scripting::ScriptClass_typeof()->Init();
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[29/*Fuse.Scripting.ScriptMember[]*/], 1, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(__type, NULL), uString::Const("check"), uDelegate::New(::g::Uno::Action1_typeof()->MakeType(__type, NULL), (void*)ScrollViewPager__check_fn))));
}

static void ScrollViewPager_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Controls::ScrollViewBase_typeof(),
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewPager_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(ScrollViewPager_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(ScrollViewPager_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(ScrollViewPager_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewPager_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewPager_type, interface5),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(ScrollViewPager_type, interface6));
    type->SetFields(16,
        ::g::Uno::Int_typeof(), offsetof(ScrollViewPager, _retain), 0,
        ::g::Uno::Float_typeof(), offsetof(ScrollViewPager, _endRange), 0,
        ::g::Fuse::Reactive::Each_typeof(), offsetof(ScrollViewPager, _each), 0,
        ::g::Fuse::Controls::ScrollViewBase_typeof(), offsetof(ScrollViewPager, _scrollable), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewPager, _pendingPosition), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewPager, _pendingSizing), 0,
        ::g::Uno::Int_typeof(), offsetof(ScrollViewPager, _lastActivityPosition), 0,
        ::g::Uno::Int_typeof(), offsetof(ScrollViewPager, _lastActivitySizing), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewPager, _nearTrueEnd), 0,
        ::g::Uno::Bool_typeof(), offsetof(ScrollViewPager, _nearTrueStart), 0,
        ::g::Uno::Float2_typeof(), offsetof(ScrollViewPager, _prevActualSize), 0,
        ScrollViewPager__ScrollViewPagerHandler_typeof(), offsetof(ScrollViewPager, ReachedEnd1), 0,
        ScrollViewPager__ScrollViewPagerHandler_typeof(), offsetof(ScrollViewPager, ReachedStart1), 0);
    type->Reflection.SetFunctions(12,
        new uFunction("Check", NULL, (void*)ScrollViewPager__Check_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("get_Each", NULL, (void*)ScrollViewPager__get_Each_fn, 0, false, ::g::Fuse::Reactive::Each_typeof(), 0),
        new uFunction("set_Each", NULL, (void*)ScrollViewPager__set_Each_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Reactive::Each_typeof()),
        new uFunction("get_EndRange", NULL, (void*)ScrollViewPager__get_EndRange_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_EndRange", NULL, (void*)ScrollViewPager__set_EndRange_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction(".ctor", NULL, (void*)ScrollViewPager__New2_fn, 0, true, type, 0),
        new uFunction("add_ReachedEnd", NULL, (void*)ScrollViewPager__add_ReachedEnd_fn, 0, false, uVoid_typeof(), 1, ScrollViewPager__ScrollViewPagerHandler_typeof()),
        new uFunction("remove_ReachedEnd", NULL, (void*)ScrollViewPager__remove_ReachedEnd_fn, 0, false, uVoid_typeof(), 1, ScrollViewPager__ScrollViewPagerHandler_typeof()),
        new uFunction("add_ReachedStart", NULL, (void*)ScrollViewPager__add_ReachedStart_fn, 0, false, uVoid_typeof(), 1, ScrollViewPager__ScrollViewPagerHandler_typeof()),
        new uFunction("remove_ReachedStart", NULL, (void*)ScrollViewPager__remove_ReachedStart_fn, 0, false, uVoid_typeof(), 1, ScrollViewPager__ScrollViewPagerHandler_typeof()),
        new uFunction("get_Retain", NULL, (void*)ScrollViewPager__get_Retain_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_Retain", NULL, (void*)ScrollViewPager__set_Retain_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()));
}

ScrollViewPager_type* ScrollViewPager_typeof()
{
    static uSStrong<ScrollViewPager_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Behavior_typeof();
    options.FieldCount = 29;
    options.InterfaceCount = 7;
    options.DependencyCount = 2;
    options.ObjectSize = sizeof(ScrollViewPager);
    options.TypeSize = sizeof(ScrollViewPager_type);
    type = (ScrollViewPager_type*)uClassType::New("Fuse.Controls.ScrollViewPager", options);
    type->fp_build_ = ScrollViewPager_build;
    type->fp_ctor_ = (void*)ScrollViewPager__New2_fn;
    type->fp_cctor_ = ScrollViewPager__cctor_1_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))ScrollViewPager__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))ScrollViewPager__OnUnrooted_fn;
    type->interface6.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))ScrollViewPager__UnoUXIPropertyListenerOnPropertyChanged_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated ScrollViewPager() :7
void ScrollViewPager__ctor_3_fn(ScrollViewPager* __this)
{
    __this->ctor_3();
}

// private static void check(Fuse.Controls.ScrollViewPager s) :15
void ScrollViewPager__check_fn(ScrollViewPager* s)
{
    ScrollViewPager::check(s);
}

// public void Check() :186
void ScrollViewPager__Check_fn(ScrollViewPager* __this)
{
    __this->Check();
}

// private void CheckPosition() :201
void ScrollViewPager__CheckPosition_fn(ScrollViewPager* __this)
{
    __this->CheckPosition();
}

// private void CheckSizing() :258
void ScrollViewPager__CheckSizing_fn(ScrollViewPager* __this)
{
    __this->CheckSizing();
}

// public Fuse.Reactive.Each get_Each() :79
void ScrollViewPager__get_Each_fn(ScrollViewPager* __this, ::g::Fuse::Reactive::Each** __retval)
{
    *__retval = __this->Each();
}

// public void set_Each(Fuse.Reactive.Each value) :80
void ScrollViewPager__set_Each_fn(ScrollViewPager* __this, ::g::Fuse::Reactive::Each* value)
{
    __this->Each(value);
}

// public float get_EndRange() :63
void ScrollViewPager__get_EndRange_fn(ScrollViewPager* __this, float* __retval)
{
    *__retval = __this->EndRange();
}

// public void set_EndRange(float value) :64
void ScrollViewPager__set_EndRange_fn(ScrollViewPager* __this, float* value)
{
    __this->EndRange(*value);
}

// public generated ScrollViewPager New() :7
void ScrollViewPager__New2_fn(ScrollViewPager** __retval)
{
    *__retval = ScrollViewPager::New2();
}

// protected override sealed void OnRooted() :84
void ScrollViewPager__OnRooted_fn(ScrollViewPager* __this)
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "OnRooted()");
    ::g::Fuse::Node__OnRooted_fn(__this);

    if (__this->Each() == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("Require an Each"), __this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.ScrollView\\1.7.2\\ScrollViewPager.uno"), 90, ::STRINGS[44/*"OnRooted"*/], NULL);
        return;
    }

    if (!uPtr(__this->Each())->HasLimit())
        uPtr(__this->Each())->Limit1(1);

    __this->_scrollable = ((::g::Fuse::Controls::ScrollViewBase*)uPtr(__this->Parent())->FindByType(::g::Fuse::Node_typeof()->MakeMethod(1/*FindByType<Fuse.Controls.ScrollViewBase>*/, ::g::Fuse::Controls::ScrollViewBase_typeof(), NULL)));

    if (__this->_scrollable == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("Could not find a Scrollable control."), __this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.ScrollView\\1.7.2\\ScrollViewPager.uno"), 100, ::STRINGS[44/*"OnRooted"*/], NULL);
        return;
    }

    if (uPtr(__this->_scrollable)->LayoutMode() == 0)
    {
        ::g::Fuse::Diagnostics::UserError(uString::Const("The ScrollView should have `LayoutMode=\"PreserveVisual\"` for paging to work correctly"), __this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.ScrollView\\1.7.2\\ScrollViewPager.uno"), 107, ::STRINGS[44/*"OnRooted"*/], NULL);
        return;
    }

    uPtr(__this->_scrollable)->AddPropertyListener((uObject*)__this);
    __this->_prevActualSize = ::g::Uno::Float2__New1(0.0f);
    __this->_lastActivityPosition = ::g::Fuse::UpdateManager::FrameIndex();
    __this->_lastActivitySizing = ::g::Fuse::UpdateManager::FrameIndex();
}

// protected override sealed void OnUnrooted() :117
void ScrollViewPager__OnUnrooted_fn(ScrollViewPager* __this)
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "OnUnrooted()");

    if (__this->_scrollable != NULL)
    {
        uPtr(__this->_scrollable)->RemovePropertyListener((uObject*)__this);
        __this->_scrollable = NULL;
    }

    ::g::Fuse::Node__OnUnrooted_fn(__this);
}

// public generated void add_ReachedEnd(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler value) :173
void ScrollViewPager__add_ReachedEnd_fn(ScrollViewPager* __this, uDelegate* value)
{
    __this->add_ReachedEnd(value);
}

// public generated void remove_ReachedEnd(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler value) :173
void ScrollViewPager__remove_ReachedEnd_fn(ScrollViewPager* __this, uDelegate* value)
{
    __this->remove_ReachedEnd(value);
}

// public generated void add_ReachedStart(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler value) :180
void ScrollViewPager__add_ReachedStart_fn(ScrollViewPager* __this, uDelegate* value)
{
    __this->add_ReachedStart(value);
}

// public generated void remove_ReachedStart(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler value) :180
void ScrollViewPager__remove_ReachedStart_fn(ScrollViewPager* __this, uDelegate* value)
{
    __this->remove_ReachedStart(value);
}

// private void RequestCheckPosition() :147
void ScrollViewPager__RequestCheckPosition_fn(ScrollViewPager* __this)
{
    __this->RequestCheckPosition();
}

// private void RequestCheckSizing() :157
void ScrollViewPager__RequestCheckSizing_fn(ScrollViewPager* __this)
{
    __this->RequestCheckSizing();
}

// public int get_Retain() :47
void ScrollViewPager__get_Retain_fn(ScrollViewPager* __this, int32_t* __retval)
{
    *__retval = __this->Retain();
}

// public void set_Retain(int value) :48
void ScrollViewPager__set_Retain_fn(ScrollViewPager* __this, int32_t* value)
{
    __this->Retain(*value);
}

// private void Uno.UX.IPropertyListener.OnPropertyChanged(Uno.UX.PropertyObject obj, Uno.UX.Selector prop) :128
void ScrollViewPager__UnoUXIPropertyListenerOnPropertyChanged_fn(ScrollViewPager* __this, ::g::Uno::UX::PropertyObject* obj, ::g::Uno::UX::Selector* prop)
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "Uno.UX.IPropertyListener.OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector prop_ = *prop;

    if (obj != __this->_scrollable)
        return;

    if (::g::Uno::UX::Selector__op_Equality(prop_, ::g::Fuse::Controls::ScrollViewBase::ScrollPositionName()))
    {
        __this->RequestCheckPosition();
        __this->_lastActivityPosition = ::g::Fuse::UpdateManager::FrameIndex();
    }
    else if (::g::Uno::UX::Selector__op_Equality(prop_, ::g::Fuse::Controls::ScrollViewBase::SizingChanged()))
    {
        __this->RequestCheckSizing();
        __this->_lastActivitySizing = ::g::Fuse::UpdateManager::FrameIndex();
    }
}

// public generated ScrollViewPager() [instance] :7
void ScrollViewPager::ctor_3()
{
    _retain = 3;
    _endRange = 0.75f;
    ctor_2();
}

// public void Check() [instance] :186
void ScrollViewPager::Check()
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "Check()");
    _nearTrueEnd = false;
    _nearTrueStart = false;
    ::g::Fuse::UpdateManager::AddDeferredAction2(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)ScrollViewPager__CheckSizing_fn, this), -1, 2);
}

// private void CheckPosition() [instance] :201
void ScrollViewPager::CheckPosition()
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "CheckPosition()");

    if (_pendingSizing || (_scrollable == NULL))
        return;

    _lastActivityPosition = ::g::Fuse::UpdateManager::FrameIndex();
    _pendingPosition = false;
    bool nearEnd = uPtr(_scrollable)->ToScalarPosition(::g::Uno::Float2__op_Division2(::g::Uno::Float2__op_Subtraction2(uPtr(_scrollable)->MaxScroll(), uPtr(_scrollable)->ScrollPosition()), uPtr(_scrollable)->ActualSize())) < EndRange();
    bool nearStart = uPtr(_scrollable)->ToScalarPosition(::g::Uno::Float2__op_Division2(::g::Uno::Float2__op_Subtraction2(uPtr(_scrollable)->ScrollPosition(), uPtr(_scrollable)->MinScroll()), uPtr(_scrollable)->ActualSize())) < EndRange();
    bool nearTrueEnd = false;
    bool nearTrueStart = false;

    if (nearEnd && nearStart)
    {
        nearTrueEnd = true;
        nearTrueStart = true;
    }
    else if (nearEnd)
    {
        int32_t offset = uPtr(Each())->Offset1();
        int32_t limit = uPtr(Each())->Limit1();
        int32_t count = uPtr(Each())->DataCount();

        if ((offset + limit) < count)
            uPtr(Each())->Offset1(offset + 1);
        else
            nearTrueEnd = true;
    }
    else if (nearStart)
    {
        int32_t offset1 = uPtr(Each())->Offset1();

        if (offset1 > 0)
            uPtr(Each())->Offset1(offset1 - 1);
        else
            nearTrueStart = true;
    }

    if ((nearTrueStart != _nearTrueStart) && nearTrueStart)
    {
        if (::g::Uno::Delegate::op_Inequality(ReachedStart1, NULL))
            uPtr(ReachedStart1)->Invoke(2, this, (::g::Fuse::Controls::ScrollViewPagerArgs*)::g::Fuse::Controls::ScrollViewPagerArgs::New2());
    }

    _nearTrueStart = nearTrueStart;

    if ((nearTrueEnd != _nearTrueEnd) && nearTrueEnd)
    {
        if (::g::Uno::Delegate::op_Inequality(ReachedEnd1, NULL))
            uPtr(ReachedEnd1)->Invoke(2, this, (::g::Fuse::Controls::ScrollViewPagerArgs*)::g::Fuse::Controls::ScrollViewPagerArgs::New2());
    }

    _nearTrueEnd = nearTrueEnd;
}

// private void CheckSizing() [instance] :258
void ScrollViewPager::CheckSizing()
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "CheckSizing()");

    if (_scrollable == NULL)
        return;

    _lastActivitySizing = ::g::Fuse::UpdateManager::FrameIndex();
    _pendingSizing = false;
    ::g::Uno::Float2 pages = ::g::Uno::Float2__op_Division2(uPtr(_scrollable)->ContentMarginSize(), uPtr(_scrollable)->ActualSize());
    float scalarPages = uPtr(_scrollable)->ToScalarPosition(pages);
    bool changed = false;

    if (scalarPages < (float)Retain())
    {
        int32_t count = uPtr(Each())->DataCount();
        int32_t offset = uPtr(Each())->Offset1();
        int32_t limit = uPtr(Each())->Limit1();

        if ((offset + limit) < count)
        {
            uPtr(Each())->Limit1(limit + 1);
            changed = true;
        }
    }
    else if ((scalarPages > (float)Retain()) && (uPtr(_scrollable)->ToScalarPosition(uPtr(_scrollable)->ActualSize()) < uPtr(_scrollable)->ToScalarPosition(_prevActualSize)))
    {
        int32_t limit1 = uPtr(Each())->Limit1();

        if (limit1 > 1)
        {
            uPtr(Each())->Limit1(limit1 - 1);
            changed = true;
        }
    }

    if (!changed)
    {
        CheckPosition();
        return;
    }

    _pendingSizing = true;
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)ScrollViewPager__CheckSizing_fn, this), 0, 1);
}

// public Fuse.Reactive.Each get_Each() [instance] :79
::g::Fuse::Reactive::Each* ScrollViewPager::Each()
{
    return _each;
}

// public void set_Each(Fuse.Reactive.Each value) [instance] :80
void ScrollViewPager::Each(::g::Fuse::Reactive::Each* value)
{
    _each = value;
}

// public float get_EndRange() [instance] :63
float ScrollViewPager::EndRange()
{
    return _endRange;
}

// public void set_EndRange(float value) [instance] :64
void ScrollViewPager::EndRange(float value)
{
    if (_endRange == value)
        return;

    _endRange = value;
}

// public generated void add_ReachedEnd(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler value) [instance] :173
void ScrollViewPager::add_ReachedEnd(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "add_ReachedEnd(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler)");
    ReachedEnd1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ReachedEnd1, value), ScrollViewPager__ScrollViewPagerHandler_typeof());
}

// public generated void remove_ReachedEnd(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler value) [instance] :173
void ScrollViewPager::remove_ReachedEnd(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "remove_ReachedEnd(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler)");
    ReachedEnd1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ReachedEnd1, value), ScrollViewPager__ScrollViewPagerHandler_typeof());
}

// public generated void add_ReachedStart(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler value) [instance] :180
void ScrollViewPager::add_ReachedStart(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "add_ReachedStart(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler)");
    ReachedStart1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ReachedStart1, value), ScrollViewPager__ScrollViewPagerHandler_typeof());
}

// public generated void remove_ReachedStart(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler value) [instance] :180
void ScrollViewPager::remove_ReachedStart(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "remove_ReachedStart(Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler)");
    ReachedStart1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ReachedStart1, value), ScrollViewPager__ScrollViewPagerHandler_typeof());
}

// private void RequestCheckPosition() [instance] :147
void ScrollViewPager::RequestCheckPosition()
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "RequestCheckPosition()");

    if (!_pendingPosition && !_pendingSizing)
    {
        ::g::Fuse::UpdateManager::AddDeferredAction2(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)ScrollViewPager__CheckPosition_fn, this), -1, 2);
        _pendingPosition = true;
    }
}

// private void RequestCheckSizing() [instance] :157
void ScrollViewPager::RequestCheckSizing()
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "RequestCheckSizing()");

    if (!_pendingSizing)
    {
        ::g::Fuse::UpdateManager::AddDeferredAction2(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)ScrollViewPager__CheckSizing_fn, this), -1, 2);
        _pendingSizing = true;
    }
}

// public int get_Retain() [instance] :47
int32_t ScrollViewPager::Retain()
{
    return _retain;
}

// public void set_Retain(int value) [instance] :48
void ScrollViewPager::Retain(int32_t value)
{
    if (_retain == value)
        return;

    _retain = value;
}

// private static void check(Fuse.Controls.ScrollViewPager s) [static] :15
void ScrollViewPager::check(ScrollViewPager* s)
{
    uStackFrame __("Fuse.Controls.ScrollViewPager", "check(Fuse.Controls.ScrollViewPager)");
    ScrollViewPager_typeof()->Init();
    uPtr(s)->Check();
}

// public generated ScrollViewPager New() [static] :7
ScrollViewPager* ScrollViewPager::New2()
{
    ScrollViewPager* obj1 = (ScrollViewPager*)uNew(ScrollViewPager_typeof());
    obj1->ctor_3();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollViewPager.uno
// ------------------------------------------------------------------------------------------------------

// public sealed class ScrollViewPagerArgs :8
// {
static void ScrollViewPagerArgs_build(uType* type)
{
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollViewPagerArgs__New2_fn, 0, true, type, 0));
}

uType* ScrollViewPagerArgs_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::EventArgs_typeof();
    options.ObjectSize = sizeof(ScrollViewPagerArgs);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.ScrollViewPagerArgs", options);
    type->fp_build_ = ScrollViewPagerArgs_build;
    type->fp_ctor_ = (void*)ScrollViewPagerArgs__New2_fn;
    return type;
}

// public generated ScrollViewPagerArgs() :8
void ScrollViewPagerArgs__ctor_1_fn(ScrollViewPagerArgs* __this)
{
    __this->ctor_1();
}

// public generated ScrollViewPagerArgs New() :8
void ScrollViewPagerArgs__New2_fn(ScrollViewPagerArgs** __retval)
{
    *__retval = ScrollViewPagerArgs::New2();
}

// public generated ScrollViewPagerArgs() [instance] :8
void ScrollViewPagerArgs::ctor_1()
{
    ctor_();
}

// public generated ScrollViewPagerArgs New() [static] :8
ScrollViewPagerArgs* ScrollViewPagerArgs::New2()
{
    ScrollViewPagerArgs* obj1 = (ScrollViewPagerArgs*)uNew(ScrollViewPagerArgs_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\ScrollViewPager.uno
// ------------------------------------------------------------------------------------------------------

// public delegate void ScrollViewPager.ScrollViewPagerHandler(object s, Fuse.Controls.ScrollViewPagerArgs args) :166
uDelegateType* ScrollViewPager__ScrollViewPagerHandler_typeof()
{
    static uSStrong<uDelegateType*> type;
    if (type != NULL) return type;

    type = uDelegateType::New("Fuse.Controls.ScrollViewPager.ScrollViewPagerHandler", 2, 0);
    type->SetSignature(uVoid_typeof(),
        uObject_typeof(),
        ::g::Fuse::Controls::ScrollViewPagerArgs_typeof());
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\SegmentedShape.uno
// ------------------------------------------------------------------------------------------------------------

// public abstract class SegmentedShape :21
// {
// static generated SegmentedShape() :21
static void SegmentedShape__cctor_4_fn(uType* __type)
{
    SegmentedShape::NamePathStart_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[84/*"PathStart"*/]);
    SegmentedShape::NamePathEnd_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[85/*"PathEnd"*/]);
    SegmentedShape::NamePathLength_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[86/*"PathLength"*/]);
}

static void SegmentedShape_build(uType* type)
{
    ::STRINGS[84] = uString::Const("PathStart");
    ::STRINGS[85] = uString::Const("PathEnd");
    ::STRINGS[86] = uString::Const("PathLength");
    ::STRINGS[87] = uString::Const("Unsupported Path start=");
    ::STRINGS[88] = uString::Const(", end=");
    ::STRINGS[89] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\Shapes\\SegmentedShape.uno");
    ::STRINGS[90] = uString::Const("CreatePartialSurfacePath");
    ::TYPES[65] = ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Drawing::LineSegment_typeof(), NULL);
    ::TYPES[19] = ::g::Uno::Action_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SegmentedShape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(SegmentedShape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(SegmentedShape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(SegmentedShape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SegmentedShape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SegmentedShape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SegmentedShape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(SegmentedShape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(SegmentedShape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(SegmentedShape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SegmentedShape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SegmentedShape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(SegmentedShape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(SegmentedShape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(SegmentedShape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(SegmentedShape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(SegmentedShape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(SegmentedShape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(SegmentedShape_type, interface18));
    type->SetFields(118,
        ::g::Uno::Float_typeof(), offsetof(SegmentedShape, _pathStart), 0,
        ::g::Uno::Float_typeof(), offsetof(SegmentedShape, _pathEnd), 0,
        ::g::Uno::Float_typeof(), offsetof(SegmentedShape, _pathLength), 0,
        ::g::Uno::Bool_typeof(), offsetof(SegmentedShape, _hasPathLength), 0,
        ::g::Fuse::Controls::PathMeasureMode_typeof(), offsetof(SegmentedShape, _pathMeasureMode), 0,
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Drawing::LineSegment_typeof(), NULL), offsetof(SegmentedShape, _segments), 0,
        ::g::Fuse::Drawing::LineSplitter_typeof(), offsetof(SegmentedShape, _splitter), 0,
        ::TYPES[19/*Uno.Action*/], offsetof(SegmentedShape, SegmentsChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&SegmentedShape::NamePathStart_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&SegmentedShape::NamePathEnd_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&SegmentedShape::NamePathLength_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(8,
        new uFunction("get_PathEnd", NULL, (void*)SegmentedShape__get_PathEnd_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_PathEnd", NULL, (void*)SegmentedShape__set_PathEnd_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_PathLength", NULL, (void*)SegmentedShape__get_PathLength_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_PathLength", NULL, (void*)SegmentedShape__set_PathLength_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_PathMeasureMode", NULL, (void*)SegmentedShape__get_PathMeasureMode_fn, 0, false, ::g::Fuse::Controls::PathMeasureMode_typeof(), 0),
        new uFunction("set_PathMeasureMode", NULL, (void*)SegmentedShape__set_PathMeasureMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::PathMeasureMode_typeof()),
        new uFunction("get_PathStart", NULL, (void*)SegmentedShape__get_PathStart_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_PathStart", NULL, (void*)SegmentedShape__set_PathStart_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

SegmentedShape_type* SegmentedShape_typeof()
{
    static uSStrong<SegmentedShape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Shape_typeof();
    options.FieldCount = 129;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(SegmentedShape);
    options.TypeSize = sizeof(SegmentedShape_type);
    type = (SegmentedShape_type*)uClassType::New("Fuse.Controls.SegmentedShape", options);
    type->fp_build_ = SegmentedShape_build;
    type->fp_cctor_ = SegmentedShape__cctor_4_fn;
    type->fp_CreateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::Drawing::Surface*, ::g::Fuse::Drawing::SurfacePath**))SegmentedShape__CreateSurfacePath_fn;
    type->fp_InvalidateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*))SegmentedShape__InvalidateSurfacePath_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// internal SegmentedShape() :23
void SegmentedShape__ctor_7_fn(SegmentedShape* __this)
{
    __this->ctor_7();
}

// private Fuse.Drawing.SurfacePath CreatePartialSurfacePath(Fuse.Drawing.Surface surface) :175
void SegmentedShape__CreatePartialSurfacePath_fn(SegmentedShape* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    *__retval = __this->CreatePartialSurfacePath(surface);
}

// protected override sealed Fuse.Drawing.SurfacePath CreateSurfacePath(Fuse.Drawing.Surface surface) :133
void SegmentedShape__CreateSurfacePath_fn(SegmentedShape* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "CreateSurfacePath(Fuse.Drawing.Surface)");

    if (((__this->PathStart() != 0.0f) || (__this->PathEnd() != 1.0f)) || __this->_hasPathLength)
        return *__retval = __this->CreatePartialSurfacePath(surface), void();

    return *__retval = uPtr(surface)->CreatePath(__this->Segments(), 0), void();
}

// private float get_EffectivePathEnd() :130
void SegmentedShape__get_EffectivePathEnd_fn(SegmentedShape* __this, float* __retval)
{
    *__retval = __this->EffectivePathEnd();
}

// protected override void InvalidateSurfacePath() :142
void SegmentedShape__InvalidateSurfacePath_fn(SegmentedShape* __this)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "InvalidateSurfacePath()");
    ::g::Fuse::Controls::Shape__InvalidateSurfacePath_fn(__this);
    __this->_splitter = NULL;
    __this->_segments = NULL;
    __this->InvalidateVisual();

    if (::g::Uno::Delegate::op_Inequality(__this->SegmentsChanged1, NULL))
        uPtr(__this->SegmentsChanged1)->InvokeVoid();
}

// public float get_PathEnd() :68
void SegmentedShape__get_PathEnd_fn(SegmentedShape* __this, float* __retval)
{
    *__retval = __this->PathEnd();
}

// public void set_PathEnd(float value) :69
void SegmentedShape__set_PathEnd_fn(SegmentedShape* __this, float* value)
{
    __this->PathEnd(*value);
}

// public float get_PathLength() :95
void SegmentedShape__get_PathLength_fn(SegmentedShape* __this, float* __retval)
{
    *__retval = __this->PathLength();
}

// public void set_PathLength(float value) :96
void SegmentedShape__set_PathLength_fn(SegmentedShape* __this, float* value)
{
    __this->PathLength(*value);
}

// public Fuse.Controls.PathMeasureMode get_PathMeasureMode() :118
void SegmentedShape__get_PathMeasureMode_fn(SegmentedShape* __this, int32_t* __retval)
{
    *__retval = __this->PathMeasureMode();
}

// public void set_PathMeasureMode(Fuse.Controls.PathMeasureMode value) :119
void SegmentedShape__set_PathMeasureMode_fn(SegmentedShape* __this, int32_t* value)
{
    __this->PathMeasureMode(*value);
}

// public float get_PathStart() :43
void SegmentedShape__get_PathStart_fn(SegmentedShape* __this, float* __retval)
{
    *__retval = __this->PathStart();
}

// public void set_PathStart(float value) :44
void SegmentedShape__set_PathStart_fn(SegmentedShape* __this, float* value)
{
    __this->PathStart(*value);
}

// internal float2 PointAtDistance(float distance) :210
void SegmentedShape__PointAtDistance_fn(SegmentedShape* __this, float* distance, ::g::Uno::Float2* __retval)
{
    *__retval = __this->PointAtDistance(*distance);
}

// internal float2 PointAtTime(float time) :222
void SegmentedShape__PointAtTime_fn(SegmentedShape* __this, float* time, ::g::Uno::Float2* __retval)
{
    *__retval = __this->PointAtTime(*time);
}

// private Uno.Collections.IList<Fuse.Drawing.LineSegment> get_Segments() :156
void SegmentedShape__get_Segments_fn(SegmentedShape* __this, uObject** __retval)
{
    *__retval = __this->Segments();
}

// internal generated void add_SegmentsChanged(Uno.Action value) :140
void SegmentedShape__add_SegmentsChanged_fn(SegmentedShape* __this, uDelegate* value)
{
    __this->add_SegmentsChanged(value);
}

// internal generated void remove_SegmentsChanged(Uno.Action value) :140
void SegmentedShape__remove_SegmentsChanged_fn(SegmentedShape* __this, uDelegate* value)
{
    __this->remove_SegmentsChanged(value);
}

// private Fuse.Drawing.LineSplitter get_Splitter() :167
void SegmentedShape__get_Splitter_fn(SegmentedShape* __this, ::g::Fuse::Drawing::LineSplitter** __retval)
{
    *__retval = __this->Splitter();
}

// internal float2 TangentAtDistance(float distance) :216
void SegmentedShape__TangentAtDistance_fn(SegmentedShape* __this, float* distance, ::g::Uno::Float2* __retval)
{
    *__retval = __this->TangentAtDistance(*distance);
}

// internal float2 TangentAtTime(float time) :227
void SegmentedShape__TangentAtTime_fn(SegmentedShape* __this, float* time, ::g::Uno::Float2* __retval)
{
    *__retval = __this->TangentAtTime(*time);
}

::g::Uno::UX::Selector SegmentedShape::NamePathStart_;
::g::Uno::UX::Selector SegmentedShape::NamePathEnd_;
::g::Uno::UX::Selector SegmentedShape::NamePathLength_;

// internal SegmentedShape() [instance] :23
void SegmentedShape::ctor_7()
{
    _pathStart = 0.0f;
    _pathEnd = 1.0f;
    _pathLength = 1.0f;
    _pathMeasureMode = 1;
    ctor_6();
}

// private Fuse.Drawing.SurfacePath CreatePartialSurfacePath(Fuse.Drawing.Surface surface) [instance] :175
::g::Fuse::Drawing::SurfacePath* SegmentedShape::CreatePartialSurfacePath(::g::Fuse::Drawing::Surface* surface)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "CreatePartialSurfacePath(Fuse.Drawing.Surface)");
    ::g::Uno::Collections::List* list = (::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[65/*Uno.Collections.List<Fuse.Drawing.LineSegment>*/]);
    float start = PathStart();
    float end = EffectivePathEnd();

    if ((start < 0.0f) || (start > 1.0f))
    {
        float inc = -::g::Uno::Math::Floor1(start);
        start = start + inc;
        end = end + inc;
    }

    if ((end < start) || ((end - start) > 1.0f))
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition1(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition1(::STRINGS[87/*"Unsupported...*/], uBox(::g::Uno::Float_typeof(), start)), ::STRINGS[88/*", end="*/]), uBox(::g::Uno::Float_typeof(), end)), this, ::STRINGS[89/*"C:\\Users\\...*/], 192, ::STRINGS[90/*"CreateParti...*/], NULL);
        return uPtr(surface)->CreatePath((uObject*)list, 0);
    }

    float startT = start;
    float endT = end;

    if (PathMeasureMode() == 1)
    {
        startT = uPtr(Splitter())->DistanceToTime(startT);
        endT = uPtr(Splitter())->DistanceToTime(endT);
    }

    uPtr(Splitter())->SplitTime(startT, endT, (uObject*)list);
    return uPtr(surface)->CreatePath((uObject*)list, 0);
}

// private float get_EffectivePathEnd() [instance] :130
float SegmentedShape::EffectivePathEnd()
{
    return _hasPathLength ? _pathStart + _pathLength : _pathEnd;
}

// public float get_PathEnd() [instance] :68
float SegmentedShape::PathEnd()
{
    return _pathEnd;
}

// public void set_PathEnd(float value) [instance] :69
void SegmentedShape::PathEnd(float value)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "set_PathEnd(float)");

    if ((_pathEnd == value) && !_hasPathLength)
        return;

    _pathEnd = value;
    _hasPathLength = false;
    OnPropertyChanged(SegmentedShape::NamePathEnd_);
    InvalidateSurfacePath();
}

// public float get_PathLength() [instance] :95
float SegmentedShape::PathLength()
{
    return _pathLength;
}

// public void set_PathLength(float value) [instance] :96
void SegmentedShape::PathLength(float value)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "set_PathLength(float)");

    if ((_pathLength == value) && _hasPathLength)
        return;

    _hasPathLength = true;
    _pathLength = value;
    OnPropertyChanged(SegmentedShape::NamePathLength_);
    InvalidateSurfacePath();
}

// public Fuse.Controls.PathMeasureMode get_PathMeasureMode() [instance] :118
int32_t SegmentedShape::PathMeasureMode()
{
    return _pathMeasureMode;
}

// public void set_PathMeasureMode(Fuse.Controls.PathMeasureMode value) [instance] :119
void SegmentedShape::PathMeasureMode(int32_t value)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "set_PathMeasureMode(Fuse.Controls.PathMeasureMode)");

    if (value == _pathMeasureMode)
        return;

    _pathMeasureMode = value;
    InvalidateSurfacePath();
}

// public float get_PathStart() [instance] :43
float SegmentedShape::PathStart()
{
    return _pathStart;
}

// public void set_PathStart(float value) [instance] :44
void SegmentedShape::PathStart(float value)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "set_PathStart(float)");

    if (_pathStart == value)
        return;

    _pathStart = value;
    OnPropertyChanged(SegmentedShape::NamePathStart_);
    InvalidateSurfacePath();
}

// internal float2 PointAtDistance(float distance) [instance] :210
::g::Uno::Float2 SegmentedShape::PointAtDistance(float distance)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "PointAtDistance(float)");
    float t = uPtr(Splitter())->DistanceToTime(distance);
    return uPtr(Splitter())->PointAtTime(t);
}

// internal float2 PointAtTime(float time) [instance] :222
::g::Uno::Float2 SegmentedShape::PointAtTime(float time)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "PointAtTime(float)");
    return uPtr(Splitter())->PointAtTime(time);
}

// private Uno.Collections.IList<Fuse.Drawing.LineSegment> get_Segments() [instance] :156
uObject* SegmentedShape::Segments()
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "get_Segments()");

    if (_segments == NULL)
        _segments = GetSegments();

    return _segments;
}

// internal generated void add_SegmentsChanged(Uno.Action value) [instance] :140
void SegmentedShape::add_SegmentsChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "add_SegmentsChanged(Uno.Action)");
    SegmentsChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(SegmentsChanged1, value), ::TYPES[19/*Uno.Action*/]);
}

// internal generated void remove_SegmentsChanged(Uno.Action value) [instance] :140
void SegmentedShape::remove_SegmentsChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "remove_SegmentsChanged(Uno.Action)");
    SegmentsChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(SegmentsChanged1, value), ::TYPES[19/*Uno.Action*/]);
}

// private Fuse.Drawing.LineSplitter get_Splitter() [instance] :167
::g::Fuse::Drawing::LineSplitter* SegmentedShape::Splitter()
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "get_Splitter()");

    if (_splitter == NULL)
        _splitter = ::g::Fuse::Drawing::LineSplitter::New1(Segments());

    return _splitter;
}

// internal float2 TangentAtDistance(float distance) [instance] :216
::g::Uno::Float2 SegmentedShape::TangentAtDistance(float distance)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "TangentAtDistance(float)");
    float t = uPtr(Splitter())->DistanceToTime(distance);
    return ::g::Uno::Vector::Normalize(uPtr(Splitter())->DirectionAtTime(t));
}

// internal float2 TangentAtTime(float time) [instance] :227
::g::Uno::Float2 SegmentedShape::TangentAtTime(float time)
{
    uStackFrame __("Fuse.Controls.SegmentedShape", "TangentAtTime(float)");
    return ::g::Uno::Vector::Normalize(uPtr(Splitter())->DirectionAtTime(time));
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Behaviors\Shadow.uno
// -------------------------------------------------------------------------------------------------------

// public sealed class Shadow :27
// {
static void Shadow_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Node_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Node_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Node_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface5));
    type->SetFields(16,
        ::g::Fuse::Elements::Element_typeof(), offsetof(Shadow, _elementParent), 0,
        ::g::Fuse::Effects::DropShadow_typeof(), offsetof(Shadow, _dropShadow), 0,
        ::g::Fuse::Controls::Primitives::ShadowElement_typeof(), offsetof(Shadow, _rectangle), 0,
        ::g::Fuse::Translation_typeof(), offsetof(Shadow, _rectangleTranslation), 0,
        Shadow__ShadowMode_typeof(), offsetof(Shadow, _mode), 0,
        ::g::Uno::Float_typeof(), offsetof(Shadow, _angle), 0,
        ::g::Uno::Float_typeof(), offsetof(Shadow, _distance), 0,
        ::g::Uno::Float_typeof(), offsetof(Shadow, _size), 0,
        ::g::Uno::Float4_typeof(), offsetof(Shadow, _color), 0);
    type->Reflection.SetFunctions(11,
        new uFunction("get_Angle", NULL, (void*)Shadow__get_Angle_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Angle", NULL, (void*)Shadow__set_Angle_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Color", NULL, (void*)Shadow__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)Shadow__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Distance", NULL, (void*)Shadow__get_Distance_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Distance", NULL, (void*)Shadow__set_Distance_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Mode", NULL, (void*)Shadow__get_Mode_fn, 0, false, Shadow__ShadowMode_typeof(), 0),
        new uFunction("set_Mode", NULL, (void*)Shadow__set_Mode_fn, 0, false, uVoid_typeof(), 1, Shadow__ShadowMode_typeof()),
        new uFunction(".ctor", NULL, (void*)Shadow__New2_fn, 0, true, type, 0),
        new uFunction("get_Size", NULL, (void*)Shadow__get_Size_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Size", NULL, (void*)Shadow__set_Size_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

::g::Fuse::Node_type* Shadow_typeof()
{
    static uSStrong< ::g::Fuse::Node_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Behavior_typeof();
    options.FieldCount = 25;
    options.InterfaceCount = 6;
    options.ObjectSize = sizeof(Shadow);
    options.TypeSize = sizeof(::g::Fuse::Node_type);
    type = (::g::Fuse::Node_type*)uClassType::New("Fuse.Controls.Shadow", options);
    type->fp_build_ = Shadow_build;
    type->fp_ctor_ = (void*)Shadow__New2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Shadow__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Shadow__OnUnrooted_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Shadow() :70
void Shadow__ctor_3_fn(Shadow* __this)
{
    __this->ctor_3();
}

// private void AddDecoration() :160
void Shadow__AddDecoration_fn(Shadow* __this)
{
    __this->AddDecoration();
}

// public float get_Angle() :83
void Shadow__get_Angle_fn(Shadow* __this, float* __retval)
{
    *__retval = __this->Angle();
}

// public void set_Angle(float value) :84
void Shadow__set_Angle_fn(Shadow* __this, float* value)
{
    __this->Angle(*value);
}

// public float4 get_Color() :147
void Shadow__get_Color_fn(Shadow* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :148
void Shadow__set_Color_fn(Shadow* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// public float get_Distance() :100
void Shadow__get_Distance_fn(Shadow* __this, float* __retval)
{
    *__retval = __this->Distance();
}

// public void set_Distance(float value) :101
void Shadow__set_Distance_fn(Shadow* __this, float* value)
{
    __this->Distance(*value);
}

// public Fuse.Controls.Shadow.ShadowMode get_Mode() :50
void Shadow__get_Mode_fn(Shadow* __this, int32_t* __retval)
{
    *__retval = __this->Mode();
}

// public void set_Mode(Fuse.Controls.Shadow.ShadowMode value) :55
void Shadow__set_Mode_fn(Shadow* __this, int32_t* value)
{
    __this->Mode(*value);
}

// public Shadow New() :70
void Shadow__New2_fn(Shadow** __retval)
{
    *__retval = Shadow::New2();
}

// private float2 get_Offset() :115
void Shadow__get_Offset_fn(Shadow* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Offset();
}

// protected override sealed void OnRooted() :224
void Shadow__OnRooted_fn(Shadow* __this)
{
    uStackFrame __("Fuse.Controls.Shadow", "OnRooted()");
    ::g::Fuse::Node__OnRooted_fn(__this);
    __this->_elementParent = uAs< ::g::Fuse::Elements::Element*>(__this->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]);

    if (__this->_elementParent == NULL)
        U_THROW(::g::Uno::Exception::New2(::g::Uno::String::op_Addition1(uString::Const("Invalid parent for Effect: "), __this->Parent())));

    __this->AddDecoration();
}

// protected override sealed void OnUnrooted() :235
void Shadow__OnUnrooted_fn(Shadow* __this)
{
    uStackFrame __("Fuse.Controls.Shadow", "OnUnrooted()");
    __this->RemoveDecoration();
    __this->_elementParent = NULL;
    ::g::Fuse::Node__OnUnrooted_fn(__this);
}

// private void RemoveDecoration() :201
void Shadow__RemoveDecoration_fn(Shadow* __this)
{
    __this->RemoveDecoration();
}

// public float get_Size() :126
void Shadow__get_Size_fn(Shadow* __this, float* __retval)
{
    *__retval = __this->Size();
}

// public void set_Size(float value) :127
void Shadow__set_Size_fn(Shadow* __this, float* value)
{
    __this->Size(*value);
}

// public Shadow() [instance] :70
void Shadow::ctor_3()
{
    uStackFrame __("Fuse.Controls.Shadow", ".ctor()");
    ctor_2();
    Size(5.0f);
    Color(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 0.35f));
    Angle(90.0f);
    Distance(3.0f);
}

// private void AddDecoration() [instance] :160
void Shadow::AddDecoration()
{
    uStackFrame __("Fuse.Controls.Shadow", "AddDecoration()");
    ::g::Fuse::Controls::Primitives::ShadowElement* collection1;
    ::g::Uno::UX::Size ind3;
    ::g::Uno::UX::Size ind4;
    ::g::Uno::Float4 ind5;
    float ind6;
    ::g::Fuse::Effects::DropShadow* collection2;
    ::g::Uno::Float4 ind7;
    float ind8;
    float ind9;
    float ind10;

    switch (_mode)
    {
        case 0:
        {
            if (_rectangle != NULL)
                U_THROW(::g::Uno::Exception::New2(uString::Const("Invalid rectangle-state")));

            _rectangle = (collection1 = ::g::Fuse::Controls::Primitives::ShadowElement::New2(), uPtr(collection1)->Layer(0), 0, ind3 = ::g::Uno::UX::Size__New1(100.0f, 4), uPtr(collection1)->Width(ind3), ind3, ind4 = ::g::Uno::UX::Size__New1(100.0f, 4), uPtr(collection1)->Height(ind4), ind4, ind5 = _color, uPtr(collection1)->Color(ind5), ind5, ind6 = _size, uPtr(collection1)->ShadowSize(ind6), ind6, collection1);
            _rectangleTranslation = ::g::Fuse::Translation::New2();
            uPtr(_rectangleTranslation)->XY(Offset());
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_rectangle)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _rectangleTranslation);
            uPtr(_elementParent)->InsertAfter(this, _rectangle);
            break;
        }
        case 1:
        {
            if (_dropShadow != NULL)
                U_THROW(::g::Uno::Exception::New2(uString::Const("Invalid dropshadow-state")));

            _dropShadow = (collection2 = ::g::Fuse::Effects::DropShadow::New2(), ind7 = _color, uPtr(collection2)->Color(ind7), ind7, ind8 = _size, uPtr(collection2)->Size(ind8), ind8, ind9 = _angle, uPtr(collection2)->Angle(ind9), ind9, ind10 = _distance, uPtr(collection2)->Distance(ind10), ind10, collection2);
            uPtr(_elementParent)->InsertAfter(this, _dropShadow);
            break;
        }
    }
}

// public float get_Angle() [instance] :83
float Shadow::Angle()
{
    return _angle;
}

// public void set_Angle(float value) [instance] :84
void Shadow::Angle(float value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Angle(float)");
    _angle = value;

    if (_dropShadow != NULL)
        uPtr(_dropShadow)->Angle(value);

    if (_rectangleTranslation != NULL)
        uPtr(_rectangleTranslation)->XY(Offset());
}

// public float4 get_Color() [instance] :147
::g::Uno::Float4 Shadow::Color()
{
    return _color;
}

// public void set_Color(float4 value) [instance] :148
void Shadow::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Color(float4)");
    _color = value;

    if (_rectangle != NULL)
        uPtr(_rectangle)->Color(_color);

    if (_dropShadow != NULL)
        uPtr(_dropShadow)->Color(_color);
}

// public float get_Distance() [instance] :100
float Shadow::Distance()
{
    return _distance;
}

// public void set_Distance(float value) [instance] :101
void Shadow::Distance(float value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Distance(float)");
    _distance = value;

    if (_dropShadow != NULL)
        uPtr(_dropShadow)->Distance(value);

    if (_rectangleTranslation != NULL)
        uPtr(_rectangleTranslation)->XY(Offset());
}

// public Fuse.Controls.Shadow.ShadowMode get_Mode() [instance] :50
int32_t Shadow::Mode()
{
    return _mode;
}

// public void set_Mode(Fuse.Controls.Shadow.ShadowMode value) [instance] :55
void Shadow::Mode(int32_t value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Mode(Fuse.Controls.Shadow.ShadowMode)");

    if (_mode != value)
    {
        if (IsRootingCompleted())
            RemoveDecoration();

        _mode = value;

        if (IsRootingCompleted())
            AddDecoration();
    }
}

// private float2 get_Offset() [instance] :115
::g::Uno::Float2 Shadow::Offset()
{
    float th = Angle() * 0.0174532924f;
    return ::g::Uno::Float2__op_Multiply1(::g::Uno::Float2__New2(-::g::Uno::Math::Cos1(th), ::g::Uno::Math::Sin1(th)), Distance());
}

// private void RemoveDecoration() [instance] :201
void Shadow::RemoveDecoration()
{
    uStackFrame __("Fuse.Controls.Shadow", "RemoveDecoration()");
    bool ret12;
    bool ret13;

    switch (_mode)
    {
        case 0:
        {
            if (_rectangle == NULL)
                U_THROW(::g::Uno::Exception::New2(uString::Const("Invalid rectangle-state")));

            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(_elementParent)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _rectangle, &ret12);
            _rectangle = NULL;
            _rectangleTranslation = NULL;
            break;
        }
        case 1:
        {
            if (_dropShadow == NULL)
                U_THROW(::g::Uno::Exception::New2(uString::Const("Invalid rectangle-state")));

            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(_elementParent)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _dropShadow, &ret13);
            _dropShadow = NULL;
            break;
        }
    }
}

// public float get_Size() [instance] :126
float Shadow::Size()
{
    return _size;
}

// public void set_Size(float value) [instance] :127
void Shadow::Size(float value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Size(float)");
    _size = value;

    if (_rectangle != NULL)
        uPtr(_rectangle)->ShadowSize(_size);

    if (_dropShadow != NULL)
        uPtr(_dropShadow)->Size(_size);
}

// public Shadow New() [static] :70
Shadow* Shadow::New2()
{
    Shadow* obj11 = (Shadow*)uNew(Shadow_typeof());
    obj11->ctor_3();
    return obj11;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Behaviors\Shadow.uno
// -------------------------------------------------------------------------------------------------------

// public enum Shadow.ShadowMode :30
uEnumType* Shadow__ShadowMode_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.Shadow.ShadowMode", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Background", 0LL,
        "PerPixel", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Shape.Resources.uno
// -------------------------------------------------------------------------------------------------------------

// public interfacemodifiers class Shape :17
// {
// static generated Shape() :17
static void Shape__cctor_3_fn(uType* __type)
{
    ::g::Fuse::Properties_typeof()->Init();
    Shape::_loadingResourcesHandle_ = ::g::Fuse::Properties::CreateHandle();
    Shape::ColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[55/*"Color"*/]);
    Shape::_widthName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("Width"));
    Shape::_offsetName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("Offset"));
}

static void Shape_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Triggers::BusyTask_typeof(),
        ::g::Fuse::ILoadingStatic_typeof(),
        ::g::Fuse::Drawing::SurfaceManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Shape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(Shape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Shape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Shape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Shape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Shape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Shape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Shape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(Shape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(Shape_type, interface18));
    type->SetFields(110,
        ::g::Fuse::Triggers::BusyTask_typeof(), offsetof(Shape, _loadingResourceTask), 0,
        ::g::Uno::Bool_typeof(), offsetof(Shape, _surfacePathDirty), 0,
        ::g::Fuse::Drawing::SurfacePath_typeof(), offsetof(Shape, _surfacePath), 0,
        ::g::Uno::Collections::RootableList_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(Shape, _fills), 0,
        ::g::Uno::Collections::RootableList_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL), offsetof(Shape, _strokes), 0,
        ::g::Uno::Float_typeof(), offsetof(Shape, _smoothness), 0,
        ::g::Fuse::Drawing::Surface_typeof(), offsetof(Shape, _surface1), 0,
        ::g::Fuse::Drawing::DrawObjectWatcher_typeof(), offsetof(Shape, _watcher), 0,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&Shape::_loadingResourcesHandle_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Shape::ColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Shape::_widthName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Shape::_offsetName_, uFieldFlagsStatic);
    type->Reflection.SetFields(1,
        new uField("ColorPropertyName", 119));
    type->Reflection.SetFunctions(19,
        new uFunction("get_Color", NULL, (void*)Shape__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)Shape__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Fill", NULL, (void*)Shape__get_Fill_fn, 0, false, ::g::Fuse::Drawing::Brush_typeof(), 0),
        new uFunction("set_Fill", NULL, (void*)Shape__set_Fill_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::Brush_typeof()),
        new uFunction("get_Fills", NULL, (void*)Shape__get_Fills_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), 0),
        new uFunction("get_HasFills", NULL, (void*)Shape__get_HasFills_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_HasStrokes", NULL, (void*)Shape__get_HasStrokes_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("SetColor", NULL, (void*)Shape__SetColor_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float4_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Smoothness", NULL, (void*)Shape__get_Smoothness_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Smoothness", NULL, (void*)Shape__set_Smoothness_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Stroke", NULL, (void*)Shape__get_Stroke_fn, 0, false, ::g::Fuse::Drawing::Stroke_typeof(), 0),
        new uFunction("set_Stroke", NULL, (void*)Shape__set_Stroke_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::Stroke_typeof()),
        new uFunction("get_StrokeAlignment", NULL, (void*)Shape__get_StrokeAlignment_fn, 0, false, ::g::Fuse::Drawing::StrokeAlignment_typeof(), 0),
        new uFunction("set_StrokeAlignment", NULL, (void*)Shape__set_StrokeAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::StrokeAlignment_typeof()),
        new uFunction("get_StrokeColor", NULL, (void*)Shape__get_StrokeColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_StrokeColor", NULL, (void*)Shape__set_StrokeColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Strokes", NULL, (void*)Shape__get_Strokes_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL), 0),
        new uFunction("get_StrokeWidth", NULL, (void*)Shape__get_StrokeWidth_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_StrokeWidth", NULL, (void*)Shape__set_StrokeWidth_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

Shape_type* Shape_typeof()
{
    static uSStrong<Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 122;
    options.InterfaceCount = 19;
    options.DependencyCount = 3;
    options.ObjectSize = sizeof(Shape);
    options.TypeSize = sizeof(Shape_type);
    type = (Shape_type*)uClassType::New("Fuse.Controls.Shape", options);
    type->fp_build_ = Shape_build;
    type->fp_cctor_ = Shape__cctor_3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))Shape__ArrangePaddingBox_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Shape__CalcRenderBounds_fn;
    type->fp_CalcShapeExtents = Shape__CalcShapeExtents_fn;
    type->fp_DrawFill = Shape__DrawFill_fn;
    type->fp_DrawStroke = Shape__DrawStroke_fn;
    type->fp_DrawVisual = (void(*)(::g::Fuse::Controls::Control*, ::g::Fuse::DrawContext*))Shape__DrawVisual_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))Shape__FastTrackDrawWithOpacity_fn;
    type->fp_get_HitTestLocalVisualBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Shape__get_HitTestLocalVisualBounds_fn;
    type->fp_InvalidateSurfacePath = Shape__InvalidateSurfacePath_fn;
    type->fp_get_NeedSurface = Shape__get_NeedSurface_fn;
    type->fp_OnPropertyChanged2 = (void(*)(::g::Fuse::Visual*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Shape__OnPropertyChanged2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Shape__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Shape__OnUnrooted_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))Shape__PushPropertiesToNativeView_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected generated Shape() :17
void Shape__ctor_6_fn(Shape* __this)
{
    __this->ctor_6();
}

// internal void AddLoadingResource(Uno.UX.PropertyObject res) :52
void Shape__AddLoadingResource_fn(Shape* __this, ::g::Uno::UX::PropertyObject* res)
{
    __this->AddLoadingResource(res);
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :431
void Shape__ArrangePaddingBox_fn(Shape* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.Shape", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Controls::LayoutControl__ArrangePaddingBox_fn(__this, uCRef(lp_));
    __this->InvalidateSurfacePath();
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :56
void Shape__CalcRenderBounds_fn(Shape* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Shape", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret16;
    ::g::Fuse::Drawing::Stroke* ret17;
    ::g::Fuse::VisualBounds* r = (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret16), ret16);

    if (!(__this->HasStrokes() || __this->HasFills()))
        return *__retval = r, void();

    ::g::Uno::Rect extents = __this->CalcShapeExtents();
    float adjust = 0.0f;

    if (__this->HasStrokes())
    {
        uObject* enum12 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Strokes()), ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)));

        {
            try
            {
                {
                    while (::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum12), ::g::Uno::Collections::IEnumerator_typeof())))
                    {
                        ::g::Fuse::Drawing::Stroke* stroke = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum12), ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)), &ret17), ret17);
                        ::g::Uno::Float2 extent = uPtr(stroke)->GetDeviceAdjusted(::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/])));
                        float m = extent.Item(1) + ::g::Uno::Math::Max1(extent.Item(0) * uPtr(__this->Stroke())->LineJoinMiterLimit(), ::g::Uno::Vector::Length(::g::Uno::Float2__New1(extent.Item(0))));
                        adjust = ::g::Uno::Math::Max1(adjust, m);
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum12), ::TYPES[68/*Uno.IDisposable*/]));
                }
                                throw __t;
                goto __after_finally_0;
            }

            {
                ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum12), ::TYPES[68/*Uno.IDisposable*/]));
            }
            __after_finally_0:;
        }
    }

    adjust = adjust + (__this->Smoothness() - 1.0f);
    extents.Minimum(::g::Uno::Float2__op_Subtraction1(extents.Minimum(), adjust));
    extents.Maximum(::g::Uno::Float2__op_Addition1(extents.Maximum(), adjust));
    r = uPtr(r)->AddRect1(extents);
    return *__retval = r, void();
}

// protected virtual Uno.Rect CalcShapeExtents() :85
void Shape__CalcShapeExtents_fn(Shape* __this, ::g::Uno::Rect* __retval)
{
    return *__retval = ::g::Uno::Rect__New2(::g::Uno::Float2__New1(0.0f), __this->ActualSize()), void();
}

// private void CheckStatus() :133
void Shape__CheckStatus_fn(Shape* __this)
{
    __this->CheckStatus();
}

// public float4 get_Color() :62
void Shape__get_Color_fn(Shape* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :68
void Shape__set_Color_fn(Shape* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// private Fuse.Drawing.Stroke get_DefaultStroke() :240
void Shape__get_DefaultStroke_fn(Shape* __this, ::g::Fuse::Drawing::Stroke** __retval)
{
    *__retval = __this->DefaultStroke();
}

// private Fuse.Drawing.SolidColor get_DefaultStrokeBrush() :255
void Shape__get_DefaultStrokeBrush_fn(Shape* __this, ::g::Fuse::Drawing::SolidColor** __retval)
{
    *__retval = __this->DefaultStrokeBrush();
}

// protected virtual void DrawFill(Fuse.DrawContext dc, Fuse.Drawing.Brush fill) :40
void Shape__DrawFill_fn(Shape* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Brush* fill)
{
}

// protected virtual void DrawStroke(Fuse.DrawContext dc, Fuse.Drawing.Stroke stroke) :41
void Shape__DrawStroke_fn(Shape* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Stroke* stroke)
{
}

// protected override sealed void DrawVisual(Fuse.DrawContext dc) :17
void Shape__DrawVisual_fn(Shape* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Shape", "DrawVisual(Fuse.DrawContext)");
    ::g::Fuse::Drawing::Brush* ret19;
    ::g::Fuse::Drawing::Stroke* ret20;

    if (__this->_surface1 != NULL)
    {
        uPtr(__this->_surface1)->Draw(dc, __this, (uObject*)__this);
        return;
    }

    __this->PrepareDraw(dc, __this->ActualSize());

    if (__this->HasFills())
    {
        uObject* enum10 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Fills()), ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL)));

        {
            try
            {
                {
                    while (::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum10), ::g::Uno::Collections::IEnumerator_typeof())))
                    {
                        ::g::Fuse::Drawing::Brush* fill = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum10), ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL)), &ret19), ret19);
                        __this->DrawFill(dc, fill);
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum10), ::TYPES[68/*Uno.IDisposable*/]));
                }
                                throw __t;
                goto __after_finally_1;
            }

            {
                ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum10), ::TYPES[68/*Uno.IDisposable*/]));
            }
            __after_finally_1:;
        }
    }

    if (__this->HasStrokes())
    {
        uObject* enum11 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Strokes()), ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)));

        {
            try
            {
                {
                    while (::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum11), ::g::Uno::Collections::IEnumerator_typeof())))
                    {
                        ::g::Fuse::Drawing::Stroke* stroke = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum11), ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)), &ret20), ret20);
                        __this->DrawStroke(dc, stroke);
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum11), ::TYPES[68/*Uno.IDisposable*/]));
                }
                                throw __t;
                goto __after_finally_2;
            }

            {
                ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum11), ::TYPES[68/*Uno.IDisposable*/]));
            }
            __after_finally_2:;
        }
    }
}

// protected override sealed bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :12
void Shape__FastTrackDrawWithOpacity_fn(Shape* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    return *__retval = false, void();
}

// public Fuse.Drawing.Brush get_Fill() :95
void Shape__get_Fill_fn(Shape* __this, ::g::Fuse::Drawing::Brush** __retval)
{
    *__retval = __this->Fill();
}

// public void set_Fill(Fuse.Drawing.Brush value) :100
void Shape__set_Fill_fn(Shape* __this, ::g::Fuse::Drawing::Brush* value)
{
    __this->Fill(value);
}

// public Uno.Collections.IList<Fuse.Drawing.Brush> get_Fills() :114
void Shape__get_Fills_fn(Shape* __this, uObject** __retval)
{
    *__retval = __this->Fills();
}

// private void Fuse.Drawing.IDrawObjectWatcherFeedback.Changed(object obj) :46
void Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn(Shape* __this, uObject* obj)
{
    uStackFrame __("Fuse.Controls.Shape", "Fuse.Drawing.IDrawObjectWatcherFeedback.Changed(object)");

    if (uIs(obj, ::TYPES[38/*Fuse.Drawing.Stroke*/]))
        __this->InvalidateLayout(2);

    __this->InvalidateVisual();
}

// private void Fuse.Drawing.IDrawObjectWatcherFeedback.Prepare(object obj) :53
void Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn(Shape* __this, uObject* obj)
{
    uStackFrame __("Fuse.Controls.Shape", "Fuse.Drawing.IDrawObjectWatcherFeedback.Prepare(object)");

    if (__this->_surface1 == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[39/*"Prepare wit...*/], __this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\Shapes\\Shape.Surface.uno"), 57, ::STRINGS[40/*"Fuse.Drawin...*/]);
        return;
    }

    ::g::Fuse::Drawing::Brush* b = uAs< ::g::Fuse::Drawing::Brush*>(obj, ::TYPES[39/*Fuse.Drawing.Brush*/]);

    if (b != NULL)
        uPtr(__this->_surface1)->Prepare(b);
}

// private void Fuse.Drawing.IDrawObjectWatcherFeedback.Unprepare(object obj) :66
void Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn(Shape* __this, uObject* obj)
{
    uStackFrame __("Fuse.Controls.Shape", "Fuse.Drawing.IDrawObjectWatcherFeedback.Unprepare(object)");

    if (__this->_surface1 == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[39/*"Prepare wit...*/], __this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\Shapes\\Shape.Surface.uno"), 70, ::STRINGS[41/*"Fuse.Drawin...*/]);
        return;
    }

    ::g::Fuse::Drawing::Brush* b = uAs< ::g::Fuse::Drawing::Brush*>(obj, ::TYPES[39/*Fuse.Drawing.Brush*/]);

    if (b != NULL)
        uPtr(__this->_surface1)->Unprepare(b);
}

// private void Fuse.Drawing.ISurfaceDrawable.Draw(Fuse.Drawing.Surface surface) :79
void Shape__FuseDrawingISurfaceDrawableDraw_fn(Shape* __this, ::g::Fuse::Drawing::Surface* surface)
{
    uStackFrame __("Fuse.Controls.Shape", "Fuse.Drawing.ISurfaceDrawable.Draw(Fuse.Drawing.Surface)");
    ::g::Fuse::Drawing::Brush* ret21;
    ::g::Fuse::Drawing::Stroke* ret22;
    ::g::Fuse::Drawing::Brush* ret23;
    ::g::Fuse::Drawing::Stroke* ret24;
    uPtr(__this->Watcher())->Reset();

    if (__this->HasFills())
    {
        uObject* enum4 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Fills()), ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL)));

        {
            try
            {
                {
                    while (::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum4), ::g::Uno::Collections::IEnumerator_typeof())))
                    {
                        ::g::Fuse::Drawing::Brush* fill = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum4), ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL)), &ret21), ret21);
                        uPtr(__this->Watcher())->Add(fill);
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum4), ::TYPES[68/*Uno.IDisposable*/]));
                }
                                throw __t;
                goto __after_finally_3;
            }

            {
                ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum4), ::TYPES[68/*Uno.IDisposable*/]));
            }
            __after_finally_3:;
        }
    }

    if (__this->HasStrokes())
    {
        uObject* enum5 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Strokes()), ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)));

        {
            try
            {
                {
                    while (::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum5), ::g::Uno::Collections::IEnumerator_typeof())))
                    {
                        ::g::Fuse::Drawing::Stroke* stroke = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum5), ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)), &ret22), ret22);
                        uPtr(__this->Watcher())->Add1(stroke);
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum5), ::TYPES[68/*Uno.IDisposable*/]));
                }
                                throw __t;
                goto __after_finally_4;
            }

            {
                ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum5), ::TYPES[68/*Uno.IDisposable*/]));
            }
            __after_finally_4:;
        }
    }

    uPtr(__this->Watcher())->Sync();
    ::g::Fuse::Drawing::SurfacePath* path = __this->GetSurfacePath(surface);

    if (__this->HasFills())
    {
        uObject* enum6 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Fills()), ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL)));

        {
            try
            {
                {
                    while (::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum6), ::g::Uno::Collections::IEnumerator_typeof())))
                    {
                        ::g::Fuse::Drawing::Brush* fill1 = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum6), ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL)), &ret23), ret23);
                        uPtr(surface)->FillPath(path, fill1);
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum6), ::TYPES[68/*Uno.IDisposable*/]));
                }
                                throw __t;
                goto __after_finally_5;
            }

            {
                ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum6), ::TYPES[68/*Uno.IDisposable*/]));
            }
            __after_finally_5:;
        }
    }

    if (__this->HasStrokes())
    {
        uObject* enum7 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Strokes()), ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)));

        {
            try
            {
                {
                    while (::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum7), ::g::Uno::Collections::IEnumerator_typeof())))
                    {
                        ::g::Fuse::Drawing::Stroke* stroke1 = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum7), ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)), &ret24), ret24);
                        uPtr(surface)->StrokePath(path, stroke1);
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum7), ::TYPES[68/*Uno.IDisposable*/]));
                }
                                throw __t;
                goto __after_finally_6;
            }

            {
                ::g::Uno::IDisposable::Dispose(uInterface(uPtr(enum7), ::TYPES[68/*Uno.IDisposable*/]));
            }
            __after_finally_6:;
        }
    }
}

// private float2 Fuse.Drawing.ISurfaceDrawable.get_ElementSize() :110
void Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn(Shape* __this, ::g::Uno::Float2* __retval)
{
    return *__retval = __this->ActualSize(), void();
}

// private bool Fuse.Drawing.ISurfaceDrawable.get_IsPrimary() :109
void Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn(Shape* __this, bool* __retval)
{
    return *__retval = __this->NeedSurface(), void();
}

// protected Fuse.Drawing.SurfacePath GetSurfacePath(Fuse.Drawing.Surface surface) :112
void Shape__GetSurfacePath_fn(Shape* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    *__retval = __this->GetSurfacePath(surface);
}

// public bool get_HasFills() :191
void Shape__get_HasFills_fn(Shape* __this, bool* __retval)
{
    *__retval = __this->HasFills();
}

// private bool get_HasLoadingResources() :49
void Shape__get_HasLoadingResources_fn(Shape* __this, bool* __retval)
{
    *__retval = __this->HasLoadingResources();
}

// public bool get_HasStrokes() :213
void Shape__get_HasStrokes_fn(Shape* __this, bool* __retval)
{
    *__retval = __this->HasStrokes();
}

// protected override sealed Fuse.VisualBounds get_HitTestLocalVisualBounds() :45
void Shape__get_HitTestLocalVisualBounds_fn(Shape* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Shape", "get_HitTestLocalVisualBounds()");
    ::g::Fuse::VisualBounds* ret38;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__get_HitTestLocalVisualBounds_fn(__this, &ret38), ret38);
    b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());
    return *__retval = b, void();
}

// protected virtual void InvalidateSurfacePath() :40
void Shape__InvalidateSurfacePath_fn(Shape* __this)
{
    uStackFrame __("Fuse.Controls.Shape", "InvalidateSurfacePath()");
    __this->_surfacePathDirty = true;
    __this->InvalidateVisual();
}

// private Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.ResourceWatcher> get_LoadingResources() :29
void Shape__get_LoadingResources_fn(Shape* __this, ::g::Uno::Collections::Dictionary** __retval)
{
    *__retval = __this->LoadingResources();
}

// private Fuse.Controls.Native.IShapeView get_NativeShape() :405
void Shape__get_NativeShape_fn(Shape* __this, uObject** __retval)
{
    *__retval = __this->NativeShape();
}

// protected virtual bool get_NeedSurface() :10
void Shape__get_NeedSurface_fn(Shape* __this, bool* __retval)
{
    return *__retval = true, void();
}

// private void OnColorChanged(float4 value, Uno.UX.IPropertyListener origin) :82
void Shape__OnColorChanged_fn(Shape* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->OnColorChanged(*value, origin);
}

// private void OnFillAdded(Fuse.Drawing.Brush f) :126
void Shape__OnFillAdded_fn(Shape* __this, ::g::Fuse::Drawing::Brush* f)
{
    __this->OnFillAdded(f);
}

// private void OnFillRemoved(Fuse.Drawing.Brush f) :149
void Shape__OnFillRemoved_fn(Shape* __this, ::g::Fuse::Drawing::Brush* f)
{
    __this->OnFillRemoved(f);
}

// internal void OnLoadingResourcePropertyChanged(Uno.UX.PropertyObject sender, Uno.UX.Selector property) :91
void Shape__OnLoadingResourcePropertyChanged_fn(Shape* __this, ::g::Uno::UX::PropertyObject* sender, ::g::Uno::UX::Selector* property)
{
    __this->OnLoadingResourcePropertyChanged(sender, *property);
}

// internal void OnLoadingResourceRooted() :103
void Shape__OnLoadingResourceRooted_fn(Shape* __this)
{
    __this->OnLoadingResourceRooted();
}

// internal void OnLoadingResourceUnrooted() :118
void Shape__OnLoadingResourceUnrooted_fn(Shape* __this)
{
    __this->OnLoadingResourceUnrooted();
}

// public override sealed void OnPropertyChanged(Uno.UX.PropertyObject sender, Uno.UX.Selector property) :175
void Shape__OnPropertyChanged2_fn(Shape* __this, ::g::Uno::UX::PropertyObject* sender, ::g::Uno::UX::Selector* property)
{
    uStackFrame __("Fuse.Controls.Shape", "OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector property_ = *property;
    __this->OnLoadingResourcePropertyChanged(sender, property_);

    if (uIs(sender, ::TYPES[39/*Fuse.Drawing.Brush*/]))
        __this->InvalidateVisual();
    else if (uIs(sender, ::TYPES[38/*Fuse.Drawing.Stroke*/]))
    {
        __this->InvalidateVisual();

        if (::g::Uno::UX::Selector__op_Equality(property_, Shape::_widthName_) || ::g::Uno::UX::Selector__op_Equality(property_, Shape::_offsetName_))
            __this->InvalidateRenderBounds();
    }
    else
        ::g::Fuse::Controls::Control__OnPropertyChanged2_fn(__this, sender, uCRef(property_));

    __this->UpdateNativeShape();
}

// protected override void OnRooted() :344
void Shape__OnRooted_fn(Shape* __this)
{
    uStackFrame __("Fuse.Controls.Shape", "OnRooted()");
    ::g::Fuse::Drawing::Stroke* ret27;
    ::g::Fuse::Drawing::Brush* ret28;
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);

    if (__this->_strokes != NULL)
    {
        for (int32_t i = 0; i < uPtr(__this->_strokes)->Count(); ++i)
            __this->OnStrokeAdded((::g::Uno::Collections::RootableList__get_Item_fn(uPtr(__this->_strokes), uCRef<int32_t>(i), &ret27), ret27));

        uPtr(__this->_strokes)->Subscribe(uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL), (void*)Shape__OnStrokeAdded_fn, __this), uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL), (void*)Shape__OnStrokeRemoved_fn, __this));
    }

    if (__this->_fills != NULL)
    {
        for (int32_t i1 = 0; i1 < uPtr(__this->_fills)->Count(); ++i1)
            __this->OnFillAdded((::g::Uno::Collections::RootableList__get_Item_fn(uPtr(__this->_fills), uCRef<int32_t>(i1), &ret28), ret28));

        uPtr(__this->_fills)->Subscribe(uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL), (void*)Shape__OnFillAdded_fn, __this), uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL), (void*)Shape__OnFillRemoved_fn, __this));
    }

    __this->OnLoadingResourceRooted();
    __this->_surface1 = (__this->NeedSurface() ? (::g::Fuse::Drawing::Surface*)::g::Fuse::Drawing::SurfaceManager::FindOrCreate(__this) : (::g::Fuse::Drawing::Surface*)::g::Fuse::Drawing::SurfaceManager::Find(__this));

    if (__this->_surface1 != NULL)
        __this->OnSurfaceRooted();
}

// private void OnStrokeAdded(Fuse.Drawing.Stroke s) :290
void Shape__OnStrokeAdded_fn(Shape* __this, ::g::Fuse::Drawing::Stroke* s)
{
    __this->OnStrokeAdded(s);
}

// private void OnStrokeRemoved(Fuse.Drawing.Stroke s) :307
void Shape__OnStrokeRemoved_fn(Shape* __this, ::g::Fuse::Drawing::Stroke* s)
{
    __this->OnStrokeRemoved(s);
}

// protected void OnSurfaceRooted() :15
void Shape__OnSurfaceRooted_fn(Shape* __this)
{
    __this->OnSurfaceRooted();
}

// protected void OnSurfaceUnrooted() :21
void Shape__OnSurfaceUnrooted_fn(Shape* __this)
{
    __this->OnSurfaceUnrooted();
}

// protected override void OnUnrooted() :367
void Shape__OnUnrooted_fn(Shape* __this)
{
    uStackFrame __("Fuse.Controls.Shape", "OnUnrooted()");
    ::g::Fuse::Drawing::Stroke* ret29;
    ::g::Fuse::Drawing::Brush* ret30;
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);

    if (__this->_strokes != NULL)
    {
        for (int32_t i = 0; i < uPtr(__this->_strokes)->Count(); ++i)
            __this->OnStrokeRemoved((::g::Uno::Collections::RootableList__get_Item_fn(uPtr(__this->_strokes), uCRef<int32_t>(i), &ret29), ret29));

        uPtr(__this->_strokes)->Unsubscribe();
    }

    if (__this->_fills != NULL)
    {
        for (int32_t i1 = 0; i1 < uPtr(__this->_fills)->Count(); ++i1)
            __this->OnFillRemoved((::g::Uno::Collections::RootableList__get_Item_fn(uPtr(__this->_fills), uCRef<int32_t>(i1), &ret30), ret30));

        uPtr(__this->_fills)->Unsubscribe();
    }

    __this->OnLoadingResourceUnrooted();

    if (__this->_surface1 != NULL)
        __this->OnSurfaceUnrooted();
}

// internal void PrepareDraw(Fuse.DrawContext dc, float2 canvasSize) :389
void Shape__PrepareDraw_fn(Shape* __this, ::g::Fuse::DrawContext* dc, ::g::Uno::Float2* canvasSize)
{
    __this->PrepareDraw(dc, *canvasSize);
}

// protected override void PushPropertiesToNativeView() :425
void Shape__PushPropertiesToNativeView_fn(Shape* __this)
{
    uStackFrame __("Fuse.Controls.Shape", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Control__PushPropertiesToNativeView_fn(__this);
    __this->UpdateNativeShape();
}

// internal void RemoveLoadingResource(Uno.UX.PropertyObject res) :72
void Shape__RemoveLoadingResource_fn(Shape* __this, ::g::Uno::UX::PropertyObject* res)
{
    __this->RemoveLoadingResource(res);
}

// public void SetColor(float4 value, Uno.UX.IPropertyListener origin) :73
void Shape__SetColor_fn(Shape* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->SetColor(*value, origin);
}

// public float get_Smoothness() :326
void Shape__get_Smoothness_fn(Shape* __this, float* __retval)
{
    *__retval = __this->Smoothness();
}

// public void set_Smoothness(float value) :327
void Shape__set_Smoothness_fn(Shape* __this, float* value)
{
    __this->Smoothness(*value);
}

// public Fuse.Drawing.Stroke get_Stroke() :199
void Shape__get_Stroke_fn(Shape* __this, ::g::Fuse::Drawing::Stroke** __retval)
{
    *__retval = __this->Stroke();
}

// public void set_Stroke(Fuse.Drawing.Stroke value) :204
void Shape__set_Stroke_fn(Shape* __this, ::g::Fuse::Drawing::Stroke* value)
{
    __this->Stroke(value);
}

// public Fuse.Drawing.StrokeAlignment get_StrokeAlignment() :286
void Shape__get_StrokeAlignment_fn(Shape* __this, int32_t* __retval)
{
    *__retval = __this->StrokeAlignment();
}

// public void set_StrokeAlignment(Fuse.Drawing.StrokeAlignment value) :287
void Shape__set_StrokeAlignment_fn(Shape* __this, int32_t* value)
{
    __this->StrokeAlignment(*value);
}

// public float4 get_StrokeColor() :266
void Shape__get_StrokeColor_fn(Shape* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->StrokeColor();
}

// public void set_StrokeColor(float4 value) :267
void Shape__set_StrokeColor_fn(Shape* __this, ::g::Uno::Float4* value)
{
    __this->StrokeColor(*value);
}

// public Uno.Collections.IList<Fuse.Drawing.Stroke> get_Strokes() :226
void Shape__get_Strokes_fn(Shape* __this, uObject** __retval)
{
    *__retval = __this->Strokes();
}

// public float get_StrokeWidth() :275
void Shape__get_StrokeWidth_fn(Shape* __this, float* __retval)
{
    *__retval = __this->StrokeWidth();
}

// public void set_StrokeWidth(float value) :276
void Shape__set_StrokeWidth_fn(Shape* __this, float* value)
{
    __this->StrokeWidth(*value);
}

// protected Fuse.Drawing.Surface get_Surface() :339
void Shape__get_Surface_fn(Shape* __this, ::g::Fuse::Drawing::Surface** __retval)
{
    *__retval = __this->Surface();
}

// private void UpdateNativeShape() :408
void Shape__UpdateNativeShape_fn(Shape* __this)
{
    __this->UpdateNativeShape();
}

// internal Fuse.Drawing.DrawObjectWatcher get_Watcher() :342
void Shape__get_Watcher_fn(Shape* __this, ::g::Fuse::Drawing::DrawObjectWatcher** __retval)
{
    *__retval = __this->Watcher();
}

uSStrong< ::g::Fuse::PropertyHandle*> Shape::_loadingResourcesHandle_;
::g::Uno::UX::Selector Shape::ColorPropertyName_;
::g::Uno::UX::Selector Shape::_widthName_;
::g::Uno::UX::Selector Shape::_offsetName_;

// protected generated Shape() [instance] :17
void Shape::ctor_6()
{
    _smoothness = 1.0f;
    ctor_5();
}

// internal void AddLoadingResource(Uno.UX.PropertyObject res) [instance] :52
void Shape::AddLoadingResource(::g::Uno::UX::PropertyObject* res)
{
    uStackFrame __("Fuse.Controls.Shape", "AddLoadingResource(Uno.UX.PropertyObject)");
    bool ret15;

    if (!uIs(res, ::g::Fuse::ILoading_typeof()))
        return;

    ::g::Uno::Collections::Dictionary* all = LoadingResources();
    Shape__ResourceWatcher* watcher;

    if (!(::g::Uno::Collections::Dictionary__TryGetValue_fn(uPtr(all), res, (void**)(&watcher), &ret15), ret15))
    {
        watcher = Shape__ResourceWatcher::New1();
        ::g::Uno::Collections::Dictionary__set_Item_fn(uPtr(all), res, watcher);
    }

    if (IsRootingStarted() && !uPtr(watcher)->IsWatching)
    {
        uPtr(res)->AddPropertyListener((uObject*)this);
        uPtr(watcher)->IsWatching = true;
    }
}

// private void CheckStatus() [instance] :133
void Shape::CheckStatus()
{
    uStackFrame __("Fuse.Controls.Shape", "CheckStatus()");
    ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > ret18;
    bool loading = false;

    if (HasLoadingResources())
    {
        ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > enum3 = (::g::Uno::Collections::Dictionary__GetEnumerator_fn(uPtr(LoadingResources()), &ret18), ret18);

        {
            try
            {
                {
                    while (enum3.MoveNext(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))
                    {
                        ::g::Uno::Collections::KeyValuePair<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > item = enum3.Current(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));

                        if (::g::Fuse::ILoading::IsLoading(uInterface(uPtr(uAs<uObject*>(item.Key(::g::Uno::Collections::KeyValuePair_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)), ::g::Fuse::ILoading_typeof())), ::g::Fuse::ILoading_typeof())))
                        {
                            loading = true;
                            break;
                        }
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    enum3.Dispose(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));
                }
                                throw __t;
                goto __after_finally_7;
            }

            {
                enum3.Dispose(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));
            }
            __after_finally_7:;
        }
    }

    ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_loadingResourceTask, loading ? 1 : 0, ::STRINGS[19/*""*/]);
}

// public float4 get_Color() [instance] :62
::g::Uno::Float4 Shape::Color()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Color()");
    uObject* f = uAs<uObject*>(Fill(), ::TYPES[12/*Fuse.Drawing.ISolidColor*/]);

    if (f != NULL)
        return ::g::Fuse::Drawing::ISolidColor::Color(uInterface(uPtr(f), ::TYPES[12/*Fuse.Drawing.ISolidColor*/]));

    return ::g::Uno::Float4__New1(0.0f);
}

// public void set_Color(float4 value) [instance] :68
void Shape::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_Color(float4)");
    SetColor(value, (uObject*)this);
}

// private Fuse.Drawing.Stroke get_DefaultStroke() [instance] :240
::g::Fuse::Drawing::Stroke* Shape::DefaultStroke()
{
    uStackFrame __("Fuse.Controls.Shape", "get_DefaultStroke()");
    ::g::Fuse::Drawing::Stroke* collection8;
    ::g::Fuse::Drawing::Brush* ind13;
    ::g::Fuse::Drawing::SolidColor* collection9;
    ::g::Uno::Float4 ind14;
    ::g::Fuse::Drawing::Stroke* ret35;
    ::g::Fuse::Drawing::Stroke* ret36;
    uObject* strokes = Strokes();

    if ((::g::Uno::Collections::ICollection::Count(uInterface(uPtr(strokes), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/])) == 0) || !uIs((::g::Fuse::Drawing::Brush*)uPtr((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(strokes), ::g::Uno::Collections::IList_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)), uCRef<int32_t>(0), &ret35), ret35))->Brush(), ::TYPES[20/*Fuse.Drawing.SolidColor*/]))
    {
        ::g::Uno::Collections::ICollection::Clear(uInterface(uPtr(strokes), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]));
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(strokes, ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), (collection8 = ::g::Fuse::Drawing::Stroke::New2(), uPtr(collection8)->Alignment(0), 0, uPtr(collection8)->Width(1.0f), 1.0f, ind13 = (collection9 = ::g::Fuse::Drawing::SolidColor::New2(), ind14 = ::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f), uPtr(collection9)->Color(ind14), ind14, collection9), uPtr(collection8)->Brush(ind13), ind13, collection8));
    }

    return (::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(strokes), ::g::Uno::Collections::IList_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)), uCRef<int32_t>(0), &ret36), ret36);
}

// private Fuse.Drawing.SolidColor get_DefaultStrokeBrush() [instance] :255
::g::Fuse::Drawing::SolidColor* Shape::DefaultStrokeBrush()
{
    uStackFrame __("Fuse.Controls.Shape", "get_DefaultStrokeBrush()");
    return uAs< ::g::Fuse::Drawing::SolidColor*>(uPtr(DefaultStroke())->Brush(), ::TYPES[20/*Fuse.Drawing.SolidColor*/]);
}

// public Fuse.Drawing.Brush get_Fill() [instance] :95
::g::Fuse::Drawing::Brush* Shape::Fill()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Fill()");
    ::g::Fuse::Drawing::Brush* ret37;

    if ((_fills == NULL) || (uPtr(_fills)->Count() == 0))
        return NULL;
    else
        return (::g::Uno::Collections::RootableList__get_Item_fn(uPtr(_fills), uCRef<int32_t>(0), &ret37), ret37);
}

// public void set_Fill(Fuse.Drawing.Brush value) [instance] :100
void Shape::Fill(::g::Fuse::Drawing::Brush* value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_Fill(Fuse.Drawing.Brush)");
    ::g::Uno::Collections::ICollection::Clear(uInterface(uPtr(Fills()), ::TYPES[74/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]));

    if (value != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Fills()), ::TYPES[74/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]), value);
}

// public Uno.Collections.IList<Fuse.Drawing.Brush> get_Fills() [instance] :114
uObject* Shape::Fills()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Fills()");

    if (_fills == NULL)
    {
        _fills = ((::g::Uno::Collections::RootableList*)::g::Uno::Collections::RootableList::New1(::g::Uno::Collections::RootableList_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL)));

        if (IsRootingCompleted())
            uPtr(_fills)->Subscribe(uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL), (void*)Shape__OnFillAdded_fn, this), uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::TYPES[39/*Fuse.Drawing.Brush*/], NULL), (void*)Shape__OnFillRemoved_fn, this));
    }

    return (uObject*)_fills;
}

// protected Fuse.Drawing.SurfacePath GetSurfacePath(Fuse.Drawing.Surface surface) [instance] :112
::g::Fuse::Drawing::SurfacePath* Shape::GetSurfacePath(::g::Fuse::Drawing::Surface* surface)
{
    uStackFrame __("Fuse.Controls.Shape", "GetSurfacePath(Fuse.Drawing.Surface)");

    if (!_surfacePathDirty && (_surfacePath != NULL))
        return _surfacePath;

    if (_surfacePath != NULL)
        uPtr(surface)->DisposePath(_surfacePath);

    _surfacePath = CreateSurfacePath(surface);
    _surfacePathDirty = false;
    return _surfacePath;
}

// public bool get_HasFills() [instance] :191
bool Shape::HasFills()
{
    uStackFrame __("Fuse.Controls.Shape", "get_HasFills()");
    return (_fills != NULL) && (uPtr(_fills)->Count() > 0);
}

// private bool get_HasLoadingResources() [instance] :49
bool Shape::HasLoadingResources()
{
    uStackFrame __("Fuse.Controls.Shape", "get_HasLoadingResources()");
    return uPtr(Properties())->Has(Shape::_loadingResourcesHandle_);
}

// public bool get_HasStrokes() [instance] :213
bool Shape::HasStrokes()
{
    uStackFrame __("Fuse.Controls.Shape", "get_HasStrokes()");
    return (_strokes != NULL) && (uPtr(_strokes)->Count() > 0);
}

// private Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.ResourceWatcher> get_LoadingResources() [instance] :29
::g::Uno::Collections::Dictionary* Shape::LoadingResources()
{
    uStackFrame __("Fuse.Controls.Shape", "get_LoadingResources()");
    uObject* val;
    ::g::Uno::Collections::Dictionary* loading;

    if (uPtr(Properties())->TryGet(Shape::_loadingResourcesHandle_, &val))
        loading = uCast< ::g::Uno::Collections::Dictionary*>(val, ::g::Uno::Collections::Dictionary_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));
    else
    {
        loading = (::g::Uno::Collections::Dictionary*)::g::Uno::Collections::Dictionary::New1(::g::Uno::Collections::Dictionary_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));
        uPtr(Properties())->Set(Shape::_loadingResourcesHandle_, loading);
    }

    return loading;
}

// private Fuse.Controls.Native.IShapeView get_NativeShape() [instance] :405
uObject* Shape::NativeShape()
{
    return uAs<uObject*>(NativeView(), ::g::Fuse::Controls::Native::IShapeView_typeof());
}

// private void OnColorChanged(float4 value, Uno.UX.IPropertyListener origin) [instance] :82
void Shape::OnColorChanged(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Shape", "OnColorChanged(float4,Uno.UX.IPropertyListener)");

    if (!uIs((::g::Fuse::Drawing::Brush*)Fill(), ::TYPES[20/*Fuse.Drawing.SolidColor*/]))
        Fill(::g::Fuse::Drawing::SolidColor::New3(value));
    else
        uPtr(uCast< ::g::Fuse::Drawing::SolidColor*>(Fill(), ::TYPES[20/*Fuse.Drawing.SolidColor*/]))->Color(value);

    OnPropertyChanged1(Shape::ColorPropertyName_, uAs<uObject*>(origin, ::TYPES[56/*Uno.UX.IPropertyListener*/]));
}

// private void OnFillAdded(Fuse.Drawing.Brush f) [instance] :126
void Shape::OnFillAdded(::g::Fuse::Drawing::Brush* f)
{
    uStackFrame __("Fuse.Controls.Shape", "OnFillAdded(Fuse.Drawing.Brush)");

    if (f == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(uString::Const("Unexpected null brush"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\Shapes\\Shape.uno"), 131, uString::Const("OnFillAdded"));
        return;
    }

    uPtr(f)->Pin();
    AddDrawCost(1.0);

    if (uIs(f, ::TYPES[11/*Fuse.Drawing.DynamicBrush*/]))
        uPtr(uCast< ::g::Fuse::Drawing::DynamicBrush*>(f, ::TYPES[11/*Fuse.Drawing.DynamicBrush*/]))->AddPropertyListener((uObject*)this);

    AddLoadingResource(f);
    InvalidateRenderBounds();
    UpdateNativeShape();
}

// private void OnFillRemoved(Fuse.Drawing.Brush f) [instance] :149
void Shape::OnFillRemoved(::g::Fuse::Drawing::Brush* f)
{
    uStackFrame __("Fuse.Controls.Shape", "OnFillRemoved(Fuse.Drawing.Brush)");

    if (f == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(uString::Const("Unexpected null brush"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\Shapes\\Shape.uno"), 154, uString::Const("OnFillRemoved"));
        return;
    }

    uPtr(f)->Unpin();
    RemoveDrawCost(1.0);

    if (uIs(f, ::TYPES[11/*Fuse.Drawing.DynamicBrush*/]))
        uPtr(uCast< ::g::Fuse::Drawing::DynamicBrush*>(f, ::TYPES[11/*Fuse.Drawing.DynamicBrush*/]))->RemovePropertyListener((uObject*)this);

    RemoveLoadingResource(f);
    InvalidateRenderBounds();
    UpdateNativeShape();
}

// internal void OnLoadingResourcePropertyChanged(Uno.UX.PropertyObject sender, Uno.UX.Selector property) [instance] :91
void Shape::OnLoadingResourcePropertyChanged(::g::Uno::UX::PropertyObject* sender, ::g::Uno::UX::Selector property)
{
    uStackFrame __("Fuse.Controls.Shape", "OnLoadingResourcePropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    uObject* loading = uAs<uObject*>(sender, ::g::Fuse::ILoading_typeof());

    if (!HasLoadingResources() || (loading == NULL))
        return;

    if (::g::Uno::UX::Selector__op_Inequality(property, ::g::Fuse::ILoadingStatic::IsLoadingName()))
        return;

    CheckStatus();
}

// internal void OnLoadingResourceRooted() [instance] :103
void Shape::OnLoadingResourceRooted()
{
    uStackFrame __("Fuse.Controls.Shape", "OnLoadingResourceRooted()");
    ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > ret25;

    if (HasLoadingResources())
    {
        ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > enum1 = (::g::Uno::Collections::Dictionary__GetEnumerator_fn(uPtr(LoadingResources()), &ret25), ret25);

        {
            try
            {
                {
                    while (enum1.MoveNext(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))
                    {
                        ::g::Uno::Collections::KeyValuePair<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > item = enum1.Current(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));

                        if (uPtr(item.Value(::g::Uno::Collections::KeyValuePair_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))->IsWatching)
                            continue;

                        uPtr(item.Key(::g::Uno::Collections::KeyValuePair_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))->AddPropertyListener((uObject*)this);
                        uPtr(item.Value(::g::Uno::Collections::KeyValuePair_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))->IsWatching = true;
                    }
                }
            }

            catch (const uThrowable& __t)
            {
                {
                    enum1.Dispose(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));
                }
                                throw __t;
                goto __after_finally_8;
            }

            {
                enum1.Dispose(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));
            }
            __after_finally_8:;
        }
    }

    CheckStatus();
}

// internal void OnLoadingResourceUnrooted() [instance] :118
void Shape::OnLoadingResourceUnrooted()
{
    uStackFrame __("Fuse.Controls.Shape", "OnLoadingResourceUnrooted()");
    ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > ret26;

    if (!HasLoadingResources())
        return;

    ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > enum2 = (::g::Uno::Collections::Dictionary__GetEnumerator_fn(uPtr(LoadingResources()), &ret26), ret26);

    {
        try
        {
            {
                while (enum2.MoveNext(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))
                {
                    ::g::Uno::Collections::KeyValuePair<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__ResourceWatcher*> > item = enum2.Current(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));

                    if (uPtr(item.Value(::g::Uno::Collections::KeyValuePair_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))->IsWatching)
                        uPtr(item.Key(::g::Uno::Collections::KeyValuePair_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))->RemovePropertyListener((uObject*)this);

                    uPtr(item.Value(::g::Uno::Collections::KeyValuePair_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL)))->IsWatching = false;
                }
            }
        }

        catch (const uThrowable& __t)
        {
            {
                enum2.Dispose(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));
            }
                        throw __t;
            goto __after_finally_9;
        }

        {
            enum2.Dispose(::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__ResourceWatcher_typeof(), NULL));
        }
        __after_finally_9:;
    }
}

// private void OnStrokeAdded(Fuse.Drawing.Stroke s) [instance] :290
void Shape::OnStrokeAdded(::g::Fuse::Drawing::Stroke* s)
{
    uStackFrame __("Fuse.Controls.Shape", "OnStrokeAdded(Fuse.Drawing.Stroke)");

    if (s == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(uString::Const("Unexpected null stroke"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\Shapes\\Shape.uno"), 295, uString::Const("OnStrokeAdded"));
        return;
    }

    uPtr(s)->Pin();
    AddDrawCost(1.0);
    s->AddPropertyListener((uObject*)this);
    InvalidateRenderBounds();
    UpdateNativeShape();
}

// private void OnStrokeRemoved(Fuse.Drawing.Stroke s) [instance] :307
void Shape::OnStrokeRemoved(::g::Fuse::Drawing::Stroke* s)
{
    uStackFrame __("Fuse.Controls.Shape", "OnStrokeRemoved(Fuse.Drawing.Stroke)");

    if (s == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(uString::Const("Unexpected null stroke"), this, uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Primitives\\1.7.2\\Shapes\\Shape.uno"), 311, uString::Const("OnStrokeRemoved"));
        return;
    }

    uPtr(s)->Unpin();
    RemoveDrawCost(1.0);
    s->RemovePropertyListener((uObject*)this);
    InvalidateRenderBounds();
    UpdateNativeShape();
}

// protected void OnSurfaceRooted() [instance] :15
void Shape::OnSurfaceRooted()
{
    uStackFrame __("Fuse.Controls.Shape", "OnSurfaceRooted()");
    _watcher = ::g::Fuse::Drawing::DrawObjectWatcher::New1();
    uPtr(_watcher)->OnRooted((uObject*)this);
}

// protected void OnSurfaceUnrooted() [instance] :21
void Shape::OnSurfaceUnrooted()
{
    uStackFrame __("Fuse.Controls.Shape", "OnSurfaceUnrooted()");

    if (_surfacePath != NULL)
    {
        uPtr(Surface())->DisposePath(_surfacePath);
        _surfacePath = NULL;
    }

    uPtr(_watcher)->OnUnrooted();
    ::g::Fuse::Drawing::SurfaceManager::Release(this, _surface1);
    _surface1 = NULL;
}

// internal void PrepareDraw(Fuse.DrawContext dc, float2 canvasSize) [instance] :389
void Shape::PrepareDraw(::g::Fuse::DrawContext* dc, ::g::Uno::Float2 canvasSize)
{
    uStackFrame __("Fuse.Controls.Shape", "PrepareDraw(Fuse.DrawContext,float2)");
    ::g::Fuse::Drawing::Brush* ret31;
    ::g::Uno::Float2 canvasSize_ = canvasSize;
    ::g::Fuse::Drawing::Stroke* ret32;

    if (HasFills())

        for (int32_t i = 0; i < uPtr(_fills)->Count(); ++i)
            uPtr((::g::Uno::Collections::RootableList__get_Item_fn(uPtr(_fills), uCRef<int32_t>(i), &ret31), ret31))->Prepare(dc, canvasSize_);

    if (HasStrokes())

        for (int32_t i1 = 0; i1 < uPtr(_strokes)->Count(); ++i1)
            uPtr((::g::Uno::Collections::RootableList__get_Item_fn(uPtr(_strokes), uCRef<int32_t>(i1), &ret32), ret32))->Prepare(dc, canvasSize_);
}

// internal void RemoveLoadingResource(Uno.UX.PropertyObject res) [instance] :72
void Shape::RemoveLoadingResource(::g::Uno::UX::PropertyObject* res)
{
    uStackFrame __("Fuse.Controls.Shape", "RemoveLoadingResource(Uno.UX.PropertyObject)");
    bool ret33;
    bool ret34;

    if (!uIs(res, ::g::Fuse::ILoading_typeof()))
        return;

    ::g::Uno::Collections::Dictionary* all = LoadingResources();
    Shape__ResourceWatcher* watcher;

    if (!(::g::Uno::Collections::Dictionary__TryGetValue_fn(uPtr(all), res, (void**)(&watcher), &ret33), ret33))
        return;

    if (uPtr(watcher)->IsWatching)
    {
        uPtr(res)->RemovePropertyListener((uObject*)this);
        uPtr(watcher)->IsWatching = false;
    }

    ::g::Uno::Collections::Dictionary__Remove_fn(uPtr(all), res, &ret34);
}

// public void SetColor(float4 value, Uno.UX.IPropertyListener origin) [instance] :73
void Shape::SetColor(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Shape", "SetColor(float4,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float4__op_Inequality(Color(), value))
        OnColorChanged(value, origin);
}

// public float get_Smoothness() [instance] :326
float Shape::Smoothness()
{
    return _smoothness;
}

// public void set_Smoothness(float value) [instance] :327
void Shape::Smoothness(float value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_Smoothness(float)");

    if (_smoothness != value)
    {
        _smoothness = value;
        InvalidateVisual();
        InvalidateRenderBounds();
    }
}

// public Fuse.Drawing.Stroke get_Stroke() [instance] :199
::g::Fuse::Drawing::Stroke* Shape::Stroke()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Stroke()");
    ::g::Fuse::Drawing::Stroke* ret39;

    if ((_strokes == NULL) || (uPtr(_strokes)->Count() == 0))
        return NULL;

    return (::g::Uno::Collections::RootableList__get_Item_fn(uPtr(_strokes), uCRef<int32_t>(0), &ret39), ret39);
}

// public void set_Stroke(Fuse.Drawing.Stroke value) [instance] :204
void Shape::Stroke(::g::Fuse::Drawing::Stroke* value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_Stroke(Fuse.Drawing.Stroke)");
    ::g::Uno::Collections::ICollection::Clear(uInterface(uPtr(Strokes()), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]));

    if (value != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Strokes()), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), value);
}

// public Fuse.Drawing.StrokeAlignment get_StrokeAlignment() [instance] :286
int32_t Shape::StrokeAlignment()
{
    uStackFrame __("Fuse.Controls.Shape", "get_StrokeAlignment()");
    return HasStrokes() ? uPtr(DefaultStroke())->Alignment() : 0;
}

// public void set_StrokeAlignment(Fuse.Drawing.StrokeAlignment value) [instance] :287
void Shape::StrokeAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_StrokeAlignment(Fuse.Drawing.StrokeAlignment)");
    uPtr(DefaultStroke())->Alignment(value);
}

// public float4 get_StrokeColor() [instance] :266
::g::Uno::Float4 Shape::StrokeColor()
{
    uStackFrame __("Fuse.Controls.Shape", "get_StrokeColor()");
    return HasStrokes() ? uPtr(DefaultStrokeBrush())->Color() : ::g::Uno::Float4__New1(0.0f);
}

// public void set_StrokeColor(float4 value) [instance] :267
void Shape::StrokeColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_StrokeColor(float4)");
    uPtr(DefaultStrokeBrush())->Color(value);
}

// public Uno.Collections.IList<Fuse.Drawing.Stroke> get_Strokes() [instance] :226
uObject* Shape::Strokes()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Strokes()");

    if (_strokes == NULL)
    {
        _strokes = ((::g::Uno::Collections::RootableList*)::g::Uno::Collections::RootableList::New1(::g::Uno::Collections::RootableList_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL)));

        if (IsRootingCompleted())
            uPtr(_strokes)->Subscribe(uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL), (void*)Shape__OnStrokeAdded_fn, this), uDelegate::New(::g::Uno::Action1_typeof()->MakeType(::TYPES[38/*Fuse.Drawing.Stroke*/], NULL), (void*)Shape__OnStrokeRemoved_fn, this));
    }

    return (uObject*)_strokes;
}

// public float get_StrokeWidth() [instance] :275
float Shape::StrokeWidth()
{
    uStackFrame __("Fuse.Controls.Shape", "get_StrokeWidth()");
    return HasStrokes() ? uPtr(DefaultStroke())->Width() : 0.0f;
}

// public void set_StrokeWidth(float value) [instance] :276
void Shape::StrokeWidth(float value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_StrokeWidth(float)");
    uPtr(DefaultStroke())->Width(value);
}

// protected Fuse.Drawing.Surface get_Surface() [instance] :339
::g::Fuse::Drawing::Surface* Shape::Surface()
{
    return _surface1;
}

// private void UpdateNativeShape() [instance] :408
void Shape::UpdateNativeShape()
{
    uStackFrame __("Fuse.Controls.Shape", "UpdateNativeShape()");
    uObject* ns = NativeShape();

    if (ns != NULL)
    {
        uArray* fills = HasFills() ? (uArray*)::g::Uno::Collections::EnumerableExtensions::ToArray(::g::Uno::Collections::EnumerableExtensions_typeof()->MakeMethod(9/*ToArray<Fuse.Drawing.Brush>*/, ::TYPES[39/*Fuse.Drawing.Brush*/], NULL), Fills()) : uArray::New(::TYPES[39/*Fuse.Drawing.Brush*/]->Array(), 0);
        uArray* strokes = HasStrokes() ? (uArray*)::g::Uno::Collections::EnumerableExtensions::ToArray(::g::Uno::Collections::EnumerableExtensions_typeof()->MakeMethod(9/*ToArray<Fuse.Drawing.Stroke>*/, ::TYPES[38/*Fuse.Drawing.Stroke*/], NULL), Strokes()) : uArray::New(::TYPES[38/*Fuse.Drawing.Stroke*/]->Array(), 0);
        ::g::Fuse::Controls::Native::IShapeView::Update(uInterface(uPtr(ns), ::g::Fuse::Controls::Native::IShapeView_typeof()), fills, strokes, ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/])));
    }
}

// internal Fuse.Drawing.DrawObjectWatcher get_Watcher() [instance] :342
::g::Fuse::Drawing::DrawObjectWatcher* Shape::Watcher()
{
    return _watcher;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\SingleViewHost.uno
// -------------------------------------------------------------------------------------------------

// public sealed extern class SingleViewHost :10
// {
static void SingleViewHost_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::UpdateManager_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SingleViewHost_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(SingleViewHost_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(SingleViewHost_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(SingleViewHost_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SingleViewHost_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SingleViewHost_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SingleViewHost_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(SingleViewHost_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(SingleViewHost_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(SingleViewHost_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SingleViewHost_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SingleViewHost_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(SingleViewHost_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(SingleViewHost_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(SingleViewHost_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(SingleViewHost_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(SingleViewHost_type, interface16),
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(SingleViewHost_type, interface17),
        ::g::Uno::IDisposable_typeof(), offsetof(SingleViewHost_type, interface18));
    type->SetFields(108,
        SingleViewHost__RenderState_typeof(), offsetof(SingleViewHost, _renderState), 0,
        ::g::Uno::IDisposable_typeof(), offsetof(SingleViewHost, _changingState), 0,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(SingleViewHost, _viewHandle), 0,
        ::g::Fuse::Controls::Native::IViewHandleRenderer_typeof(), offsetof(SingleViewHost, _renderer), 0,
        ::g::Fuse::Controls::IProxyHost_typeof(), offsetof(SingleViewHost, _proxyHost), 0,
        ::g::Uno::Bool_typeof(), offsetof(SingleViewHost, _offscreen), 0,
        ::g::Uno::Bool_typeof(), offsetof(SingleViewHost, _updateTransform), 0,
        ::g::Uno::Bool_typeof(), offsetof(SingleViewHost, _draw), 0,
        ::g::Uno::Bool_typeof(), offsetof(SingleViewHost, _isVisible), 0);
    type->Reflection.SetFunctions(4,
        new uFunction("Dispose", NULL, (void*)SingleViewHost__Dispose_fn, 0, false, uVoid_typeof(), 0),
        new uFunction(".ctor", NULL, (void*)SingleViewHost__New2_fn, 0, true, type, 3, SingleViewHost__RenderState_typeof(), ::g::Fuse::Controls::Native::ViewHandle_typeof(), ::g::Fuse::Controls::Native::IViewHandleRenderer_typeof()),
        new uFunction("get_RenderToTexture", NULL, (void*)SingleViewHost__get_RenderToTexture_fn, 0, false, SingleViewHost__RenderState_typeof(), 0),
        new uFunction("set_RenderToTexture", NULL, (void*)SingleViewHost__set_RenderToTexture_fn, 0, false, uVoid_typeof(), 1, SingleViewHost__RenderState_typeof()));
}

SingleViewHost_type* SingleViewHost_typeof()
{
    static uSStrong<SingleViewHost_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 117;
    options.InterfaceCount = 19;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(SingleViewHost);
    options.TypeSize = sizeof(SingleViewHost_type);
    type = (SingleViewHost_type*)uClassType::New("Fuse.Controls.SingleViewHost", options);
    type->fp_build_ = SingleViewHost_build;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))SingleViewHost__CalcRenderBounds_fn;
    type->fp_DrawWithChildren = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))SingleViewHost__DrawWithChildren_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))SingleViewHost__GetContentSize_fn;
    type->fp_OnInvalidateVisual = (void(*)(::g::Fuse::Visual*))SingleViewHost__OnInvalidateVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))SingleViewHost__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))SingleViewHost__OnUnrooted_fn;
    type->fp_get_TreeRenderer = (void(*)(::g::Fuse::Elements::Element*, uObject**))SingleViewHost__get_TreeRenderer_fn;
    type->interface17.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererRootingStarted_fn;
    type->interface17.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererRooted_fn;
    type->interface17.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererUnrooted_fn;
    type->interface17.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))SingleViewHost__FuseElementsITreeRendererBackgroundChanged_fn;
    type->interface17.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))SingleViewHost__FuseElementsITreeRendererClipToBoundsChanged_fn;
    type->interface17.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, uArray*))SingleViewHost__FuseElementsITreeRendererZOrderChanged_fn;
    type->interface17.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))SingleViewHost__FuseElementsITreeRendererIsVisibleChanged_fn;
    type->interface17.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))SingleViewHost__FuseElementsITreeRendererOpacityChanged_fn;
    type->interface17.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))SingleViewHost__FuseElementsITreeRendererHitTestModeChanged_fn;
    type->interface17.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))SingleViewHost__FuseElementsITreeRendererIsEnabledChanged_fn;
    type->interface17.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))SingleViewHost__FuseElementsITreeRendererMeasure_fn;
    type->interface17.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererTransformChanged_fn;
    type->interface17.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererPlaced_fn;
    type->interface18.fp_Dispose = (void(*)(uObject*))SingleViewHost__Dispose_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public SingleViewHost(Fuse.Controls.SingleViewHost.RenderState initialState, Fuse.Controls.Native.ViewHandle viewHandle, Fuse.Controls.Native.IViewHandleRenderer renderer) :97
void SingleViewHost__ctor_5_fn(SingleViewHost* __this, int32_t* initialState, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, uObject* renderer)
{
    __this->ctor_5(*initialState, viewHandle, renderer);
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :174
void SingleViewHost__CalcRenderBounds_fn(SingleViewHost* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret2;
    ::g::Fuse::VisualBounds* ret3;
    return *__retval = __this->_draw ? (::g::Fuse::VisualBounds*)uPtr((::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret2), ret2))->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize()) : (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret3), ret3), void();
}

// private float4x4 CalcTransform() :197
void SingleViewHost__CalcTransform_fn(SingleViewHost* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->CalcTransform();
}

// public void Dispose() :255
void SingleViewHost__Dispose_fn(SingleViewHost* __this)
{
    __this->Dispose();
}

// protected override sealed void DrawWithChildren(Fuse.DrawContext dc) :163
void SingleViewHost__DrawWithChildren_fn(SingleViewHost* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "DrawWithChildren(Fuse.DrawContext)");

    if (__this->_draw)
        ::g::Fuse::Controls::Native::IViewHandleRenderer::Draw(uInterface(uPtr(__this->_renderer), ::TYPES[67/*Fuse.Controls.Native.IViewHandleRenderer*/]), __this->_viewHandle, uPtr(dc)->GetLocalToClipTransform(__this), ::g::Uno::Float2__New1(0.0f), __this->ActualSize(), ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/])));
}

// private void Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :218
void SingleViewHost__FuseElementsITreeRendererBackgroundChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
}

// private void Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :219
void SingleViewHost__FuseElementsITreeRendererClipToBoundsChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
}

// private void Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :233
void SingleViewHost__FuseElementsITreeRendererHitTestModeChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element,bool)");
    bool enabled_ = *enabled;
    uPtr(__this->_viewHandle)->SetHitTestEnabled(enabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :237
void SingleViewHost__FuseElementsITreeRendererIsEnabledChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element,bool)");
    bool isEnabled_ = *isEnabled;
    uPtr(__this->_viewHandle)->SetEnabled(isEnabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :223
void SingleViewHost__FuseElementsITreeRendererIsVisibleChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element,bool)");
    bool isVisible_ = *isVisible;
    __this->_isVisible = isVisible_;
    uPtr(__this->_viewHandle)->SetOpacity(isVisible_ ? uPtr(e)->Opacity() : 0.0f);
}

// private bool Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :241
void SingleViewHost__FuseElementsITreeRendererMeasure_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    *size = ::g::Uno::Float2__New1(0.0f);
    return *__retval = false, void();
}

// private void Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element e, float opacity) :228
void SingleViewHost__FuseElementsITreeRendererOpacityChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element,float)");
    float opacity_ = *opacity;

    if (__this->_isVisible)
        uPtr(__this->_viewHandle)->SetOpacity(opacity_);
}

// private void Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element e) :249
void SingleViewHost__FuseElementsITreeRendererPlaced_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element)");

    if (e == __this)
        __this->UpdateHostViewTransform();
}

// private void Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element e) :216
void SingleViewHost__FuseElementsITreeRendererRooted_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
}

// private void Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element e) :215
void SingleViewHost__FuseElementsITreeRendererRootingStarted_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
}

// private void Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element e) :243
void SingleViewHost__FuseElementsITreeRendererTransformChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element)");

    if (e == __this)
        __this->UpdateHostViewTransform();
}

// private void Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element e) :217
void SingleViewHost__FuseElementsITreeRendererUnrooted_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
}

// private void Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element e, Fuse.Visual[] zorder) :220
void SingleViewHost__FuseElementsITreeRendererZOrderChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, uArray* zorder)
{
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :202
void SingleViewHost__GetContentSize_fn(SingleViewHost* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 ret4;

    if (uPtr(__this->_viewHandle)->IsLeafView)
        return *__retval = uPtr(__this->_viewHandle)->Measure(lp_, ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/]))), void();
    else
        return *__retval = (::g::Fuse::Controls::Control__GetContentSize_fn(__this, uCRef(lp_), &ret4), ret4), void();
}

// public SingleViewHost New(Fuse.Controls.SingleViewHost.RenderState initialState, Fuse.Controls.Native.ViewHandle viewHandle, Fuse.Controls.Native.IViewHandleRenderer renderer) :97
void SingleViewHost__New2_fn(int32_t* initialState, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, uObject* renderer, SingleViewHost** __retval)
{
    *__retval = SingleViewHost::New2(*initialState, viewHandle, renderer);
}

// protected override sealed void OnInvalidateVisual() :155
void SingleViewHost__OnInvalidateVisual_fn(SingleViewHost* __this)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "OnInvalidateVisual()");
    ::g::Fuse::Controls::Control__OnInvalidateVisual_fn(__this);

    if (__this->_renderer != NULL)
        ::g::Fuse::Controls::Native::IViewHandleRenderer::Invalidate(uInterface(uPtr(__this->_renderer), ::TYPES[67/*Fuse.Controls.Native.IViewHandleRenderer*/]));
}

// private void OnInvalidateWorldTransform(object sender, Uno.EventArgs args) :146
void SingleViewHost__OnInvalidateWorldTransform_fn(SingleViewHost* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnInvalidateWorldTransform(sender, args);
}

// protected override sealed void OnRooted() :107
void SingleViewHost__OnRooted_fn(SingleViewHost* __this)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);
    __this->_proxyHost = ::g::Fuse::Controls::IProxyHostExtensions::FindProxyHost(__this);

    if (__this->RenderToTexture() == 1)
        __this->SetOnscreen();

    __this->add_WorldTransformInvalidated(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)SingleViewHost__OnInvalidateWorldTransform_fn, __this));
}

// protected override sealed void OnUnrooted() :117
void SingleViewHost__OnUnrooted_fn(SingleViewHost* __this)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "OnUnrooted()");
    __this->remove_WorldTransformInvalidated(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)SingleViewHost__OnInvalidateWorldTransform_fn, __this));
    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
    __this->SetOffscreen();
    __this->_proxyHost = NULL;
}

// public Fuse.Controls.SingleViewHost.RenderState get_RenderToTexture() :74
void SingleViewHost__get_RenderToTexture_fn(SingleViewHost* __this, int32_t* __retval)
{
    *__retval = __this->RenderToTexture();
}

// public void set_RenderToTexture(Fuse.Controls.SingleViewHost.RenderState value) :75
void SingleViewHost__set_RenderToTexture_fn(SingleViewHost* __this, int32_t* value)
{
    __this->RenderToTexture(*value);
}

// private void SetOffscreen() :136
void SingleViewHost__SetOffscreen_fn(SingleViewHost* __this)
{
    __this->SetOffscreen();
}

// private void SetOnscreen() :127
void SingleViewHost__SetOnscreen_fn(SingleViewHost* __this)
{
    __this->SetOnscreen();
}

// public override sealed Fuse.Elements.ITreeRenderer get_TreeRenderer() :212
void SingleViewHost__get_TreeRenderer_fn(SingleViewHost* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "get_TreeRenderer()");
    return *__retval = (uObject*)__this, void();
}

// private void UpdateHostViewTransform() :181
void SingleViewHost__UpdateHostViewTransform_fn(SingleViewHost* __this)
{
    __this->UpdateHostViewTransform();
}

// public SingleViewHost(Fuse.Controls.SingleViewHost.RenderState initialState, Fuse.Controls.Native.ViewHandle viewHandle, Fuse.Controls.Native.IViewHandleRenderer renderer) [instance] :97
void SingleViewHost::ctor_5(int32_t initialState, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, uObject* renderer)
{
    _offscreen = true;
    _isVisible = true;
    ctor_4();
    _renderState = initialState;
    _viewHandle = viewHandle;
    _renderer = renderer;
    _draw = (initialState == 0);
}

// private float4x4 CalcTransform() [instance] :197
::g::Uno::Float4x4 SingleViewHost::CalcTransform()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "CalcTransform()");
    return ::g::Uno::Matrix::Mul8(::g::Fuse::Controls::IProxyHost::WorldTransformInverse(uInterface(uPtr(_proxyHost), ::TYPES[35/*Fuse.Controls.IProxyHost*/])), WorldTransform());
}

// public void Dispose() [instance] :255
void SingleViewHost::Dispose()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Dispose()");
    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(_renderer), ::TYPES[68/*Uno.IDisposable*/]));
    _renderer = NULL;
    _viewHandle = NULL;
}

// private void OnInvalidateWorldTransform(object sender, Uno.EventArgs args) [instance] :146
void SingleViewHost::OnInvalidateWorldTransform(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "OnInvalidateWorldTransform(object,Uno.EventArgs)");

    if (!_updateTransform)
    {
        ::g::Fuse::UpdateManager::AddDeferredAction2(uDelegate::New(::TYPES[19/*Uno.Action*/], (void*)SingleViewHost__UpdateHostViewTransform_fn, this), 1, 5);
        _updateTransform = true;
    }
}

// public Fuse.Controls.SingleViewHost.RenderState get_RenderToTexture() [instance] :74
int32_t SingleViewHost::RenderToTexture()
{
    return _renderState;
}

// public void set_RenderToTexture(Fuse.Controls.SingleViewHost.RenderState value) [instance] :75
void SingleViewHost::RenderToTexture(int32_t value)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "set_RenderToTexture(Fuse.Controls.SingleViewHost.RenderState)");

    if (_renderState == value)
        return;

    _renderState = value;

    if (_changingState != NULL)
        ::g::Uno::IDisposable::Dispose(uInterface(uPtr(_changingState), ::TYPES[68/*Uno.IDisposable*/]));

    if (_renderState == 0)
        _changingState = (uObject*)SingleViewHost__Enable::New1(this);
    else
        _changingState = (uObject*)SingleViewHost__Disable::New1(this);
}

// private void SetOffscreen() [instance] :136
void SingleViewHost::SetOffscreen()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "SetOffscreen()");

    if (!_offscreen && (_proxyHost != NULL))
    {
        ::g::Fuse::Controls::IProxyHost::Remove(uInterface(uPtr(_proxyHost), ::TYPES[35/*Fuse.Controls.IProxyHost*/]), _viewHandle);
        _offscreen = true;
    }
}

// private void SetOnscreen() [instance] :127
void SingleViewHost::SetOnscreen()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "SetOnscreen()");

    if (_offscreen && (_proxyHost != NULL))
    {
        ::g::Fuse::Controls::IProxyHost::Insert(uInterface(uPtr(_proxyHost), ::TYPES[35/*Fuse.Controls.IProxyHost*/]), _viewHandle);
        _offscreen = false;
    }
}

// private void UpdateHostViewTransform() [instance] :181
void SingleViewHost::UpdateHostViewTransform()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "UpdateHostViewTransform()");

    if (!IsRootingCompleted())
        return;

    _updateTransform = false;
    ::g::Uno::Float4x4 transform = CalcTransform();
    ::g::Uno::Float2 size = ActualSize();
    float density = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/]));
    ::g::Fuse::Visual* p = Parent();

    if (uIs(p, ::TYPES[18/*Fuse.Controls.Control*/]))
        uPtr(uCast< ::g::Fuse::Controls::Control*>(p, ::TYPES[18/*Fuse.Controls.Control*/]))->CompensateForScrollView(&transform);

    uPtr(_viewHandle)->UpdateViewRect(transform, size, density);
}

// public SingleViewHost New(Fuse.Controls.SingleViewHost.RenderState initialState, Fuse.Controls.Native.ViewHandle viewHandle, Fuse.Controls.Native.IViewHandleRenderer renderer) [static] :97
SingleViewHost* SingleViewHost::New2(int32_t initialState, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, uObject* renderer)
{
    SingleViewHost* obj1 = (SingleViewHost*)uNew(SingleViewHost_typeof());
    obj1->ctor_5(initialState, viewHandle, renderer);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\RangeControls\Slider.ux.uno
// --------------------------------------------------------------------------------------------------------------

// public partial sealed class Slider :20
// {
// static Slider() :190
static void Slider__cctor_5_fn(uType* __type)
{
}

static void Slider_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface17),
        ::g::Fuse::Triggers::IProgress_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface18),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Double_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface19),
        ::g::Fuse::Controls::Native::IRangeViewHost_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface20));
    type->SetFields(122);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Slider__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::RangeControl_type* Slider_typeof()
{
    static uSStrong< ::g::Fuse::Controls::RangeControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::RangeControl_typeof();
    options.FieldCount = 122;
    options.InterfaceCount = 21;
    options.ObjectSize = sizeof(Slider);
    options.TypeSize = sizeof(::g::Fuse::Controls::RangeControl_type);
    type = (::g::Fuse::Controls::RangeControl_type*)uClassType::New("Fuse.Controls.Slider", options);
    type->fp_build_ = Slider_build;
    type->fp_ctor_ = (void*)Slider__New5_fn;
    type->fp_cctor_ = Slider__cctor_5_fn;
    type->interface20.fp_OnProgressChanged = (void(*)(uObject*, double*))::g::Fuse::Controls::RangeControl__FuseControlsNativeIRangeViewHostOnProgressChanged_fn;
    type->interface20.fp_get_RelativeUserStep = (void(*)(uObject*, double*))::g::Fuse::Controls::RangeControl__FuseControlsNativeIRangeViewHostget_RelativeUserStep_fn;
    type->interface18.fp_get_Progress = (void(*)(uObject*, double*))::g::Fuse::Controls::RangeControl__get_Progress_fn;
    type->interface18.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::RangeControl__add_ProgressChanged_fn;
    type->interface18.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::RangeControl__remove_ProgressChanged_fn;
    type->interface19.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::RangeControl__get_Value_fn;
    type->interface19.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::RangeControl__set_Value_fn;
    type->interface19.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::RangeControl__add_ValueChanged_fn;
    type->interface19.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::RangeControl__remove_ValueChanged_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Slider() :194
void Slider__ctor_8_fn(Slider* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :198
void Slider__InitializeUX_fn(Slider* __this)
{
    __this->InitializeUX();
}

// public Slider New() :194
void Slider__New5_fn(Slider** __retval)
{
    *__retval = Slider::New5();
}

// public Slider() [instance] :194
void Slider::ctor_8()
{
    uStackFrame __("Fuse.Controls.Slider", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :198
void Slider::InitializeUX()
{
    uStackFrame __("Fuse.Controls.Slider", "InitializeUX()");
    Slider__Template* GraphicsAppearance = Slider__Template::New2(this, this);
    Slider__Template1* AndroidAppearance = Slider__Template1::New2(this, this);
    Slider__Template2* iOSAppearance = Slider__Template2::New2(this, this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), GraphicsAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iOSAppearance);
}

// public Slider New() [static] :194
Slider* Slider::New5()
{
    Slider* obj1 = (Slider*)uNew(Slider_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\StackPanel.uno
// ---------------------------------------------------------------------------------------------

// public class StackPanel :30
// {
static void StackPanel_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Layouts::StackLayout_typeof(), offsetof(StackPanel, _stackLayout), 0);
    type->Reflection.SetFunctions(9,
        new uFunction("get_ContentAlignment", NULL, (void*)StackPanel__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)StackPanel__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_ItemSpacing", NULL, (void*)StackPanel__get_ItemSpacing_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ItemSpacing", NULL, (void*)StackPanel__set_ItemSpacing_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Mode", NULL, (void*)StackPanel__get_Mode_fn, 0, false, ::g::Fuse::Layouts::StackLayoutMode_typeof(), 0),
        new uFunction("set_Mode", NULL, (void*)StackPanel__set_Mode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::StackLayoutMode_typeof()),
        new uFunction(".ctor", NULL, (void*)StackPanel__New4_fn, 0, true, type, 0),
        new uFunction("get_Orientation", NULL, (void*)StackPanel__get_Orientation_fn, 0, false, ::g::Fuse::Layouts::Orientation_typeof(), 0),
        new uFunction("set_Orientation", NULL, (void*)StackPanel__set_Orientation_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::Orientation_typeof()));
}

::g::Fuse::Controls::Panel_type* StackPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(StackPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.StackPanel", options);
    type->fp_build_ = StackPanel_build;
    type->fp_ctor_ = (void*)StackPanel__New4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public StackPanel() :34
void StackPanel__ctor_7_fn(StackPanel* __this)
{
    __this->ctor_7();
}

// public Fuse.Elements.Alignment get_ContentAlignment() :70
void StackPanel__get_ContentAlignment_fn(StackPanel* __this, int32_t* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :71
void StackPanel__set_ContentAlignment_fn(StackPanel* __this, int32_t* value)
{
    __this->ContentAlignment(*value);
}

// public float get_ItemSpacing() :63
void StackPanel__get_ItemSpacing_fn(StackPanel* __this, float* __retval)
{
    *__retval = __this->ItemSpacing();
}

// public void set_ItemSpacing(float value) :64
void StackPanel__set_ItemSpacing_fn(StackPanel* __this, float* value)
{
    __this->ItemSpacing(*value);
}

// public Fuse.Layouts.StackLayoutMode get_Mode() :77
void StackPanel__get_Mode_fn(StackPanel* __this, int32_t* __retval)
{
    *__retval = __this->Mode();
}

// public void set_Mode(Fuse.Layouts.StackLayoutMode value) :78
void StackPanel__set_Mode_fn(StackPanel* __this, int32_t* value)
{
    __this->Mode(*value);
}

// public StackPanel New() :34
void StackPanel__New4_fn(StackPanel** __retval)
{
    *__retval = StackPanel::New4();
}

// public Fuse.Layouts.Orientation get_Orientation() :42
void StackPanel__get_Orientation_fn(StackPanel* __this, int32_t* __retval)
{
    *__retval = __this->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) :43
void StackPanel__set_Orientation_fn(StackPanel* __this, int32_t* value)
{
    __this->Orientation(*value);
}

// public StackPanel() [instance] :34
void StackPanel::ctor_7()
{
    uStackFrame __("Fuse.Controls.StackPanel", ".ctor()");
    ctor_6();
    Layout(_stackLayout = ::g::Fuse::Layouts::StackLayout::New2());
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :70
int32_t StackPanel::ContentAlignment()
{
    uStackFrame __("Fuse.Controls.StackPanel", "get_ContentAlignment()");
    return uPtr(_stackLayout)->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :71
void StackPanel::ContentAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.StackPanel", "set_ContentAlignment(Fuse.Elements.Alignment)");
    uPtr(_stackLayout)->ContentAlignment(value);
}

// public float get_ItemSpacing() [instance] :63
float StackPanel::ItemSpacing()
{
    uStackFrame __("Fuse.Controls.StackPanel", "get_ItemSpacing()");
    return uPtr(_stackLayout)->ItemSpacing();
}

// public void set_ItemSpacing(float value) [instance] :64
void StackPanel::ItemSpacing(float value)
{
    uStackFrame __("Fuse.Controls.StackPanel", "set_ItemSpacing(float)");
    uPtr(_stackLayout)->ItemSpacing(value);
}

// public Fuse.Layouts.StackLayoutMode get_Mode() [instance] :77
int32_t StackPanel::Mode()
{
    uStackFrame __("Fuse.Controls.StackPanel", "get_Mode()");
    return uPtr(_stackLayout)->Mode();
}

// public void set_Mode(Fuse.Layouts.StackLayoutMode value) [instance] :78
void StackPanel::Mode(int32_t value)
{
    uStackFrame __("Fuse.Controls.StackPanel", "set_Mode(Fuse.Layouts.StackLayoutMode)");
    uPtr(_stackLayout)->Mode(value);
}

// public Fuse.Layouts.Orientation get_Orientation() [instance] :42
int32_t StackPanel::Orientation()
{
    uStackFrame __("Fuse.Controls.StackPanel", "get_Orientation()");
    return uPtr(_stackLayout)->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) [instance] :43
void StackPanel::Orientation(int32_t value)
{
    uStackFrame __("Fuse.Controls.StackPanel", "set_Orientation(Fuse.Layouts.Orientation)");
    uPtr(_stackLayout)->Orientation(value);
}

// public StackPanel New() [static] :34
StackPanel* StackPanel::New4()
{
    StackPanel* obj1 = (StackPanel*)uNew(StackPanel_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\Shapes\Star.Surface.uno
// ----------------------------------------------------------------------------------------------------------

// public partial sealed class Star :8
// {
static void Star_build(uType* type)
{
    ::STRINGS[91] = uString::Const("Points");
    ::STRINGS[92] = uString::Const("Ratio");
    ::STRINGS[93] = uString::Const("RotationDegrees");
    ::STRINGS[94] = uString::Const("RoundRatio");
    ::TYPES[65] = ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Drawing::LineSegment_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface17),
        ::g::Fuse::Drawing::IDrawObjectWatcherFeedback_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface18));
    type->SetFields(118,
        ::g::Uno::Int_typeof(), offsetof(Star, _points), 0,
        ::g::Uno::Float_typeof(), offsetof(Star, _ratio), 0,
        ::g::Uno::Float_typeof(), offsetof(Star, _roundRatio), 0,
        ::g::Uno::Float_typeof(), offsetof(Star, _degrees), 0);
    type->Reflection.SetFunctions(9,
        new uFunction(".ctor", NULL, (void*)Star__New3_fn, 0, true, type, 0),
        new uFunction("get_Points", NULL, (void*)Star__get_Points_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_Points", NULL, (void*)Star__set_Points_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_Ratio", NULL, (void*)Star__get_Ratio_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Ratio", NULL, (void*)Star__set_Ratio_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_RotationDegrees", NULL, (void*)Star__get_RotationDegrees_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_RotationDegrees", NULL, (void*)Star__set_RotationDegrees_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_RoundRatio", NULL, (void*)Star__get_RoundRatio_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_RoundRatio", NULL, (void*)Star__set_RoundRatio_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

::g::Fuse::Controls::Shape_type* Star_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Shape_typeof();
    options.FieldCount = 122;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(Star);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.Star", options);
    type->fp_build_ = Star_build;
    type->fp_ctor_ = (void*)Star__New3_fn;
    type->fp_CreateSurfacePath = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::Drawing::Surface*, ::g::Fuse::Drawing::SurfacePath**))Star__CreateSurfacePath_fn;
    type->interface18.fp_Changed = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackChanged_fn;
    type->interface18.fp_Prepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackPrepare_fn;
    type->interface18.fp_Unprepare = (void(*)(uObject*, uObject*))::g::Fuse::Controls::Shape__FuseDrawingIDrawObjectWatcherFeedbackUnprepare_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Shape__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Star() :8
void Star__ctor_7_fn(Star* __this)
{
    __this->ctor_7();
}

// protected override sealed Fuse.Drawing.SurfacePath CreateSurfacePath(Fuse.Drawing.Surface surface) :10
void Star__CreateSurfacePath_fn(Star* __this, ::g::Fuse::Drawing::Surface* surface, ::g::Fuse::Drawing::SurfacePath** __retval)
{
    uStackFrame __("Fuse.Controls.Star", "CreateSurfacePath(Fuse.Drawing.Surface)");
    ::g::Fuse::Drawing::LineSegment collection1;
    ::g::Fuse::Drawing::LineSegment collection2;
    ::g::Fuse::Drawing::LineSegment collection3;
    ::g::Fuse::Drawing::LineSegment collection4;
    ::g::Uno::Collections::List* list = (::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[65/*Uno.Collections.List<Fuse.Drawing.LineSegment>*/]);

    if (__this->Points() < 3)
        return *__retval = uPtr(surface)->CreatePath((uObject*)list, 0), void();

    float t = -6.28318548f / (float)(__this->Points() * 2);
    ::g::Uno::Float2 center = ::g::Uno::Float2__op_Division1(__this->ActualSize(), 2.0f);
    float radius = ::g::Uno::Math::Min1(__this->ActualSize().X, __this->ActualSize().Y) * 0.5f;
    float spokeRadius = radius * __this->Ratio();
    float rotation = __this->RotationRadians();
    float cornerRatio = __this->RoundRatio();
    int32_t count = __this->Points() * 2;

    for (int32_t i = 0; i < count; i++)
    {
        ::g::Uno::Float2 segRadius = ((i % 2) == 0) ? ::g::Uno::Float2__New2(radius, spokeRadius) : ::g::Uno::Float2__New2(spokeRadius, radius);
        ::g::Uno::Float2 pa = ::g::Uno::Float2__New2(center.X + (::g::Uno::Math::Sin1((t * (float)i) + rotation) * segRadius.Item(0)), center.Y - (::g::Uno::Math::Cos1((t * (float)i) + rotation) * segRadius.Item(0)));
        ::g::Uno::Float2 pb = ::g::Uno::Float2__New2(center.X + (::g::Uno::Math::Sin1((t * (float)(i + 1)) + rotation) * segRadius.Item(1)), center.Y - (::g::Uno::Math::Cos1((t * (float)(i + 1)) + rotation) * segRadius.Item(1)));

        if (i == 0)
            ::g::Uno::Collections::List__Add_fn(uPtr(list), uCRef((collection1 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection1.Type = 0, collection1.To = pa, collection1)));

        float zeroTolerance = 1e-05f;

        if (cornerRatio > 1e-05f)
        {
            ::g::Uno::Float2 na = ::g::Uno::Float2__New2(::g::Uno::Math::Cos1((t * (float)i) + rotation), ::g::Uno::Math::Sin1((t * (float)i) + rotation));
            ::g::Uno::Float2 nb = ::g::Uno::Float2__New2(::g::Uno::Math::Cos1((t * (float)(i + 1)) + rotation), ::g::Uno::Math::Sin1((t * (float)(i + 1)) + rotation));
            ::g::Uno::Collections::List__Add_fn(uPtr(list), uCRef((collection2 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection2.Type = 2, collection2.To = pb, collection2.A = ::g::Uno::Float2__op_Subtraction2(pa, ::g::Uno::Float2__op_Multiply1(::g::Uno::Float2__op_Multiply1(na, cornerRatio), segRadius.Item(0))), collection2.B = ::g::Uno::Float2__op_Addition2(pb, ::g::Uno::Float2__op_Multiply1(::g::Uno::Float2__op_Multiply1(nb, cornerRatio), segRadius.Item(1))), collection2)));
        }
        else
            ::g::Uno::Collections::List__Add_fn(uPtr(list), uCRef((collection3 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection3.Type = 1, collection3.To = pb, collection3)));
    }

    ::g::Uno::Collections::List__Add_fn(list, uCRef((collection4 = uDefault< ::g::Fuse::Drawing::LineSegment>(), collection4.Type = 4, collection4)));
    return *__retval = uPtr(__this->Surface())->CreatePath((uObject*)list, 0), void();
}

// public generated Star New() :8
void Star__New3_fn(Star** __retval)
{
    *__retval = Star::New3();
}

// public int get_Points() :28
void Star__get_Points_fn(Star* __this, int32_t* __retval)
{
    *__retval = __this->Points();
}

// public void set_Points(int value) :29
void Star__set_Points_fn(Star* __this, int32_t* value)
{
    __this->Points(*value);
}

// public float get_Ratio() :41
void Star__get_Ratio_fn(Star* __this, float* __retval)
{
    *__retval = __this->Ratio();
}

// public void set_Ratio(float value) :42
void Star__set_Ratio_fn(Star* __this, float* value)
{
    __this->Ratio(*value);
}

// public float get_RotationDegrees() :69
void Star__get_RotationDegrees_fn(Star* __this, float* __retval)
{
    *__retval = __this->RotationDegrees();
}

// public void set_RotationDegrees(float value) :70
void Star__set_RotationDegrees_fn(Star* __this, float* value)
{
    __this->RotationDegrees(*value);
}

// internal float get_RotationRadians() :82
void Star__get_RotationRadians_fn(Star* __this, float* __retval)
{
    *__retval = __this->RotationRadians();
}

// public float get_RoundRatio() :55
void Star__get_RoundRatio_fn(Star* __this, float* __retval)
{
    *__retval = __this->RoundRatio();
}

// public void set_RoundRatio(float value) :56
void Star__set_RoundRatio_fn(Star* __this, float* value)
{
    __this->RoundRatio(*value);
}

// public generated Star() [instance] :8
void Star::ctor_7()
{
    _points = 5;
    _ratio = 0.5f;
    _degrees = 0.0f;
    ctor_6();
}

// public int get_Points() [instance] :28
int32_t Star::Points()
{
    return _points;
}

// public void set_Points(int value) [instance] :29
void Star::Points(int32_t value)
{
    uStackFrame __("Fuse.Controls.Star", "set_Points(int)");

    if (value == _points)
        return;

    _points = value;
    InvalidateSurfacePath();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[91/*"Points"*/]));
}

// public float get_Ratio() [instance] :41
float Star::Ratio()
{
    return _ratio;
}

// public void set_Ratio(float value) [instance] :42
void Star::Ratio(float value)
{
    uStackFrame __("Fuse.Controls.Star", "set_Ratio(float)");

    if (value == _ratio)
        return;

    _ratio = value;
    InvalidateSurfacePath();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[92/*"Ratio"*/]));
}

// public float get_RotationDegrees() [instance] :69
float Star::RotationDegrees()
{
    return _degrees;
}

// public void set_RotationDegrees(float value) [instance] :70
void Star::RotationDegrees(float value)
{
    uStackFrame __("Fuse.Controls.Star", "set_RotationDegrees(float)");

    if (value == _degrees)
        return;

    _degrees = value;
    InvalidateSurfacePath();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[93/*"RotationDeg...*/]));
}

// internal float get_RotationRadians() [instance] :82
float Star::RotationRadians()
{
    return (_degrees / 180.0f) * 3.14159274f;
}

// public float get_RoundRatio() [instance] :55
float Star::RoundRatio()
{
    return _roundRatio;
}

// public void set_RoundRatio(float value) [instance] :56
void Star::RoundRatio(float value)
{
    uStackFrame __("Fuse.Controls.Star", "set_RoundRatio(float)");

    if (value == _roundRatio)
        return;

    _roundRatio = value;
    InvalidateSurfacePath();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[94/*"RoundRatio"*/]));
}

// public generated Star New() [static] :8
Star* Star::New3()
{
    Star* obj5 = (Star*)uNew(Star_typeof());
    obj5->ctor_7();
    return obj5;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\Backgrounds\TopFrameBackground.uno
// -----------------------------------------------------------------------------------------------------------------

// public sealed class StatusBarBackground :26
// {
static void StatusBarBackground_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface16));
    type->SetFields(108);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)StatusBarBackground__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* StatusBarBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TopFrameBackground_typeof();
    options.FieldCount = 108;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(StatusBarBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.StatusBarBackground", options);
    type->fp_build_ = StatusBarBackground_build;
    type->fp_ctor_ = (void*)StatusBarBackground__New3_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated StatusBarBackground() :26
void StatusBarBackground__ctor_6_fn(StatusBarBackground* __this)
{
    __this->ctor_6();
}

// public generated StatusBarBackground New() :26
void StatusBarBackground__New3_fn(StatusBarBackground** __retval)
{
    *__retval = StatusBarBackground::New3();
}

// public generated StatusBarBackground() [instance] :26
void StatusBarBackground::ctor_6()
{
    ctor_5();
}

// public generated StatusBarBackground New() [static] :26
StatusBarBackground* StatusBarBackground::New3()
{
    StatusBarBackground* obj1 = (StatusBarBackground*)uNew(StatusBarBackground_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\ToggleControls\Switch.ux.uno
// ---------------------------------------------------------------------------------------------------------------

// public partial sealed class Switch :22
// {
// static Switch() :188
static void Switch__cctor_5_fn(uType* __type)
{
}

static void Switch_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Input::Focus_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface17),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface18),
        ::g::Fuse::Controls::Native::IToggleViewHost_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface19),
        ::g::Fuse::Triggers::Actions::IToggleable_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface20));
    type->SetFields(119);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Switch__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::ToggleControl_type* Switch_typeof()
{
    static uSStrong< ::g::Fuse::Controls::ToggleControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ToggleControl_typeof();
    options.FieldCount = 119;
    options.InterfaceCount = 21;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(Switch);
    options.TypeSize = sizeof(::g::Fuse::Controls::ToggleControl_type);
    type = (::g::Fuse::Controls::ToggleControl_type*)uClassType::New("Fuse.Controls.Switch", options);
    type->fp_build_ = Switch_build;
    type->fp_ctor_ = (void*)Switch__New5_fn;
    type->fp_cctor_ = Switch__cctor_5_fn;
    type->interface19.fp_OnValueChanged = (void(*)(uObject*, bool*))::g::Fuse::Controls::ToggleControl__FuseControlsNativeIToggleViewHostOnValueChanged_fn;
    type->interface18.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::ToggleControl__get_Value_fn;
    type->interface18.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::ToggleControl__set_Value_fn;
    type->interface18.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::ToggleControl__add_ValueChanged_fn;
    type->interface18.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::ToggleControl__remove_ValueChanged_fn;
    type->interface20.fp_Toggle = (void(*)(uObject*))::g::Fuse::Controls::ToggleControl__Toggle_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Switch() :192
void Switch__ctor_8_fn(Switch* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :196
void Switch__InitializeUX_fn(Switch* __this)
{
    __this->InitializeUX();
}

// public Switch New() :192
void Switch__New5_fn(Switch** __retval)
{
    *__retval = Switch::New5();
}

// public Switch() [instance] :192
void Switch::ctor_8()
{
    uStackFrame __("Fuse.Controls.Switch", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :196
void Switch::InitializeUX()
{
    uStackFrame __("Fuse.Controls.Switch", "InitializeUX()");
    Switch__Template* GraphicsAppearance = Switch__Template::New2(this, this);
    Switch__Template1* AndroidAppearance = Switch__Template1::New2(this, this);
    Switch__Template2* iOSAppearance = Switch__Template2::New2(this, this);
    ::g::Fuse::Input::Focus::SetIsFocusable(this, true);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), GraphicsAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iOSAppearance);
}

// public Switch New() [static] :192
Switch* Switch::New5()
{
    Switch* obj1 = (Switch*)uNew(Switch_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Slider.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Slider.Template :7
// {
// static Template() :29
static void Slider__Template__cctor__fn(uType* __type)
{
    Slider__Template::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[12/*"Opacity"*/]);
    Slider__Template::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[95/*"Fill"*/]);
    Slider__Template::__selector2_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[96/*"Brush"*/]);
    Slider__Template::__selector3_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[97/*"Distance"*/]);
    Slider__Template::__selector4_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[98/*"Size"*/]);
    Slider__Template::__selector5_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[11/*"GraphicsApp...*/]);
    Slider__Template::__selector6_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[99/*"thumb"*/]);
    Slider__Template::__selector7_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[100/*"thumb_circle"*/]);
    Slider__Template::__selector8_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[101/*"thumb_shadow"*/]);
    Slider__Template::__selector9_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[102/*"halo"*/]);
    Slider__Template::__selector10_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[103/*"scrubber_ri...*/]);
    Slider__Template::__selector11_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[104/*"scrubber_left"*/]);
}

static void Slider__Template_build(uType* type)
{
    ::STRINGS[12] = uString::Const("Opacity");
    ::STRINGS[95] = uString::Const("Fill");
    ::STRINGS[96] = uString::Const("Brush");
    ::STRINGS[97] = uString::Const("Distance");
    ::STRINGS[98] = uString::Const("Size");
    ::STRINGS[11] = uString::Const("GraphicsAppearance");
    ::STRINGS[99] = uString::Const("thumb");
    ::STRINGS[100] = uString::Const("thumb_circle");
    ::STRINGS[101] = uString::Const("thumb_shadow");
    ::STRINGS[102] = uString::Const("halo");
    ::STRINGS[103] = uString::Const("scrubber_right");
    ::STRINGS[104] = uString::Const("scrubber_left");
    ::TYPES[71] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[72] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[73] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[45] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    type->SetDependencies(
        ::g::Fuse::TranslationModes_typeof());
    type->SetFields(2,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(Slider__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(Slider__Template, __parentInstance1), uFieldFlagsWeak,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(Slider__Template, halo_Opacity_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(Slider__Template, thumb_circle_Fill_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(Slider__Template, thumb_stroke_Brush_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(Slider__Template, thumb_shadow_Distance_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(Slider__Template, thumb_shadow_Size_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(Slider__Template, scrubber_left_Fill_inst), 0,
        ::g::Fuse::Controls::Panel_typeof(), offsetof(Slider__Template, thumb), 0,
        ::g::Fuse::Controls::Circle_typeof(), offsetof(Slider__Template, thumb_circle), 0,
        ::g::Fuse::Drawing::Stroke_typeof(), offsetof(Slider__Template, thumb_stroke), 0,
        ::g::Fuse::Effects::DropShadow_typeof(), offsetof(Slider__Template, thumb_shadow), 0,
        ::g::Fuse::Controls::Circle_typeof(), offsetof(Slider__Template, halo), 0,
        ::g::Fuse::Controls::Rectangle_typeof(), offsetof(Slider__Template, scrubber_right), 0,
        ::g::Fuse::Controls::Rectangle_typeof(), offsetof(Slider__Template, scrubber_left), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector2_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector3_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector4_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector5_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector6_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector7_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector8_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector9_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector10_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Slider__Template::__selector11_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Slider__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Slider_typeof(), ::g::Fuse::Controls::Slider_typeof()));
}

::g::Uno::UX::Template_type* Slider__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 29;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(Slider__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Slider.Template", options);
    type->fp_build_ = Slider__Template_build;
    type->fp_cctor_ = Slider__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Slider__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :11
void Slider__Template__ctor_1_fn(Slider__Template* __this, ::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :32
void Slider__Template__New1_fn(Slider__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Slider.Template", "New()");
    ::g::Fuse::Controls::Panel* __self1 = ::g::Fuse::Controls::Panel::New3();
    __this->halo = ::g::Fuse::Controls::Circle::New3();
    __this->halo_Opacity_inst = ::g::FuseControlsPrimitives_FuseElementsElement_Opacity_Property::New1(__this->halo, Slider__Template::__selector0_);
    __this->thumb_circle = ::g::Fuse::Controls::Circle::New3();
    __this->thumb_circle_Fill_inst = ::g::FuseControlsPrimitives_FuseControlsShape_Fill_Property::New1(__this->thumb_circle, Slider__Template::__selector1_);
    __this->thumb_stroke = ::g::Fuse::Drawing::Stroke::New2();
    __this->thumb_stroke_Brush_inst = ::g::FuseControlsPrimitives_FuseDrawingStroke_Brush_Property::New1(__this->thumb_stroke, Slider__Template::__selector2_);
    __this->thumb_shadow = ::g::Fuse::Effects::DropShadow::New2();
    __this->thumb_shadow_Distance_inst = ::g::FuseControlsPrimitives_FuseEffectsDropShadow_Distance_Property::New1(__this->thumb_shadow, Slider__Template::__selector3_);
    __this->thumb_shadow_Size_inst = ::g::FuseControlsPrimitives_FuseEffectsDropShadow_Size_Property::New1(__this->thumb_shadow, Slider__Template::__selector4_);
    __this->scrubber_left = ::g::Fuse::Controls::Rectangle::New3();
    __this->scrubber_left_Fill_inst = ::g::FuseControlsPrimitives_FuseControlsShape_Fill_Property::New1(__this->scrubber_left, Slider__Template::__selector1_);
    ::g::Fuse::Gestures::LinearRangeBehavior* temp = ::g::Fuse::Gestures::LinearRangeBehavior::New2();
    __this->thumb = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Drawing::StaticSolidColor* temp1 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.5921569f, 0.5921569f, 0.5921569f, 1.0f));
    ::g::Fuse::Drawing::StaticSolidColor* temp2 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(1.0f, 1.0f, 1.0f, 1.0f));
    ::g::Fuse::Drawing::StaticSolidColor* temp3 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.772549f, 0.772549f, 0.772549f, 1.0f));
    ::g::Fuse::Controls::Panel* temp4 = ::g::Fuse::Controls::Panel::New3();
    __this->scrubber_right = ::g::Fuse::Controls::Rectangle::New3();
    ::g::Fuse::Drawing::StaticSolidColor* temp5 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.8941177f, 0.8941177f, 0.8941177f, 1.0f));
    ::g::Fuse::Drawing::StaticSolidColor* temp6 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.6588235f, 0.6588235f, 0.6588235f, 1.0f));
    ::g::Fuse::Triggers::ProgressAnimation* temp7 = ::g::Fuse::Triggers::ProgressAnimation::New2();
    ::g::Fuse::Animations::Move* temp8 = ::g::Fuse::Animations::Move::New2();
    ::g::Fuse::Animations::Move* temp9 = ::g::Fuse::Animations::Move::New2();
    ::g::Fuse::Triggers::WhileFocused* temp10 = ::g::Fuse::Triggers::WhileFocused::New2();
    ::g::Fuse::Animations::Change* temp11 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[71/*Fuse.Animations.Change<float>*/], __this->halo_Opacity_inst);
    ::g::Fuse::Triggers::WhileDisabled* temp12 = ::g::Fuse::Triggers::WhileDisabled::New2();
    ::g::Fuse::Animations::Change* temp13 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[72/*Fuse.Animations.Change<Fuse.Drawing.Brush>*/], __this->thumb_circle_Fill_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp14 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.9372549f, 0.9372549f, 0.9372549f, 1.0f));
    ::g::Fuse::Animations::Change* temp15 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[72/*Fuse.Animations.Change<Fuse.Drawing.Brush>*/], __this->thumb_stroke_Brush_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp16 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.7882353f, 0.7882353f, 0.7882353f, 1.0f));
    ::g::Fuse::Animations::Change* temp17 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[71/*Fuse.Animations.Change<float>*/], __this->thumb_shadow_Distance_inst);
    ::g::Fuse::Animations::Change* temp18 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[71/*Fuse.Animations.Change<float>*/], __this->thumb_shadow_Size_inst);
    ::g::Fuse::Animations::Change* temp19 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[72/*Fuse.Animations.Change<Fuse.Drawing.Brush>*/], __this->scrubber_left_Fill_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp20 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.8352941f, 0.8352941f, 0.8352941f, 1.0f));
    __self1->HitTestMode(2);
    __self1->Margin(::g::Uno::Float4__New2(12.0f, 0.0f, 12.0f, 0.0f));
    __self1->SnapToPixels(false);
    __self1->Name(Slider__Template::__selector5_);
    uPtr(__this->thumb)->HitTestMode(2);
    uPtr(__this->thumb)->Width(::g::Uno::UX::Size__New1(38.0f, 1));
    uPtr(__this->thumb)->Height(::g::Uno::UX::Size__New1(38.0f, 1));
    uPtr(__this->thumb)->Alignment(1);
    uPtr(__this->thumb)->Anchor(::g::Uno::UX::Size2__New1(::g::Uno::UX::Size__New1(50.0f, 4), ::g::Uno::UX::Size__New1(50.0f, 4)));
    uPtr(__this->thumb)->Name(Slider__Template::__selector6_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->thumb)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->thumb_circle);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->thumb)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->halo);
    uPtr(__this->thumb_circle)->MaxHeight(::g::Uno::UX::Size__New1(23.0f, 1));
    uPtr(__this->thumb_circle)->Name(Slider__Template::__selector7_);
    uPtr(__this->thumb_circle)->Fill(temp2);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->thumb_circle)->Strokes()), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), __this->thumb_stroke);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->thumb_circle)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->thumb_shadow);
    uPtr(__this->thumb_stroke)->Width(1.0f);
    uPtr(__this->thumb_stroke)->Brush(temp1);
    uPtr(__this->thumb_shadow)->Size(1.0f);
    uPtr(__this->thumb_shadow)->Angle(90.0f);
    uPtr(__this->thumb_shadow)->Distance(0.0f);
    uPtr(__this->thumb_shadow)->Spread(0.1f);
    uPtr(__this->thumb_shadow)->Color(::g::Uno::Float4__New2(0.6039216f, 0.6039216f, 0.6039216f, 1.0f));
    uPtr(__this->thumb_shadow)->Name(Slider__Template::__selector8_);
    uPtr(__this->halo)->Height(::g::Uno::UX::Size__New1(38.0f, 1));
    uPtr(__this->halo)->ClipToBounds(false);
    uPtr(__this->halo)->Opacity(0.0f);
    uPtr(__this->halo)->Name(Slider__Template::__selector9_);
    uPtr(__this->halo)->Fill(temp3);
    temp4->ClipToBounds(true);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp4->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->scrubber_right);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp4->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->scrubber_left);
    uPtr(__this->scrubber_right)->CornerRadius(::g::Uno::Float4__New2(2.0f, 2.0f, 2.0f, 2.0f));
    uPtr(__this->scrubber_right)->Height(::g::Uno::UX::Size__New1(2.0f, 1));
    uPtr(__this->scrubber_right)->Name(Slider__Template::__selector10_);
    uPtr(__this->scrubber_right)->Fill(temp5);
    uPtr(__this->scrubber_left)->CornerRadius(::g::Uno::Float4__New2(2.0f, 2.0f, 2.0f, 2.0f));
    uPtr(__this->scrubber_left)->Height(::g::Uno::UX::Size__New1(2.0f, 1));
    uPtr(__this->scrubber_left)->Name(Slider__Template::__selector11_);
    uPtr(__this->scrubber_left)->Fill(temp6);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp7->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp8);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp7->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp9);
    temp8->X(1.0f);
    temp8->RelativeTo(::g::Fuse::TranslationModes::ParentSize());
    temp8->Target(__this->thumb);
    temp9->X(1.0f);
    temp9->RelativeTo(::g::Fuse::TranslationModes::ParentSize());
    temp9->Target(__this->scrubber_right);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp11);
    ::g::Fuse::Animations::Change__set_Value_fn(temp11, uCRef(0.5f));
    temp11->Duration(0.3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp13);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp15);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp17);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp18);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp19);
    ::g::Fuse::Animations::Change__set_Value_fn(temp13, temp14);
    ::g::Fuse::Animations::Change__set_Value_fn(temp15, temp16);
    ::g::Fuse::Animations::Change__set_Value_fn(temp17, uCRef(0.0f));
    ::g::Fuse::Animations::Change__set_Value_fn(temp18, uCRef(0.0f));
    ::g::Fuse::Animations::Change__set_Value_fn(temp19, temp20);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->thumb);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp4);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp7);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp10);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp12);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :11
void Slider__Template__New2_fn(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance, Slider__Template** __retval)
{
    *__retval = Slider__Template::New2(parent, parentInstance);
}

::g::Uno::UX::Selector Slider__Template::__selector0_;
::g::Uno::UX::Selector Slider__Template::__selector1_;
::g::Uno::UX::Selector Slider__Template::__selector2_;
::g::Uno::UX::Selector Slider__Template::__selector3_;
::g::Uno::UX::Selector Slider__Template::__selector4_;
::g::Uno::UX::Selector Slider__Template::__selector5_;
::g::Uno::UX::Selector Slider__Template::__selector6_;
::g::Uno::UX::Selector Slider__Template::__selector7_;
::g::Uno::UX::Selector Slider__Template::__selector8_;
::g::Uno::UX::Selector Slider__Template::__selector9_;
::g::Uno::UX::Selector Slider__Template::__selector10_;
::g::Uno::UX::Selector Slider__Template::__selector11_;

// public Template(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [instance] :11
void Slider__Template::ctor_1(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    ctor_(::STRINGS[11/*"GraphicsApp...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [static] :11
Slider__Template* Slider__Template::New2(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    Slider__Template* obj1 = (Slider__Template*)uNew(Slider__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.TimePicker\1.7.2\.uno\ux13\Fuse.Controls.TimePicker.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class TimePicker.Template :7
// {
// static Template() :16
static void TimePicker__Template__cctor__fn(uType* __type)
{
    TimePicker__Template::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[11/*"GraphicsApp...*/]);
}

static void TimePicker__Template_build(uType* type)
{
    ::STRINGS[11] = uString::Const("GraphicsAppearance");
    ::STRINGS[105] = uString::Const("GraphicsAppearance for TimePicker not implemented!");
    ::TYPES[73] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetFields(2,
        ::g::Fuse::Controls::TimePicker_typeof(), offsetof(TimePicker__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::TimePicker_typeof(), offsetof(TimePicker__Template, __parentInstance1), uFieldFlagsWeak,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TimePicker__Template::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TimePicker__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::TimePicker_typeof(), ::g::Fuse::Controls::TimePicker_typeof()));
}

::g::Uno::UX::Template_type* TimePicker__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 5;
    options.ObjectSize = sizeof(TimePicker__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.TimePicker.Template", options);
    type->fp_build_ = TimePicker__Template_build;
    type->fp_cctor_ = TimePicker__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))TimePicker__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) :11
void TimePicker__Template__ctor_1_fn(TimePicker__Template* __this, ::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :19
void TimePicker__Template__New1_fn(TimePicker__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.TimePicker.Template", "New()");
    ::g::Fuse::Controls::Panel* __self1 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Controls::Text* temp = ::g::Fuse::Controls::Text::New3();
    ::g::Fuse::Controls::Rectangle* temp1 = ::g::Fuse::Controls::Rectangle::New3();
    ::g::Fuse::Drawing::Stroke* temp2 = ::g::Fuse::Drawing::Stroke::New2();
    ::g::Fuse::Drawing::StaticSolidColor* temp3 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.9333333f, 0.9333333f, 0.9333333f, 1.0f));
    __self1->Margin(::g::Uno::Float4__New2(4.0f, 4.0f, 4.0f, 4.0f));
    __self1->Padding(::g::Uno::Float4__New2(30.0f, 30.0f, 30.0f, 30.0f));
    __self1->Name(TimePicker__Template::__selector0_);
    temp->Value(::STRINGS[105/*"GraphicsApp...*/]);
    temp->TextWrapping(1);
    temp->Alignment(10);
    temp1->Layer(1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp1->Strokes()), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), temp2);
    temp2->Color(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f));
    __self1->Background(temp3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp1);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) :11
void TimePicker__Template__New2_fn(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance, TimePicker__Template** __retval)
{
    *__retval = TimePicker__Template::New2(parent, parentInstance);
}

::g::Uno::UX::Selector TimePicker__Template::__selector0_;

// public Template(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) [instance] :11
void TimePicker__Template::ctor_1(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    ctor_(::STRINGS[11/*"GraphicsApp...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) [static] :11
TimePicker__Template* TimePicker__Template::New2(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    TimePicker__Template* obj1 = (TimePicker__Template*)uNew(TimePicker__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.TextControl.g.uno
// ----------------------------------------------------------------------------------------------------------------------------

// public partial sealed class TextControl.Template :7
// {
// static Template() :16
static void TextControl__Template__cctor__fn(uType* __type)
{
}

static void TextControl__Template_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(TextControl__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(TextControl__Template, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextControl__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::TextControl_typeof(), ::g::Fuse::Controls::TextControl_typeof()));
}

::g::Uno::UX::Template_type* TextControl__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(TextControl__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.TextControl.Template", options);
    type->fp_build_ = TextControl__Template_build;
    type->fp_cctor_ = TextControl__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))TextControl__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) :11
void TextControl__Template__ctor_1_fn(TextControl__Template* __this, ::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :19
void TextControl__Template__New1_fn(TextControl__Template* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::Android::TextView* __self1 = ::g::Fuse::Controls::Native::Android::TextView::New5();
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) :11
void TextControl__Template__New2_fn(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance, TextControl__Template** __retval)
{
    *__retval = TextControl__Template::New2(parent, parentInstance);
}

// public Template(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) [instance] :11
void TextControl__Template::ctor_1(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) [static] :11
TextControl__Template* TextControl__Template::New2(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    TextControl__Template* obj1 = (TextControl__Template*)uNew(TextControl__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Switch.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Switch.Template :7
// {
// static Template() :30
static void Switch__Template__cctor__fn(uType* __type)
{
    Switch__Template::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[106/*"IsActive"*/]);
    Switch__Template::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[55/*"Color"*/]);
    Switch__Template::__selector2_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[98/*"Size"*/]);
    Switch__Template::__selector3_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[97/*"Distance"*/]);
    Switch__Template::__selector4_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[11/*"GraphicsApp...*/]);
    Switch__Template::__selector5_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[107/*"swipe"*/]);
    Switch__Template::__selector6_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[99/*"thumb"*/]);
    Switch__Template::__selector7_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[108/*"switch_thum...*/]);
}

static void Switch__Template_build(uType* type)
{
    ::STRINGS[106] = uString::Const("IsActive");
    ::STRINGS[55] = uString::Const("Color");
    ::STRINGS[98] = uString::Const("Size");
    ::STRINGS[97] = uString::Const("Distance");
    ::STRINGS[11] = uString::Const("GraphicsAppearance");
    ::STRINGS[107] = uString::Const("swipe");
    ::STRINGS[99] = uString::Const("thumb");
    ::STRINGS[108] = uString::Const("switch_thumb_shadow");
    ::TYPES[54] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL);
    ::TYPES[71] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[43] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Triggers::Actions::TriggerAction_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    ::TYPES[45] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    ::TYPES[74] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL);
    ::TYPES[73] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetDependencies(
        ::g::Fuse::Animations::Easing_typeof(),
        ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ToggleControl_Value_typeof());
    type->SetFields(2,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(Switch__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(Switch__Template, __parentInstance1), uFieldFlagsWeak,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(Switch__Template, swipe_IsActive_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(Switch__Template, trackFill_Color_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(Switch__Template, thumbFill_Color_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(Switch__Template, switch_thumb_stroke_Color_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(Switch__Template, strokeColor_Color_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(Switch__Template, switch_thumb_shadow_Size_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(Switch__Template, switch_thumb_shadow_Distance_inst), 0,
        ::g::Fuse::Gestures::SwipeGesture_typeof(), offsetof(Switch__Template, swipe), 0,
        ::g::Fuse::Controls::Circle_typeof(), offsetof(Switch__Template, thumb), 0,
        ::g::Fuse::Drawing::SolidColor_typeof(), offsetof(Switch__Template, thumbFill), 0,
        ::g::Fuse::Drawing::Stroke_typeof(), offsetof(Switch__Template, switch_thumb_stroke), 0,
        ::g::Fuse::Effects::DropShadow_typeof(), offsetof(Switch__Template, switch_thumb_shadow), 0,
        ::g::Fuse::Drawing::SolidColor_typeof(), offsetof(Switch__Template, trackFill), 0,
        ::g::Fuse::Drawing::SolidColor_typeof(), offsetof(Switch__Template, strokeColor), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Switch__Template::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Switch__Template::__selector1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Switch__Template::__selector2_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Switch__Template::__selector3_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Switch__Template::__selector4_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Switch__Template::__selector5_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Switch__Template::__selector6_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Switch__Template::__selector7_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Switch__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Switch_typeof(), ::g::Fuse::Controls::Switch_typeof()));
}

::g::Uno::UX::Template_type* Switch__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 26;
    options.DependencyCount = 2;
    options.ObjectSize = sizeof(Switch__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Switch.Template", options);
    type->fp_build_ = Switch__Template_build;
    type->fp_cctor_ = Switch__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Switch__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :11
void Switch__Template__ctor_1_fn(Switch__Template* __this, ::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :33
void Switch__Template__New1_fn(Switch__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Switch.Template", "New()");
    ::g::Fuse::Controls::Panel* __self1 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Reactive::Constant* temp = ::g::Fuse::Reactive::Constant::New1(__this->__parent1);
    __this->swipe = ::g::Fuse::Gestures::SwipeGesture::New2();
    __this->swipe_IsActive_inst = ::g::FuseControlsPrimitives_FuseGesturesSwipeGesture_IsActive_Property::New1(__this->swipe, Switch__Template::__selector0_);
    ::g::Fuse::Reactive::Property* temp1 = ::g::Fuse::Reactive::Property::New1(temp, ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ToggleControl_Value::Singleton());
    __this->trackFill = ::g::Fuse::Drawing::SolidColor::New2();
    __this->trackFill_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingSolidColor_Color_Property::New1(__this->trackFill, Switch__Template::__selector1_);
    __this->thumbFill = ::g::Fuse::Drawing::SolidColor::New2();
    __this->thumbFill_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingSolidColor_Color_Property::New1(__this->thumbFill, Switch__Template::__selector1_);
    __this->switch_thumb_stroke = ::g::Fuse::Drawing::Stroke::New2();
    __this->switch_thumb_stroke_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingStroke_Color_Property::New1(__this->switch_thumb_stroke, Switch__Template::__selector1_);
    __this->strokeColor = ::g::Fuse::Drawing::SolidColor::New2();
    __this->strokeColor_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingSolidColor_Color_Property::New1(__this->strokeColor, Switch__Template::__selector1_);
    __this->switch_thumb_shadow = ::g::Fuse::Effects::DropShadow::New2();
    __this->switch_thumb_shadow_Size_inst = ::g::FuseControlsPrimitives_FuseEffectsDropShadow_Size_Property::New1(__this->switch_thumb_shadow, Switch__Template::__selector2_);
    __this->switch_thumb_shadow_Distance_inst = ::g::FuseControlsPrimitives_FuseEffectsDropShadow_Distance_Property::New1(__this->switch_thumb_shadow, Switch__Template::__selector3_);
    ::g::Fuse::Gestures::Tapped* temp2 = ::g::Fuse::Gestures::Tapped::New2();
    ::g::Fuse::Triggers::Actions::Toggle* temp3 = ::g::Fuse::Triggers::Actions::Toggle::New2();
    ::g::Fuse::Reactive::DataBinding* temp4 = ::g::Fuse::Reactive::DataBinding::New1(__this->swipe_IsActive_inst, (uObject*)temp1, 3);
    ::g::Fuse::Gestures::SwipingAnimation* temp5 = ::g::Fuse::Gestures::SwipingAnimation::New2(__this->swipe);
    ::g::Fuse::Animations::Move* temp6 = ::g::Fuse::Animations::Move::New2();
    ::g::Fuse::Animations::Change* temp7 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], __this->trackFill_Color_inst);
    __this->thumb = ::g::Fuse::Controls::Circle::New3();
    ::g::Fuse::Controls::Rectangle* temp8 = ::g::Fuse::Controls::Rectangle::New3();
    ::g::Fuse::Drawing::Stroke* temp9 = ::g::Fuse::Drawing::Stroke::New2();
    ::g::Fuse::Triggers::WhileDisabled* temp10 = ::g::Fuse::Triggers::WhileDisabled::New2();
    ::g::Fuse::Animations::Change* temp11 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], __this->thumbFill_Color_inst);
    ::g::Fuse::Animations::Change* temp12 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], __this->trackFill_Color_inst);
    ::g::Fuse::Animations::Change* temp13 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], __this->switch_thumb_stroke_Color_inst);
    ::g::Fuse::Animations::Change* temp14 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], __this->strokeColor_Color_inst);
    ::g::Fuse::Animations::Change* temp15 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[71/*Fuse.Animations.Change<float>*/], __this->switch_thumb_shadow_Size_inst);
    ::g::Fuse::Animations::Change* temp16 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[71/*Fuse.Animations.Change<float>*/], __this->switch_thumb_shadow_Distance_inst);
    __self1->Width(::g::Uno::UX::Size__New1(50.0f, 1));
    __self1->Height(::g::Uno::UX::Size__New1(31.0f, 1));
    __self1->SnapToPixels(false);
    __self1->Name(Switch__Template::__selector4_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp2->Actions()), ::TYPES[43/*Uno.Collections.ICollection<Fuse.Triggers.Actions.TriggerAction>*/]), temp3);
    temp3->Target((uObject*)__this->__parent1);
    uPtr(__this->swipe)->Type(1);
    uPtr(__this->swipe)->Direction(2);
    uPtr(__this->swipe)->Length(20.0f);
    uPtr(__this->swipe)->Name(Switch__Template::__selector5_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->swipe)->Bindings()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp4);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp5->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp6);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp5->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp7);
    temp6->X(20.0f);
    temp6->Target(__this->thumb);
    ::g::Fuse::Animations::Change__set_Value_fn(temp7, uCRef(::g::Uno::Float4__New2(0.6588235f, 0.6588235f, 0.6588235f, 1.0f)));
    temp7->Easing(::g::Fuse::Animations::Easing::QuadraticInOut());
    uPtr(__this->thumb)->Width(::g::Uno::UX::Size__New1(27.0f, 1));
    uPtr(__this->thumb)->Height(::g::Uno::UX::Size__New1(27.0f, 1));
    uPtr(__this->thumb)->Alignment(9);
    uPtr(__this->thumb)->Margin(::g::Uno::Float4__New2(2.0f, 0.0f, 14.0f, 0.0f));
    uPtr(__this->thumb)->Name(Switch__Template::__selector6_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->thumb)->Fills()), ::TYPES[74/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]), __this->thumbFill);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->thumb)->Strokes()), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), __this->switch_thumb_stroke);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->thumb)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->switch_thumb_shadow);
    uPtr(__this->thumbFill)->Color(::g::Uno::Float4__New2(1.0f, 1.0f, 1.0f, 1.0f));
    uPtr(__this->switch_thumb_stroke)->Color(::g::Uno::Float4__New2(0.6039216f, 0.6039216f, 0.6039216f, 1.0f));
    uPtr(__this->switch_thumb_stroke)->Width(1.0f);
    uPtr(__this->switch_thumb_shadow)->Size(1.0f);
    uPtr(__this->switch_thumb_shadow)->Angle(90.0f);
    uPtr(__this->switch_thumb_shadow)->Distance(0.0f);
    uPtr(__this->switch_thumb_shadow)->Spread(0.1f);
    uPtr(__this->switch_thumb_shadow)->Name(Switch__Template::__selector7_);
    temp8->CornerRadius(::g::Uno::Float4__New2(27.0f, 27.0f, 27.0f, 27.0f));
    temp8->Width(::g::Uno::UX::Size__New1(51.0f, 1));
    temp8->Height(::g::Uno::UX::Size__New1(31.0f, 1));
    temp8->Alignment(10);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp8->Fills()), ::TYPES[74/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]), __this->trackFill);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp8->Strokes()), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), temp9);
    uPtr(__this->trackFill)->Color(::g::Uno::Float4__New2(0.8941177f, 0.8941177f, 0.8941177f, 1.0f));
    temp9->Brush(__this->strokeColor);
    uPtr(__this->strokeColor)->Color(::g::Uno::Float4__New2(0.6039216f, 0.6039216f, 0.6039216f, 1.0f));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp11);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp12);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp13);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp14);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp15);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp16);
    ::g::Fuse::Animations::Change__set_Value_fn(temp11, uCRef(::g::Uno::Float4__New2(0.9647059f, 0.9647059f, 0.9647059f, 1.0f)));
    temp11->Duration(0.25);
    temp11->Easing(::g::Fuse::Animations::Easing::QuadraticInOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp12, uCRef(::g::Uno::Float4__New2(0.9176471f, 0.9176471f, 0.9176471f, 1.0f)));
    temp12->Duration(0.25);
    temp12->Easing(::g::Fuse::Animations::Easing::QuadraticInOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp13, uCRef(::g::Uno::Float4__New2(0.9647059f, 0.9647059f, 0.9647059f, 1.0f)));
    temp13->Duration(0.25);
    temp13->Easing(::g::Fuse::Animations::Easing::QuadraticOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp14, uCRef(::g::Uno::Float4__New2(0.9176471f, 0.9176471f, 0.9176471f, 1.0f)));
    temp14->Duration(0.25);
    temp14->Easing(::g::Fuse::Animations::Easing::QuadraticOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp15, uCRef(0.0f));
    temp15->Duration(0.25);
    temp15->Easing(::g::Fuse::Animations::Easing::QuadraticOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp16, uCRef(0.0f));
    temp16->Duration(0.25);
    temp16->Easing(::g::Fuse::Animations::Easing::QuadraticOut());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp2);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->swipe);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp5);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->thumb);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp8);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp10);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :11
void Switch__Template__New2_fn(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance, Switch__Template** __retval)
{
    *__retval = Switch__Template::New2(parent, parentInstance);
}

::g::Uno::UX::Selector Switch__Template::__selector0_;
::g::Uno::UX::Selector Switch__Template::__selector1_;
::g::Uno::UX::Selector Switch__Template::__selector2_;
::g::Uno::UX::Selector Switch__Template::__selector3_;
::g::Uno::UX::Selector Switch__Template::__selector4_;
::g::Uno::UX::Selector Switch__Template::__selector5_;
::g::Uno::UX::Selector Switch__Template::__selector6_;
::g::Uno::UX::Selector Switch__Template::__selector7_;

// public Template(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [instance] :11
void Switch__Template::ctor_1(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    ctor_(::STRINGS[11/*"GraphicsApp...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [static] :11
Switch__Template* Switch__Template::New2(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    Switch__Template* obj1 = (Switch__Template*)uNew(Switch__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Button.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Button.Template :7
// {
// static Template() :20
static void Button__Template__cctor__fn(uType* __type)
{
    Button__Template::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    Button__Template::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[109/*"TextColor"*/]);
    Button__Template::__selector2_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[12/*"Opacity"*/]);
    Button__Template::__selector3_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[11/*"GraphicsApp...*/]);
    Button__Template::__selector4_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[110/*"Button_Text"*/]);
}

static void Button__Template_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[109] = uString::Const("TextColor");
    ::STRINGS[12] = uString::Const("Opacity");
    ::STRINGS[11] = uString::Const("GraphicsAppearance");
    ::STRINGS[110] = uString::Const("Button_Text");
    ::TYPES[54] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL);
    ::TYPES[71] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    ::TYPES[45] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetDependencies(
        ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ButtonBase_Text_typeof());
    type->SetFields(2,
        ::g::Fuse::Controls::Button_typeof(), offsetof(Button__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Button_typeof(), offsetof(Button__Template, __parentInstance1), uFieldFlagsWeak,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(Button__Template, Button_Text_Value_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(Button__Template, Button_Text_TextColor_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(Button__Template, Button_Text_Opacity_inst), 0,
        ::g::Fuse::Controls::Text_typeof(), offsetof(Button__Template, Button_Text), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Button__Template::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Button__Template::__selector1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Button__Template::__selector2_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Button__Template::__selector3_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Button__Template::__selector4_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Button__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Button_typeof(), ::g::Fuse::Controls::Button_typeof()));
}

::g::Uno::UX::Template_type* Button__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 13;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(Button__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Button.Template", options);
    type->fp_build_ = Button__Template_build;
    type->fp_cctor_ = Button__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Button__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :11
void Button__Template__ctor_1_fn(Button__Template* __this, ::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :23
void Button__Template__New1_fn(Button__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Button.Template", "New()");
    ::g::Fuse::Controls::Panel* __self1 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Reactive::Constant* temp = ::g::Fuse::Reactive::Constant::New1(__this->__parent1);
    __this->Button_Text = ::g::Fuse::Controls::Text::New3();
    __this->Button_Text_Value_inst = ::g::FuseControlsPrimitives_FuseControlsTextControl_Value_Property::New1(__this->Button_Text, Button__Template::__selector0_);
    ::g::Fuse::Reactive::Property* temp1 = ::g::Fuse::Reactive::Property::New1(temp, ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ButtonBase_Text::Singleton());
    __this->Button_Text_TextColor_inst = ::g::FuseControlsPrimitives_FuseControlsTextControl_TextColor_Property::New1(__this->Button_Text, Button__Template::__selector1_);
    __this->Button_Text_Opacity_inst = ::g::FuseControlsPrimitives_FuseElementsElement_Opacity_Property::New1(__this->Button_Text, Button__Template::__selector2_);
    ::g::Fuse::Reactive::DataBinding* temp2 = ::g::Fuse::Reactive::DataBinding::New1(__this->Button_Text_Value_inst, (uObject*)temp1, 3);
    ::g::Fuse::Gestures::WhilePressed* temp3 = ::g::Fuse::Gestures::WhilePressed::New2();
    ::g::Fuse::Animations::Change* temp4 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], __this->Button_Text_TextColor_inst);
    ::g::Fuse::Triggers::WhileDisabled* temp5 = ::g::Fuse::Triggers::WhileDisabled::New2();
    ::g::Fuse::Animations::Change* temp6 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[71/*Fuse.Animations.Change<float>*/], __this->Button_Text_Opacity_inst);
    __self1->Name(Button__Template::__selector3_);
    uPtr(__this->Button_Text)->FontSize(16.0f);
    uPtr(__this->Button_Text)->TextAlignment(1);
    uPtr(__this->Button_Text)->TextColor(::g::Uno::Float4__New2(0.3686275f, 0.6627451f, 0.9843137f, 1.0f));
    uPtr(__this->Button_Text)->Alignment(10);
    uPtr(__this->Button_Text)->Name(Button__Template::__selector4_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->Button_Text)->Bindings()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp2);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp3->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp4);
    ::g::Fuse::Animations::Change__set_Value_fn(temp4, uCRef(::g::Uno::Float4__New2(0.1411765f, 0.1411765f, 0.8f, 1.0f)));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp5->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp6);
    ::g::Fuse::Animations::Change__set_Value_fn(temp6, uCRef(0.5f));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->Button_Text);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp5);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :11
void Button__Template__New2_fn(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance, Button__Template** __retval)
{
    *__retval = Button__Template::New2(parent, parentInstance);
}

::g::Uno::UX::Selector Button__Template::__selector0_;
::g::Uno::UX::Selector Button__Template::__selector1_;
::g::Uno::UX::Selector Button__Template::__selector2_;
::g::Uno::UX::Selector Button__Template::__selector3_;
::g::Uno::UX::Selector Button__Template::__selector4_;

// public Template(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [instance] :11
void Button__Template::ctor_1(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    ctor_(::STRINGS[11/*"GraphicsApp...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [static] :11
Button__Template* Button__Template::New2(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    Button__Template* obj1 = (Button__Template*)uNew(Button__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\.uno\ux13\Fuse.Controls.GraphicsView.g.uno
// -------------------------------------------------------------------------------------------------------------------------

// public partial sealed class GraphicsView.Template :7
// {
// static Template() :16
static void GraphicsView__Template__cctor__fn(uType* __type)
{
}

static void GraphicsView__Template_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::GraphicsView_typeof(), offsetof(GraphicsView__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::GraphicsView_typeof(), offsetof(GraphicsView__Template, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)GraphicsView__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::GraphicsView_typeof(), ::g::Fuse::Controls::GraphicsView_typeof()));
}

::g::Uno::UX::Template_type* GraphicsView__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(GraphicsView__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.GraphicsView.Template", options);
    type->fp_build_ = GraphicsView__Template_build;
    type->fp_cctor_ = GraphicsView__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))GraphicsView__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) :11
void GraphicsView__Template__ctor_1_fn(GraphicsView__Template* __this, ::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :19
void GraphicsView__Template__New1_fn(GraphicsView__Template* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::Android::TextureView* __self1 = ::g::Fuse::Controls::Native::Android::TextureView::New5();
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) :11
void GraphicsView__Template__New2_fn(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance, GraphicsView__Template** __retval)
{
    *__retval = GraphicsView__Template::New2(parent, parentInstance);
}

// public Template(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) [instance] :11
void GraphicsView__Template::ctor_1(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) [static] :11
GraphicsView__Template* GraphicsView__Template::New2(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    GraphicsView__Template* obj1 = (GraphicsView__Template*)uNew(GraphicsView__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.DatePicker\1.7.2\.uno\ux13\Fuse.Controls.DatePicker.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class DatePicker.Template :7
// {
// static Template() :16
static void DatePicker__Template__cctor__fn(uType* __type)
{
    DatePicker__Template::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[11/*"GraphicsApp...*/]);
}

static void DatePicker__Template_build(uType* type)
{
    ::STRINGS[11] = uString::Const("GraphicsAppearance");
    ::STRINGS[111] = uString::Const("GraphicsAppearance for DatePicker not implemented!");
    ::TYPES[73] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetFields(2,
        ::g::Fuse::Controls::DatePicker_typeof(), offsetof(DatePicker__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::DatePicker_typeof(), offsetof(DatePicker__Template, __parentInstance1), uFieldFlagsWeak,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&DatePicker__Template::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)DatePicker__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::DatePicker_typeof(), ::g::Fuse::Controls::DatePicker_typeof()));
}

::g::Uno::UX::Template_type* DatePicker__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 5;
    options.ObjectSize = sizeof(DatePicker__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.DatePicker.Template", options);
    type->fp_build_ = DatePicker__Template_build;
    type->fp_cctor_ = DatePicker__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))DatePicker__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) :11
void DatePicker__Template__ctor_1_fn(DatePicker__Template* __this, ::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :19
void DatePicker__Template__New1_fn(DatePicker__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.DatePicker.Template", "New()");
    ::g::Fuse::Controls::Panel* __self1 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Controls::Text* temp = ::g::Fuse::Controls::Text::New3();
    ::g::Fuse::Controls::Rectangle* temp1 = ::g::Fuse::Controls::Rectangle::New3();
    ::g::Fuse::Drawing::Stroke* temp2 = ::g::Fuse::Drawing::Stroke::New2();
    ::g::Fuse::Drawing::StaticSolidColor* temp3 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.9333333f, 0.9333333f, 0.9333333f, 1.0f));
    __self1->Margin(::g::Uno::Float4__New2(4.0f, 4.0f, 4.0f, 4.0f));
    __self1->Padding(::g::Uno::Float4__New2(30.0f, 30.0f, 30.0f, 30.0f));
    __self1->Name(DatePicker__Template::__selector0_);
    temp->Value(::STRINGS[111/*"GraphicsApp...*/]);
    temp->TextWrapping(1);
    temp->Alignment(10);
    temp1->Layer(1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp1->Strokes()), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), temp2);
    temp2->Color(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f));
    __self1->Background(temp3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp1);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) :11
void DatePicker__Template__New2_fn(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance, DatePicker__Template** __retval)
{
    *__retval = DatePicker__Template::New2(parent, parentInstance);
}

::g::Uno::UX::Selector DatePicker__Template::__selector0_;

// public Template(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) [instance] :11
void DatePicker__Template::ctor_1(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    ctor_(::STRINGS[11/*"GraphicsApp...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) [static] :11
DatePicker__Template* DatePicker__Template::New2(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    DatePicker__Template* obj1 = (DatePicker__Template*)uNew(DatePicker__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\.uno\ux13\Fuse.Controls.ScrollView.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView.Template :7
// {
// static Template() :16
static void ScrollView__Template__cctor__fn(uType* __type)
{
}

static void ScrollView__Template_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(ScrollView__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(ScrollView__Template, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::ScrollView_typeof(), ::g::Fuse::Controls::ScrollView_typeof()));
}

::g::Uno::UX::Template_type* ScrollView__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(ScrollView__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.ScrollView.Template", options);
    type->fp_build_ = ScrollView__Template_build;
    type->fp_cctor_ = ScrollView__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))ScrollView__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) :11
void ScrollView__Template__ctor_1_fn(ScrollView__Template* __this, ::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :19
void ScrollView__Template__New1_fn(ScrollView__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.ScrollView.Template", "New()");
    ::g::Fuse::Controls::Native::Android::ScrollView* __self1 = ::g::Fuse::Controls::Native::Android::ScrollView::New5((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) :11
void ScrollView__Template__New2_fn(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance, ScrollView__Template** __retval)
{
    *__retval = ScrollView__Template::New2(parent, parentInstance);
}

// public Template(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) [instance] :11
void ScrollView__Template::ctor_1(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) [static] :11
ScrollView__Template* ScrollView__Template::New2(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    ScrollView__Template* obj1 = (ScrollView__Template*)uNew(ScrollView__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.TimePicker\1.7.2\.uno\ux13\Fuse.Controls.TimePicker.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class TimePicker.Template1 :43
// {
// static Template1() :52
static void TimePicker__Template1__cctor__fn(uType* __type)
{
}

static void TimePicker__Template1_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::TimePicker_typeof(), offsetof(TimePicker__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::TimePicker_typeof(), offsetof(TimePicker__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TimePicker__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::TimePicker_typeof(), ::g::Fuse::Controls::TimePicker_typeof()));
}

::g::Uno::UX::Template_type* TimePicker__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(TimePicker__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.TimePicker.Template1", options);
    type->fp_build_ = TimePicker__Template1_build;
    type->fp_cctor_ = TimePicker__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))TimePicker__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) :47
void TimePicker__Template1__ctor_1_fn(TimePicker__Template1* __this, ::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :55
void TimePicker__Template1__New1_fn(TimePicker__Template1* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::iOS::TimePickerView* __self1 = ::g::Fuse::Controls::Native::iOS::TimePickerView::New1(__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) :47
void TimePicker__Template1__New2_fn(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance, TimePicker__Template1** __retval)
{
    *__retval = TimePicker__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) [instance] :47
void TimePicker__Template1::ctor_1(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) [static] :47
TimePicker__Template1* TimePicker__Template1::New2(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    TimePicker__Template1* obj1 = (TimePicker__Template1*)uNew(TimePicker__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.TextControl.g.uno
// ----------------------------------------------------------------------------------------------------------------------------

// public partial sealed class TextControl.Template1 :26
// {
// static Template1() :35
static void TextControl__Template1__cctor__fn(uType* __type)
{
}

static void TextControl__Template1_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(TextControl__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(TextControl__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextControl__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::TextControl_typeof(), ::g::Fuse::Controls::TextControl_typeof()));
}

::g::Uno::UX::Template_type* TextControl__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(TextControl__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.TextControl.Template1", options);
    type->fp_build_ = TextControl__Template1_build;
    type->fp_cctor_ = TextControl__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))TextControl__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) :30
void TextControl__Template1__ctor_1_fn(TextControl__Template1* __this, ::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :38
void TextControl__Template1__New1_fn(TextControl__Template1* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::iOS::TextView* __self1 = ::g::Fuse::Controls::Native::iOS::TextView::New1();
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) :30
void TextControl__Template1__New2_fn(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance, TextControl__Template1** __retval)
{
    *__retval = TextControl__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) [instance] :30
void TextControl__Template1::ctor_1(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) [static] :30
TextControl__Template1* TextControl__Template1::New2(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    TextControl__Template1* obj1 = (TextControl__Template1*)uNew(TextControl__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.DatePicker\1.7.2\.uno\ux13\Fuse.Controls.DatePicker.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class DatePicker.Template1 :43
// {
// static Template1() :52
static void DatePicker__Template1__cctor__fn(uType* __type)
{
}

static void DatePicker__Template1_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::DatePicker_typeof(), offsetof(DatePicker__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::DatePicker_typeof(), offsetof(DatePicker__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)DatePicker__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::DatePicker_typeof(), ::g::Fuse::Controls::DatePicker_typeof()));
}

::g::Uno::UX::Template_type* DatePicker__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(DatePicker__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.DatePicker.Template1", options);
    type->fp_build_ = DatePicker__Template1_build;
    type->fp_cctor_ = DatePicker__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))DatePicker__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) :47
void DatePicker__Template1__ctor_1_fn(DatePicker__Template1* __this, ::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :55
void DatePicker__Template1__New1_fn(DatePicker__Template1* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::iOS::DatePickerView* __self1 = ::g::Fuse::Controls::Native::iOS::DatePickerView::New1(__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) :47
void DatePicker__Template1__New2_fn(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance, DatePicker__Template1** __retval)
{
    *__retval = DatePicker__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) [instance] :47
void DatePicker__Template1::ctor_1(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) [static] :47
DatePicker__Template1* DatePicker__Template1::New2(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    DatePicker__Template1* obj1 = (DatePicker__Template1*)uNew(DatePicker__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\.uno\ux13\Fuse.Controls.GraphicsView.g.uno
// -------------------------------------------------------------------------------------------------------------------------

// public partial sealed class GraphicsView.Template1 :26
// {
// static Template1() :35
static void GraphicsView__Template1__cctor__fn(uType* __type)
{
}

static void GraphicsView__Template1_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::GraphicsView_typeof(), offsetof(GraphicsView__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::GraphicsView_typeof(), offsetof(GraphicsView__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)GraphicsView__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::GraphicsView_typeof(), ::g::Fuse::Controls::GraphicsView_typeof()));
}

::g::Uno::UX::Template_type* GraphicsView__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(GraphicsView__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.GraphicsView.Template1", options);
    type->fp_build_ = GraphicsView__Template1_build;
    type->fp_cctor_ = GraphicsView__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))GraphicsView__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) :30
void GraphicsView__Template1__ctor_1_fn(GraphicsView__Template1* __this, ::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :38
void GraphicsView__Template1__New1_fn(GraphicsView__Template1* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::iOS::GraphicsView* __self1 = ::g::Fuse::Controls::Native::iOS::GraphicsView::New1(__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) :30
void GraphicsView__Template1__New2_fn(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance, GraphicsView__Template1** __retval)
{
    *__retval = GraphicsView__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) [instance] :30
void GraphicsView__Template1::ctor_1(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) [static] :30
GraphicsView__Template1* GraphicsView__Template1::New2(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    GraphicsView__Template1* obj1 = (GraphicsView__Template1*)uNew(GraphicsView__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Switch.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Switch.Template1 :151
// {
// static Template1() :160
static void Switch__Template1__cctor__fn(uType* __type)
{
}

static void Switch__Template1_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(Switch__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(Switch__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Switch__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Switch_typeof(), ::g::Fuse::Controls::Switch_typeof()));
}

::g::Uno::UX::Template_type* Switch__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Switch__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Switch.Template1", options);
    type->fp_build_ = Switch__Template1_build;
    type->fp_cctor_ = Switch__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Switch__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :155
void Switch__Template1__ctor_1_fn(Switch__Template1* __this, ::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :163
void Switch__Template1__New1_fn(Switch__Template1* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Switch.Template1", "New()");
    ::g::Fuse::Controls::Native::Android::Switch* __self1 = ::g::Fuse::Controls::Native::Android::Switch::New5((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :155
void Switch__Template1__New2_fn(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance, Switch__Template1** __retval)
{
    *__retval = Switch__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [instance] :155
void Switch__Template1::ctor_1(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [static] :155
Switch__Template1* Switch__Template1::New2(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    Switch__Template1* obj1 = (Switch__Template1*)uNew(Switch__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Button.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Button.Template1 :60
// {
// static Template1() :69
static void Button__Template1__cctor__fn(uType* __type)
{
}

static void Button__Template1_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Button_typeof(), offsetof(Button__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Button_typeof(), offsetof(Button__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Button__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Button_typeof(), ::g::Fuse::Controls::Button_typeof()));
}

::g::Uno::UX::Template_type* Button__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Button__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Button.Template1", options);
    type->fp_build_ = Button__Template1_build;
    type->fp_cctor_ = Button__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Button__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :64
void Button__Template1__ctor_1_fn(Button__Template1* __this, ::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :72
void Button__Template1__New1_fn(Button__Template1* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::Android::Button* __self1 = ::g::Fuse::Controls::Native::Android::Button::New5();
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :64
void Button__Template1__New2_fn(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance, Button__Template1** __retval)
{
    *__retval = Button__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [instance] :64
void Button__Template1::ctor_1(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [static] :64
Button__Template1* Button__Template1::New2(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    Button__Template1* obj1 = (Button__Template1*)uNew(Button__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.ScrollView\1.7.2\.uno\ux13\Fuse.Controls.ScrollView.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView.Template1 :26
// {
// static Template1() :35
static void ScrollView__Template1__cctor__fn(uType* __type)
{
}

static void ScrollView__Template1_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(ScrollView__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(ScrollView__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::ScrollView_typeof(), ::g::Fuse::Controls::ScrollView_typeof()));
}

::g::Uno::UX::Template_type* ScrollView__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(ScrollView__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.ScrollView.Template1", options);
    type->fp_build_ = ScrollView__Template1_build;
    type->fp_cctor_ = ScrollView__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))ScrollView__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) :30
void ScrollView__Template1__ctor_1_fn(ScrollView__Template1* __this, ::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :38
void ScrollView__Template1__New1_fn(ScrollView__Template1* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.ScrollView.Template1", "New()");
    ::g::Fuse::Controls::Native::iOS::ScrollView* __self1 = ::g::Fuse::Controls::Native::iOS::ScrollView::New1((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) :30
void ScrollView__Template1__New2_fn(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance, ScrollView__Template1** __retval)
{
    *__retval = ScrollView__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) [instance] :30
void ScrollView__Template1::ctor_1(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) [static] :30
ScrollView__Template1* ScrollView__Template1::New2(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    ScrollView__Template1* obj1 = (ScrollView__Template1*)uNew(ScrollView__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Slider.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Slider.Template1 :153
// {
// static Template1() :162
static void Slider__Template1__cctor__fn(uType* __type)
{
}

static void Slider__Template1_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(Slider__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(Slider__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Slider__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Slider_typeof(), ::g::Fuse::Controls::Slider_typeof()));
}

::g::Uno::UX::Template_type* Slider__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Slider__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Slider.Template1", options);
    type->fp_build_ = Slider__Template1_build;
    type->fp_cctor_ = Slider__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Slider__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :157
void Slider__Template1__ctor_1_fn(Slider__Template1* __this, ::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :165
void Slider__Template1__New1_fn(Slider__Template1* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Slider.Template1", "New()");
    ::g::Fuse::Controls::Native::Android::Slider* __self1 = ::g::Fuse::Controls::Native::Android::Slider::New5((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :157
void Slider__Template1__New2_fn(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance, Slider__Template1** __retval)
{
    *__retval = Slider__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [instance] :157
void Slider__Template1::ctor_1(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [static] :157
Slider__Template1* Slider__Template1::New2(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    Slider__Template1* obj1 = (Slider__Template1*)uNew(Slider__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Button.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Button.Template2 :79
// {
// static Template2() :88
static void Button__Template2__cctor__fn(uType* __type)
{
}

static void Button__Template2_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Button_typeof(), offsetof(Button__Template2, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Button_typeof(), offsetof(Button__Template2, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Button__Template2__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Button_typeof(), ::g::Fuse::Controls::Button_typeof()));
}

::g::Uno::UX::Template_type* Button__Template2_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Button__Template2);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Button.Template2", options);
    type->fp_build_ = Button__Template2_build;
    type->fp_cctor_ = Button__Template2__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Button__Template2__New1_fn;
    return type;
}

// public Template2(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :83
void Button__Template2__ctor_1_fn(Button__Template2* __this, ::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :91
void Button__Template2__New1_fn(Button__Template2* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::iOS::Button* __self1 = ::g::Fuse::Controls::Native::iOS::Button::New1();
    return *__retval = __self1, void();
}

// public Template2 New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :83
void Button__Template2__New2_fn(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance, Button__Template2** __retval)
{
    *__retval = Button__Template2::New2(parent, parentInstance);
}

// public Template2(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [instance] :83
void Button__Template2::ctor_1(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template2 New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [static] :83
Button__Template2* Button__Template2::New2(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    Button__Template2* obj1 = (Button__Template2*)uNew(Button__Template2_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.DatePicker\1.7.2\.uno\ux13\Fuse.Controls.DatePicker.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class DatePicker.Template2 :62
// {
// static Template2() :71
static void DatePicker__Template2__cctor__fn(uType* __type)
{
}

static void DatePicker__Template2_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::DatePicker_typeof(), offsetof(DatePicker__Template2, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::DatePicker_typeof(), offsetof(DatePicker__Template2, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)DatePicker__Template2__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::DatePicker_typeof(), ::g::Fuse::Controls::DatePicker_typeof()));
}

::g::Uno::UX::Template_type* DatePicker__Template2_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(DatePicker__Template2);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.DatePicker.Template2", options);
    type->fp_build_ = DatePicker__Template2_build;
    type->fp_cctor_ = DatePicker__Template2__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))DatePicker__Template2__New1_fn;
    return type;
}

// public Template2(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) :66
void DatePicker__Template2__ctor_1_fn(DatePicker__Template2* __this, ::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :74
void DatePicker__Template2__New1_fn(DatePicker__Template2* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.DatePicker.Template2", "New()");
    ::g::Fuse::Controls::Native::Android::DatePickerView* __self1 = ::g::Fuse::Controls::Native::Android::DatePickerView::New5(__this->__parent1);
    return *__retval = __self1, void();
}

// public Template2 New(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) :66
void DatePicker__Template2__New2_fn(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance, DatePicker__Template2** __retval)
{
    *__retval = DatePicker__Template2::New2(parent, parentInstance);
}

// public Template2(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) [instance] :66
void DatePicker__Template2::ctor_1(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template2 New(Fuse.Controls.DatePicker parent, Fuse.Controls.DatePicker parentInstance) [static] :66
DatePicker__Template2* DatePicker__Template2::New2(::g::Fuse::Controls::DatePicker* parent, ::g::Fuse::Controls::DatePicker* parentInstance)
{
    DatePicker__Template2* obj1 = (DatePicker__Template2*)uNew(DatePicker__Template2_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Slider.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Slider.Template2 :172
// {
// static Template2() :181
static void Slider__Template2__cctor__fn(uType* __type)
{
}

static void Slider__Template2_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(Slider__Template2, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(Slider__Template2, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Slider__Template2__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Slider_typeof(), ::g::Fuse::Controls::Slider_typeof()));
}

::g::Uno::UX::Template_type* Slider__Template2_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Slider__Template2);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Slider.Template2", options);
    type->fp_build_ = Slider__Template2_build;
    type->fp_cctor_ = Slider__Template2__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Slider__Template2__New1_fn;
    return type;
}

// public Template2(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :176
void Slider__Template2__ctor_1_fn(Slider__Template2* __this, ::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :184
void Slider__Template2__New1_fn(Slider__Template2* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Slider.Template2", "New()");
    ::g::Fuse::Controls::Native::iOS::Slider* __self1 = ::g::Fuse::Controls::Native::iOS::Slider::New1((uObject*)__this->__parent1, __this->__parent1);
    return *__retval = __self1, void();
}

// public Template2 New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :176
void Slider__Template2__New2_fn(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance, Slider__Template2** __retval)
{
    *__retval = Slider__Template2::New2(parent, parentInstance);
}

// public Template2(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [instance] :176
void Slider__Template2::ctor_1(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template2 New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [static] :176
Slider__Template2* Slider__Template2::New2(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    Slider__Template2* obj1 = (Slider__Template2*)uNew(Slider__Template2_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.TimePicker\1.7.2\.uno\ux13\Fuse.Controls.TimePicker.g.uno
// ---------------------------------------------------------------------------------------------------------------------------

// public partial sealed class TimePicker.Template2 :62
// {
// static Template2() :71
static void TimePicker__Template2__cctor__fn(uType* __type)
{
}

static void TimePicker__Template2_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::TimePicker_typeof(), offsetof(TimePicker__Template2, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::TimePicker_typeof(), offsetof(TimePicker__Template2, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TimePicker__Template2__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::TimePicker_typeof(), ::g::Fuse::Controls::TimePicker_typeof()));
}

::g::Uno::UX::Template_type* TimePicker__Template2_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(TimePicker__Template2);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.TimePicker.Template2", options);
    type->fp_build_ = TimePicker__Template2_build;
    type->fp_cctor_ = TimePicker__Template2__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))TimePicker__Template2__New1_fn;
    return type;
}

// public Template2(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) :66
void TimePicker__Template2__ctor_1_fn(TimePicker__Template2* __this, ::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :74
void TimePicker__Template2__New1_fn(TimePicker__Template2* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.TimePicker.Template2", "New()");
    ::g::Fuse::Controls::Native::Android::TimePickerView* __self1 = ::g::Fuse::Controls::Native::Android::TimePickerView::New5(__this->__parent1);
    return *__retval = __self1, void();
}

// public Template2 New(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) :66
void TimePicker__Template2__New2_fn(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance, TimePicker__Template2** __retval)
{
    *__retval = TimePicker__Template2::New2(parent, parentInstance);
}

// public Template2(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) [instance] :66
void TimePicker__Template2::ctor_1(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template2 New(Fuse.Controls.TimePicker parent, Fuse.Controls.TimePicker parentInstance) [static] :66
TimePicker__Template2* TimePicker__Template2::New2(::g::Fuse::Controls::TimePicker* parent, ::g::Fuse::Controls::TimePicker* parentInstance)
{
    TimePicker__Template2* obj1 = (TimePicker__Template2*)uNew(TimePicker__Template2_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\.uno\ux13\Fuse.Controls.Switch.g.uno
// -----------------------------------------------------------------------------------------------------------------------

// public partial sealed class Switch.Template2 :170
// {
// static Template2() :179
static void Switch__Template2__cctor__fn(uType* __type)
{
}

static void Switch__Template2_build(uType* type)
{
    ::STRINGS[32] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(Switch__Template2, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(Switch__Template2, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Switch__Template2__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Switch_typeof(), ::g::Fuse::Controls::Switch_typeof()));
}

::g::Uno::UX::Template_type* Switch__Template2_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Switch__Template2);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Switch.Template2", options);
    type->fp_build_ = Switch__Template2_build;
    type->fp_cctor_ = Switch__Template2__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Switch__Template2__New1_fn;
    return type;
}

// public Template2(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :174
void Switch__Template2__ctor_1_fn(Switch__Template2* __this, ::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :182
void Switch__Template2__New1_fn(Switch__Template2* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Switch.Template2", "New()");
    ::g::Fuse::Controls::Native::iOS::Switch* __self1 = ::g::Fuse::Controls::Native::iOS::Switch::New1((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template2 New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :174
void Switch__Template2__New2_fn(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance, Switch__Template2** __retval)
{
    *__retval = Switch__Template2::New2(parent, parentInstance);
}

// public Template2(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [instance] :174
void Switch__Template2::ctor_1(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    ctor_(::STRINGS[32/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template2 New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [static] :174
Switch__Template2* Switch__Template2::New2(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    Switch__Template2* obj1 = (Switch__Template2*)uNew(Switch__Template2_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\Text.uno
// --------------------------------------------------------------------------------------------------------

// public class Text :15
// {
static void Text_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface17));
    type->SetFields(118);
    type->Reflection.SetFunctions(3,
        new uFunction("get_LoadAsync", NULL, (void*)Text__get_LoadAsync_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_LoadAsync", NULL, (void*)Text__set_LoadAsync_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)Text__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::TextControl_type* Text_typeof()
{
    static uSStrong< ::g::Fuse::Controls::TextControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextControl_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(Text);
    options.TypeSize = sizeof(::g::Fuse::Controls::TextControl_type);
    type = (::g::Fuse::Controls::TextControl_type*)uClassType::New("Fuse.Controls.Text", options);
    type->fp_build_ = Text_build;
    type->fp_ctor_ = (void*)Text__New3_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Text() :15
void Text__ctor_7_fn(Text* __this)
{
    __this->ctor_7();
}

// public bool get_LoadAsync() :49
void Text__get_LoadAsync_fn(Text* __this, bool* __retval)
{
    *__retval = __this->LoadAsync();
}

// public void set_LoadAsync(bool value) :50
void Text__set_LoadAsync_fn(Text* __this, bool* value)
{
    __this->LoadAsync(*value);
}

// public generated Text New() :15
void Text__New3_fn(Text** __retval)
{
    *__retval = Text::New3();
}

// public generated Text() [instance] :15
void Text::ctor_7()
{
    ctor_6();
}

// public bool get_LoadAsync() [instance] :49
bool Text::LoadAsync()
{
    return InternalLoadAsync();
}

// public void set_LoadAsync(bool value) [instance] :50
void Text::LoadAsync(bool value)
{
    uStackFrame __("Fuse.Controls.Text", "set_LoadAsync(bool)");
    InternalLoadAsync(value);
}

// public generated Text New() [static] :15
Text* Text::New3()
{
    Text* obj1 = (Text*)uNew(Text_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\TextEnums.uno
// --------------------------------------------------------------------------------------------

// public enum TextAlignment :10
uEnumType* TextAlignment_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextAlignment", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Left", 0LL,
        "Center", 1LL,
        "Right", 2LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextBlock.uno
// -------------------------------------------------------------------------------------------------------------

// public sealed class TextBlock :5
// {
static void TextBlock_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface17));
    type->SetFields(118);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextBlock__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::TextControl_type* TextBlock_typeof()
{
    static uSStrong< ::g::Fuse::Controls::TextControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Text_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(TextBlock);
    options.TypeSize = sizeof(::g::Fuse::Controls::TextControl_type);
    type = (::g::Fuse::Controls::TextControl_type*)uClassType::New("Fuse.Controls.TextBlock", options);
    type->fp_build_ = TextBlock_build;
    type->fp_ctor_ = (void*)TextBlock__New4_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated TextBlock() :5
void TextBlock__ctor_8_fn(TextBlock* __this)
{
    __this->ctor_8();
}

// public generated TextBlock New() :5
void TextBlock__New4_fn(TextBlock** __retval)
{
    *__retval = TextBlock::New4();
}

// public generated TextBlock() [instance] :5
void TextBlock::ctor_8()
{
    ctor_7();
}

// public generated TextBlock New() [static] :5
TextBlock* TextBlock::New4()
{
    TextBlock* obj1 = (TextBlock*)uNew(TextBlock_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextBox.uno
// -----------------------------------------------------------------------------------------------------------

// public partial sealed class TextBox :12
// {
// static TextBox() :10
static void TextBox__cctor_3_fn(uType* __type)
{
    TextBox::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[55/*"Color"*/]);
    TextBox::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[95/*"Fill"*/]);
    TextBox::__selector2_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[112/*"text_box"*/]);
}

static void TextBox_build(uType* type)
{
    ::STRINGS[55] = uString::Const("Color");
    ::STRINGS[95] = uString::Const("Fill");
    ::STRINGS[112] = uString::Const("text_box");
    ::TYPES[54] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL);
    ::TYPES[72] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL);
    ::TYPES[73] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[45] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    type->SetDependencies(
        ::g::Fuse::Animations::Easing_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::TextInput_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface17),
        ::g::Fuse::Controls::ITextEditControl_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface18));
    type->SetFields(112,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(TextBox, stroke_Color_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(TextBox, text_box_Fill_inst), 0,
        ::g::Fuse::Controls::Rectangle_typeof(), offsetof(TextBox, text_box), 0,
        ::g::Fuse::Drawing::Stroke_typeof(), offsetof(TextBox, stroke), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextBox::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextBox::__selector1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextBox::__selector2_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextBox__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::TextInput_type* TextBox_typeof()
{
    static uSStrong< ::g::Fuse::Controls::TextInput_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextInput_typeof();
    options.FieldCount = 119;
    options.InterfaceCount = 19;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(TextBox);
    options.TypeSize = sizeof(::g::Fuse::Controls::TextInput_type);
    type = (::g::Fuse::Controls::TextInput_type*)uClassType::New("Fuse.Controls.TextBox", options);
    type->fp_build_ = TextBox_build;
    type->fp_ctor_ = (void*)TextBox__New4_fn;
    type->fp_cctor_ = TextBox__cctor_3_fn;
    type->interface18.fp_get_IsPassword = (void(*)(uObject*, bool*))::g::Fuse::Controls::TextInput__get_IsPassword_fn;
    type->interface18.fp_set_IsPassword = (void(*)(uObject*, bool*))::g::Fuse::Controls::TextInput__set_IsPassword_fn;
    type->interface18.fp_add_ActionTriggered = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInput__add_ActionTriggered_fn;
    type->interface18.fp_remove_ActionTriggered = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInput__remove_ActionTriggered_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextInputControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextInputControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::TextInputControl__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TextBox() :14
void TextBox__ctor_8_fn(TextBox* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :18
void TextBox__InitializeUX_fn(TextBox* __this)
{
    __this->InitializeUX();
}

// public TextBox New() :14
void TextBox__New4_fn(TextBox** __retval)
{
    *__retval = TextBox::New4();
}

::g::Uno::UX::Selector TextBox::__selector0_;
::g::Uno::UX::Selector TextBox::__selector1_;
::g::Uno::UX::Selector TextBox::__selector2_;

// public TextBox() [instance] :14
void TextBox::ctor_8()
{
    uStackFrame __("Fuse.Controls.TextBox", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :18
void TextBox::InitializeUX()
{
    uStackFrame __("Fuse.Controls.TextBox", "InitializeUX()");
    stroke = ::g::Fuse::Drawing::Stroke::New2();
    stroke_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingStroke_Color_Property::New1(stroke, TextBox::__selector0_);
    text_box = ::g::Fuse::Controls::Rectangle::New3();
    text_box_Fill_inst = ::g::FuseControlsPrimitives_FuseControlsShape_Fill_Property::New1(text_box, TextBox::__selector1_);
    ::g::Fuse::Triggers::WhileFocusWithin* temp = ::g::Fuse::Triggers::WhileFocusWithin::New2();
    ::g::Fuse::Animations::Change* temp1 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], stroke_Color_inst);
    ::g::Fuse::Triggers::WhileDisabled* temp2 = ::g::Fuse::Triggers::WhileDisabled::New2();
    ::g::Fuse::Animations::Change* temp3 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[72/*Fuse.Animations.Change<Fuse.Drawing.Brush>*/], text_box_Fill_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp4 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.9647059f, 0.9647059f, 0.9647059f, 1.0f));
    ::g::Fuse::Animations::Change* temp5 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[54/*Fuse.Animations.Change<float4>*/], stroke_Color_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp6 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(1.0f, 1.0f, 1.0f, 0.0f));
    Padding(::g::Uno::Float4__New2(6.0f, 6.0f, 6.0f, 6.0f));
    uPtr(text_box)->CornerRadius(::g::Uno::Float4__New2(4.0f, 4.0f, 4.0f, 4.0f));
    uPtr(text_box)->Layer(1);
    uPtr(text_box)->Name(TextBox::__selector2_);
    uPtr(text_box)->Fill(temp6);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(text_box)->Strokes()), ::TYPES[73/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), stroke);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(text_box)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(text_box)->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), temp2);
    uPtr(stroke)->Color(::g::Uno::Float4__New2(0.8078431f, 0.8078431f, 0.8078431f, 1.0f));
    uPtr(stroke)->Width(1.0f);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp1);
    ::g::Fuse::Animations::Change__set_Value_fn(temp1, uCRef(::g::Uno::Float4__New2(0.6588235f, 0.6588235f, 0.6588235f, 1.0f)));
    temp1->Duration(0.3);
    temp1->Easing(::g::Fuse::Animations::Easing::BackOut());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp2->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp2->Animators()), ::TYPES[45/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp5);
    ::g::Fuse::Animations::Change__set_Value_fn(temp3, temp4);
    ::g::Fuse::Animations::Change__set_Value_fn(temp5, uCRef(::g::Uno::Float4__New2(0.8941177f, 0.8941177f, 0.8941177f, 1.0f)));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), text_box);
}

// public TextBox New() [static] :14
TextBox* TextBox::New4()
{
    TextBox* obj1 = (TextBox*)uNew(TextBox_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextControl.Forwarding.uno
// --------------------------------------------------------------------------------------------------------------------------

// public interfacemodifiers class TextControl :7
// {
// static TextControl() :44
static void TextControl__cctor_3_fn(uType* __type)
{
    TextControl::ValuePropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    TextControl::MaxLengthPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("MaxLength"));
    TextControl::TextWrappingPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("TextWrapping"));
    TextControl::LineSpacingPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("LineSpacing"));
    TextControl::FontSizePropertyName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("FontSize"));
    TextControl::FontPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("Font"));
    TextControl::TextAlignmentPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("TextAlignment"));
    TextControl::ColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[55/*"Color"*/]);
    TextControl::TextColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[109/*"TextColor"*/]);
    TextControl::TextTruncationPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("TextTruncation"));
    TextControl::LoadAsyncPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("LoadAsync"));
}

static void TextControl_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Font_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(TextControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(TextControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(TextControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(TextControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(TextControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(TextControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(TextControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(TextControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(TextControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(TextControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(TextControl_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextControl_type, interface17));
    type->SetFields(110,
        ::g::Fuse::Controls::ITextRenderer_typeof(), offsetof(TextControl, _textRenderer), 0,
        ::g::Uno::String_typeof(), offsetof(TextControl, _value), 0,
        ::g::Uno::Int_typeof(), offsetof(TextControl, _maxLength), 0,
        ::g::Uno::Float_typeof(), offsetof(TextControl, _fontSize), 0,
        ::g::Fuse::Font_typeof(), offsetof(TextControl, _font), 0,
        ::g::Uno::Float4_typeof(), offsetof(TextControl, _color), 0,
        ::g::Uno::Bool_typeof(), offsetof(TextControl, _loadAsync), 0,
        ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextControl, ValueChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::ValuePropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::MaxLengthPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::TextWrappingPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::LineSpacingPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::FontSizePropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::FontPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::TextAlignmentPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::ColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::TextColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::TextTruncationPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextControl::LoadAsyncPropertyName_, uFieldFlagsStatic,
        ::g::Uno::Func1_typeof()->MakeType(type, ::g::Fuse::Controls::ITextRenderer_typeof(), NULL), (uintptr_t)&TextControl::_TextRendererFactory_, uFieldFlagsStatic);
    type->Reflection.SetFields(11,
        new uField("ColorPropertyName", 125),
        new uField("FontPropertyName", 123),
        new uField("FontSizePropertyName", 122),
        new uField("LineSpacingPropertyName", 121),
        new uField("LoadAsyncPropertyName", 128),
        new uField("MaxLengthPropertyName", 119),
        new uField("TextAlignmentPropertyName", 124),
        new uField("TextColorPropertyName", 126),
        new uField("TextTruncationPropertyName", 127),
        new uField("TextWrappingPropertyName", 120),
        new uField("ValuePropertyName", 118));
    type->Reflection.SetFunctions(24,
        new uFunction("get_Color", NULL, (void*)TextControl__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)TextControl__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Font", NULL, (void*)TextControl__get_Font_fn, 0, false, ::g::Fuse::Font_typeof(), 0),
        new uFunction("set_Font", NULL, (void*)TextControl__set_Font_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Font_typeof()),
        new uFunction("get_FontSize", NULL, (void*)TextControl__get_FontSize_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_FontSize", NULL, (void*)TextControl__set_FontSize_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_LineSpacing", NULL, (void*)TextControl__get_LineSpacing_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_LineSpacing", NULL, (void*)TextControl__set_LineSpacing_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_MaxLength", NULL, (void*)TextControl__get_MaxLength_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_MaxLength", NULL, (void*)TextControl__set_MaxLength_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("SetColor", NULL, (void*)TextControl__SetColor_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float4_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetValue", NULL, (void*)TextControl__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_TextAlignment", NULL, (void*)TextControl__get_TextAlignment_fn, 0, false, ::g::Fuse::Controls::TextAlignment_typeof(), 0),
        new uFunction("set_TextAlignment", NULL, (void*)TextControl__set_TextAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextAlignment_typeof()),
        new uFunction("get_TextColor", NULL, (void*)TextControl__get_TextColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_TextColor", NULL, (void*)TextControl__set_TextColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_TextTruncation", NULL, NULL, offsetof(TextControl_type, fp_get_TextTruncation), false, ::g::Fuse::Controls::TextTruncation_typeof(), 0),
        new uFunction("set_TextTruncation", NULL, NULL, offsetof(TextControl_type, fp_set_TextTruncation), false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextTruncation_typeof()),
        new uFunction("get_TextWrapping", NULL, (void*)TextControl__get_TextWrapping_fn, 0, false, ::g::Fuse::Controls::TextWrapping_typeof(), 0),
        new uFunction("set_TextWrapping", NULL, (void*)TextControl__set_TextWrapping_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextWrapping_typeof()),
        new uFunction("get_Value", NULL, (void*)TextControl__get_Value_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)TextControl__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)TextControl__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::String_typeof(), NULL)),
        new uFunction("remove_ValueChanged", NULL, (void*)TextControl__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::String_typeof(), NULL)));
}

TextControl_type* TextControl_typeof()
{
    static uSStrong<TextControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 130;
    options.InterfaceCount = 18;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(TextControl);
    options.TypeSize = sizeof(TextControl_type);
    type = (TextControl_type*)uClassType::New("Fuse.Controls.TextControl", options);
    type->fp_build_ = TextControl_build;
    type->fp_cctor_ = TextControl__cctor_3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))TextControl__ArrangePaddingBox_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))TextControl__CalcRenderBounds_fn;
    type->fp_DrawVisual = (void(*)(::g::Fuse::Controls::Control*, ::g::Fuse::DrawContext*))TextControl__DrawVisual_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))TextControl__FastTrackDrawWithOpacity_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))TextControl__GetContentSize_fn;
    type->fp_get_HitTestLocalVisualBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))TextControl__get_HitTestLocalVisualBounds_fn;
    type->fp_InvalidateRenderer = TextControl__InvalidateRenderer_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))TextControl__OnHitTestLocalVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))TextControl__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))TextControl__OnUnrooted_fn;
    type->fp_OnValueChanged = TextControl__OnValueChanged_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))TextControl__PushPropertiesToNativeView_fn;
    type->fp_get_RenderValue = TextControl__get_RenderValue_fn;
    type->fp_SoftDispose = (void(*)(::g::Fuse::Node*))TextControl__SoftDispose_fn;
    type->fp_get_TextTruncation = TextControl__get_TextTruncation_fn;
    type->fp_set_TextTruncation = TextControl__set_TextTruncation_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))TextControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))TextControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))TextControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))TextControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TextControl() :48
void TextControl__ctor_6_fn(TextControl* __this)
{
    __this->ctor_6();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :99
void TextControl__ArrangePaddingBox_fn(TextControl* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.TextControl", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Controls::LayoutControl__ArrangePaddingBox_fn(__this, uCRef(lp_));

    if (__this->_textRenderer != NULL)
        ::g::Fuse::Controls::ITextRenderer::Arrange(uInterface(uPtr(__this->_textRenderer), ::g::Fuse::Controls::ITextRenderer_typeof()), ::g::Uno::Float2__New1(0.0f), lp_.Size());
}

// protected override Fuse.VisualBounds CalcRenderBounds() :143
void TextControl__CalcRenderBounds_fn(TextControl* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.TextControl", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret3;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret3), ret3);

    if (__this->_textRenderer != NULL)
        b = uPtr(b)->AddRect1(::g::Fuse::Controls::ITextRenderer::GetRenderBounds(uInterface(uPtr(__this->_textRenderer), ::g::Fuse::Controls::ITextRenderer_typeof())));

    return *__retval = b, void();
}

// public float4 get_Color() :187
void TextControl__get_Color_fn(TextControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :188
void TextControl__set_Color_fn(TextControl* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// protected override sealed void DrawVisual(Fuse.DrawContext dc) :116
void TextControl__DrawVisual_fn(TextControl* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.TextControl", "DrawVisual(Fuse.DrawContext)");
    uString* str = __this->RenderValue();

    if ((__this->_textRenderer != NULL) && !::g::Uno::String::IsNullOrEmpty(str))
        ::g::Fuse::Controls::ITextRenderer::Draw(uInterface(uPtr(__this->_textRenderer), ::g::Fuse::Controls::ITextRenderer_typeof()), dc, __this);
}

// private bool EnforceMaxLength(string& v) :82
void TextControl__EnforceMaxLength_fn(TextControl* __this, uString** v, bool* __retval)
{
    *__retval = __this->EnforceMaxLength(v);
}

// protected override sealed bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :111
void TextControl__FastTrackDrawWithOpacity_fn(TextControl* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    return *__retval = false, void();
}

// public Fuse.Font get_Font() :142
void TextControl__get_Font_fn(TextControl* __this, ::g::Fuse::Font** __retval)
{
    *__retval = __this->Font();
}

// public void set_Font(Fuse.Font value) :143
void TextControl__set_Font_fn(TextControl* __this, ::g::Fuse::Font* value)
{
    __this->Font(value);
}

// public float get_FontSize() :125
void TextControl__get_FontSize_fn(TextControl* __this, float* __retval)
{
    *__retval = __this->FontSize();
}

// public void set_FontSize(float value) :126
void TextControl__set_FontSize_fn(TextControl* __this, float* value)
{
    __this->FontSize(*value);
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :88
void TextControl__GetContentSize_fn(TextControl* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.TextControl", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 ret4;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 b = (::g::Fuse::Controls::LayoutControl__GetContentSize_fn(__this, uCRef(lp_), &ret4), ret4);

    if (__this->_textRenderer != NULL)
    {
        ::g::Uno::Float2 t = ::g::Fuse::Controls::ITextRenderer::GetContentSize(uInterface(uPtr(__this->_textRenderer), ::g::Fuse::Controls::ITextRenderer_typeof()), lp_);
        b = ::g::Uno::Math::Max3(t, b);
    }

    return *__retval = b, void();
}

// protected Fuse.Controls.Native.ITextView GetITextView() :21
void TextControl__GetITextView_fn(TextControl* __this, uObject** __retval)
{
    *__retval = __this->GetITextView();
}

// protected override sealed Fuse.VisualBounds get_HitTestLocalVisualBounds() :135
void TextControl__get_HitTestLocalVisualBounds_fn(TextControl* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.TextControl", "get_HitTestLocalVisualBounds()");
    ::g::Fuse::VisualBounds* ret5;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__get_HitTestLocalVisualBounds_fn(__this, &ret5), ret5);
    b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());
    return *__retval = b, void();
}

// private void InitializeUX() :52
void TextControl__InitializeUX_fn(TextControl* __this)
{
    __this->InitializeUX();
}

// protected bool get_InternalLoadAsync() :218
void TextControl__get_InternalLoadAsync_fn(TextControl* __this, bool* __retval)
{
    *__retval = __this->InternalLoadAsync();
}

// protected void set_InternalLoadAsync(bool value) :219
void TextControl__set_InternalLoadAsync_fn(TextControl* __this, bool* value)
{
    __this->InternalLoadAsync(*value);
}

// protected virtual void InvalidateRenderer() :74
void TextControl__InvalidateRenderer_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "InvalidateRenderer()");
    __this->InvalidateTextRenderer();
}

// private void InvalidateTextRenderer() :79
void TextControl__InvalidateTextRenderer_fn(TextControl* __this)
{
    __this->InvalidateTextRenderer();
}

// public float get_LineSpacing() :111
void TextControl__get_LineSpacing_fn(TextControl* __this, float* __retval)
{
    *__retval = __this->LineSpacing();
}

// public void set_LineSpacing(float value) :112
void TextControl__set_LineSpacing_fn(TextControl* __this, float* value)
{
    __this->LineSpacing(*value);
}

// public int get_MaxLength() :69
void TextControl__get_MaxLength_fn(TextControl* __this, int32_t* __retval)
{
    *__retval = __this->MaxLength();
}

// public void set_MaxLength(int value) :70
void TextControl__set_MaxLength_fn(TextControl* __this, int32_t* value)
{
    __this->MaxLength(*value);
}

// protected void OnColorChanged(Uno.UX.IPropertyListener origin) :115
void TextControl__OnColorChanged_fn(TextControl* __this, uObject* origin)
{
    __this->OnColorChanged(origin);
}

// protected void OnFontChanged() :95
void TextControl__OnFontChanged_fn(TextControl* __this)
{
    __this->OnFontChanged();
}

// protected void OnFontSizeChanged() :85
void TextControl__OnFontSizeChanged_fn(TextControl* __this)
{
    __this->OnFontSizeChanged();
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :126
void TextControl__OnHitTestLocalVisual_fn(TextControl* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnHitTestLocalVisual(Fuse.HitTestContext)");

    if (__this->IsPointInside(uPtr(htc)->LocalPoint()))
        uPtr(htc)->Hit(__this);

    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);
}

// protected void OnLineSpacingChanged() :75
void TextControl__OnLineSpacingChanged_fn(TextControl* __this)
{
    __this->OnLineSpacingChanged();
}

// protected void OnLoadAsyncChanged() :135
void TextControl__OnLoadAsyncChanged_fn(TextControl* __this)
{
    __this->OnLoadAsyncChanged();
}

// protected void OnMaxLengthChanged() :55
void TextControl__OnMaxLengthChanged_fn(TextControl* __this)
{
    __this->OnMaxLengthChanged();
}

// protected override void OnRooted() :34
void TextControl__OnRooted_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);

    if (__this->VisualContext() == 1)
    {
        if (::g::Uno::Delegate::op_Inequality(TextControl::TextRendererFactory(), NULL))
            __this->_textRenderer = (uObject*)uPtr(TextControl::TextRendererFactory())->Invoke(1, __this);
        else
            __this->_textRenderer = (uObject*)::g::Fuse::Controls::FallbackTextRenderer::TextRenderer::New1(__this);

        __this->AddDrawCost(2.0);
    }
}

// protected void OnTextAlignmentChanged() :105
void TextControl__OnTextAlignmentChanged_fn(TextControl* __this)
{
    __this->OnTextAlignmentChanged();
}

// protected void OnTextTruncationChanged() :125
void TextControl__OnTextTruncationChanged_fn(TextControl* __this)
{
    __this->OnTextTruncationChanged();
}

// protected void OnTextWrappingChanged() :65
void TextControl__OnTextWrappingChanged_fn(TextControl* __this)
{
    __this->OnTextWrappingChanged();
}

// protected override void OnUnrooted() :60
void TextControl__OnUnrooted_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnUnrooted()");

    if (__this->VisualContext() == 1)
    {
        __this->RemoveDrawCost(2.0);

        if (__this->_textRenderer != NULL)
            ::g::Fuse::Controls::ITextRenderer::SoftDispose(uInterface(uPtr(__this->_textRenderer), ::g::Fuse::Controls::ITextRenderer_typeof()));

        __this->_textRenderer = NULL;
    }

    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// protected virtual void OnValueChanged(Uno.UX.IPropertyListener origin) :41
void TextControl__OnValueChanged_fn(TextControl* __this, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnValueChanged(Uno.UX.IPropertyListener)");
    __this->OnPropertyChanged1(TextControl::ValuePropertyName_, origin);
    __this->InvalidateLayout(2);
    __this->InvalidateVisual();
    __this->InvalidateRenderer();

    if (::g::Uno::Delegate::op_Inequality(__this->ValueChanged1, NULL))
    {
        ::g::Fuse::Scripting::StringChangedArgs* args = ::g::Fuse::Scripting::StringChangedArgs::New3(__this->Value());
        uPtr(__this->ValueChanged1)->Invoke(2, __this, args);
    }
}

// protected override void PushPropertiesToNativeView() :26
void TextControl__PushPropertiesToNativeView_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Control__PushPropertiesToNativeView_fn(__this);
    uObject* tv = uAs<uObject*>(__this->NativeView(), ::g::Fuse::Controls::Native::ITextView_typeof());
    ::g::Fuse::Controls::Native::ITextView::Value(uInterface(uPtr(tv), ::g::Fuse::Controls::Native::ITextView_typeof()), __this->Value());
    ::g::Fuse::Controls::Native::ITextView::MaxLength(uInterface(tv, ::g::Fuse::Controls::Native::ITextView_typeof()), __this->MaxLength());
    ::g::Fuse::Controls::Native::ITextView::TextWrapping(uInterface(tv, ::g::Fuse::Controls::Native::ITextView_typeof()), __this->TextWrapping());
    ::g::Fuse::Controls::Native::ITextView::LineSpacing(uInterface(tv, ::g::Fuse::Controls::Native::ITextView_typeof()), __this->LineSpacing());
    ::g::Fuse::Controls::Native::ITextView::FontSize(uInterface(tv, ::g::Fuse::Controls::Native::ITextView_typeof()), __this->FontSize());
    ::g::Fuse::Controls::Native::ITextView::Font(uInterface(tv, ::g::Fuse::Controls::Native::ITextView_typeof()), __this->Font());
    ::g::Fuse::Controls::Native::ITextView::TextAlignment(uInterface(tv, ::g::Fuse::Controls::Native::ITextView_typeof()), __this->TextAlignment());
    ::g::Fuse::Controls::Native::ITextView::TextColor(uInterface(tv, ::g::Fuse::Controls::Native::ITextView_typeof()), __this->Color());
    ::g::Fuse::Controls::Native::ITextView::TextTruncation(uInterface(tv, ::g::Fuse::Controls::Native::ITextView_typeof()), __this->TextTruncation());
}

// internal float4 get_RenderColor() :29
void TextControl__get_RenderColor_fn(TextControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->RenderColor();
}

// internal virtual string get_RenderValue() :24
void TextControl__get_RenderValue_fn(TextControl* __this, uString** __retval)
{
    uString* ind1;
    ind1 = __this->Value();
    return *__retval = (ind1 != NULL) ? ind1 : ::STRINGS[19/*""*/], void();
}

// public void SetColor(float4 color, Uno.UX.IPropertyListener origin) :193
void TextControl__SetColor_fn(TextControl* __this, ::g::Uno::Float4* color, uObject* origin)
{
    __this->SetColor(*color, origin);
}

// public void SetValue(string value, Uno.UX.IPropertyListener origin) :32
void TextControl__SetValue_fn(TextControl* __this, uString* value, uObject* origin)
{
    __this->SetValue(value, origin);
}

// protected void SetValueInternal(string newValue) :53
void TextControl__SetValueInternal_fn(TextControl* __this, uString* newValue)
{
    __this->SetValueInternal(newValue);
}

// protected override sealed void SoftDispose() :151
void TextControl__SoftDispose_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "SoftDispose()");
    ::g::Fuse::Node__SoftDispose_fn(__this);

    if (__this->_textRenderer != NULL)
        ::g::Fuse::Controls::ITextRenderer::SoftDispose(uInterface(uPtr(__this->_textRenderer), ::g::Fuse::Controls::ITextRenderer_typeof()));
}

// public Fuse.Controls.TextAlignment get_TextAlignment() :155
void TextControl__get_TextAlignment_fn(TextControl* __this, int32_t* __retval)
{
    *__retval = __this->TextAlignment();
}

// public void set_TextAlignment(Fuse.Controls.TextAlignment value) :156
void TextControl__set_TextAlignment_fn(TextControl* __this, int32_t* value)
{
    __this->TextAlignment(*value);
}

// public float4 get_TextColor() :173
void TextControl__get_TextColor_fn(TextControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->TextColor();
}

// public void set_TextColor(float4 value) :174
void TextControl__set_TextColor_fn(TextControl* __this, ::g::Uno::Float4* value)
{
    __this->TextColor(*value);
}

// internal static generated extern Uno.Func<Fuse.Controls.TextControl, Fuse.Controls.ITextRenderer> get_TextRendererFactory() :20
void TextControl__get_TextRendererFactory_fn(uDelegate** __retval)
{
    *__retval = TextControl::TextRendererFactory();
}

// internal static generated extern void set_TextRendererFactory(Uno.Func<Fuse.Controls.TextControl, Fuse.Controls.ITextRenderer> value) :20
void TextControl__set_TextRendererFactory_fn(uDelegate* value)
{
    TextControl::TextRendererFactory(value);
}

// public virtual Fuse.Controls.TextTruncation get_TextTruncation() :204
void TextControl__get_TextTruncation_fn(TextControl* __this, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.TextControl", "get_TextTruncation()");
    int32_t ret8;
    return *__retval = (::g::Fuse::Visual__Get1_fn(__this, ::TYPES[85/*Fuse.Visual.Get<Fuse.Controls.TextTruncation>*/], uCRef<int32_t>(2048), uCRef<int32_t>(0), &ret8), ret8), void();
}

// public virtual void set_TextTruncation(Fuse.Controls.TextTruncation value) :205
void TextControl__set_TextTruncation_fn(TextControl* __this, int32_t* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_TextTruncation(Fuse.Controls.TextTruncation)");
    int32_t value_ = *value;

    if (__this->TextTruncation() != value_)
    {
        ::g::Fuse::Visual__Set1_fn(__this, ::TYPES[86/*Fuse.Visual.Set<Fuse.Controls.TextTruncation>*/], uCRef<int32_t>(2048), uCRef<int32_t>(value_), uCRef<int32_t>(0));
        __this->OnTextTruncationChanged();
    }
}

// public Fuse.Controls.TextWrapping get_TextWrapping() :96
void TextControl__get_TextWrapping_fn(TextControl* __this, int32_t* __retval)
{
    *__retval = __this->TextWrapping();
}

// public void set_TextWrapping(Fuse.Controls.TextWrapping value) :97
void TextControl__set_TextWrapping_fn(TextControl* __this, int32_t* value)
{
    __this->TextWrapping(*value);
}

// public string get_Value() :28
void TextControl__get_Value_fn(TextControl* __this, uString** __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(string value) :29
void TextControl__set_Value_fn(TextControl* __this, uString* value)
{
    __this->Value(value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<string> value) :62
void TextControl__add_ValueChanged_fn(TextControl* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<string> value) :62
void TextControl__remove_ValueChanged_fn(TextControl* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

::g::Uno::UX::Selector TextControl::ValuePropertyName_;
::g::Uno::UX::Selector TextControl::MaxLengthPropertyName_;
::g::Uno::UX::Selector TextControl::TextWrappingPropertyName_;
::g::Uno::UX::Selector TextControl::LineSpacingPropertyName_;
::g::Uno::UX::Selector TextControl::FontSizePropertyName_;
::g::Uno::UX::Selector TextControl::FontPropertyName_;
::g::Uno::UX::Selector TextControl::TextAlignmentPropertyName_;
::g::Uno::UX::Selector TextControl::ColorPropertyName_;
::g::Uno::UX::Selector TextControl::TextColorPropertyName_;
::g::Uno::UX::Selector TextControl::TextTruncationPropertyName_;
::g::Uno::UX::Selector TextControl::LoadAsyncPropertyName_;
uSStrong<uDelegate*> TextControl::_TextRendererFactory_;

// public TextControl() [instance] :48
void TextControl::ctor_6()
{
    uStackFrame __("Fuse.Controls.TextControl", ".ctor()");
    _value = ::STRINGS[19/*""*/];
    _fontSize = ::g::Fuse::Font::PlatformDefaultSize();
    _color = ::g::Fuse::Font::PlatformDefaultTextColor();
    ctor_5();
    InitializeUX();
}

// public float4 get_Color() [instance] :187
::g::Uno::Float4 TextControl::Color()
{
    return _color;
}

// public void set_Color(float4 value) [instance] :188
void TextControl::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_Color(float4)");
    SetColor(value, (uObject*)this);
}

// private bool EnforceMaxLength(string& v) [instance] :82
bool TextControl::EnforceMaxLength(uString** v)
{
    uStackFrame __("Fuse.Controls.TextControl", "EnforceMaxLength(string&)");

    if ((MaxLength() > 0) && (uPtr(*v)->Length() > MaxLength()))
    {
        *v = ::g::Uno::String::Substring1(uPtr(*v), 0, MaxLength());
        return true;
    }

    return false;
}

// public Fuse.Font get_Font() [instance] :142
::g::Fuse::Font* TextControl::Font()
{
    ::g::Fuse::Font* ind2;
    ind2 = _font;
    return (ind2 != NULL) ? ind2 : (::g::Fuse::Font*)::g::Fuse::Font::PlatformDefault();
}

// public void set_Font(Fuse.Font value) [instance] :143
void TextControl::Font(::g::Fuse::Font* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_Font(Fuse.Font)");

    if (_font != value)
    {
        _font = value;
        OnFontChanged();
    }
}

// public float get_FontSize() [instance] :125
float TextControl::FontSize()
{
    return _fontSize;
}

// public void set_FontSize(float value) [instance] :126
void TextControl::FontSize(float value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_FontSize(float)");

    if (_fontSize != value)
    {
        _fontSize = value;
        OnFontSizeChanged();
        InvalidateVisual();
    }
}

// protected Fuse.Controls.Native.ITextView GetITextView() [instance] :21
uObject* TextControl::GetITextView()
{
    return uAs<uObject*>(NativeView(), ::g::Fuse::Controls::Native::ITextView_typeof());
}

// private void InitializeUX() [instance] :52
void TextControl::InitializeUX()
{
    uStackFrame __("Fuse.Controls.TextControl", "InitializeUX()");
    TextControl__Template* AndroidAppearance = TextControl__Template::New2(this, this);
    TextControl__Template1* iOSAppearance = TextControl__Template1::New2(this, this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iOSAppearance);
}

// protected bool get_InternalLoadAsync() [instance] :218
bool TextControl::InternalLoadAsync()
{
    return _loadAsync;
}

// protected void set_InternalLoadAsync(bool value) [instance] :219
void TextControl::InternalLoadAsync(bool value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_InternalLoadAsync(bool)");

    if (_loadAsync != value)
    {
        _loadAsync = value;
        OnLoadAsyncChanged();
    }
}

// private void InvalidateTextRenderer() [instance] :79
void TextControl::InvalidateTextRenderer()
{
    uStackFrame __("Fuse.Controls.TextControl", "InvalidateTextRenderer()");

    if (_textRenderer != NULL)
        ::g::Fuse::Controls::ITextRenderer::Invalidate(uInterface(uPtr(_textRenderer), ::g::Fuse::Controls::ITextRenderer_typeof()));

    InvalidateRenderBounds();
}

// public float get_LineSpacing() [instance] :111
float TextControl::LineSpacing()
{
    uStackFrame __("Fuse.Controls.TextControl", "get_LineSpacing()");
    float ret6;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[7/*Fuse.Visual*/]->MakeMethod(4/*Get<float>*/, ::g::Uno::Float_typeof(), NULL), uCRef<int32_t>(512), uCRef(1.0f), &ret6), ret6);
}

// public void set_LineSpacing(float value) [instance] :112
void TextControl::LineSpacing(float value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_LineSpacing(float)");

    if (LineSpacing() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[7/*Fuse.Visual*/]->MakeMethod(10/*Set<float>*/, ::g::Uno::Float_typeof(), NULL), uCRef<int32_t>(512), uCRef(value), uCRef(1.0f));
        OnLineSpacingChanged();
    }
}

// public int get_MaxLength() [instance] :69
int32_t TextControl::MaxLength()
{
    return _maxLength;
}

// public void set_MaxLength(int value) [instance] :70
void TextControl::MaxLength(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_MaxLength(int)");

    if (_maxLength != value)
    {
        _maxLength = value;
        OnMaxLengthChanged();
        uString* v = Value();

        if (EnforceMaxLength(&v))
            Value(v);
    }
}

// protected void OnColorChanged(Uno.UX.IPropertyListener origin) [instance] :115
void TextControl::OnColorChanged(uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnColorChanged(Uno.UX.IPropertyListener)");
    OnPropertyChanged1(TextControl::ColorPropertyName_, origin);
    OnPropertyChanged1(TextControl::TextColorPropertyName_, origin);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::TextColor(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), Color());

    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnFontChanged() [instance] :95
void TextControl::OnFontChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnFontChanged()");
    OnPropertyChanged(TextControl::FontPropertyName_);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::Font(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), Font());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnFontSizeChanged() [instance] :85
void TextControl::OnFontSizeChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnFontSizeChanged()");
    OnPropertyChanged(TextControl::FontSizePropertyName_);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::FontSize(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), FontSize());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnLineSpacingChanged() [instance] :75
void TextControl::OnLineSpacingChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnLineSpacingChanged()");
    OnPropertyChanged(TextControl::LineSpacingPropertyName_);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::LineSpacing(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), LineSpacing());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnLoadAsyncChanged() [instance] :135
void TextControl::OnLoadAsyncChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnLoadAsyncChanged()");

    if (VisualContext() == 1)
        ;

    OnPropertyChanged(TextControl::LoadAsyncPropertyName_);
    InvalidateRenderer();
}

// protected void OnMaxLengthChanged() [instance] :55
void TextControl::OnMaxLengthChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnMaxLengthChanged()");
    OnPropertyChanged(TextControl::MaxLengthPropertyName_);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::MaxLength(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), MaxLength());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnTextAlignmentChanged() [instance] :105
void TextControl::OnTextAlignmentChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnTextAlignmentChanged()");
    OnPropertyChanged(TextControl::TextAlignmentPropertyName_);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::TextAlignment(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), TextAlignment());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnTextTruncationChanged() [instance] :125
void TextControl::OnTextTruncationChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnTextTruncationChanged()");
    OnPropertyChanged(TextControl::TextTruncationPropertyName_);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::TextTruncation(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), TextTruncation());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnTextWrappingChanged() [instance] :65
void TextControl::OnTextWrappingChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnTextWrappingChanged()");
    OnPropertyChanged(TextControl::TextWrappingPropertyName_);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::TextWrapping(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), TextWrapping());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// internal float4 get_RenderColor() [instance] :29
::g::Uno::Float4 TextControl::RenderColor()
{
    return Color();
}

// public void SetColor(float4 color, Uno.UX.IPropertyListener origin) [instance] :193
void TextControl::SetColor(::g::Uno::Float4 color, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextControl", "SetColor(float4,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float4__op_Inequality(_color, color))
    {
        _color = color;
        OnColorChanged(origin);
    }
}

// public void SetValue(string value, Uno.UX.IPropertyListener origin) [instance] :32
void TextControl::SetValue(uString* value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextControl", "SetValue(string,Uno.UX.IPropertyListener)");
    uString* newValue = (value != NULL) ? value : ::STRINGS[19/*""*/];
    bool forced = EnforceMaxLength(&newValue);

    if (forced || ::g::Uno::String::op_Inequality(_value, newValue))
    {
        _value = newValue;
        uObject* edit = GetITextView();

        if (edit != NULL)
            ::g::Fuse::Controls::Native::ITextView::Value(uInterface(uPtr(edit), ::g::Fuse::Controls::Native::ITextView_typeof()), _value);

        OnValueChanged(origin);
        InvalidateTextRenderer();
    }
}

// protected void SetValueInternal(string newValue) [instance] :53
void TextControl::SetValueInternal(uString* newValue)
{
    uStackFrame __("Fuse.Controls.TextControl", "SetValueInternal(string)");

    if (::g::Uno::String::op_Inequality(_value, newValue))
    {
        _value = newValue;
        OnValueChanged((uObject*)this);
    }
}

// public Fuse.Controls.TextAlignment get_TextAlignment() [instance] :155
int32_t TextControl::TextAlignment()
{
    uStackFrame __("Fuse.Controls.TextControl", "get_TextAlignment()");
    int32_t ret7;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[7/*Fuse.Visual*/]->MakeMethod(4/*Get<Fuse.Controls.TextAlignment>*/, ::g::Fuse::Controls::TextAlignment_typeof(), NULL), uCRef<int32_t>(1024), uCRef<int32_t>(0), &ret7), ret7);
}

// public void set_TextAlignment(Fuse.Controls.TextAlignment value) [instance] :156
void TextControl::TextAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_TextAlignment(Fuse.Controls.TextAlignment)");

    if (TextAlignment() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[7/*Fuse.Visual*/]->MakeMethod(10/*Set<Fuse.Controls.TextAlignment>*/, ::g::Fuse::Controls::TextAlignment_typeof(), NULL), uCRef<int32_t>(1024), uCRef<int32_t>(value), uCRef<int32_t>(0));
        OnTextAlignmentChanged();
    }
}

// public float4 get_TextColor() [instance] :173
::g::Uno::Float4 TextControl::TextColor()
{
    return Color();
}

// public void set_TextColor(float4 value) [instance] :174
void TextControl::TextColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_TextColor(float4)");
    Color(value);
}

// public Fuse.Controls.TextWrapping get_TextWrapping() [instance] :96
int32_t TextControl::TextWrapping()
{
    uStackFrame __("Fuse.Controls.TextControl", "get_TextWrapping()");
    int32_t ret9;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[7/*Fuse.Visual*/]->MakeMethod(4/*Get<Fuse.Controls.TextWrapping>*/, ::g::Fuse::Controls::TextWrapping_typeof(), NULL), uCRef<int32_t>(2), uCRef<int32_t>(0), &ret9), ret9);
}

// public void set_TextWrapping(Fuse.Controls.TextWrapping value) [instance] :97
void TextControl::TextWrapping(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_TextWrapping(Fuse.Controls.TextWrapping)");

    if (TextWrapping() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[7/*Fuse.Visual*/]->MakeMethod(10/*Set<Fuse.Controls.TextWrapping>*/, ::g::Fuse::Controls::TextWrapping_typeof(), NULL), uCRef<int32_t>(2), uCRef<int32_t>(value), uCRef<int32_t>(0));
        OnTextWrappingChanged();
    }
}

// public string get_Value() [instance] :28
uString* TextControl::Value()
{
    return _value;
}

// public void set_Value(string value) [instance] :29
void TextControl::Value(uString* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_Value(string)");
    SetValue(value, (uObject*)this);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<string> value) [instance] :62
void TextControl::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "add_ValueChanged(Uno.UX.ValueChangedHandler<string>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::TYPES[50/*string*/], NULL));
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<string> value) [instance] :62
void TextControl::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "remove_ValueChanged(Uno.UX.ValueChangedHandler<string>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::TYPES[50/*string*/], NULL));
}

// internal static generated extern Uno.Func<Fuse.Controls.TextControl, Fuse.Controls.ITextRenderer> get_TextRendererFactory() [static] :20
uDelegate* TextControl::TextRendererFactory()
{
    TextControl_typeof()->Init();
    return TextControl::_TextRendererFactory_;
}

// internal static generated extern void set_TextRendererFactory(Uno.Func<Fuse.Controls.TextControl, Fuse.Controls.ITextRenderer> value) [static] :20
void TextControl::TextRendererFactory(uDelegate* value)
{
    TextControl_typeof()->Init();
    TextControl::_TextRendererFactory_ = value;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextEdit.uno
// ------------------------------------------------------------------------------------------------------------

// internal abstract class TextEdit :24
// {
// static generated TextEdit() :24
static void TextEdit__cctor_4_fn(uType* __type)
{
    TextEdit::IsPasswordPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[113/*"IsPassword"*/]);
    TextEdit::IsReadOnlyPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[114/*"IsReadOnly"*/]);
    TextEdit::InputHintPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[115/*"InputHint"*/]);
    TextEdit::CaretColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[116/*"CaretColor"*/]);
    TextEdit::SelectionColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[117/*"SelectionCo...*/]);
    TextEdit::ActionStylePropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[118/*"ActionStyle"*/]);
    TextEdit::AutoCorrectHintPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[119/*"AutoCorrect...*/]);
    TextEdit::AutoCapitalizationHintPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[120/*"AutoCapital...*/]);
    TextEdit::PlaceholderTextPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[121/*"Placeholder...*/]);
    TextEdit::PlaceholderColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[122/*"Placeholder...*/]);
}

static void TextEdit_build(uType* type)
{
    ::STRINGS[113] = uString::Const("IsPassword");
    ::STRINGS[114] = uString::Const("IsReadOnly");
    ::STRINGS[115] = uString::Const("InputHint");
    ::STRINGS[116] = uString::Const("CaretColor");
    ::STRINGS[117] = uString::Const("SelectionColor");
    ::STRINGS[118] = uString::Const("ActionStyle");
    ::STRINGS[119] = uString::Const("AutoCorrectHint");
    ::STRINGS[120] = uString::Const("AutoCapitalizationHint");
    ::STRINGS[121] = uString::Const("PlaceholderText");
    ::STRINGS[122] = uString::Const("PlaceholderColor");
    ::STRINGS[19] = uString::Const("");
    ::TYPES[75] = ::g::Fuse::Visual_typeof()->MakeMethod(4/*Get<Fuse.Controls.TextInputActionStyle>*/, ::g::Fuse::Controls::TextInputActionStyle_typeof(), NULL);
    ::TYPES[76] = ::g::Fuse::Visual_typeof()->MakeMethod(10/*Set<Fuse.Controls.TextInputActionStyle>*/, ::g::Fuse::Controls::TextInputActionStyle_typeof(), NULL);
    ::TYPES[77] = ::g::Fuse::Visual_typeof()->MakeMethod(4/*Get<Fuse.Controls.AutoCapitalizationHint>*/, ::g::Fuse::Controls::AutoCapitalizationHint_typeof(), NULL);
    ::TYPES[78] = ::g::Fuse::Visual_typeof()->MakeMethod(10/*Set<Fuse.Controls.AutoCapitalizationHint>*/, ::g::Fuse::Controls::AutoCapitalizationHint_typeof(), NULL);
    ::TYPES[79] = ::g::Fuse::Visual_typeof()->MakeMethod(4/*Get<Fuse.Controls.AutoCorrectHint>*/, ::g::Fuse::Controls::AutoCorrectHint_typeof(), NULL);
    ::TYPES[80] = ::g::Fuse::Visual_typeof()->MakeMethod(10/*Set<Fuse.Controls.AutoCorrectHint>*/, ::g::Fuse::Controls::AutoCorrectHint_typeof(), NULL);
    ::TYPES[58] = ::g::Fuse::Visual_typeof()->MakeMethod(4/*Get<float4>*/, ::g::Uno::Float4_typeof(), NULL);
    ::TYPES[57] = ::g::Fuse::Visual_typeof()->MakeMethod(10/*Set<float4>*/, ::g::Uno::Float4_typeof(), NULL);
    ::TYPES[81] = ::g::Fuse::Visual_typeof()->MakeMethod(4/*Get<Fuse.Controls.TextInputHint>*/, ::g::Fuse::Controls::TextInputHint_typeof(), NULL);
    ::TYPES[82] = ::g::Fuse::Visual_typeof()->MakeMethod(10/*Set<Fuse.Controls.TextInputHint>*/, ::g::Fuse::Controls::TextInputHint_typeof(), NULL);
    ::TYPES[83] = ::g::Fuse::Visual_typeof()->MakeMethod(4/*Get<string>*/, ::g::Uno::String_typeof(), NULL);
    ::TYPES[84] = ::g::Fuse::Visual_typeof()->MakeMethod(10/*Set<string>*/, ::g::Uno::String_typeof(), NULL);
    ::TYPES[85] = ::g::Fuse::Visual_typeof()->MakeMethod(4/*Get<Fuse.Controls.TextTruncation>*/, ::g::Fuse::Controls::TextTruncation_typeof(), NULL);
    ::TYPES[86] = ::g::Fuse::Visual_typeof()->MakeMethod(10/*Set<Fuse.Controls.TextTruncation>*/, ::g::Fuse::Controls::TextTruncation_typeof(), NULL);
    ::TYPES[87] = ::g::Fuse::Controls::TextInputActionHandler_typeof();
    type->SetDependencies(
        ::g::Fuse::Input::Focus_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextEdit_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(TextEdit_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(TextEdit_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(TextEdit_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextEdit_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextEdit_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextEdit_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(TextEdit_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(TextEdit_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(TextEdit_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextEdit_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextEdit_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(TextEdit_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(TextEdit_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(TextEdit_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(TextEdit_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(TextEdit_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextEdit_type, interface17),
        ::g::Fuse::Controls::ITextEditControl_typeof(), offsetof(TextEdit_type, interface18));
    type->SetFields(118,
        ::g::Uno::Bool_typeof(), offsetof(TextEdit, _isMultiline), 0,
        ::TYPES[87/*Fuse.Controls.TextInputActionHandler*/], offsetof(TextEdit, ActionTriggered1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::IsPasswordPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::IsReadOnlyPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::InputHintPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::CaretColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::SelectionColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::ActionStylePropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::AutoCorrectHintPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::AutoCapitalizationHintPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::PlaceholderTextPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TextEdit::PlaceholderColorPropertyName_, uFieldFlagsStatic);
}

TextEdit_type* TextEdit_typeof()
{
    static uSStrong<TextEdit_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextControl_typeof();
    options.FieldCount = 130;
    options.InterfaceCount = 19;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(TextEdit);
    options.TypeSize = sizeof(TextEdit_type);
    type = (TextEdit_type*)uClassType::New("Fuse.Controls.TextEdit", options);
    type->fp_build_ = TextEdit_build;
    type->fp_cctor_ = TextEdit__cctor_4_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))TextEdit__CalcRenderBounds_fn;
    type->fp_OnActionStyleChanged = TextEdit__OnActionStyleChanged_fn;
    type->fp_OnAutoCapitalizationHintChanged = TextEdit__OnAutoCapitalizationHintChanged_fn;
    type->fp_OnAutoCorrectHintChanged = TextEdit__OnAutoCorrectHintChanged_fn;
    type->fp_OnCaretColorChanged = TextEdit__OnCaretColorChanged_fn;
    type->fp_OnInputHintChanged = TextEdit__OnInputHintChanged_fn;
    type->fp_OnIsPasswordChanged = TextEdit__OnIsPasswordChanged_fn;
    type->fp_OnIsReadOnlyChanged = TextEdit__OnIsReadOnlyChanged_fn;
    type->fp_OnPlaceholderColorChanged = TextEdit__OnPlaceholderColorChanged_fn;
    type->fp_OnPlaceholderTextChanged = TextEdit__OnPlaceholderTextChanged_fn;
    type->fp_OnSelectionColorChanged = TextEdit__OnSelectionColorChanged_fn;
    type->fp_get_TextTruncation = (void(*)(::g::Fuse::Controls::TextControl*, int32_t*))TextEdit__get_TextTruncation_fn;
    type->fp_set_TextTruncation = (void(*)(::g::Fuse::Controls::TextControl*, int32_t*))TextEdit__set_TextTruncation_fn;
    type->interface18.fp_get_IsPassword = (void(*)(uObject*, bool*))TextEdit__get_IsPassword_fn;
    type->interface18.fp_set_IsPassword = (void(*)(uObject*, bool*))TextEdit__set_IsPassword_fn;
    type->interface18.fp_add_ActionTriggered = (void(*)(uObject*, uDelegate*))TextEdit__add_ActionTriggered_fn;
    type->interface18.fp_remove_ActionTriggered = (void(*)(uObject*, uDelegate*))TextEdit__remove_ActionTriggered_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected TextEdit(bool multiline) :29
void TextEdit__ctor_7_fn(TextEdit* __this, bool* multiline)
{
    __this->ctor_7(*multiline);
}

// public Fuse.Controls.TextInputActionStyle get_ActionStyle() :143
void TextEdit__get_ActionStyle_fn(TextEdit* __this, int32_t* __retval)
{
    *__retval = __this->ActionStyle();
}

// public void set_ActionStyle(Fuse.Controls.TextInputActionStyle value) :144
void TextEdit__set_ActionStyle_fn(TextEdit* __this, int32_t* value)
{
    __this->ActionStyle(*value);
}

// public generated void add_ActionTriggered(Fuse.Controls.TextInputActionHandler value) :245
void TextEdit__add_ActionTriggered_fn(TextEdit* __this, uDelegate* value)
{
    __this->add_ActionTriggered(value);
}

// public generated void remove_ActionTriggered(Fuse.Controls.TextInputActionHandler value) :245
void TextEdit__remove_ActionTriggered_fn(TextEdit* __this, uDelegate* value)
{
    __this->remove_ActionTriggered(value);
}

// public Fuse.Controls.AutoCapitalizationHint get_AutoCapitalizationHint() :179
void TextEdit__get_AutoCapitalizationHint_fn(TextEdit* __this, int32_t* __retval)
{
    *__retval = __this->AutoCapitalizationHint();
}

// public void set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint value) :180
void TextEdit__set_AutoCapitalizationHint_fn(TextEdit* __this, int32_t* value)
{
    __this->AutoCapitalizationHint(*value);
}

// public Fuse.Controls.AutoCorrectHint get_AutoCorrectHint() :161
void TextEdit__get_AutoCorrectHint_fn(TextEdit* __this, int32_t* __retval)
{
    *__retval = __this->AutoCorrectHint();
}

// public void set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint value) :162
void TextEdit__set_AutoCorrectHint_fn(TextEdit* __this, int32_t* value)
{
    __this->AutoCorrectHint(*value);
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :263
void TextEdit__CalcRenderBounds_fn(TextEdit* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.TextEdit", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret1;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::TextControl__CalcRenderBounds_fn(__this, &ret1), ret1);
    b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());
    return *__retval = b, void();
}

// public float4 get_CaretColor() :105
void TextEdit__get_CaretColor_fn(TextEdit* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->CaretColor();
}

// public void set_CaretColor(float4 value) :106
void TextEdit__set_CaretColor_fn(TextEdit* __this, ::g::Uno::Float4* value)
{
    __this->CaretColor(*value);
}

// public Fuse.Controls.TextInputHint get_InputHint() :87
void TextEdit__get_InputHint_fn(TextEdit* __this, int32_t* __retval)
{
    *__retval = __this->InputHint();
}

// public void set_InputHint(Fuse.Controls.TextInputHint value) :88
void TextEdit__set_InputHint_fn(TextEdit* __this, int32_t* value)
{
    __this->InputHint(*value);
}

// public bool get_IsPassword() :49
void TextEdit__get_IsPassword_fn(TextEdit* __this, bool* __retval)
{
    *__retval = __this->IsPassword();
}

// public void set_IsPassword(bool value) :50
void TextEdit__set_IsPassword_fn(TextEdit* __this, bool* value)
{
    __this->IsPassword(*value);
}

// public bool get_IsReadOnly() :69
void TextEdit__get_IsReadOnly_fn(TextEdit* __this, bool* __retval)
{
    *__retval = __this->IsReadOnly();
}

// public void set_IsReadOnly(bool value) :70
void TextEdit__set_IsReadOnly_fn(TextEdit* __this, bool* value)
{
    __this->IsReadOnly(*value);
}

// internal bool OnAction(Fuse.Controls.TextInputActionType type) :247
void TextEdit__OnAction_fn(TextEdit* __this, int32_t* type, bool* __retval)
{
    *__retval = __this->OnAction(*type);
}

// protected virtual void OnActionStyleChanged() :153
void TextEdit__OnActionStyleChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnActionStyleChanged()");
    __this->OnPropertyChanged(TextEdit::ActionStylePropertyName_);
}

// protected virtual void OnAutoCapitalizationHintChanged() :189
void TextEdit__OnAutoCapitalizationHintChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnAutoCapitalizationHintChanged()");
    __this->OnPropertyChanged(TextEdit::AutoCapitalizationHintPropertyName_);
}

// protected virtual void OnAutoCorrectHintChanged() :171
void TextEdit__OnAutoCorrectHintChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnAutoCorrectHintChanged()");
    __this->OnPropertyChanged(TextEdit::AutoCorrectHintPropertyName_);
}

// protected virtual void OnCaretColorChanged() :115
void TextEdit__OnCaretColorChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnCaretColorChanged()");
    __this->OnPropertyChanged(TextEdit::CaretColorPropertyName_);
    __this->InvalidateVisual();
}

// protected virtual void OnInputHintChanged() :97
void TextEdit__OnInputHintChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnInputHintChanged()");
    __this->OnPropertyChanged(TextEdit::InputHintPropertyName_);
}

// protected virtual void OnIsPasswordChanged() :59
void TextEdit__OnIsPasswordChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnIsPasswordChanged()");
    __this->OnPropertyChanged(TextEdit::IsPasswordPropertyName_);
    __this->InvalidateLayout(2);
    __this->InvalidateRenderBounds();
}

// protected virtual void OnIsReadOnlyChanged() :79
void TextEdit__OnIsReadOnlyChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnIsReadOnlyChanged()");
    __this->OnPropertyChanged(TextEdit::IsReadOnlyPropertyName_);
}

// protected virtual void OnPlaceholderColorChanged() :226
void TextEdit__OnPlaceholderColorChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnPlaceholderColorChanged()");
    __this->OnPropertyChanged(TextEdit::PlaceholderColorPropertyName_);
    __this->InvalidateVisual();
}

// protected virtual void OnPlaceholderTextChanged() :207
void TextEdit__OnPlaceholderTextChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnPlaceholderTextChanged()");
    __this->OnPropertyChanged(TextEdit::PlaceholderTextPropertyName_);
    __this->InvalidateLayout(2);
    __this->InvalidateRenderBounds();
}

// protected virtual void OnSelectionColorChanged() :134
void TextEdit__OnSelectionColorChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnSelectionColorChanged()");
    __this->OnPropertyChanged(TextEdit::SelectionColorPropertyName_);
    __this->InvalidateVisual();
}

// public float4 get_PlaceholderColor() :216
void TextEdit__get_PlaceholderColor_fn(TextEdit* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->PlaceholderColor();
}

// public void set_PlaceholderColor(float4 value) :217
void TextEdit__set_PlaceholderColor_fn(TextEdit* __this, ::g::Uno::Float4* value)
{
    __this->PlaceholderColor(*value);
}

// public string get_PlaceholderText() :197
void TextEdit__get_PlaceholderText_fn(TextEdit* __this, uString** __retval)
{
    *__retval = __this->PlaceholderText();
}

// public void set_PlaceholderText(string value) :198
void TextEdit__set_PlaceholderText_fn(TextEdit* __this, uString* value)
{
    __this->PlaceholderText(value);
}

// public float4 get_SelectionColor() :124
void TextEdit__get_SelectionColor_fn(TextEdit* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->SelectionColor();
}

// public void set_SelectionColor(float4 value) :125
void TextEdit__set_SelectionColor_fn(TextEdit* __this, ::g::Uno::Float4* value)
{
    __this->SelectionColor(*value);
}

// public override sealed Fuse.Controls.TextTruncation get_TextTruncation() :234
void TextEdit__get_TextTruncation_fn(TextEdit* __this, int32_t* __retval)
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_TextTruncation()");
    int32_t ret10;
    return *__retval = (::g::Fuse::Visual__Get1_fn(__this, ::TYPES[85/*Fuse.Visual.Get<Fuse.Controls.TextTruncation>*/], uCRef<int32_t>(2048), uCRef<int32_t>(1), &ret10), ret10), void();
}

// public override sealed void set_TextTruncation(Fuse.Controls.TextTruncation value) :235
void TextEdit__set_TextTruncation_fn(TextEdit* __this, int32_t* value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_TextTruncation(Fuse.Controls.TextTruncation)");
    int32_t value_ = *value;

    if (__this->TextTruncation() != value_)
    {
        ::g::Fuse::Visual__Set1_fn(__this, ::TYPES[86/*Fuse.Visual.Set<Fuse.Controls.TextTruncation>*/], uCRef<int32_t>(2048), uCRef<int32_t>(value_), uCRef<int32_t>(1));
        __this->OnTextTruncationChanged();
    }
}

::g::Uno::UX::Selector TextEdit::IsPasswordPropertyName_;
::g::Uno::UX::Selector TextEdit::IsReadOnlyPropertyName_;
::g::Uno::UX::Selector TextEdit::InputHintPropertyName_;
::g::Uno::UX::Selector TextEdit::CaretColorPropertyName_;
::g::Uno::UX::Selector TextEdit::SelectionColorPropertyName_;
::g::Uno::UX::Selector TextEdit::ActionStylePropertyName_;
::g::Uno::UX::Selector TextEdit::AutoCorrectHintPropertyName_;
::g::Uno::UX::Selector TextEdit::AutoCapitalizationHintPropertyName_;
::g::Uno::UX::Selector TextEdit::PlaceholderTextPropertyName_;
::g::Uno::UX::Selector TextEdit::PlaceholderColorPropertyName_;

// protected TextEdit(bool multiline) [instance] :29
void TextEdit::ctor_7(bool multiline)
{
    uStackFrame __("Fuse.Controls.TextEdit", ".ctor(bool)");
    ctor_6();
    _isMultiline = multiline;
    ::g::Fuse::Input::Focus::SetIsFocusable(this, true);
    ClipToBounds(true);
}

// public Fuse.Controls.TextInputActionStyle get_ActionStyle() [instance] :143
int32_t TextEdit::ActionStyle()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_ActionStyle()");
    int32_t ret2;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[75/*Fuse.Visual.Get<Fuse.Controls.TextInputActionStyle>*/], uCRef<int32_t>(64), uCRef<int32_t>(2), &ret2), ret2);
}

// public void set_ActionStyle(Fuse.Controls.TextInputActionStyle value) [instance] :144
void TextEdit::ActionStyle(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_ActionStyle(Fuse.Controls.TextInputActionStyle)");

    if (ActionStyle() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[76/*Fuse.Visual.Set<Fuse.Controls.TextInputActionStyle>*/], uCRef<int32_t>(64), uCRef<int32_t>(value), uCRef<int32_t>(2));
        OnActionStyleChanged();
    }
}

// public generated void add_ActionTriggered(Fuse.Controls.TextInputActionHandler value) [instance] :245
void TextEdit::add_ActionTriggered(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "add_ActionTriggered(Fuse.Controls.TextInputActionHandler)");
    ActionTriggered1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ActionTriggered1, value), ::TYPES[87/*Fuse.Controls.TextInputActionHandler*/]);
}

// public generated void remove_ActionTriggered(Fuse.Controls.TextInputActionHandler value) [instance] :245
void TextEdit::remove_ActionTriggered(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "remove_ActionTriggered(Fuse.Controls.TextInputActionHandler)");
    ActionTriggered1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ActionTriggered1, value), ::TYPES[87/*Fuse.Controls.TextInputActionHandler*/]);
}

// public Fuse.Controls.AutoCapitalizationHint get_AutoCapitalizationHint() [instance] :179
int32_t TextEdit::AutoCapitalizationHint()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_AutoCapitalizationHint()");
    int32_t ret3;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[77/*Fuse.Visual.Get<Fuse.Controls.AutoCapitalizationHint>*/], uCRef<int32_t>(32768), uCRef<int32_t>(0), &ret3), ret3);
}

// public void set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint value) [instance] :180
void TextEdit::AutoCapitalizationHint(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint)");

    if (AutoCapitalizationHint() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[78/*Fuse.Visual.Set<Fuse.Controls.AutoCapitalizationHint>*/], uCRef<int32_t>(32768), uCRef<int32_t>(value), uCRef<int32_t>(0));
        OnAutoCapitalizationHintChanged();
    }
}

// public Fuse.Controls.AutoCorrectHint get_AutoCorrectHint() [instance] :161
int32_t TextEdit::AutoCorrectHint()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_AutoCorrectHint()");
    int32_t ret4;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[79/*Fuse.Visual.Get<Fuse.Controls.AutoCorrectHint>*/], uCRef<int32_t>(16384), uCRef<int32_t>(0), &ret4), ret4);
}

// public void set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint value) [instance] :162
void TextEdit::AutoCorrectHint(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint)");

    if (AutoCorrectHint() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[80/*Fuse.Visual.Set<Fuse.Controls.AutoCorrectHint>*/], uCRef<int32_t>(16384), uCRef<int32_t>(value), uCRef<int32_t>(0));
        OnAutoCorrectHintChanged();
    }
}

// public float4 get_CaretColor() [instance] :105
::g::Uno::Float4 TextEdit::CaretColor()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_CaretColor()");
    ::g::Uno::Float4 ret5;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[58/*Fuse.Visual.Get<float4>*/], uCRef<int32_t>(128), uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)), &ret5), ret5);
}

// public void set_CaretColor(float4 value) [instance] :106
void TextEdit::CaretColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_CaretColor(float4)");

    if (::g::Uno::Float4__op_Inequality(CaretColor(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[57/*Fuse.Visual.Set<float4>*/], uCRef<int32_t>(128), uCRef(value), uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)));
        OnCaretColorChanged();
    }
}

// public Fuse.Controls.TextInputHint get_InputHint() [instance] :87
int32_t TextEdit::InputHint()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_InputHint()");
    int32_t ret6;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[81/*Fuse.Visual.Get<Fuse.Controls.TextInputHint>*/], uCRef<int32_t>(8), uCRef<int32_t>(0), &ret6), ret6);
}

// public void set_InputHint(Fuse.Controls.TextInputHint value) [instance] :88
void TextEdit::InputHint(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_InputHint(Fuse.Controls.TextInputHint)");

    if (InputHint() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[82/*Fuse.Visual.Set<Fuse.Controls.TextInputHint>*/], uCRef<int32_t>(8), uCRef<int32_t>(value), uCRef<int32_t>(0));
        OnInputHintChanged();
    }
}

// public bool get_IsPassword() [instance] :49
bool TextEdit::IsPassword()
{
    return HasBit1(4096);
}

// public void set_IsPassword(bool value) [instance] :50
void TextEdit::IsPassword(bool value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_IsPassword(bool)");

    if (IsPassword() != value)
    {
        SetBit3(4096, value);
        OnIsPasswordChanged();
    }
}

// public bool get_IsReadOnly() [instance] :69
bool TextEdit::IsReadOnly()
{
    return HasBit1(8192);
}

// public void set_IsReadOnly(bool value) [instance] :70
void TextEdit::IsReadOnly(bool value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_IsReadOnly(bool)");

    if (IsReadOnly() != value)
    {
        SetBit3(8192, value);
        OnIsReadOnlyChanged();
    }
}

// internal bool OnAction(Fuse.Controls.TextInputActionType type) [instance] :247
bool TextEdit::OnAction(int32_t type)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnAction(Fuse.Controls.TextInputActionType)");

    if (::g::Uno::Delegate::op_Inequality(ActionTriggered1, NULL))
    {
        ::g::Fuse::Controls::TextInputActionArgs* args = ::g::Fuse::Controls::TextInputActionArgs::New3(this, type);
        uPtr(ActionTriggered1)->Invoke(2, this, args);
        return true;
    }

    if (ActionStyle() == 2)
        ::g::Fuse::Input::Focus::Move(1);

    return true;
}

// public float4 get_PlaceholderColor() [instance] :216
::g::Uno::Float4 TextEdit::PlaceholderColor()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_PlaceholderColor()");
    ::g::Uno::Float4 ret7;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[58/*Fuse.Visual.Get<float4>*/], uCRef<int32_t>(32), uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)), &ret7), ret7);
}

// public void set_PlaceholderColor(float4 value) [instance] :217
void TextEdit::PlaceholderColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_PlaceholderColor(float4)");

    if (::g::Uno::Float4__op_Inequality(PlaceholderColor(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[57/*Fuse.Visual.Set<float4>*/], uCRef<int32_t>(32), uCRef(value), uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)));
        OnPlaceholderColorChanged();
    }
}

// public string get_PlaceholderText() [instance] :197
uString* TextEdit::PlaceholderText()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_PlaceholderText()");
    uString* ret8;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[83/*Fuse.Visual.Get<string>*/], uCRef<int32_t>(16), ::STRINGS[19/*""*/], &ret8), ret8);
}

// public void set_PlaceholderText(string value) [instance] :198
void TextEdit::PlaceholderText(uString* value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_PlaceholderText(string)");

    if (::g::Uno::String::op_Inequality(PlaceholderText(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[84/*Fuse.Visual.Set<string>*/], uCRef<int32_t>(16), (value != NULL) ? value : (uString*)::g::Uno::String::Empty(), ::STRINGS[19/*""*/]);
        OnPlaceholderTextChanged();
    }
}

// public float4 get_SelectionColor() [instance] :124
::g::Uno::Float4 TextEdit::SelectionColor()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_SelectionColor()");
    ::g::Uno::Float4 ret9;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[58/*Fuse.Visual.Get<float4>*/], uCRef<int32_t>(256), uCRef(::g::Uno::Float4__New2(0.6f, 0.8f, 1.0f, 0.5f)), &ret9), ret9);
}

// public void set_SelectionColor(float4 value) [instance] :125
void TextEdit::SelectionColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_SelectionColor(float4)");

    if (::g::Uno::Float4__op_Inequality(SelectionColor(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[57/*Fuse.Visual.Set<float4>*/], uCRef<int32_t>(256), uCRef(value), uCRef(::g::Uno::Float4__New2(0.6f, 0.8f, 1.0f, 0.5f)));
        OnSelectionColorChanged();
    }
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\MobileTextEdit.uno
// ------------------------------------------------------------------------------------------------------------------

// internal sealed extern class TextEditRenderer :219
// {
// static generated TextEditRenderer() :219
static void TextEditRenderer__cctor__fn(uType* __type)
{
    TextEditRenderer::Instance_ = TextEditRenderer::New1();
}

static void TextEditRenderer_build(uType* type)
{
    type->SetFields(0,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(TextEditRenderer, _renderView), 0,
        type, (uintptr_t)&TextEditRenderer::Instance_, uFieldFlagsStatic);
}

uType* TextEditRenderer_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.ObjectSize = sizeof(TextEditRenderer);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.TextEditRenderer", options);
    type->fp_build_ = TextEditRenderer_build;
    type->fp_ctor_ = (void*)TextEditRenderer__New1_fn;
    type->fp_cctor_ = TextEditRenderer__cctor__fn;
    return type;
}

// private TextEditRenderer() :280
void TextEditRenderer__ctor__fn(TextEditRenderer* __this)
{
    __this->ctor_();
}

// private static void CopyState(Java.Object sourceHandle, Java.Object targetHandle, bool updateTextAlignment, bool isMultiline, int width, int height) :301
void TextEditRenderer__CopyState_fn(::g::Java::Object* sourceHandle, ::g::Java::Object* targetHandle, bool* updateTextAlignment, bool* isMultiline, int32_t* width, int32_t* height)
{
    TextEditRenderer::CopyState(sourceHandle, targetHandle, *updateTextAlignment, *isMultiline, *width, *height);
}

// private static Java.Object CreateTextEdit() :368
void TextEditRenderer__CreateTextEdit_fn(::g::Java::Object** __retval)
{
    *__retval = TextEditRenderer::CreateTextEdit();
}

// private void Draw(Fuse.Controls.Native.IViewHandleRenderer renderer, Fuse.Controls.Native.ViewHandle viewHandle, float4x4 localToClipTransform, float2 position, float2 size, float density, bool updateTextAlignment, bool isMultiline) :285
void TextEditRenderer__Draw_fn(TextEditRenderer* __this, uObject* renderer, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, ::g::Uno::Float4x4* localToClipTransform, ::g::Uno::Float2* position, ::g::Uno::Float2* size, float* density, bool* updateTextAlignment, bool* isMultiline)
{
    __this->Draw(renderer, viewHandle, *localToClipTransform, *position, *size, *density, *updateTextAlignment, *isMultiline);
}

// private TextEditRenderer New() :280
void TextEditRenderer__New1_fn(TextEditRenderer** __retval)
{
    *__retval = TextEditRenderer::New1();
}

// public static Fuse.Controls.Native.IViewHandleRenderer NewRenderer(Fuse.Controls.TextEdit textEdit, bool isMultiline) :221
void TextEditRenderer__NewRenderer_fn(::g::Fuse::Controls::TextEdit* textEdit, bool* isMultiline, uObject** __retval)
{
    *__retval = TextEditRenderer::NewRenderer(textEdit, *isMultiline);
}

uSStrong<TextEditRenderer*> TextEditRenderer::Instance_;

// private TextEditRenderer() [instance] :280
void TextEditRenderer::ctor_()
{
    _renderView = ::g::Fuse::Controls::Native::ViewHandle::New1(TextEditRenderer::CreateTextEdit());
}

// private void Draw(Fuse.Controls.Native.IViewHandleRenderer renderer, Fuse.Controls.Native.ViewHandle viewHandle, float4x4 localToClipTransform, float2 position, float2 size, float density, bool updateTextAlignment, bool isMultiline) [instance] :285
void TextEditRenderer::Draw(uObject* renderer, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, ::g::Uno::Float4x4 localToClipTransform, ::g::Uno::Float2 position, ::g::Uno::Float2 size, float density, bool updateTextAlignment, bool isMultiline)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer", "Draw(Fuse.Controls.Native.IViewHandleRenderer,Fuse.Controls.Native.ViewHandle,float4x4,float2,float2,float,bool,bool)");
    ::g::Uno::Int2 pixelSize = ::g::Uno::Int2__op_Explicit1(::g::Uno::Math::Ceil2(::g::Uno::Float2__op_Multiply1(size, density)));
    TextEditRenderer::CopyState(uPtr(viewHandle)->NativeHandle, uPtr(_renderView)->NativeHandle, updateTextAlignment, isMultiline, pixelSize.X, pixelSize.Y);
    ::g::Fuse::Controls::Native::IViewHandleRenderer::Draw(uInterface(uPtr(renderer), ::TYPES[67/*Fuse.Controls.Native.IViewHandleRenderer*/]), _renderView, localToClipTransform, position, size, density);
}

// private static void CopyState(Java.Object sourceHandle, Java.Object targetHandle, bool updateTextAlignment, bool isMultiline, int width, int height) [static] :301
void TextEditRenderer::CopyState(::g::Java::Object* sourceHandle, ::g::Java::Object* targetHandle, bool updateTextAlignment, bool isMultiline, int32_t width, int32_t height)
{
    TextEditRenderer_typeof()->Init();
    {
        INIT_JNI;
        jclass __cls = JniHelper::GetNativeExternClass();
        WITH_STATIC_JAVA_METHOD(__mtd, __cls, "CopyState287", "(Ljava/lang/Object;Ljava/lang/Object;ZZII)V");
        ::g::Java::Object* _usourceHandle=sourceHandle;
        jobject _sourceHandle = (_usourceHandle==NULL ? NULL : U_JNIVAR->NewLocalRef(::g::Android::Base::Wrappers::IJWrapper::_GetJavaObject(uInterface((uObject*)_usourceHandle, ::g::Android::Base::Wrappers::IJWrapper_typeof()))));
        ::g::Java::Object* _utargetHandle=targetHandle;
        jobject _targetHandle = (_utargetHandle==NULL ? NULL : U_JNIVAR->NewLocalRef(::g::Android::Base::Wrappers::IJWrapper::_GetJavaObject(uInterface((uObject*)_utargetHandle, ::g::Android::Base::Wrappers::IJWrapper_typeof()))));
        bool _uupdateTextAlignment=updateTextAlignment;
        jboolean _updateTextAlignment = (jboolean)_uupdateTextAlignment;
        bool _uisMultiline=isMultiline;
        jboolean _isMultiline = (jboolean)_uisMultiline;
        int32_t _uwidth=width;
        jint _width = (jint)_uwidth;
        int32_t _uheight=height;
        jint _height = (jint)_uheight;
        U_JNIVAR->CallStaticVoidMethod(__cls,__mtd,_sourceHandle,_targetHandle,_updateTextAlignment,_isMultiline,_width,_height);
        
        if (_sourceHandle!=NULL) { U_JNIVAR->DeleteLocalRef(_sourceHandle); }
        if (_targetHandle!=NULL) { U_JNIVAR->DeleteLocalRef(_targetHandle); }
        
        
        
        
        ::g::Android::Base::JNI::CheckException();
        
    }
    
}

// private static Java.Object CreateTextEdit() [static] :368
::g::Java::Object* TextEditRenderer::CreateTextEdit()
{
    TextEditRenderer_typeof()->Init();
    {
        INIT_JNI;
        jclass __cls = JniHelper::GetNativeExternClass();
        WITH_STATIC_JAVA_METHOD(__mtd, __cls, "CreateTextEdit288", "()Ljava/lang/Object;");
        jobject __jresult = U_JNIVAR->CallStaticObjectMethod(__cls,__mtd);
        ::g::Java::Object* __result = (::g::Java::Object*)::g::Android::Base::Wrappers::JavaObjectHelper::JObjectToJWrapper(__jresult, false);
        ::g::Android::Base::JNI::CheckException();
        return __result;
    }
    
}

// private TextEditRenderer New() [static] :280
TextEditRenderer* TextEditRenderer::New1()
{
    TextEditRenderer* obj1 = (TextEditRenderer*)uNew(TextEditRenderer_typeof());
    obj1->ctor_();
    return obj1;
}

// public static Fuse.Controls.Native.IViewHandleRenderer NewRenderer(Fuse.Controls.TextEdit textEdit, bool isMultiline) [static] :221
uObject* TextEditRenderer::NewRenderer(::g::Fuse::Controls::TextEdit* textEdit, bool isMultiline)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer", "NewRenderer(Fuse.Controls.TextEdit,bool)");
    TextEditRenderer_typeof()->Init();
    return (uObject*)TextEditRenderer__Renderer::New1(textEdit, isMultiline);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextInput.uno
// -------------------------------------------------------------------------------------------------------------

// public class TextInput :98
// {
static void TextInput_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInput_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(TextInput_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(TextInput_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(TextInput_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInput_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInput_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInput_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(TextInput_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(TextInput_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(TextInput_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInput_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInput_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(TextInput_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(TextInput_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(TextInput_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(TextInput_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(TextInput_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextInput_type, interface17),
        ::g::Fuse::Controls::ITextEditControl_typeof(), offsetof(TextInput_type, interface18));
    type->SetFields(112);
    type->Reflection.SetFunctions(13,
        new uFunction("get_ActionStyle", NULL, (void*)TextInput__get_ActionStyle_fn, 0, false, ::g::Fuse::Controls::TextInputActionStyle_typeof(), 0),
        new uFunction("set_ActionStyle", NULL, (void*)TextInput__set_ActionStyle_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionStyle_typeof()),
        new uFunction("add_ActionTriggered", NULL, (void*)TextInput__add_ActionTriggered_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionHandler_typeof()),
        new uFunction("remove_ActionTriggered", NULL, (void*)TextInput__remove_ActionTriggered_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionHandler_typeof()),
        new uFunction("get_EditorAlignment", NULL, (void*)TextInput__get_EditorAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_EditorAlignment", NULL, (void*)TextInput__set_EditorAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_IsPassword", NULL, (void*)TextInput__get_IsPassword_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsPassword", NULL, (void*)TextInput__set_IsPassword_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)TextInput__New3_fn, 0, true, type, 0),
        new uFunction("get_PlaceholderColor", NULL, (void*)TextInput__get_PlaceholderColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_PlaceholderColor", NULL, (void*)TextInput__set_PlaceholderColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_PlaceholderText", NULL, (void*)TextInput__get_PlaceholderText_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_PlaceholderText", NULL, (void*)TextInput__set_PlaceholderText_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

TextInput_type* TextInput_typeof()
{
    static uSStrong<TextInput_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextInputControl_typeof();
    options.FieldCount = 112;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(TextInput);
    options.TypeSize = sizeof(TextInput_type);
    type = (TextInput_type*)uClassType::New("Fuse.Controls.TextInput", options);
    type->fp_build_ = TextInput_build;
    type->fp_ctor_ = (void*)TextInput__New3_fn;
    type->interface18.fp_get_IsPassword = (void(*)(uObject*, bool*))TextInput__get_IsPassword_fn;
    type->interface18.fp_set_IsPassword = (void(*)(uObject*, bool*))TextInput__set_IsPassword_fn;
    type->interface18.fp_add_ActionTriggered = (void(*)(uObject*, uDelegate*))TextInput__add_ActionTriggered_fn;
    type->interface18.fp_remove_ActionTriggered = (void(*)(uObject*, uDelegate*))TextInput__remove_ActionTriggered_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextInputControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextInputControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::TextInputControl__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TextInput() :100
void TextInput__ctor_7_fn(TextInput* __this)
{
    __this->ctor_7();
}

// public Fuse.Controls.TextInputActionStyle get_ActionStyle() :140
void TextInput__get_ActionStyle_fn(TextInput* __this, int32_t* __retval)
{
    *__retval = __this->ActionStyle();
}

// public void set_ActionStyle(Fuse.Controls.TextInputActionStyle value) :140
void TextInput__set_ActionStyle_fn(TextInput* __this, int32_t* value)
{
    __this->ActionStyle(*value);
}

// public void add_ActionTriggered(Fuse.Controls.TextInputActionHandler value) :131
void TextInput__add_ActionTriggered_fn(TextInput* __this, uDelegate* value)
{
    __this->add_ActionTriggered(value);
}

// public void remove_ActionTriggered(Fuse.Controls.TextInputActionHandler value) :132
void TextInput__remove_ActionTriggered_fn(TextInput* __this, uDelegate* value)
{
    __this->remove_ActionTriggered(value);
}

// private static Fuse.Controls.TextEdit Create() :105
void TextInput__Create_fn(::g::Fuse::Controls::TextEdit** __retval)
{
    *__retval = TextInput::Create();
}

// public Fuse.Elements.Alignment get_EditorAlignment() :116
void TextInput__get_EditorAlignment_fn(TextInput* __this, int32_t* __retval)
{
    *__retval = __this->EditorAlignment();
}

// public void set_EditorAlignment(Fuse.Elements.Alignment value) :116
void TextInput__set_EditorAlignment_fn(TextInput* __this, int32_t* value)
{
    __this->EditorAlignment(*value);
}

// public bool get_IsPassword() :113
void TextInput__get_IsPassword_fn(TextInput* __this, bool* __retval)
{
    *__retval = __this->IsPassword();
}

// public void set_IsPassword(bool value) :113
void TextInput__set_IsPassword_fn(TextInput* __this, bool* value)
{
    __this->IsPassword(*value);
}

// public TextInput New() :100
void TextInput__New3_fn(TextInput** __retval)
{
    *__retval = TextInput::New3();
}

// public float4 get_PlaceholderColor() :124
void TextInput__get_PlaceholderColor_fn(TextInput* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->PlaceholderColor();
}

// public void set_PlaceholderColor(float4 value) :124
void TextInput__set_PlaceholderColor_fn(TextInput* __this, ::g::Uno::Float4* value)
{
    __this->PlaceholderColor(*value);
}

// public string get_PlaceholderText() :120
void TextInput__get_PlaceholderText_fn(TextInput* __this, uString** __retval)
{
    *__retval = __this->PlaceholderText();
}

// public void set_PlaceholderText(string value) :120
void TextInput__set_PlaceholderText_fn(TextInput* __this, uString* value)
{
    __this->PlaceholderText(value);
}

// public TextInput() [instance] :100
void TextInput::ctor_7()
{
    uStackFrame __("Fuse.Controls.TextInput", ".ctor()");
    ctor_6(TextInput::Create());
    uPtr(Editor())->Alignment(8);
}

// public Fuse.Controls.TextInputActionStyle get_ActionStyle() [instance] :140
int32_t TextInput::ActionStyle()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_ActionStyle()");
    return uPtr(Editor())->ActionStyle();
}

// public void set_ActionStyle(Fuse.Controls.TextInputActionStyle value) [instance] :140
void TextInput::ActionStyle(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_ActionStyle(Fuse.Controls.TextInputActionStyle)");
    uPtr(Editor())->ActionStyle(value);
}

// public void add_ActionTriggered(Fuse.Controls.TextInputActionHandler value) [instance] :131
void TextInput::add_ActionTriggered(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextInput", "add_ActionTriggered(Fuse.Controls.TextInputActionHandler)");
    uPtr(Editor())->add_ActionTriggered(value);
}

// public void remove_ActionTriggered(Fuse.Controls.TextInputActionHandler value) [instance] :132
void TextInput::remove_ActionTriggered(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextInput", "remove_ActionTriggered(Fuse.Controls.TextInputActionHandler)");
    uPtr(Editor())->remove_ActionTriggered(value);
}

// public Fuse.Elements.Alignment get_EditorAlignment() [instance] :116
int32_t TextInput::EditorAlignment()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_EditorAlignment()");
    return uPtr(Editor())->Alignment();
}

// public void set_EditorAlignment(Fuse.Elements.Alignment value) [instance] :116
void TextInput::EditorAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_EditorAlignment(Fuse.Elements.Alignment)");
    uPtr(Editor())->Alignment(value);
}

// public bool get_IsPassword() [instance] :113
bool TextInput::IsPassword()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_IsPassword()");
    return uPtr(Editor())->IsPassword();
}

// public void set_IsPassword(bool value) [instance] :113
void TextInput::IsPassword(bool value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_IsPassword(bool)");
    uPtr(Editor())->IsPassword(value);
}

// public float4 get_PlaceholderColor() [instance] :124
::g::Uno::Float4 TextInput::PlaceholderColor()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_PlaceholderColor()");
    return uPtr(Editor())->PlaceholderColor();
}

// public void set_PlaceholderColor(float4 value) [instance] :124
void TextInput::PlaceholderColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_PlaceholderColor(float4)");
    uPtr(Editor())->PlaceholderColor(value);
}

// public string get_PlaceholderText() [instance] :120
uString* TextInput::PlaceholderText()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_PlaceholderText()");
    return uPtr(Editor())->PlaceholderText();
}

// public void set_PlaceholderText(string value) [instance] :120
void TextInput::PlaceholderText(uString* value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_PlaceholderText(string)");
    uPtr(Editor())->PlaceholderText(value);
}

// private static Fuse.Controls.TextEdit Create() [static] :105
::g::Fuse::Controls::TextEdit* TextInput::Create()
{
    uStackFrame __("Fuse.Controls.TextInput", "Create()");
    return ::g::Fuse::Controls::MobileTextEdit::New3(false);
}

// public TextInput New() [static] :100
TextInput* TextInput::New3()
{
    TextInput* obj1 = (TextInput*)uNew(TextInput_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextInputControl.uno
// --------------------------------------------------------------------------------------------------------------------

// public sealed class TextInputActionArgs :10
// {
static void TextInputActionArgs_build(uType* type)
{
    type->SetInterfaces(
        ::g::Fuse::Scripting::IScriptEvent_typeof(), offsetof(::g::Fuse::VisualEventArgs_type, interface0));
    type->SetFields(2,
        ::g::Fuse::Controls::TextInputActionType_typeof(), offsetof(TextInputActionArgs, _Type), 0);
    type->Reflection.SetFunctions(2,
        new uFunction(".ctor", NULL, (void*)TextInputActionArgs__New3_fn, 0, true, type, 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Controls::TextInputActionType_typeof()),
        new uFunction("get_Type", NULL, (void*)TextInputActionArgs__get_Type_fn, 0, false, ::g::Fuse::Controls::TextInputActionType_typeof(), 0));
}

::g::Fuse::VisualEventArgs_type* TextInputActionArgs_typeof()
{
    static uSStrong< ::g::Fuse::VisualEventArgs_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::VisualEventArgs_typeof();
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(TextInputActionArgs);
    options.TypeSize = sizeof(::g::Fuse::VisualEventArgs_type);
    type = (::g::Fuse::VisualEventArgs_type*)uClassType::New("Fuse.Controls.TextInputActionArgs", options);
    type->fp_build_ = TextInputActionArgs_build;
    type->interface0.fp_Serialize = (void(*)(uObject*, uObject*))::g::Fuse::VisualEventArgs__FuseScriptingIScriptEventSerialize_fn;
    return type;
}

// public TextInputActionArgs(Fuse.Visual visual, Fuse.Controls.TextInputActionType type) :14
void TextInputActionArgs__ctor_2_fn(TextInputActionArgs* __this, ::g::Fuse::Visual* visual, int32_t* type)
{
    __this->ctor_2(visual, *type);
}

// public TextInputActionArgs New(Fuse.Visual visual, Fuse.Controls.TextInputActionType type) :14
void TextInputActionArgs__New3_fn(::g::Fuse::Visual* visual, int32_t* type, TextInputActionArgs** __retval)
{
    *__retval = TextInputActionArgs::New3(visual, *type);
}

// public generated Fuse.Controls.TextInputActionType get_Type() :12
void TextInputActionArgs__get_Type_fn(TextInputActionArgs* __this, int32_t* __retval)
{
    *__retval = __this->Type();
}

// private generated void set_Type(Fuse.Controls.TextInputActionType value) :12
void TextInputActionArgs__set_Type_fn(TextInputActionArgs* __this, int32_t* value)
{
    __this->Type(*value);
}

// public TextInputActionArgs(Fuse.Visual visual, Fuse.Controls.TextInputActionType type) [instance] :14
void TextInputActionArgs::ctor_2(::g::Fuse::Visual* visual, int32_t type)
{
    uStackFrame __("Fuse.Controls.TextInputActionArgs", ".ctor(Fuse.Visual,Fuse.Controls.TextInputActionType)");
    ctor_1(visual);
    Type(type);
}

// public generated Fuse.Controls.TextInputActionType get_Type() [instance] :12
int32_t TextInputActionArgs::Type()
{
    return _Type;
}

// private generated void set_Type(Fuse.Controls.TextInputActionType value) [instance] :12
void TextInputActionArgs::Type(int32_t value)
{
    _Type = value;
}

// public TextInputActionArgs New(Fuse.Visual visual, Fuse.Controls.TextInputActionType type) [static] :14
TextInputActionArgs* TextInputActionArgs::New3(::g::Fuse::Visual* visual, int32_t type)
{
    TextInputActionArgs* obj1 = (TextInputActionArgs*)uNew(TextInputActionArgs_typeof());
    obj1->ctor_2(visual, type);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextInputControl.uno
// --------------------------------------------------------------------------------------------------------------------

// public delegate void TextInputActionHandler(object sender, Fuse.Controls.TextInputActionArgs args) :21
uDelegateType* TextInputActionHandler_typeof()
{
    static uSStrong<uDelegateType*> type;
    if (type != NULL) return type;

    type = uDelegateType::New("Fuse.Controls.TextInputActionHandler", 2, 0);
    type->SetSignature(uVoid_typeof(),
        uObject_typeof(),
        ::g::Fuse::Controls::TextInputActionArgs_typeof());
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\TextEnums.uno
// --------------------------------------------------------------------------------------------

// public enum TextInputActionStyle :22
uEnumType* TextInputActionStyle_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextInputActionStyle", ::g::Uno::Int_typeof(), 6);
    type->SetLiterals(
        "Default", 0LL,
        "Done", 1LL,
        "Next", 2LL,
        "Go", 3LL,
        "Search", 4LL,
        "Send", 5LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\TextEnums.uno
// --------------------------------------------------------------------------------------------

// public enum TextInputActionType :17
uEnumType* TextInputActionType_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextInputActionType", ::g::Uno::Int_typeof(), 1);
    type->SetLiterals(
        "Primary", 0LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextInputControl.uno
// --------------------------------------------------------------------------------------------------------------------

// public abstract class TextInputControl :26
// {
static void TextInputControl_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::TYPES[88] = ::g::Fuse::Input::FocusDelegator_typeof();
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[89] = ::g::Fuse::Gestures::TappedHandler_typeof();
    type->SetDependencies(
        ::g::Fuse::Input::Focus_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInputControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(TextInputControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(TextInputControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(TextInputControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInputControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInputControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInputControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(TextInputControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(TextInputControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(TextInputControl_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(TextInputControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInputControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(TextInputControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(TextInputControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(TextInputControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(TextInputControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(TextInputControl_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextInputControl_type, interface17));
    type->SetFields(110,
        ::g::Fuse::Controls::TextEdit_typeof(), offsetof(TextInputControl, _editor), 0,
        ::g::Fuse::Gestures::Tapped_typeof(), offsetof(TextInputControl, _tapped), 0);
    type->Reflection.SetFunctions(33,
        new uFunction("get_AutoCapitalizationHint", NULL, (void*)TextInputControl__get_AutoCapitalizationHint_fn, 0, false, ::g::Fuse::Controls::AutoCapitalizationHint_typeof(), 0),
        new uFunction("set_AutoCapitalizationHint", NULL, (void*)TextInputControl__set_AutoCapitalizationHint_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::AutoCapitalizationHint_typeof()),
        new uFunction("get_AutoCorrectHint", NULL, (void*)TextInputControl__get_AutoCorrectHint_fn, 0, false, ::g::Fuse::Controls::AutoCorrectHint_typeof(), 0),
        new uFunction("set_AutoCorrectHint", NULL, (void*)TextInputControl__set_AutoCorrectHint_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::AutoCorrectHint_typeof()),
        new uFunction("get_CaretColor", NULL, (void*)TextInputControl__get_CaretColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_CaretColor", NULL, (void*)TextInputControl__set_CaretColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Font", NULL, (void*)TextInputControl__get_Font_fn, 0, false, ::g::Fuse::Font_typeof(), 0),
        new uFunction("set_Font", NULL, (void*)TextInputControl__set_Font_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Font_typeof()),
        new uFunction("get_FontSize", NULL, (void*)TextInputControl__get_FontSize_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_FontSize", NULL, (void*)TextInputControl__set_FontSize_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_InputHint", NULL, (void*)TextInputControl__get_InputHint_fn, 0, false, ::g::Fuse::Controls::TextInputHint_typeof(), 0),
        new uFunction("set_InputHint", NULL, (void*)TextInputControl__set_InputHint_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputHint_typeof()),
        new uFunction("get_IsReadOnly", NULL, (void*)TextInputControl__get_IsReadOnly_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsReadOnly", NULL, (void*)TextInputControl__set_IsReadOnly_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_LineSpacing", NULL, (void*)TextInputControl__get_LineSpacing_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_LineSpacing", NULL, (void*)TextInputControl__set_LineSpacing_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_MaxLength", NULL, (void*)TextInputControl__get_MaxLength_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_MaxLength", NULL, (void*)TextInputControl__set_MaxLength_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_SelectionColor", NULL, (void*)TextInputControl__get_SelectionColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_SelectionColor", NULL, (void*)TextInputControl__set_SelectionColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("SetValue", NULL, (void*)TextInputControl__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_TextAlignment", NULL, (void*)TextInputControl__get_TextAlignment_fn, 0, false, ::g::Fuse::Controls::TextAlignment_typeof(), 0),
        new uFunction("set_TextAlignment", NULL, (void*)TextInputControl__set_TextAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextAlignment_typeof()),
        new uFunction("get_TextColor", NULL, (void*)TextInputControl__get_TextColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_TextColor", NULL, (void*)TextInputControl__set_TextColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_TextTruncation", NULL, (void*)TextInputControl__get_TextTruncation_fn, 0, false, ::g::Fuse::Controls::TextTruncation_typeof(), 0),
        new uFunction("set_TextTruncation", NULL, (void*)TextInputControl__set_TextTruncation_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextTruncation_typeof()),
        new uFunction("get_TextWrapping", NULL, (void*)TextInputControl__get_TextWrapping_fn, 0, false, ::g::Fuse::Controls::TextWrapping_typeof(), 0),
        new uFunction("set_TextWrapping", NULL, (void*)TextInputControl__set_TextWrapping_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextWrapping_typeof()),
        new uFunction("get_Value", NULL, (void*)TextInputControl__get_Value_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)TextInputControl__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)TextInputControl__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::String_typeof(), NULL)),
        new uFunction("remove_ValueChanged", NULL, (void*)TextInputControl__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::String_typeof(), NULL)));
}

TextInputControl_type* TextInputControl_typeof()
{
    static uSStrong<TextInputControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 112;
    options.InterfaceCount = 18;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(TextInputControl);
    options.TypeSize = sizeof(TextInputControl_type);
    type = (TextInputControl_type*)uClassType::New("Fuse.Controls.TextInputControl", options);
    type->fp_build_ = TextInputControl_build;
    type->fp_OnPropertyChanged2 = (void(*)(::g::Fuse::Visual*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))TextInputControl__OnPropertyChanged2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))TextInputControl__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))TextInputControl__OnUnrooted_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))TextInputControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))TextInputControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))TextInputControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))TextInputControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))TextInputControl__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected internal TextInputControl(Fuse.Controls.TextEdit editor) :31
void TextInputControl__ctor_6_fn(TextInputControl* __this, ::g::Fuse::Controls::TextEdit* editor)
{
    __this->ctor_6(editor);
}

// public Fuse.Controls.AutoCapitalizationHint get_AutoCapitalizationHint() :150
void TextInputControl__get_AutoCapitalizationHint_fn(TextInputControl* __this, int32_t* __retval)
{
    *__retval = __this->AutoCapitalizationHint();
}

// public void set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint value) :150
void TextInputControl__set_AutoCapitalizationHint_fn(TextInputControl* __this, int32_t* value)
{
    __this->AutoCapitalizationHint(*value);
}

// public Fuse.Controls.AutoCorrectHint get_AutoCorrectHint() :146
void TextInputControl__get_AutoCorrectHint_fn(TextInputControl* __this, int32_t* __retval)
{
    *__retval = __this->AutoCorrectHint();
}

// public void set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint value) :146
void TextInputControl__set_AutoCorrectHint_fn(TextInputControl* __this, int32_t* value)
{
    __this->AutoCorrectHint(*value);
}

// public float4 get_CaretColor() :138
void TextInputControl__get_CaretColor_fn(TextInputControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->CaretColor();
}

// public void set_CaretColor(float4 value) :138
void TextInputControl__set_CaretColor_fn(TextInputControl* __this, ::g::Uno::Float4* value)
{
    __this->CaretColor(*value);
}

// protected internal Fuse.Controls.TextEdit get_Editor() :29
void TextInputControl__get_Editor_fn(TextInputControl* __this, ::g::Fuse::Controls::TextEdit** __retval)
{
    *__retval = __this->Editor();
}

// private Fuse.Visual FocusDelegator() :46
void TextInputControl__FocusDelegator_fn(TextInputControl* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->FocusDelegator();
}

// public Fuse.Font get_Font() :118
void TextInputControl__get_Font_fn(TextInputControl* __this, ::g::Fuse::Font** __retval)
{
    *__retval = __this->Font();
}

// public void set_Font(Fuse.Font value) :118
void TextInputControl__set_Font_fn(TextInputControl* __this, ::g::Fuse::Font* value)
{
    __this->Font(value);
}

// public float get_FontSize() :114
void TextInputControl__get_FontSize_fn(TextInputControl* __this, float* __retval)
{
    *__retval = __this->FontSize();
}

// public void set_FontSize(float value) :114
void TextInputControl__set_FontSize_fn(TextInputControl* __this, float* value)
{
    __this->FontSize(*value);
}

// public Fuse.Controls.TextInputHint get_InputHint() :134
void TextInputControl__get_InputHint_fn(TextInputControl* __this, int32_t* __retval)
{
    *__retval = __this->InputHint();
}

// public void set_InputHint(Fuse.Controls.TextInputHint value) :134
void TextInputControl__set_InputHint_fn(TextInputControl* __this, int32_t* value)
{
    __this->InputHint(*value);
}

// public bool get_IsReadOnly() :128
void TextInputControl__get_IsReadOnly_fn(TextInputControl* __this, bool* __retval)
{
    *__retval = __this->IsReadOnly();
}

// public void set_IsReadOnly(bool value) :128
void TextInputControl__set_IsReadOnly_fn(TextInputControl* __this, bool* value)
{
    __this->IsReadOnly(*value);
}

// public float get_LineSpacing() :110
void TextInputControl__get_LineSpacing_fn(TextInputControl* __this, float* __retval)
{
    *__retval = __this->LineSpacing();
}

// public void set_LineSpacing(float value) :110
void TextInputControl__set_LineSpacing_fn(TextInputControl* __this, float* value)
{
    __this->LineSpacing(*value);
}

// public int get_MaxLength() :102
void TextInputControl__get_MaxLength_fn(TextInputControl* __this, int32_t* __retval)
{
    *__retval = __this->MaxLength();
}

// public void set_MaxLength(int value) :102
void TextInputControl__set_MaxLength_fn(TextInputControl* __this, int32_t* value)
{
    __this->MaxLength(*value);
}

// public override sealed void OnPropertyChanged(Uno.UX.PropertyObject obj, Uno.UX.Selector prop) :69
void TextInputControl__OnPropertyChanged2_fn(TextInputControl* __this, ::g::Uno::UX::PropertyObject* obj, ::g::Uno::UX::Selector* prop)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector prop_ = *prop;
    ::g::Fuse::Controls::Control__OnPropertyChanged2_fn(__this, obj, uCRef(prop_));

    if (obj == __this->_editor)
        __this->OnPropertyChanged1(prop_, (uObject*)__this);
}

// protected override sealed void OnRooted() :53
void TextInputControl__OnRooted_fn(TextInputControl* __this)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
    uPtr(__this->_editor)->AddPropertyListener((uObject*)__this);
    uPtr(__this->_tapped)->add_Handler(uDelegate::New(::TYPES[89/*Fuse.Gestures.TappedHandler*/], (void*)TextInputControl__OnTapped_fn, __this));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_tapped);
}

// private void OnTapped(object sender, Uno.EventArgs args) :41
void TextInputControl__OnTapped_fn(TextInputControl* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnTapped(sender, args);
}

// protected override sealed void OnUnrooted() :61
void TextInputControl__OnUnrooted_fn(TextInputControl* __this)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "OnUnrooted()");
    bool ret1;
    uPtr(__this->_tapped)->remove_Handler(uDelegate::New(::TYPES[89/*Fuse.Gestures.TappedHandler*/], (void*)TextInputControl__OnTapped_fn, __this));
    ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_tapped, &ret1);
    uPtr(__this->_editor)->RemovePropertyListener((uObject*)__this);
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// public float4 get_SelectionColor() :142
void TextInputControl__get_SelectionColor_fn(TextInputControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->SelectionColor();
}

// public void set_SelectionColor(float4 value) :142
void TextInputControl__set_SelectionColor_fn(TextInputControl* __this, ::g::Uno::Float4* value)
{
    __this->SelectionColor(*value);
}

// public void SetValue(string v, Uno.UX.IPropertyListener origin) :84
void TextInputControl__SetValue_fn(TextInputControl* __this, uString* v, uObject* origin)
{
    __this->SetValue(v, origin);
}

// public Fuse.Controls.TextAlignment get_TextAlignment() :120
void TextInputControl__get_TextAlignment_fn(TextInputControl* __this, int32_t* __retval)
{
    *__retval = __this->TextAlignment();
}

// public void set_TextAlignment(Fuse.Controls.TextAlignment value) :120
void TextInputControl__set_TextAlignment_fn(TextInputControl* __this, int32_t* value)
{
    __this->TextAlignment(*value);
}

// public float4 get_TextColor() :122
void TextInputControl__get_TextColor_fn(TextInputControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->TextColor();
}

// public void set_TextColor(float4 value) :122
void TextInputControl__set_TextColor_fn(TextInputControl* __this, ::g::Uno::Float4* value)
{
    __this->TextColor(*value);
}

// public Fuse.Controls.TextTruncation get_TextTruncation() :124
void TextInputControl__get_TextTruncation_fn(TextInputControl* __this, int32_t* __retval)
{
    *__retval = __this->TextTruncation();
}

// public void set_TextTruncation(Fuse.Controls.TextTruncation value) :124
void TextInputControl__set_TextTruncation_fn(TextInputControl* __this, int32_t* value)
{
    __this->TextTruncation(*value);
}

// public Fuse.Controls.TextWrapping get_TextWrapping() :106
void TextInputControl__get_TextWrapping_fn(TextInputControl* __this, int32_t* __retval)
{
    *__retval = __this->TextWrapping();
}

// public void set_TextWrapping(Fuse.Controls.TextWrapping value) :106
void TextInputControl__set_TextWrapping_fn(TextInputControl* __this, int32_t* value)
{
    __this->TextWrapping(*value);
}

// public string get_Value() :80
void TextInputControl__get_Value_fn(TextInputControl* __this, uString** __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(string value) :81
void TextInputControl__set_Value_fn(TextInputControl* __this, uString* value)
{
    __this->Value(value);
}

// public void add_ValueChanged(Uno.UX.ValueChangedHandler<string> value) :96
void TextInputControl__add_ValueChanged_fn(TextInputControl* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public void remove_ValueChanged(Uno.UX.ValueChangedHandler<string> value) :97
void TextInputControl__remove_ValueChanged_fn(TextInputControl* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

// protected internal TextInputControl(Fuse.Controls.TextEdit editor) [instance] :31
void TextInputControl::ctor_6(::g::Fuse::Controls::TextEdit* editor)
{
    uStackFrame __("Fuse.Controls.TextInputControl", ".ctor(Fuse.Controls.TextEdit)");
    _tapped = ::g::Fuse::Gestures::Tapped::New2();
    ctor_5();
    ::g::Fuse::Input::Focus::SetIsFocusable(this, true);
    ::g::Fuse::Input::Focus::SetDelegator(this, uDelegate::New(::TYPES[88/*Fuse.Input.FocusDelegator*/], (void*)TextInputControl__FocusDelegator_fn, this));
    HitTestMode(6);
    _editor = editor;
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), _editor);
    Layout(::g::Fuse::Layouts::DockLayout::New2());
}

// public Fuse.Controls.AutoCapitalizationHint get_AutoCapitalizationHint() [instance] :150
int32_t TextInputControl::AutoCapitalizationHint()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_AutoCapitalizationHint()");
    return uPtr(_editor)->AutoCapitalizationHint();
}

// public void set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint value) [instance] :150
void TextInputControl::AutoCapitalizationHint(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint)");
    uPtr(_editor)->AutoCapitalizationHint(value);
}

// public Fuse.Controls.AutoCorrectHint get_AutoCorrectHint() [instance] :146
int32_t TextInputControl::AutoCorrectHint()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_AutoCorrectHint()");
    return uPtr(_editor)->AutoCorrectHint();
}

// public void set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint value) [instance] :146
void TextInputControl::AutoCorrectHint(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint)");
    uPtr(_editor)->AutoCorrectHint(value);
}

// public float4 get_CaretColor() [instance] :138
::g::Uno::Float4 TextInputControl::CaretColor()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_CaretColor()");
    return uPtr(_editor)->CaretColor();
}

// public void set_CaretColor(float4 value) [instance] :138
void TextInputControl::CaretColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_CaretColor(float4)");
    uPtr(_editor)->CaretColor(value);
}

// protected internal Fuse.Controls.TextEdit get_Editor() [instance] :29
::g::Fuse::Controls::TextEdit* TextInputControl::Editor()
{
    return _editor;
}

// private Fuse.Visual FocusDelegator() [instance] :46
::g::Fuse::Visual* TextInputControl::FocusDelegator()
{
    return _editor;
}

// public Fuse.Font get_Font() [instance] :118
::g::Fuse::Font* TextInputControl::Font()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_Font()");
    return uPtr(_editor)->Font();
}

// public void set_Font(Fuse.Font value) [instance] :118
void TextInputControl::Font(::g::Fuse::Font* value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_Font(Fuse.Font)");
    uPtr(_editor)->Font(value);
}

// public float get_FontSize() [instance] :114
float TextInputControl::FontSize()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_FontSize()");
    return uPtr(_editor)->FontSize();
}

// public void set_FontSize(float value) [instance] :114
void TextInputControl::FontSize(float value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_FontSize(float)");
    uPtr(_editor)->FontSize(value);
}

// public Fuse.Controls.TextInputHint get_InputHint() [instance] :134
int32_t TextInputControl::InputHint()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_InputHint()");
    return uPtr(_editor)->InputHint();
}

// public void set_InputHint(Fuse.Controls.TextInputHint value) [instance] :134
void TextInputControl::InputHint(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_InputHint(Fuse.Controls.TextInputHint)");
    uPtr(_editor)->InputHint(value);
}

// public bool get_IsReadOnly() [instance] :128
bool TextInputControl::IsReadOnly()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_IsReadOnly()");
    return uPtr(_editor)->IsReadOnly();
}

// public void set_IsReadOnly(bool value) [instance] :128
void TextInputControl::IsReadOnly(bool value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_IsReadOnly(bool)");
    uPtr(_editor)->IsReadOnly(value);
}

// public float get_LineSpacing() [instance] :110
float TextInputControl::LineSpacing()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_LineSpacing()");
    return uPtr(_editor)->LineSpacing();
}

// public void set_LineSpacing(float value) [instance] :110
void TextInputControl::LineSpacing(float value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_LineSpacing(float)");
    uPtr(_editor)->LineSpacing(value);
}

// public int get_MaxLength() [instance] :102
int32_t TextInputControl::MaxLength()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_MaxLength()");
    return uPtr(_editor)->MaxLength();
}

// public void set_MaxLength(int value) [instance] :102
void TextInputControl::MaxLength(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_MaxLength(int)");
    uPtr(_editor)->MaxLength(value);
}

// private void OnTapped(object sender, Uno.EventArgs args) [instance] :41
void TextInputControl::OnTapped(uObject* sender, ::g::Uno::EventArgs* args)
{
    ::g::Fuse::Input::Focus::GiveTo(this);
}

// public float4 get_SelectionColor() [instance] :142
::g::Uno::Float4 TextInputControl::SelectionColor()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_SelectionColor()");
    return uPtr(_editor)->SelectionColor();
}

// public void set_SelectionColor(float4 value) [instance] :142
void TextInputControl::SelectionColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_SelectionColor(float4)");
    uPtr(_editor)->SelectionColor(value);
}

// public void SetValue(string v, Uno.UX.IPropertyListener origin) [instance] :84
void TextInputControl::SetValue(uString* v, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "SetValue(string,Uno.UX.IPropertyListener)");
    uPtr(_editor)->SetValue(v, origin);

    if (origin == this)
        OnPropertyChanged1(::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]), (uObject*)this);
}

// public Fuse.Controls.TextAlignment get_TextAlignment() [instance] :120
int32_t TextInputControl::TextAlignment()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_TextAlignment()");
    return uPtr(_editor)->TextAlignment();
}

// public void set_TextAlignment(Fuse.Controls.TextAlignment value) [instance] :120
void TextInputControl::TextAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_TextAlignment(Fuse.Controls.TextAlignment)");
    uPtr(_editor)->TextAlignment(value);
}

// public float4 get_TextColor() [instance] :122
::g::Uno::Float4 TextInputControl::TextColor()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_TextColor()");
    return uPtr(_editor)->TextColor();
}

// public void set_TextColor(float4 value) [instance] :122
void TextInputControl::TextColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_TextColor(float4)");
    uPtr(_editor)->TextColor(value);
}

// public Fuse.Controls.TextTruncation get_TextTruncation() [instance] :124
int32_t TextInputControl::TextTruncation()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_TextTruncation()");
    return uPtr(_editor)->TextTruncation();
}

// public void set_TextTruncation(Fuse.Controls.TextTruncation value) [instance] :124
void TextInputControl::TextTruncation(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_TextTruncation(Fuse.Controls.TextTruncation)");
    uPtr(_editor)->TextTruncation(value);
}

// public Fuse.Controls.TextWrapping get_TextWrapping() [instance] :106
int32_t TextInputControl::TextWrapping()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_TextWrapping()");
    return uPtr(_editor)->TextWrapping();
}

// public void set_TextWrapping(Fuse.Controls.TextWrapping value) [instance] :106
void TextInputControl::TextWrapping(int32_t value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_TextWrapping(Fuse.Controls.TextWrapping)");
    uPtr(_editor)->TextWrapping(value);
}

// public string get_Value() [instance] :80
uString* TextInputControl::Value()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_Value()");
    return uPtr(_editor)->Value();
}

// public void set_Value(string value) [instance] :81
void TextInputControl::Value(uString* value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_Value(string)");
    SetValue(value, (uObject*)this);
}

// public void add_ValueChanged(Uno.UX.ValueChangedHandler<string> value) [instance] :96
void TextInputControl::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "add_ValueChanged(Uno.UX.ValueChangedHandler<string>)");
    uPtr(_editor)->add_ValueChanged(value);
}

// public void remove_ValueChanged(Uno.UX.ValueChangedHandler<string> value) [instance] :97
void TextInputControl::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "remove_ValueChanged(Uno.UX.ValueChangedHandler<string>)");
    uPtr(_editor)->remove_ValueChanged(value);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\TextEnums.uno
// --------------------------------------------------------------------------------------------

// public enum TextInputHint :32
uEnumType* TextInputHint_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextInputHint", ::g::Uno::Int_typeof(), 7);
    type->SetLiterals(
        "Default", 0LL,
        "Email", 1LL,
        "URL", 2LL,
        "Phone", 3LL,
        "Integer", 4LL,
        "Decimal", 5LL,
        "Number", 4LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\TextEnums.uno
// --------------------------------------------------------------------------------------------

// public enum TextTruncation :58
uEnumType* TextTruncation_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextTruncation", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Standard", 0LL,
        "None", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\TextControls\TextInput.uno
// -------------------------------------------------------------------------------------------------------------

// public sealed class TextView :160
// {
static void TextView_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface16),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface17));
    type->SetFields(112);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextView__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::TextInputControl_type* TextView_typeof()
{
    static uSStrong< ::g::Fuse::Controls::TextInputControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextInputControl_typeof();
    options.FieldCount = 112;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(TextView);
    options.TypeSize = sizeof(::g::Fuse::Controls::TextInputControl_type);
    type = (::g::Fuse::Controls::TextInputControl_type*)uClassType::New("Fuse.Controls.TextView", options);
    type->fp_build_ = TextView_build;
    type->fp_ctor_ = (void*)TextView__New3_fn;
    type->interface17.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextInputControl__get_Value_fn;
    type->interface17.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextInputControl__set_Value_fn;
    type->interface17.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__add_ValueChanged_fn;
    type->interface17.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__remove_ValueChanged_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::TextInputControl__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TextView() :162
void TextView__ctor_7_fn(TextView* __this)
{
    __this->ctor_7();
}

// private static Fuse.Controls.TextEdit Create() :166
void TextView__Create_fn(::g::Fuse::Controls::TextEdit** __retval)
{
    *__retval = TextView::Create();
}

// public TextView New() :162
void TextView__New3_fn(TextView** __retval)
{
    *__retval = TextView::New3();
}

// public TextView() [instance] :162
void TextView::ctor_7()
{
    uStackFrame __("Fuse.Controls.TextView", ".ctor()");
    ctor_6(TextView::Create());
}

// private static Fuse.Controls.TextEdit Create() [static] :166
::g::Fuse::Controls::TextEdit* TextView::Create()
{
    uStackFrame __("Fuse.Controls.TextView", "Create()");
    return ::g::Fuse::Controls::MobileTextEdit::New3(true);
}

// public TextView New() [static] :162
TextView* TextView::New3()
{
    TextView* obj1 = (TextView*)uNew(TextView_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Native\1.7.2\TextEnums.uno
// --------------------------------------------------------------------------------------------

// public enum TextWrapping :4
uEnumType* TextWrapping_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextWrapping", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "NoWrap", 0LL,
        "Wrap", 1LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.TimePicker\1.7.2\TimePicker.Docs.uno
// ------------------------------------------------------------------------------------------------------

// public partial sealed class TimePicker :57
// {
// static TimePicker() :80
static void TimePicker__cctor_5_fn(uType* __type)
{
    TimePicker::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(uString::Const("self"));
}

static void TimePicker_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(119,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TimePicker::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TimePicker__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Panel_type* TimePicker_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TimePickerBase_typeof();
    options.FieldCount = 120;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(TimePicker);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.TimePicker", options);
    type->fp_build_ = TimePicker_build;
    type->fp_ctor_ = (void*)TimePicker__New4_fn;
    type->fp_cctor_ = TimePicker__cctor_5_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TimePicker() :84
void TimePicker__ctor_8_fn(TimePicker* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :88
void TimePicker__InitializeUX_fn(TimePicker* __this)
{
    __this->InitializeUX();
}

// public TimePicker New() :84
void TimePicker__New4_fn(TimePicker** __retval)
{
    *__retval = TimePicker::New4();
}

::g::Uno::UX::Selector TimePicker::__selector0_;

// public TimePicker() [instance] :84
void TimePicker::ctor_8()
{
    uStackFrame __("Fuse.Controls.TimePicker", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :88
void TimePicker::InitializeUX()
{
    uStackFrame __("Fuse.Controls.TimePicker", "InitializeUX()");
    TimePicker__Template* GraphicsAppearance = TimePicker__Template::New2(this, this);
    TimePicker__Template1* iOSAppearance = TimePicker__Template1::New2(this, this);
    TimePicker__Template2* AndroidAppearance = TimePicker__Template2::New2(this, this);
    Name(TimePicker::__selector0_);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), GraphicsAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), iOSAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL)), AndroidAppearance);
}

// public TimePicker New() [static] :84
TimePicker* TimePicker::New4()
{
    TimePicker* obj1 = (TimePicker*)uNew(TimePicker_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.TimePicker\1.7.2\TimePicker.uno
// -------------------------------------------------------------------------------------------------

// public interfacemodifiers class TimePickerBase :23
// {
// static generated TimePickerBase() :23
static void TimePickerBase__cctor_4_fn(uType* __type)
{
    TimePickerBase::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    TimePickerBase::_is24HourViewName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[123/*"Is24HourView"*/]);
}

static void TimePickerBase_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[123] = uString::Const("Is24HourView");
    ::TYPES[90] = ::g::Fuse::Controls::ITimePickerView_typeof();
    type->SetDependencies(
        ::g::Uno::DateTime_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Uno::DateTime_typeof(), offsetof(TimePickerBase, _value), 0,
        ::g::Uno::Bool_typeof(), offsetof(TimePickerBase, _is24HourView), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TimePickerBase::_valueName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&TimePickerBase::_is24HourViewName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(6,
        new uFunction("get_Is24HourView", NULL, (void*)TimePickerBase__get_Is24HourView_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_Is24HourView", NULL, (void*)TimePickerBase__set_Is24HourView_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("SetIs24HourView", NULL, (void*)TimePickerBase__SetIs24HourView_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Bool_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetValue", NULL, (void*)TimePickerBase__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::DateTime_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Value", NULL, (void*)TimePickerBase__get_Value_fn, 0, false, ::g::Uno::DateTime_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)TimePickerBase__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::DateTime_typeof()));
}

::g::Fuse::Controls::Panel_type* TimePickerBase_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 121;
    options.InterfaceCount = 18;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(TimePickerBase);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.TimePickerBase", options);
    type->fp_build_ = TimePickerBase_build;
    type->fp_cctor_ = TimePickerBase__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))TimePickerBase__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))TimePickerBase__OnUnrooted_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected generated TimePickerBase() :23
void TimePickerBase__ctor_7_fn(TimePickerBase* __this)
{
    __this->ctor_7();
}

// public bool get_Is24HourView() :77
void TimePickerBase__get_Is24HourView_fn(TimePickerBase* __this, bool* __retval)
{
    *__retval = __this->Is24HourView();
}

// public void set_Is24HourView(bool value) :78
void TimePickerBase__set_Is24HourView_fn(TimePickerBase* __this, bool* value)
{
    __this->Is24HourView(*value);
}

// private void OnIs24HourViewChanged(Uno.UX.IPropertyListener origin) :94
void TimePickerBase__OnIs24HourViewChanged_fn(TimePickerBase* __this, uObject* origin)
{
    __this->OnIs24HourViewChanged(origin);
}

// internal void OnNativeViewValueChanged(Uno.DateTime newValue) :61
void TimePickerBase__OnNativeViewValueChanged_fn(TimePickerBase* __this, ::g::Uno::DateTime* newValue)
{
    __this->OnNativeViewValueChanged(*newValue);
}

// protected override sealed void OnRooted() :104
void TimePickerBase__OnRooted_fn(TimePickerBase* __this)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    uObject* tpv = __this->TimePickerView();

    if (tpv != NULL)
        ::g::Fuse::Controls::ITimePickerView::OnRooted(uInterface(uPtr(tpv), ::TYPES[90/*Fuse.Controls.ITimePickerView*/]));
}

// protected override sealed void OnUnrooted() :113
void TimePickerBase__OnUnrooted_fn(TimePickerBase* __this)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "OnUnrooted()");
    uObject* tpv = __this->TimePickerView();

    if (tpv != NULL)
        ::g::Fuse::Controls::ITimePickerView::OnUnrooted(uInterface(uPtr(tpv), ::TYPES[90/*Fuse.Controls.ITimePickerView*/]));

    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// private void OnValueChanged(Uno.UX.IPropertyListener origin) :56
void TimePickerBase__OnValueChanged_fn(TimePickerBase* __this, uObject* origin)
{
    __this->OnValueChanged(origin);
}

// public void SetIs24HourView(bool value, Uno.UX.IPropertyListener origin) :81
void TimePickerBase__SetIs24HourView_fn(TimePickerBase* __this, bool* value, uObject* origin)
{
    __this->SetIs24HourView(*value, origin);
}

// public void SetValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) :38
void TimePickerBase__SetValue_fn(TimePickerBase* __this, ::g::Uno::DateTime* value, uObject* origin)
{
    __this->SetValue(*value, origin);
}

// private Fuse.Controls.ITimePickerView get_TimePickerView() :101
void TimePickerBase__get_TimePickerView_fn(TimePickerBase* __this, uObject** __retval)
{
    *__retval = __this->TimePickerView();
}

// private void UpdateValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) :47
void TimePickerBase__UpdateValue_fn(TimePickerBase* __this, ::g::Uno::DateTime* value, uObject* origin)
{
    __this->UpdateValue(*value, origin);
}

// public Uno.DateTime get_Value() :34
void TimePickerBase__get_Value_fn(TimePickerBase* __this, ::g::Uno::DateTime* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(Uno.DateTime value) :35
void TimePickerBase__set_Value_fn(TimePickerBase* __this, ::g::Uno::DateTime* value)
{
    __this->Value(*value);
}

::g::Uno::UX::Selector TimePickerBase::_valueName_;
::g::Uno::UX::Selector TimePickerBase::_is24HourViewName_;

// protected generated TimePickerBase() [instance] :23
void TimePickerBase::ctor_7()
{
    uStackFrame __("Fuse.Controls.TimePickerBase", ".ctor()");
    _value = ::g::Uno::DateTime__UtcNow();
    ctor_6();
}

// public bool get_Is24HourView() [instance] :77
bool TimePickerBase::Is24HourView()
{
    return _is24HourView;
}

// public void set_Is24HourView(bool value) [instance] :78
void TimePickerBase::Is24HourView(bool value)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "set_Is24HourView(bool)");
    SetIs24HourView(value, (uObject*)this);
}

// private void OnIs24HourViewChanged(Uno.UX.IPropertyListener origin) [instance] :94
void TimePickerBase::OnIs24HourViewChanged(uObject* origin)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "OnIs24HourViewChanged(Uno.UX.IPropertyListener)");
    OnPropertyChanged1(TimePickerBase::_is24HourViewName_, origin);
}

// internal void OnNativeViewValueChanged(Uno.DateTime newValue) [instance] :61
void TimePickerBase::OnNativeViewValueChanged(::g::Uno::DateTime newValue)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "OnNativeViewValueChanged(Uno.DateTime)");
    UpdateValue(newValue, (uObject*)this);
}

// private void OnValueChanged(Uno.UX.IPropertyListener origin) [instance] :56
void TimePickerBase::OnValueChanged(uObject* origin)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "OnValueChanged(Uno.UX.IPropertyListener)");
    OnPropertyChanged1(TimePickerBase::_valueName_, origin);
}

// public void SetIs24HourView(bool value, Uno.UX.IPropertyListener origin) [instance] :81
void TimePickerBase::SetIs24HourView(bool value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "SetIs24HourView(bool,Uno.UX.IPropertyListener)");

    if (value != _is24HourView)
    {
        _is24HourView = value;
        OnIs24HourViewChanged(origin);
    }

    uObject* tpv = TimePickerView();

    if (tpv != NULL)
        ::g::Fuse::Controls::ITimePickerView::Is24HourView(uInterface(uPtr(tpv), ::TYPES[90/*Fuse.Controls.ITimePickerView*/]), value);
}

// public void SetValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) [instance] :38
void TimePickerBase::SetValue(::g::Uno::DateTime value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "SetValue(Uno.DateTime,Uno.UX.IPropertyListener)");
    UpdateValue(value, origin);
    uObject* tpv = TimePickerView();

    if (tpv != NULL)
        ::g::Fuse::Controls::ITimePickerView::Value(uInterface(uPtr(tpv), ::TYPES[90/*Fuse.Controls.ITimePickerView*/]), value);
}

// private Fuse.Controls.ITimePickerView get_TimePickerView() [instance] :101
uObject* TimePickerBase::TimePickerView()
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "get_TimePickerView()");
    return NativeView();
}

// private void UpdateValue(Uno.DateTime value, Uno.UX.IPropertyListener origin) [instance] :47
void TimePickerBase::UpdateValue(::g::Uno::DateTime value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "UpdateValue(Uno.DateTime,Uno.UX.IPropertyListener)");

    if (::g::Uno::DateTime__op_Inequality(value, _value))
    {
        _value = value;
        OnValueChanged(origin);
    }
}

// public Uno.DateTime get_Value() [instance] :34
::g::Uno::DateTime TimePickerBase::Value()
{
    return _value;
}

// public void set_Value(Uno.DateTime value) [instance] :35
void TimePickerBase::Value(::g::Uno::DateTime value)
{
    uStackFrame __("Fuse.Controls.TimePickerBase", "set_Value(Uno.DateTime)");
    SetValue(value, (uObject*)this);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Primitives\1.7.2\ToggleControls\ToggleControl.uno
// -------------------------------------------------------------------------------------------------------------------

// public class ToggleControl :35
// {
// static generated ToggleControl() :35
static void ToggleControl__cctor_4_fn(uType* __type)
{
    ToggleControl::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
}

static void ToggleControl_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::TYPES[91] = ::g::Fuse::Controls::Native::IToggleView_typeof();
    ::TYPES[92] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ToggleControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(ToggleControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(ToggleControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(ToggleControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ToggleControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ToggleControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ToggleControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(ToggleControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(ToggleControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(ToggleControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ToggleControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ToggleControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(ToggleControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(ToggleControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(ToggleControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(ToggleControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(ToggleControl_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(ToggleControl_type, interface17),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(ToggleControl_type, interface18),
        ::g::Fuse::Controls::Native::IToggleViewHost_typeof(), offsetof(ToggleControl_type, interface19),
        ::g::Fuse::Triggers::Actions::IToggleable_typeof(), offsetof(ToggleControl_type, interface20));
    type->SetFields(117,
        ::g::Uno::Bool_typeof(), offsetof(ToggleControl, _value), 0,
        ::TYPES[92/*Uno.UX.ValueChangedHandler<bool>*/], offsetof(ToggleControl, ValueChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&ToggleControl::_valueName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(7,
        new uFunction(".ctor", NULL, (void*)ToggleControl__New4_fn, 0, true, type, 0),
        new uFunction("SetValue", NULL, (void*)ToggleControl__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Bool_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("Toggle", NULL, (void*)ToggleControl__Toggle_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("get_Value", NULL, (void*)ToggleControl__get_Value_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)ToggleControl__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)ToggleControl__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[92/*Uno.UX.ValueChangedHandler<bool>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)ToggleControl__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[92/*Uno.UX.ValueChangedHandler<bool>*/]));
}

ToggleControl_type* ToggleControl_typeof()
{
    static uSStrong<ToggleControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 120;
    options.InterfaceCount = 21;
    options.ObjectSize = sizeof(ToggleControl);
    options.TypeSize = sizeof(ToggleControl_type);
    type = (ToggleControl_type*)uClassType::New("Fuse.Controls.ToggleControl", options);
    type->fp_build_ = ToggleControl_build;
    type->fp_ctor_ = (void*)ToggleControl__New4_fn;
    type->fp_cctor_ = ToggleControl__cctor_4_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))ToggleControl__PushPropertiesToNativeView_fn;
    type->interface19.fp_OnValueChanged = (void(*)(uObject*, bool*))ToggleControl__FuseControlsNativeIToggleViewHostOnValueChanged_fn;
    type->interface18.fp_get_Value = (void(*)(uObject*, uTRef))ToggleControl__get_Value_fn;
    type->interface18.fp_set_Value = (void(*)(uObject*, void*))ToggleControl__set_Value_fn;
    type->interface18.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))ToggleControl__add_ValueChanged_fn;
    type->interface18.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))ToggleControl__remove_ValueChanged_fn;
    type->interface20.fp_Toggle = (void(*)(uObject*))ToggleControl__Toggle_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated ToggleControl() :35
void ToggleControl__ctor_7_fn(ToggleControl* __this)
{
    __this->ctor_7();
}

// private void Fuse.Controls.Native.IToggleViewHost.OnValueChanged(bool newValue) :93
void ToggleControl__FuseControlsNativeIToggleViewHostOnValueChanged_fn(ToggleControl* __this, bool* newValue)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "Fuse.Controls.Native.IToggleViewHost.OnValueChanged(bool)");
    bool newValue_ = *newValue;
    __this->SetValue(newValue_, NULL);
}

// public generated ToggleControl New() :35
void ToggleControl__New4_fn(ToggleControl** __retval)
{
    *__retval = ToggleControl::New4();
}

// protected void OnValueChanged(bool value, Uno.UX.IPropertyListener origin) :87
void ToggleControl__OnValueChanged_fn(ToggleControl* __this, bool* value, uObject* origin)
{
    __this->OnValueChanged(*value, origin);
}

// protected override sealed void PushPropertiesToNativeView() :78
void ToggleControl__PushPropertiesToNativeView_fn(ToggleControl* __this)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "PushPropertiesToNativeView()");
    uObject* tv = __this->ToggleView();

    if (tv != NULL)
        ::g::Fuse::Controls::Native::IToggleView::Value(uInterface(uPtr(tv), ::TYPES[91/*Fuse.Controls.Native.IToggleView*/]), __this->Value());
}

// public void SetValue(bool value, Uno.UX.IPropertyListener origin) :54
void ToggleControl__SetValue_fn(ToggleControl* __this, bool* value, uObject* origin)
{
    __this->SetValue(*value, origin);
}

// public void Toggle() :73
void ToggleControl__Toggle_fn(ToggleControl* __this)
{
    __this->Toggle();
}

// private Fuse.Controls.Native.IToggleView get_ToggleView() :41
void ToggleControl__get_ToggleView_fn(ToggleControl* __this, uObject** __retval)
{
    *__retval = __this->ToggleView();
}

// public bool get_Value() :51
void ToggleControl__get_Value_fn(ToggleControl* __this, bool* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(bool value) :52
void ToggleControl__set_Value_fn(ToggleControl* __this, bool* value)
{
    __this->Value(*value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<bool> value) :98
void ToggleControl__add_ValueChanged_fn(ToggleControl* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<bool> value) :98
void ToggleControl__remove_ValueChanged_fn(ToggleControl* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

::g::Uno::UX::Selector ToggleControl::_valueName_;

// public generated ToggleControl() [instance] :35
void ToggleControl::ctor_7()
{
    ctor_6();
}

// protected void OnValueChanged(bool value, Uno.UX.IPropertyListener origin) [instance] :87
void ToggleControl::OnValueChanged(bool value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "OnValueChanged(bool,Uno.UX.IPropertyListener)");
    bool value_ = value;

    if (::g::Uno::Delegate::op_Inequality(ValueChanged1, NULL))
        uPtr(ValueChanged1)->Invoke(2, this, (::g::Fuse::Scripting::BoolChangedArgs*)::g::Fuse::Scripting::BoolChangedArgs::New3(value_));
}

// public void SetValue(bool value, Uno.UX.IPropertyListener origin) [instance] :54
void ToggleControl::SetValue(bool value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "SetValue(bool,Uno.UX.IPropertyListener)");

    if (_value != value)
    {
        _value = value;
        OnValueChanged(value, origin);
        OnPropertyChanged1(ToggleControl::_valueName_, origin);

        if (origin != NULL)
        {
            uObject* tv = ToggleView();

            if (tv != NULL)
                ::g::Fuse::Controls::Native::IToggleView::Value(uInterface(uPtr(tv), ::TYPES[91/*Fuse.Controls.Native.IToggleView*/]), value);
        }
    }
}

// public void Toggle() [instance] :73
void ToggleControl::Toggle()
{
    uStackFrame __("Fuse.Controls.ToggleControl", "Toggle()");
    Value(!Value());
}

// private Fuse.Controls.Native.IToggleView get_ToggleView() [instance] :41
uObject* ToggleControl::ToggleView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[91/*Fuse.Controls.Native.IToggleView*/]);
}

// public bool get_Value() [instance] :51
bool ToggleControl::Value()
{
    return _value;
}

// public void set_Value(bool value) [instance] :52
void ToggleControl::Value(bool value)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "set_Value(bool)");
    SetValue(value, (uObject*)this);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<bool> value) [instance] :98
void ToggleControl::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "add_ValueChanged(Uno.UX.ValueChangedHandler<bool>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[92/*Uno.UX.ValueChangedHandler<bool>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<bool> value) [instance] :98
void ToggleControl::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "remove_ValueChanged(Uno.UX.ValueChangedHandler<bool>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[92/*Uno.UX.ValueChangedHandler<bool>*/]);
}

// public generated ToggleControl New() [static] :35
ToggleControl* ToggleControl::New4()
{
    ToggleControl* obj1 = (ToggleControl*)uNew(ToggleControl_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\Backgrounds\TopFrameBackground.uno
// -----------------------------------------------------------------------------------------------------------------

// public class TopFrameBackground :28
// {
static void TopFrameBackground_build(uType* type)
{
    ::TYPES[2] = ::g::Uno::EventHandler1_typeof()->MakeType(::g::Fuse::Platform::SystemUIWillResizeEventArgs_typeof(), NULL);
    type->SetDependencies(
        ::g::Fuse::Platform::SystemUI_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface16));
    type->SetFields(108);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TopFrameBackground__New2_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* TopFrameBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 108;
    options.InterfaceCount = 17;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(TopFrameBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.TopFrameBackground", options);
    type->fp_build_ = TopFrameBackground_build;
    type->fp_ctor_ = (void*)TopFrameBackground__New2_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))TopFrameBackground__GetContentSize_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))TopFrameBackground__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))TopFrameBackground__OnUnrooted_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated TopFrameBackground() :28
void TopFrameBackground__ctor_5_fn(TopFrameBackground* __this)
{
    __this->ctor_5();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :50
void TopFrameBackground__GetContentSize_fn(TopFrameBackground* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.TopFrameBackground", "GetContentSize(Fuse.LayoutParams)");
    float pixelsPerPoint = 1.0f;

    if (::g::Fuse::AppBase::Current2() != NULL)
        pixelsPerPoint = uPtr(::g::Fuse::AppBase::Current2())->PixelsPerPoint();

    return *__retval = ::g::Uno::Float2__op_Division1(::g::Fuse::Platform::SystemUI::TopFrame().Size(), pixelsPerPoint), void();
    return *__retval = ::g::Uno::Float2__New2(0.0f, 0.0f), void();
}

// public generated TopFrameBackground New() :28
void TopFrameBackground__New2_fn(TopFrameBackground** __retval)
{
    *__retval = TopFrameBackground::New2();
}

// private extern void OnFrameResized(object sender, Fuse.Platform.SystemUIWillResizeEventArgs args) :45
void TopFrameBackground__OnFrameResized_fn(TopFrameBackground* __this, uObject* sender, ::g::Fuse::Platform::SystemUIWillResizeEventArgs* args)
{
    __this->OnFrameResized(sender, args);
}

// protected override sealed void OnRooted() :30
void TopFrameBackground__OnRooted_fn(TopFrameBackground* __this)
{
    uStackFrame __("Fuse.Controls.TopFrameBackground", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);
    ::g::Fuse::Platform::SystemUI::add_TopFrameWillResize(uDelegate::New(::TYPES[2/*Uno.EventHandler<Fuse.Platform.SystemUIWillResizeEventArgs>*/], (void*)TopFrameBackground__OnFrameResized_fn, __this));
}

// protected override sealed void OnUnrooted() :37
void TopFrameBackground__OnUnrooted_fn(TopFrameBackground* __this)
{
    uStackFrame __("Fuse.Controls.TopFrameBackground", "OnUnrooted()");
    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
    ::g::Fuse::Platform::SystemUI::remove_TopFrameWillResize(uDelegate::New(::TYPES[2/*Uno.EventHandler<Fuse.Platform.SystemUIWillResizeEventArgs>*/], (void*)TopFrameBackground__OnFrameResized_fn, __this));
}

// public generated TopFrameBackground() [instance] :28
void TopFrameBackground::ctor_5()
{
    ctor_4();
}

// private extern void OnFrameResized(object sender, Fuse.Platform.SystemUIWillResizeEventArgs args) [instance] :45
void TopFrameBackground::OnFrameResized(uObject* sender, ::g::Fuse::Platform::SystemUIWillResizeEventArgs* args)
{
    uStackFrame __("Fuse.Controls.TopFrameBackground", "OnFrameResized(object,Fuse.Platform.SystemUIWillResizeEventArgs)");
    InvalidateLayout(2);
}

// public generated TopFrameBackground New() [static] :28
TopFrameBackground* TopFrameBackground::New2()
{
    TopFrameBackground* obj1 = (TopFrameBackground*)uNew(TopFrameBackground_typeof());
    obj1->ctor_5();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\TreeRenderer.Android.uno
// -------------------------------------------------------------------------------------------------------

// internal sealed extern class TreeRenderer :13
// {
static void TreeRenderer_build(uType* type)
{
    type->SetDependencies(
        ::g::Fuse::Controls::Native::Android::InputDispatch_typeof());
    type->SetInterfaces(
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(TreeRenderer_type, interface0));
    type->SetFields(0,
        ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Controls::Native::ViewHandle_typeof(), NULL), offsetof(TreeRenderer, _setRoot), 0,
        ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Controls::Native::ViewHandle_typeof(), NULL), offsetof(TreeRenderer, _clearRoot), 0,
        ::g::Uno::Collections::Dictionary_typeof()->MakeType(::g::Fuse::Elements::Element_typeof(), ::g::Fuse::Controls::Native::ViewHandle_typeof(), NULL), offsetof(TreeRenderer, _elements), 0);
}

TreeRenderer_type* TreeRenderer_typeof()
{
    static uSStrong<TreeRenderer_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(TreeRenderer);
    options.TypeSize = sizeof(TreeRenderer_type);
    type = (TreeRenderer_type*)uClassType::New("Fuse.Controls.TreeRenderer", options);
    type->fp_build_ = TreeRenderer_build;
    type->interface0.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererRootingStarted_fn;
    type->interface0.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererRooted_fn;
    type->interface0.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererUnrooted_fn;
    type->interface0.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))TreeRenderer__FuseElementsITreeRendererBackgroundChanged_fn;
    type->interface0.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererTransformChanged_fn;
    type->interface0.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererPlaced_fn;
    type->interface0.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))TreeRenderer__FuseElementsITreeRendererIsVisibleChanged_fn;
    type->interface0.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))TreeRenderer__FuseElementsITreeRendererIsEnabledChanged_fn;
    type->interface0.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))TreeRenderer__FuseElementsITreeRendererOpacityChanged_fn;
    type->interface0.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))TreeRenderer__FuseElementsITreeRendererClipToBoundsChanged_fn;
    type->interface0.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))TreeRenderer__FuseElementsITreeRendererHitTestModeChanged_fn;
    type->interface0.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, uArray*))TreeRenderer__FuseElementsITreeRendererZOrderChanged_fn;
    type->interface0.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))TreeRenderer__FuseElementsITreeRendererMeasure_fn;
    return type;
}

// public TreeRenderer(Uno.Action<Fuse.Controls.Native.ViewHandle> setRoot, Uno.Action<Fuse.Controls.Native.ViewHandle> clearRoot) :40
void TreeRenderer__ctor__fn(TreeRenderer* __this, uDelegate* setRoot, uDelegate* clearRoot)
{
    __this->ctor_(setRoot, clearRoot);
}

// private void Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :116
void TreeRenderer__FuseElementsITreeRendererBackgroundChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element,Fuse.Drawing.Brush)");
    ::g::Fuse::Controls::Native::ViewHandle* ret3;
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret3), ret3))->SetBackgroundColor(::g::Fuse::Controls::Extensions::GetColor(background));
}

// private void Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :158
void TreeRenderer__FuseElementsITreeRendererClipToBoundsChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element,bool)");
    ::g::Fuse::Controls::Native::ViewHandle* ret4;
    bool clipToBounds_ = *clipToBounds;
    ::g::Fuse::Controls::Native::ViewHandle* viewHandle = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret4), ret4);

    if (uPtr(viewHandle)->IsViewGroup())
        uPtr(viewHandle)->SetClipToBounds(clipToBounds_);
}

// private void Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :165
void TreeRenderer__FuseElementsITreeRendererHitTestModeChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element,bool)");
    ::g::Fuse::Controls::Native::ViewHandle* ret5;
    bool enabled_ = *enabled;
    ::g::Fuse::Controls::Native::ViewHandle* viewHandle = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret5), ret5);

    if (uPtr(viewHandle)->IsViewGroup())
        uPtr(viewHandle)->SetHitTestEnabled(enabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :148
void TreeRenderer__FuseElementsITreeRendererIsEnabledChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element,bool)");
    ::g::Fuse::Controls::Native::ViewHandle* ret6;
    bool isEnabled_ = *isEnabled;
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret6), ret6))->SetEnabled(isEnabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :143
void TreeRenderer__FuseElementsITreeRendererIsVisibleChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element,bool)");
    ::g::Fuse::Controls::Native::ViewHandle* ret7;
    bool isVisible_ = *isVisible;
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret7), ret7))->SetIsVisible(isVisible_);
}

// private bool Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :182
void TreeRenderer__FuseElementsITreeRendererMeasure_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element,Fuse.LayoutParams,float2&)");
    ::g::Fuse::Controls::Native::ViewHandle* ret8;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Controls::Native::ViewHandle* viewHandle = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret8), ret8);
    bool canMeasure = uPtr(viewHandle)->IsLeafView || uIs(viewHandle, TreeRenderer__ViewGroup_typeof());
    *size = canMeasure ? viewHandle->Measure(lp_, ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(uPtr(e)->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/]))) : ::g::Uno::Float2__New1(0.0f);
    return *__retval = canMeasure, void();
}

// private void Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element e, float opacity) :153
void TreeRenderer__FuseElementsITreeRendererOpacityChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element,float)");
    ::g::Fuse::Controls::Native::ViewHandle* ret9;
    float opacity_ = *opacity;
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret9), ret9))->SetOpacity(opacity_);
}

// private void Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element e) :135
void TreeRenderer__FuseElementsITreeRendererPlaced_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element)");
    ::g::Fuse::Controls::Native::ViewHandle* ret10;
    float density = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(uPtr(e)->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/]));
    ::g::Uno::Int2 actualPosition = ::g::Uno::Int2__op_Explicit1(::g::Uno::Float2__op_Multiply1(e->ActualPosition(), density));
    ::g::Uno::Int2 actualSize = ::g::Uno::Int2__op_Explicit1(::g::Uno::Float2__op_Multiply1(e->ActualSize(), density));
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret10), ret10))->UpdateViewRect1(actualPosition.X, actualPosition.Y, actualSize.X, actualSize.Y);
}

// private void Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element e) :89
void TreeRenderer__FuseElementsITreeRendererRooted_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
}

// private void Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element e) :48
void TreeRenderer__FuseElementsITreeRendererRootingStarted_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element)");
    bool ret11;
    ::g::Fuse::Controls::Native::ViewHandle* v = __this->InstantiateView(e);

    if (uIs(e, ::TYPES[18/*Fuse.Controls.Control*/]))
        uPtr(uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[18/*Fuse.Controls.Control*/]))->ViewHandle(v);

    if (uIs((::g::Fuse::Visual*)uPtr(e)->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]) && (::g::Uno::Collections::Dictionary__ContainsKey_fn(uPtr(__this->_elements), uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]), &ret11), ret11))
        uPtr(__this->GetParentViewGroup(e))->InsertChild1(v, 0);
    else
        uPtr(__this->_setRoot)->InvokeVoid(v);

    if (!uPtr(v)->HandlesInput)
        ::g::Fuse::Controls::Native::Android::InputDispatch::AddListener(v, e);

    ::g::Uno::Collections::Dictionary__Add_fn(uPtr(__this->_elements), e, v);
}

// private void Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element e) :121
void TreeRenderer__FuseElementsITreeRendererTransformChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element)");
    ::g::Fuse::Controls::Native::ViewHandle* ret12;
    ::g::Fuse::Controls::Native::ViewHandle* viewHandle = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret12), ret12);
    ::g::Uno::Float4x4 transform = uPtr(e)->LocalTransform();
    ::g::Uno::Float2 size = e->ActualSize();
    float density = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(e->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/]));
    ::g::Fuse::Visual* p = e->Parent();

    if (uIs(p, ::TYPES[18/*Fuse.Controls.Control*/]))
        uPtr(uCast< ::g::Fuse::Controls::Control*>(p, ::TYPES[18/*Fuse.Controls.Control*/]))->CompensateForScrollView(&transform);

    uPtr(viewHandle)->UpdateViewRect(transform, size, density);
}

// private void Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element e) :91
void TreeRenderer__FuseElementsITreeRendererUnrooted_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element)");
    bool ret13;
    ::g::Fuse::Controls::Native::ViewHandle* ret14;
    ::g::Fuse::Controls::Native::ViewHandle* ret15;
    ::g::Fuse::Controls::Native::ViewHandle* ret16;
    ::g::Fuse::Controls::Native::ViewHandle* ret17;
    bool ret18;

    if (uIs((::g::Fuse::Visual*)uPtr(e)->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]) && (::g::Uno::Collections::Dictionary__ContainsKey_fn(uPtr(__this->_elements), uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]), &ret13), ret13))
        uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]), &ret14), ret14))->RemoveChild((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret15), ret15));
    else
        uPtr(__this->_clearRoot)->InvokeVoid((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret16), ret16));

    ::g::Fuse::Controls::Native::ViewHandle* v = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret17), ret17);
    ::g::Uno::Collections::Dictionary__Remove_fn(uPtr(__this->_elements), e, &ret18);

    if (!uPtr(v)->HandlesInput)
        ::g::Fuse::Controls::Native::Android::InputDispatch::RemoveListener(v);

    if (uIs(e, ::TYPES[18/*Fuse.Controls.Control*/]))
    {
        ::g::Fuse::Controls::Control* c = uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[18/*Fuse.Controls.Control*/]);

        if (uPtr(c)->ViewHandle() != NULL)
        {
            uPtr(uPtr(c)->ViewHandle())->Dispose();
            c->ViewHandle(NULL);
        }

        uPtr(c)->NativeView(NULL);
    }
}

// private void Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element e, Fuse.Visual[] zorder) :172
void TreeRenderer__FuseElementsITreeRendererZOrderChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, uArray* zorder)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element,Fuse.Visual[])");
    ::g::Fuse::Controls::Native::ViewHandle* ret19;

    for (int32_t i = 0; i < uPtr(zorder)->Length(); i++)
    {
        ::g::Fuse::Elements::Element* child = uAs< ::g::Fuse::Elements::Element*>(uPtr(zorder)->Strong< ::g::Fuse::Visual*>(i), ::TYPES[8/*Fuse.Elements.Element*/]);

        if (child != NULL)
            uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), child, &ret19), ret19))->BringToFront();
    }
}

// private Fuse.Controls.Native.ViewHandle GetParentViewGroup(Fuse.Elements.Element e) :67
void TreeRenderer__GetParentViewGroup_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Controls::Native::ViewHandle** __retval)
{
    *__retval = __this->GetParentViewGroup(e);
}

// private object InstantiateTemplate(Fuse.Elements.Element e) :217
void TreeRenderer__InstantiateTemplate_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, uObject** __retval)
{
    *__retval = __this->InstantiateTemplate(e);
}

// private Fuse.Controls.Native.ViewHandle InstantiateView(Fuse.Elements.Element e) :192
void TreeRenderer__InstantiateView_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Controls::Native::ViewHandle** __retval)
{
    *__retval = __this->InstantiateView(e);
}

// private object InstantiateViewOld(Fuse.Elements.Element e) :224
void TreeRenderer__InstantiateViewOld_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, uObject** __retval)
{
    *__retval = __this->InstantiateViewOld(e);
}

// public TreeRenderer New(Uno.Action<Fuse.Controls.Native.ViewHandle> setRoot, Uno.Action<Fuse.Controls.Native.ViewHandle> clearRoot) :40
void TreeRenderer__New1_fn(uDelegate* setRoot, uDelegate* clearRoot, TreeRenderer** __retval)
{
    *__retval = TreeRenderer::New1(setRoot, clearRoot);
}

// private void TransformIntoViewGroup(Fuse.Elements.Element e) :76
void TreeRenderer__TransformIntoViewGroup_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->TransformIntoViewGroup(e);
}

// public TreeRenderer(Uno.Action<Fuse.Controls.Native.ViewHandle> setRoot, Uno.Action<Fuse.Controls.Native.ViewHandle> clearRoot) [instance] :40
void TreeRenderer::ctor_(uDelegate* setRoot, uDelegate* clearRoot)
{
    _elements = ((::g::Uno::Collections::Dictionary*)::g::Uno::Collections::Dictionary::New1(::g::Uno::Collections::Dictionary_typeof()->MakeType(::TYPES[8/*Fuse.Elements.Element*/], ::g::Fuse::Controls::Native::ViewHandle_typeof(), NULL)));
    _setRoot = setRoot;
    _clearRoot = clearRoot;
}

// private Fuse.Controls.Native.ViewHandle GetParentViewGroup(Fuse.Elements.Element e) [instance] :67
::g::Fuse::Controls::Native::ViewHandle* TreeRenderer::GetParentViewGroup(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "GetParentViewGroup(Fuse.Elements.Element)");
    ::g::Fuse::Controls::Native::ViewHandle* ret20;
    ::g::Fuse::Controls::Native::ViewHandle* ret21;
    ::g::Fuse::Elements::Element* parent = uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]);
    ::g::Fuse::Controls::Native::ViewHandle* parentView = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_elements), parent, &ret20), ret20);

    if (!uPtr(parentView)->IsViewGroup())
        TransformIntoViewGroup(parent);

    return (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_elements), parent, &ret21), ret21);
}

// private object InstantiateTemplate(Fuse.Elements.Element e) [instance] :217
uObject* TreeRenderer::InstantiateTemplate(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "InstantiateTemplate(Fuse.Elements.Element)");
    ::g::Uno::UX::Template* t = uPtr(e)->FindTemplate(::STRINGS[0/*"AndroidAppe...*/]);
    return (t != NULL) ? (uObject*)uPtr(t)->New1() : NULL;
}

// private Fuse.Controls.Native.ViewHandle InstantiateView(Fuse.Elements.Element e) [instance] :192
::g::Fuse::Controls::Native::ViewHandle* TreeRenderer::InstantiateView(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "InstantiateView(Fuse.Elements.Element)");
    uObject* ind1;
    uObject* sd = uAs<uObject*>(e, ::TYPES[37/*Fuse.Drawing.ISurfaceDrawable*/]);

    if ((sd != NULL) && ::g::Fuse::Drawing::ISurfaceDrawable::IsPrimary(uInterface(uPtr(sd), ::TYPES[37/*Fuse.Drawing.ISurfaceDrawable*/])))
        return ::g::Fuse::Controls::Native::Android::CanvasViewGroup::New5(sd, ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(uPtr(e)->Viewport()), ::TYPES[34/*Fuse.ICommonViewport*/])));

    ::g::Fuse::Controls::Native::ViewHandle* appearance = uAs< ::g::Fuse::Controls::Native::ViewHandle*>((ind1 = InstantiateTemplate(e), (ind1 != NULL) ? ind1 : (uObject*)InstantiateViewOld(e)), ::g::Fuse::Controls::Native::ViewHandle_typeof());

    if (appearance != NULL)
    {
        if (uIs(e, ::TYPES[18/*Fuse.Controls.Control*/]))
        {
            uPtr(uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[18/*Fuse.Controls.Control*/]))->ViewHandle(appearance);

            if (uIs(appearance, ::g::Fuse::Controls::Native::IView_typeof()))
                uPtr(uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[18/*Fuse.Controls.Control*/]))->NativeView((uObject*)appearance);
        }

        return appearance;
    }
    else
        return ::g::Fuse::Controls::Native::ViewFactory::InstantiateViewGroup();
}

// private object InstantiateViewOld(Fuse.Elements.Element e) [instance] :224
uObject* TreeRenderer::InstantiateViewOld(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "InstantiateViewOld(Fuse.Elements.Element)");

    if (uIs(e, ::TYPES[18/*Fuse.Controls.Control*/]))
    {
        ::g::Fuse::Controls::Control* c = uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[18/*Fuse.Controls.Control*/]);
        return uPtr(c)->InstantiateNativeView();
    }

    return NULL;
}

// private void TransformIntoViewGroup(Fuse.Elements.Element e) [instance] :76
void TreeRenderer::TransformIntoViewGroup(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "TransformIntoViewGroup(Fuse.Elements.Element)");
    ::g::Fuse::Controls::Native::ViewHandle* ret22;
    ::g::Fuse::Controls::Native::ViewHandle* ret23;
    ::g::Fuse::Controls::Native::ViewHandle* parentView = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_elements), uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[8/*Fuse.Elements.Element*/]), &ret22), ret22);
    ::g::Fuse::Controls::Native::ViewHandle* child = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_elements), e, &ret23), ret23);
    int32_t index = uPtr(parentView)->IndexOfChild(child);
    parentView->RemoveChild(child);
    TreeRenderer__ViewGroup* viewGroup = TreeRenderer__ViewGroup::New5(child);
    ::g::Fuse::Controls::Native::ViewHandle::CopyState(child, viewGroup);
    uPtr(child)->ResetState();
    parentView->InsertChild1(viewGroup, index);
    ::g::Uno::Collections::Dictionary__set_Item_fn(uPtr(_elements), e, viewGroup);
}

// public TreeRenderer New(Uno.Action<Fuse.Controls.Native.ViewHandle> setRoot, Uno.Action<Fuse.Controls.Native.ViewHandle> clearRoot) [static] :40
TreeRenderer* TreeRenderer::New1(uDelegate* setRoot, uDelegate* clearRoot)
{
    TreeRenderer* obj2 = (TreeRenderer*)uNew(TreeRenderer_typeof());
    obj2->ctor_(setRoot, clearRoot);
    return obj2;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\TreeRendererPanel.uno
// ----------------------------------------------------------------------------------------------------

// internal sealed extern class TreeRendererPanel :15
// {
static void TreeRendererPanel_build(uType* type)
{
    ::TYPES[93] = ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Controls::Native::ViewHandle_typeof(), NULL);
    ::TYPES[94] = ::g::Fuse::Controls::INativeViewRoot_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Controls::TreeRenderer_typeof(), offsetof(TreeRendererPanel, _treeRenderer), 0,
        ::TYPES[94/*Fuse.Controls.INativeViewRoot*/], offsetof(TreeRendererPanel, _nativeViewHost), 0);
}

::g::Fuse::Controls::Panel_type* TreeRendererPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 119;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(TreeRendererPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.TreeRendererPanel", options);
    type->fp_build_ = TreeRendererPanel_build;
    type->fp_get_TreeRenderer = (void(*)(::g::Fuse::Elements::Element*, uObject**))TreeRendererPanel__get_TreeRenderer_fn;
    type->fp_get_VisualContext = (void(*)(::g::Fuse::Visual*, int32_t*))TreeRendererPanel__get_VisualContext_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TreeRendererPanel(Fuse.Controls.INativeViewRoot nativeViewHost) :27
void TreeRendererPanel__ctor_7_fn(TreeRendererPanel* __this, uObject* nativeViewHost)
{
    __this->ctor_7(nativeViewHost);
}

// private void ClearRoot(Fuse.Controls.Native.ViewHandle viewHandle) :38
void TreeRendererPanel__ClearRoot_fn(TreeRendererPanel* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    __this->ClearRoot(viewHandle);
}

// public TreeRendererPanel New(Fuse.Controls.INativeViewRoot nativeViewHost) :27
void TreeRendererPanel__New4_fn(uObject* nativeViewHost, TreeRendererPanel** __retval)
{
    *__retval = TreeRendererPanel::New4(nativeViewHost);
}

// private void SetRoot(Fuse.Controls.Native.ViewHandle viewHandle) :33
void TreeRendererPanel__SetRoot_fn(TreeRendererPanel* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    __this->SetRoot(viewHandle);
}

// public override sealed Fuse.Elements.ITreeRenderer get_TreeRenderer() :22
void TreeRendererPanel__get_TreeRenderer_fn(TreeRendererPanel* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.TreeRendererPanel", "get_TreeRenderer()");
    return *__retval = (uObject*)__this->_treeRenderer, void();
}

// public override sealed Fuse.VisualContext get_VisualContext() :19
void TreeRendererPanel__get_VisualContext_fn(TreeRendererPanel* __this, int32_t* __retval)
{
    return *__retval = 2, void();
}

// public TreeRendererPanel(Fuse.Controls.INativeViewRoot nativeViewHost) [instance] :27
void TreeRendererPanel::ctor_7(uObject* nativeViewHost)
{
    ctor_6();
    _nativeViewHost = nativeViewHost;
    _treeRenderer = ::g::Fuse::Controls::TreeRenderer::New1(uDelegate::New(::TYPES[93/*Uno.Action<Fuse.Controls.Native.ViewHandle>*/], (void*)TreeRendererPanel__SetRoot_fn, this), uDelegate::New(::TYPES[93/*Uno.Action<Fuse.Controls.Native.ViewHandle>*/], (void*)TreeRendererPanel__ClearRoot_fn, this));
}

// private void ClearRoot(Fuse.Controls.Native.ViewHandle viewHandle) [instance] :38
void TreeRendererPanel::ClearRoot(::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.TreeRendererPanel", "ClearRoot(Fuse.Controls.Native.ViewHandle)");
    ::g::Fuse::Controls::INativeViewRoot::Remove(uInterface(uPtr(_nativeViewHost), ::TYPES[94/*Fuse.Controls.INativeViewRoot*/]), viewHandle);
}

// private void SetRoot(Fuse.Controls.Native.ViewHandle viewHandle) [instance] :33
void TreeRendererPanel::SetRoot(::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.TreeRendererPanel", "SetRoot(Fuse.Controls.Native.ViewHandle)");
    ::g::Fuse::Controls::INativeViewRoot::Add(uInterface(uPtr(_nativeViewHost), ::TYPES[94/*Fuse.Controls.INativeViewRoot*/]), viewHandle);
}

// public TreeRendererPanel New(Fuse.Controls.INativeViewRoot nativeViewHost) [static] :27
TreeRendererPanel* TreeRendererPanel::New4(uObject* nativeViewHost)
{
    TreeRendererPanel* obj1 = (TreeRendererPanel*)uNew(TreeRendererPanel_typeof());
    obj1->ctor_7(nativeViewHost);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Navigation\1.7.2\NavigationControl.Pages.uno
// --------------------------------------------------------------------------------------------------------------

// private enum NavigationControl.UpdateFlags :67
uEnumType* NavigationControl__UpdateFlags_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigationControl.UpdateFlags", ::g::Uno::Int_typeof(), 5);
    type->SetLiterals(
        "None", 0LL,
        "ForceGoto", 1LL,
        "Add", 2LL,
        "Replace", 4LL,
        "Bypass", 8LL);
    return type;
}

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\URISchemeEventArgs.uno
// ------------------------------------------------------------------------------------------------------

// public sealed class URISchemeEventArgs :3
// {
static void URISchemeEventArgs_build(uType* type)
{
    ::STRINGS[124] = uString::Const("url");
    ::TYPES[70] = ::g::Fuse::Scripting::IEventSerializer_typeof();
    type->SetInterfaces(
        ::g::Fuse::Scripting::IScriptEvent_typeof(), offsetof(URISchemeEventArgs_type, interface0));
    type->SetFields(0,
        ::g::Uno::String_typeof(), offsetof(URISchemeEventArgs, Url), 0);
    type->Reflection.SetFields(1,
        new uField("Url", 0));
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)URISchemeEventArgs__New2_fn, 0, true, type, 1, ::g::Uno::String_typeof()));
}

URISchemeEventArgs_type* URISchemeEventArgs_typeof()
{
    static uSStrong<URISchemeEventArgs_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::EventArgs_typeof();
    options.FieldCount = 1;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(URISchemeEventArgs);
    options.TypeSize = sizeof(URISchemeEventArgs_type);
    type = (URISchemeEventArgs_type*)uClassType::New("Fuse.Controls.URISchemeEventArgs", options);
    type->fp_build_ = URISchemeEventArgs_build;
    type->interface0.fp_Serialize = (void(*)(uObject*, uObject*))URISchemeEventArgs__FuseScriptingIScriptEventSerialize_fn;
    return type;
}

// public URISchemeEventArgs(string url) :7
void URISchemeEventArgs__ctor_1_fn(URISchemeEventArgs* __this, uString* url)
{
    __this->ctor_1(url);
}

// private void Fuse.Scripting.IScriptEvent.Serialize(Fuse.Scripting.IEventSerializer s) :12
void URISchemeEventArgs__FuseScriptingIScriptEventSerialize_fn(URISchemeEventArgs* __this, uObject* s)
{
    uStackFrame __("Fuse.Controls.URISchemeEventArgs", "Fuse.Scripting.IScriptEvent.Serialize(Fuse.Scripting.IEventSerializer)");
    ::g::Fuse::Scripting::IEventSerializer::AddString(uInterface(uPtr(s), ::TYPES[70/*Fuse.Scripting.IEventSerializer*/]), ::STRINGS[124/*"url"*/], __this->Url);
}

// public URISchemeEventArgs New(string url) :7
void URISchemeEventArgs__New2_fn(uString* url, URISchemeEventArgs** __retval)
{
    *__retval = URISchemeEventArgs::New2(url);
}

// public URISchemeEventArgs(string url) [instance] :7
void URISchemeEventArgs::ctor_1(uString* url)
{
    ctor_();
    Url = url;
}

// public URISchemeEventArgs New(string url) [static] :7
URISchemeEventArgs* URISchemeEventArgs::New2(uString* url)
{
    URISchemeEventArgs* obj1 = (URISchemeEventArgs*)uNew(URISchemeEventArgs_typeof());
    obj1->ctor_1(url);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Video\1.7.2\Video.uno
// ---------------------------------------------------------------------------------------

// public sealed class UrlVideoSource :37
// {
static void UrlVideoSource_build(uType* type)
{
    type->SetFields(1,
        ::g::Uno::String_typeof(), offsetof(UrlVideoSource, _url), 0);
    type->Reflection.SetFunctions(3,
        new uFunction(".ctor", NULL, (void*)UrlVideoSource__New1_fn, 0, true, type, 0),
        new uFunction("get_Url", NULL, (void*)UrlVideoSource__get_Url_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Url", NULL, (void*)UrlVideoSource__set_Url_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

uType* UrlVideoSource_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::VideoSource_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(UrlVideoSource);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.UrlVideoSource", options);
    type->fp_build_ = UrlVideoSource_build;
    type->fp_ctor_ = (void*)UrlVideoSource__New1_fn;
    return type;
}

// public generated UrlVideoSource() :37
void UrlVideoSource__ctor_1_fn(UrlVideoSource* __this)
{
    __this->ctor_1();
}

// public generated UrlVideoSource New() :37
void UrlVideoSource__New1_fn(UrlVideoSource** __retval)
{
    *__retval = UrlVideoSource::New1();
}

// public string get_Url() :42
void UrlVideoSource__get_Url_fn(UrlVideoSource* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public void set_Url(string value) :43
void UrlVideoSource__set_Url_fn(UrlVideoSource* __this, uString* value)
{
    __this->Url(value);
}

// public generated UrlVideoSource() [instance] :37
void UrlVideoSource::ctor_1()
{
    ctor_();
}

// public string get_Url() [instance] :42
uString* UrlVideoSource::Url()
{
    return _url;
}

// public void set_Url(string value) [instance] :43
void UrlVideoSource::Url(uString* value)
{
    uStackFrame __("Fuse.Controls.UrlVideoSource", "set_Url(string)");
    _url = value;
    OnSourceChanged();
}

// public generated UrlVideoSource New() [static] :37
UrlVideoSource* UrlVideoSource::New1()
{
    UrlVideoSource* obj1 = (UrlVideoSource*)uNew(UrlVideoSource_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\VectorLayer.uno
// ----------------------------------------------------------------------------------------------

// public sealed class VectorLayer :20
// {
static void VectorLayer_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(VectorLayer_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(VectorLayer_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(VectorLayer_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(VectorLayer_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(VectorLayer_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(VectorLayer_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(VectorLayer_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(VectorLayer_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(VectorLayer_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(VectorLayer_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(VectorLayer_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(VectorLayer_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(VectorLayer_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(VectorLayer_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(VectorLayer_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(VectorLayer_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(VectorLayer_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(VectorLayer_type, interface17),
        ::g::Fuse::Drawing::ISurfaceProvider_typeof(), offsetof(VectorLayer_type, interface18));
    type->SetFields(110);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)VectorLayer__New3_fn, 0, true, type, 0));
}

VectorLayer_type* VectorLayer_typeof()
{
    static uSStrong<VectorLayer_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 110;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(VectorLayer);
    options.TypeSize = sizeof(VectorLayer_type);
    type = (VectorLayer_type*)uClassType::New("Fuse.Controls.VectorLayer", options);
    type->fp_build_ = VectorLayer_build;
    type->fp_ctor_ = (void*)VectorLayer__New3_fn;
    type->fp_DrawWithChildren = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))VectorLayer__DrawWithChildren_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))VectorLayer__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))VectorLayer__OnUnrooted_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))VectorLayer__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))VectorLayer__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))VectorLayer__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated VectorLayer() :20
void VectorLayer__ctor_6_fn(VectorLayer* __this)
{
    __this->ctor_6();
}

// protected override sealed void DrawWithChildren(Fuse.DrawContext dc) :22
void VectorLayer__DrawWithChildren_fn(VectorLayer* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.VectorLayer", "DrawWithChildren(Fuse.DrawContext)");
    uPtr(__this->LayoutSurface())->Draw(dc, __this, (uObject*)__this);
}

// private void Fuse.Drawing.ISurfaceDrawable.Draw(Fuse.Drawing.Surface surface) :27
void VectorLayer__FuseDrawingISurfaceDrawableDraw_fn(VectorLayer* __this, ::g::Fuse::Drawing::Surface* surface)
{
    uStackFrame __("Fuse.Controls.VectorLayer", "Fuse.Drawing.ISurfaceDrawable.Draw(Fuse.Drawing.Surface)");
    __this->ISurfaceDrawableDraw(surface);
}

// private float2 Fuse.Drawing.ISurfaceDrawable.get_ElementSize() :29
void VectorLayer__FuseDrawingISurfaceDrawableget_ElementSize_fn(VectorLayer* __this, ::g::Uno::Float2* __retval)
{
    return *__retval = __this->ActualSize(), void();
}

// private bool Fuse.Drawing.ISurfaceDrawable.get_IsPrimary() :28
void VectorLayer__FuseDrawingISurfaceDrawableget_IsPrimary_fn(VectorLayer* __this, bool* __retval)
{
    return *__retval = true, void();
}

// public generated VectorLayer New() :20
void VectorLayer__New3_fn(VectorLayer** __retval)
{
    *__retval = VectorLayer::New3();
}

// protected override sealed void OnRooted() :31
void VectorLayer__OnRooted_fn(VectorLayer* __this)
{
    uStackFrame __("Fuse.Controls.VectorLayer", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
    __this->SurfaceRooted(true);
}

// protected override sealed void OnUnrooted() :37
void VectorLayer__OnUnrooted_fn(VectorLayer* __this)
{
    uStackFrame __("Fuse.Controls.VectorLayer", "OnUnrooted()");
    __this->SurfaceUnrooted();
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// public generated VectorLayer() [instance] :20
void VectorLayer::ctor_6()
{
    ctor_5();
}

// public generated VectorLayer New() [static] :20
VectorLayer* VectorLayer::New3()
{
    VectorLayer* obj1 = (VectorLayer*)uNew(VectorLayer_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Video\1.7.2\Video.ScriptClass.uno
// ---------------------------------------------------------------------------------------------------

// public partial sealed class Video :8
// {
// static Video() :10
static void Video__cctor_4_fn(uType* __type)
{
    ::g::Fuse::Scripting::ScriptClass_typeof()->Init();
    Video::_positionName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[125/*"Position"*/]);
    Video::_durationName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[126/*"Duration"*/]);
    Video::_progressName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[74/*"Progress"*/]);
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[29/*Fuse.Scripting.ScriptMember[]*/], 4, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New4(::TYPES[95/*Fuse.Scripting.ScriptMethod<Fuse.Controls.Video>*/], ::STRINGS[127/*"getDuration"*/], uDelegate::New(::TYPES[96/*Uno.Func<Fuse.Scripting.Context, Fuse.Controls.Video, object[], object>*/], (void*)Video__getDuration_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[95/*Fuse.Scripting.ScriptMethod<Fuse.Controls.Video>*/], ::STRINGS[128/*"resume"*/], uDelegate::New(::TYPES[97/*Uno.Action<Fuse.Controls.Video>*/], (void*)Video__resume_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[95/*Fuse.Scripting.ScriptMethod<Fuse.Controls.Video>*/], ::STRINGS[129/*"pause"*/], uDelegate::New(::TYPES[97/*Uno.Action<Fuse.Controls.Video>*/], (void*)Video__pause_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[95/*Fuse.Scripting.ScriptMethod<Fuse.Controls.Video>*/], ::STRINGS[130/*"stop"*/], uDelegate::New(::TYPES[97/*Uno.Action<Fuse.Controls.Video>*/], (void*)Video__stop_fn))));
}

static void Video_build(uType* type)
{
    ::STRINGS[125] = uString::Const("Position");
    ::STRINGS[126] = uString::Const("Duration");
    ::STRINGS[74] = uString::Const("Progress");
    ::STRINGS[127] = uString::Const("getDuration");
    ::STRINGS[128] = uString::Const("resume");
    ::STRINGS[129] = uString::Const("pause");
    ::STRINGS[130] = uString::Const("stop");
    ::STRINGS[131] = uString::Const("getDuration takes 0 arguments, but ");
    ::STRINGS[132] = uString::Const(" was supplied");
    ::STRINGS[133] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.Video\\1.7.2\\Video.ScriptClass.uno");
    ::TYPES[28] = ::g::Uno::Type_typeof();
    ::TYPES[29] = ::g::Fuse::Scripting::ScriptMember_typeof()->Array();
    ::TYPES[95] = ::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(type, NULL);
    ::TYPES[96] = ::g::Uno::Func3_typeof()->MakeType(::g::Fuse::Scripting::Context_typeof(), type, uObject_typeof()->Array(), uObject_typeof(), NULL);
    ::TYPES[97] = ::g::Uno::Action1_typeof()->MakeType(type, NULL);
    ::TYPES[98] = ::g::Fuse::Controls::FileVideoSource_typeof();
    ::TYPES[99] = ::g::Fuse::Controls::UrlVideoSource_typeof();
    ::TYPES[100] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[0] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[101] = ::g::Fuse::Visual_typeof()->MakeMethod(8/*RemoveAllChildren<Fuse.Controls.VideoImpl.VideoVisual>*/, ::g::Fuse::Controls::VideoImpl::VideoVisual_typeof(), NULL);
    ::TYPES[102] = ::g::Fuse::Triggers::IPlayback_typeof();
    ::TYPES[103] = ::g::Fuse::Triggers::IMediaPlayback_typeof();
    ::TYPES[104] = ::g::Fuse::Triggers::IProgress_typeof();
    ::TYPES[26] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[24] = ::g::Uno::EventHandler_typeof();
    type->SetDependencies(
        ::g::Uno::EventArgs_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Video_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Video_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Video_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Video_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Video_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Video_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Video_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Video_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(Video_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(Video_type, interface9),
        ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(Video_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Video_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Video_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Video_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Video_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Video_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Video_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(Video_type, interface17),
        ::TYPES[103/*Fuse.Triggers.IMediaPlayback*/], offsetof(Video_type, interface18),
        ::TYPES[102/*Fuse.Triggers.IPlayback*/], offsetof(Video_type, interface19),
        ::TYPES[104/*Fuse.Triggers.IProgress*/], offsetof(Video_type, interface20));
    type->SetFields(117,
        uObject_typeof(), offsetof(Video, _durationMutex), 0,
        ::g::Uno::Double_typeof(), offsetof(Video, _outDuration), 0,
        ::g::Fuse::Controls::VideoSource_typeof(), offsetof(Video, _source), 0,
        ::g::Uno::UX::FileSource_typeof(), offsetof(Video, _file), 0,
        ::g::Uno::String_typeof(), offsetof(Video, _url), 0,
        ::g::Uno::Float4_typeof(), offsetof(Video, _scale9Margin), 0,
        ::g::Uno::Bool_typeof(), offsetof(Video, _hasScale9Margin), 0,
        ::g::Uno::Bool_typeof(), offsetof(Video, _isLooping), 0,
        ::g::Uno::Bool_typeof(), offsetof(Video, _autoPlay), 0,
        ::g::Fuse::Elements::StretchMode_typeof(), offsetof(Video, _stretchMode), 0,
        ::g::Fuse::Elements::StretchDirection_typeof(), offsetof(Video, _stretchDirection), 0,
        ::g::Fuse::Elements::StretchSizing_typeof(), offsetof(Video, _stretchSizing), 0,
        ::g::Fuse::Elements::Alignment_typeof(), offsetof(Video, _contentAlignment), 0,
        ::g::Uno::Float_typeof(), offsetof(Video, _volume), 0,
        ::TYPES[103/*Fuse.Triggers.IMediaPlayback*/], offsetof(Video, _playback), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(Video, ParamChanged1), 0,
        ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/], offsetof(Video, ProgressChanged1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(Video, RenderParamChanged1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(Video, SourceChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Video::_positionName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Video::_durationName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&Video::_progressName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(46,
        new uFunction("get_AutoPlay", NULL, (void*)Video__get_AutoPlay_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_AutoPlay", NULL, (void*)Video__set_AutoPlay_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_CanPause", NULL, (void*)Video__get_CanPause_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanPlayTo", NULL, (void*)Video__get_CanPlayTo_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanResume", NULL, (void*)Video__get_CanResume_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanStop", NULL, (void*)Video__get_CanStop_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_ContentAlignment", NULL, (void*)Video__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)Video__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_Duration", NULL, (void*)Video__get_Duration_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("get_File", NULL, (void*)Video__get_File_fn, 0, false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, (void*)Video__set_File_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction("get_IsLooping", NULL, (void*)Video__get_IsLooping_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsLooping", NULL, (void*)Video__set_IsLooping_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)Video__New4_fn, 0, true, type, 0),
        new uFunction("add_ParamChanged", NULL, (void*)Video__add_ParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_ParamChanged", NULL, (void*)Video__remove_ParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("Pause", NULL, (void*)Video__Pause_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("PlayTo", NULL, (void*)Video__PlayTo_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_Position", NULL, (void*)Video__get_Position_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Position", NULL, (void*)Video__set_Position_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_Progress", NULL, (void*)Video__get_Progress_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Progress", NULL, (void*)Video__set_Progress_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("add_ProgressChanged", NULL, (void*)Video__add_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("remove_ProgressChanged", NULL, (void*)Video__remove_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("add_RenderParamChanged", NULL, (void*)Video__add_RenderParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_RenderParamChanged", NULL, (void*)Video__remove_RenderParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("Resume", NULL, (void*)Video__Resume_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("get_Scale9Margin", NULL, (void*)Video__get_Scale9Margin_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Scale9Margin", NULL, (void*)Video__set_Scale9Margin_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("SetPlayback", NULL, (void*)Video__SetPlayback_fn, 0, false, uVoid_typeof(), 1, ::TYPES[103/*Fuse.Triggers.IMediaPlayback*/]),
        new uFunction("SetProgress", NULL, (void*)Video__SetProgress_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Double_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Source", NULL, (void*)Video__get_Source_fn, 0, false, ::g::Fuse::Controls::VideoSource_typeof(), 0),
        new uFunction("set_Source", NULL, (void*)Video__set_Source_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::VideoSource_typeof()),
        new uFunction("add_SourceChanged", NULL, (void*)Video__add_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_SourceChanged", NULL, (void*)Video__remove_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("Stop", NULL, (void*)Video__Stop_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("get_StretchDirection", NULL, (void*)Video__get_StretchDirection_fn, 0, false, ::g::Fuse::Elements::StretchDirection_typeof(), 0),
        new uFunction("set_StretchDirection", NULL, (void*)Video__set_StretchDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchDirection_typeof()),
        new uFunction("get_StretchMode", NULL, (void*)Video__get_StretchMode_fn, 0, false, ::g::Fuse::Elements::StretchMode_typeof(), 0),
        new uFunction("set_StretchMode", NULL, (void*)Video__set_StretchMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchMode_typeof()),
        new uFunction("get_StretchSizing", NULL, (void*)Video__get_StretchSizing_fn, 0, false, ::g::Fuse::Elements::StretchSizing_typeof(), 0),
        new uFunction("set_StretchSizing", NULL, (void*)Video__set_StretchSizing_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchSizing_typeof()),
        new uFunction("get_Url", NULL, (void*)Video__get_Url_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Url", NULL, (void*)Video__set_Url_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_Volume", NULL, (void*)Video__get_Volume_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Volume", NULL, (void*)Video__set_Volume_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

Video_type* Video_typeof()
{
    static uSStrong<Video_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 139;
    options.InterfaceCount = 21;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(Video);
    options.TypeSize = sizeof(Video_type);
    type = (Video_type*)uClassType::New("Fuse.Controls.Video", options);
    type->fp_build_ = Video_build;
    type->fp_ctor_ = (void*)Video__New4_fn;
    type->fp_cctor_ = Video__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Video__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Video__OnUnrooted_fn;
    type->interface18.fp_get_Volume = (void(*)(uObject*, float*))Video__get_Volume_fn;
    type->interface18.fp_set_Volume = (void(*)(uObject*, float*))Video__set_Volume_fn;
    type->interface18.fp_get_Position = (void(*)(uObject*, double*))Video__get_Position_fn;
    type->interface18.fp_set_Position = (void(*)(uObject*, double*))Video__set_Position_fn;
    type->interface18.fp_get_Duration = (void(*)(uObject*, double*))Video__get_Duration_fn;
    type->interface19.fp_Stop = (void(*)(uObject*))Video__Stop_fn;
    type->interface19.fp_Pause = (void(*)(uObject*))Video__Pause_fn;
    type->interface19.fp_Resume = (void(*)(uObject*))Video__Resume_fn;
    type->interface19.fp_PlayTo = (void(*)(uObject*, double*))Video__PlayTo_fn;
    type->interface19.fp_get_Progress = (void(*)(uObject*, double*))Video__get_Progress_fn;
    type->interface19.fp_set_Progress = (void(*)(uObject*, double*))Video__set_Progress_fn;
    type->interface19.fp_get_CanStop = (void(*)(uObject*, bool*))Video__get_CanStop_fn;
    type->interface19.fp_get_CanPause = (void(*)(uObject*, bool*))Video__get_CanPause_fn;
    type->interface19.fp_get_CanResume = (void(*)(uObject*, bool*))Video__get_CanResume_fn;
    type->interface19.fp_get_CanPlayTo = (void(*)(uObject*, bool*))Video__get_CanPlayTo_fn;
    type->interface20.fp_get_Progress = (void(*)(uObject*, double*))Video__get_Progress_fn;
    type->interface20.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))Video__add_ProgressChanged_fn;
    type->interface20.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))Video__remove_ProgressChanged_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Video() :8
void Video__ctor_7_fn(Video* __this)
{
    __this->ctor_7();
}

// public bool get_AutoPlay() :255
void Video__get_AutoPlay_fn(Video* __this, bool* __retval)
{
    *__retval = __this->AutoPlay();
}

// public void set_AutoPlay(bool value) :256
void Video__set_AutoPlay_fn(Video* __this, bool* value)
{
    __this->AutoPlay(*value);
}

// public bool get_CanPause() :420
void Video__get_CanPause_fn(Video* __this, bool* __retval)
{
    *__retval = __this->CanPause();
}

// public bool get_CanPlayTo() :410
void Video__get_CanPlayTo_fn(Video* __this, bool* __retval)
{
    *__retval = __this->CanPlayTo();
}

// public bool get_CanResume() :425
void Video__get_CanResume_fn(Video* __this, bool* __retval)
{
    *__retval = __this->CanResume();
}

// public bool get_CanStop() :415
void Video__get_CanStop_fn(Video* __this, bool* __retval)
{
    *__retval = __this->CanStop();
}

// private void ClearSource(Fuse.Controls.VideoSource source) :160
void Video__ClearSource_fn(Video* __this, ::g::Fuse::Controls::VideoSource* source)
{
    __this->ClearSource(source);
}

// public Fuse.Elements.Alignment get_ContentAlignment() :327
void Video__get_ContentAlignment_fn(Video* __this, int32_t* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :328
void Video__set_ContentAlignment_fn(Video* __this, int32_t* value)
{
    __this->ContentAlignment(*value);
}

// public double get_Duration() :458
void Video__get_Duration_fn(Video* __this, double* __retval)
{
    *__retval = __this->Duration();
}

// public Uno.UX.FileSource get_File() :186
void Video__get_File_fn(Video* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public void set_File(Uno.UX.FileSource value) :187
void Video__set_File_fn(Video* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// private static object getDuration(Fuse.Scripting.Context c, Fuse.Controls.Video v, object[] args) :34
void Video__getDuration_fn(::g::Fuse::Scripting::Context* c, Video* v, uArray* args, uObject** __retval)
{
    *__retval = Video::getDuration(c, v, args);
}

// public bool get_IsLooping() :238
void Video__get_IsLooping_fn(Video* __this, bool* __retval)
{
    *__retval = __this->IsLooping();
}

// public void set_IsLooping(bool value) :239
void Video__set_IsLooping_fn(Video* __this, bool* value)
{
    __this->IsLooping(*value);
}

// public generated Video New() :8
void Video__New4_fn(Video** __retval)
{
    *__retval = Video::New4();
}

// internal void OnDurationChanged() :499
void Video__OnDurationChanged_fn(Video* __this)
{
    __this->OnDurationChanged();
}

// private void OnParamChanged() :382
void Video__OnParamChanged_fn(Video* __this)
{
    __this->OnParamChanged();
}

// private void OnProgressChanged(object sender, Uno.EventArgs args) :488
void Video__OnProgressChanged_fn(Video* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnProgressChanged(sender, args);
}

// private void OnRenderParamChanged() :376
void Video__OnRenderParamChanged_fn(Video* __this)
{
    __this->OnRenderParamChanged();
}

// protected override sealed void OnRooted() :355
void Video__OnRooted_fn(Video* __this)
{
    uStackFrame __("Fuse.Controls.Video", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[0/*Uno.Collections.ICollection<Fuse.Node>*/]), ::g::Fuse::Controls::VideoImpl::VideoVisual::New2());
}

// private void OnSourceChanged() :388
void Video__OnSourceChanged_fn(Video* __this)
{
    __this->OnSourceChanged();
}

// protected override sealed void OnUnrooted() :361
void Video__OnUnrooted_fn(Video* __this)
{
    uStackFrame __("Fuse.Controls.Video", "OnUnrooted()");
    __this->RemoveAllChildren(::TYPES[101/*Fuse.Visual.RemoveAllChildren<Fuse.Controls.VideoImpl.VideoVisual>*/]);
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// private void OnVideoSourceChanged(object sender, Uno.EventArgs args) :155
void Video__OnVideoSourceChanged_fn(Video* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnVideoSourceChanged(sender, args);
}

// public generated void add_ParamChanged(Uno.EventHandler value) :371
void Video__add_ParamChanged_fn(Video* __this, uDelegate* value)
{
    __this->add_ParamChanged(value);
}

// public generated void remove_ParamChanged(Uno.EventHandler value) :371
void Video__remove_ParamChanged_fn(Video* __this, uDelegate* value)
{
    __this->remove_ParamChanged(value);
}

// private static void pause(Fuse.Controls.Video v) :61
void Video__pause_fn(Video* v)
{
    Video::pause(v);
}

// public void Pause() :429
void Video__Pause_fn(Video* __this)
{
    __this->Pause();
}

// private Fuse.Triggers.IMediaPlayback get_Playback() :466
void Video__get_Playback_fn(Video* __this, uObject** __retval)
{
    *__retval = __this->Playback();
}

// private void set_Playback(Fuse.Triggers.IMediaPlayback value) :467
void Video__set_Playback_fn(Video* __this, uObject* value)
{
    __this->Playback(value);
}

// public void PlayTo(double progress) :402
void Video__PlayTo_fn(Video* __this, double* progress)
{
    __this->PlayTo(*progress);
}

// public new double get_Position() :452
void Video__get_Position_fn(Video* __this, double* __retval)
{
    *__retval = __this->Position();
}

// public new void set_Position(double value) :453
void Video__set_Position_fn(Video* __this, double* value)
{
    __this->Position(*value);
}

// public double get_Progress() :445
void Video__get_Progress_fn(Video* __this, double* __retval)
{
    *__retval = __this->Progress();
}

// public void set_Progress(double value) :446
void Video__set_Progress_fn(Video* __this, double* value)
{
    __this->Progress(*value);
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :461
void Video__add_ProgressChanged_fn(Video* __this, uDelegate* value)
{
    __this->add_ProgressChanged(value);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :461
void Video__remove_ProgressChanged_fn(Video* __this, uDelegate* value)
{
    __this->remove_ProgressChanged(value);
}

// public generated void add_RenderParamChanged(Uno.EventHandler value) :368
void Video__add_RenderParamChanged_fn(Video* __this, uDelegate* value)
{
    __this->add_RenderParamChanged(value);
}

// public generated void remove_RenderParamChanged(Uno.EventHandler value) :368
void Video__remove_RenderParamChanged_fn(Video* __this, uDelegate* value)
{
    __this->remove_RenderParamChanged(value);
}

// private static void resume(Fuse.Controls.Video v) :51
void Video__resume_fn(Video* v)
{
    Video::resume(v);
}

// public void Resume() :435
void Video__Resume_fn(Video* __this)
{
    __this->Resume();
}

// public float4 get_Scale9Margin() :220
void Video__get_Scale9Margin_fn(Video* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Scale9Margin();
}

// public void set_Scale9Margin(float4 value) :221
void Video__set_Scale9Margin_fn(Video* __this, ::g::Uno::Float4* value)
{
    __this->Scale9Margin(*value);
}

// public void SetPlayback(Fuse.Triggers.IMediaPlayback playback) :504
void Video__SetPlayback_fn(Video* __this, uObject* playback)
{
    __this->SetPlayback(playback);
}

// public void SetProgress(double value, Uno.UX.IPropertyListener origin) :509
void Video__SetProgress_fn(Video* __this, double* value, uObject* origin)
{
    __this->SetProgress(*value, origin);
}

// private void SetSource(Fuse.Controls.VideoSource source) :169
void Video__SetSource_fn(Video* __this, ::g::Fuse::Controls::VideoSource* source)
{
    __this->SetSource(source);
}

// public Fuse.Controls.VideoSource get_Source() :136
void Video__get_Source_fn(Video* __this, ::g::Fuse::Controls::VideoSource** __retval)
{
    *__retval = __this->Source();
}

// public void set_Source(Fuse.Controls.VideoSource value) :137
void Video__set_Source_fn(Video* __this, ::g::Fuse::Controls::VideoSource* value)
{
    __this->Source(value);
}

// public generated void add_SourceChanged(Uno.EventHandler value) :374
void Video__add_SourceChanged_fn(Video* __this, uDelegate* value)
{
    __this->add_SourceChanged(value);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) :374
void Video__remove_SourceChanged_fn(Video* __this, uDelegate* value)
{
    __this->remove_SourceChanged(value);
}

// private static void stop(Fuse.Controls.Video v) :71
void Video__stop_fn(Video* v)
{
    Video::stop(v);
}

// public void Stop() :394
void Video__Stop_fn(Video* __this)
{
    __this->Stop();
}

// public Fuse.Elements.StretchDirection get_StretchDirection() :289
void Video__get_StretchDirection_fn(Video* __this, int32_t* __retval)
{
    *__retval = __this->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) :290
void Video__set_StretchDirection_fn(Video* __this, int32_t* value)
{
    __this->StretchDirection(*value);
}

// public Fuse.Elements.StretchMode get_StretchMode() :272
void Video__get_StretchMode_fn(Video* __this, int32_t* __retval)
{
    *__retval = __this->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) :273
void Video__set_StretchMode_fn(Video* __this, int32_t* value)
{
    __this->StretchMode(*value);
}

// public Fuse.Elements.StretchSizing get_StretchSizing() :308
void Video__get_StretchSizing_fn(Video* __this, int32_t* __retval)
{
    *__retval = __this->StretchSizing();
}

// public void set_StretchSizing(Fuse.Elements.StretchSizing value) :309
void Video__set_StretchSizing_fn(Video* __this, int32_t* value)
{
    __this->StretchSizing(*value);
}

// private void UpdateScriptClass(double duration) :23
void Video__UpdateScriptClass_fn(Video* __this, double* duration)
{
    __this->UpdateScriptClass(*duration);
}

// public string get_Url() :204
void Video__get_Url_fn(Video* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public void set_Url(string value) :205
void Video__set_Url_fn(Video* __this, uString* value)
{
    __this->Url(value);
}

// public float get_Volume() :344
void Video__get_Volume_fn(Video* __this, float* __retval)
{
    *__retval = __this->Volume();
}

// public void set_Volume(float value) :345
void Video__set_Volume_fn(Video* __this, float* value)
{
    __this->Volume(*value);
}

::g::Uno::UX::Selector Video::_positionName_;
::g::Uno::UX::Selector Video::_durationName_;
::g::Uno::UX::Selector Video::_progressName_;

// public generated Video() [instance] :8
void Video::ctor_7()
{
    _durationMutex = ::g::Uno::Object::New();
    _scale9Margin = ::g::Uno::Float4__New1(10.0f);
    _stretchMode = 5;
    _stretchSizing = 1;
    _contentAlignment = 10;
    _volume = 1.0f;
    ctor_6();
}

// public bool get_AutoPlay() [instance] :255
bool Video::AutoPlay()
{
    return _autoPlay;
}

// public void set_AutoPlay(bool value) [instance] :256
void Video::AutoPlay(bool value)
{
    uStackFrame __("Fuse.Controls.Video", "set_AutoPlay(bool)");

    if (_autoPlay != value)
    {
        _autoPlay = value;
        OnParamChanged();
    }
}

// public bool get_CanPause() [instance] :420
bool Video::CanPause()
{
    return true;
}

// public bool get_CanPlayTo() [instance] :410
bool Video::CanPlayTo()
{
    uStackFrame __("Fuse.Controls.Video", "get_CanPlayTo()");
    return (Playback() != NULL) ? ::g::Fuse::Triggers::IPlayback::CanPlayTo(uInterface(uPtr(Playback()), ::TYPES[102/*Fuse.Triggers.IPlayback*/])) : false;
}

// public bool get_CanResume() [instance] :425
bool Video::CanResume()
{
    return true;
}

// public bool get_CanStop() [instance] :415
bool Video::CanStop()
{
    return true;
}

// private void ClearSource(Fuse.Controls.VideoSource source) [instance] :160
void Video::ClearSource(::g::Fuse::Controls::VideoSource* source)
{
    if (uIs(source, ::TYPES[98/*Fuse.Controls.FileVideoSource*/]))
        File(NULL);
    else if (uIs(source, ::TYPES[99/*Fuse.Controls.UrlVideoSource*/]))
        Url(NULL);
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :327
int32_t Video::ContentAlignment()
{
    return _contentAlignment;
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :328
void Video::ContentAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.Video", "set_ContentAlignment(Fuse.Elements.Alignment)");

    if (_contentAlignment != value)
    {
        _contentAlignment = value;
        OnRenderParamChanged();
    }
}

// public double get_Duration() [instance] :458
double Video::Duration()
{
    uStackFrame __("Fuse.Controls.Video", "get_Duration()");
    return (Playback() != NULL) ? ::g::Fuse::Triggers::IMediaPlayback::Duration(uInterface(uPtr(Playback()), ::TYPES[103/*Fuse.Triggers.IMediaPlayback*/])) : 0.0;
}

// public Uno.UX.FileSource get_File() [instance] :186
::g::Uno::UX::FileSource* Video::File()
{
    return _file;
}

// public void set_File(Uno.UX.FileSource value) [instance] :187
void Video::File(::g::Uno::UX::FileSource* value)
{
    uStackFrame __("Fuse.Controls.Video", "set_File(Uno.UX.FileSource)");

    if (_file != value)
    {
        _file = value;
        OnSourceChanged();
    }
}

// public bool get_IsLooping() [instance] :238
bool Video::IsLooping()
{
    return _isLooping;
}

// public void set_IsLooping(bool value) [instance] :239
void Video::IsLooping(bool value)
{
    uStackFrame __("Fuse.Controls.Video", "set_IsLooping(bool)");

    if (_isLooping != value)
    {
        _isLooping = value;
        OnParamChanged();
    }
}

// internal void OnDurationChanged() [instance] :499
void Video::OnDurationChanged()
{
    uStackFrame __("Fuse.Controls.Video", "OnDurationChanged()");
    OnPropertyChanged(Video::_durationName_);
}

// private void OnParamChanged() [instance] :382
void Video::OnParamChanged()
{
    uStackFrame __("Fuse.Controls.Video", "OnParamChanged()");

    if (::g::Uno::Delegate::op_Inequality(ParamChanged1, NULL))
        uPtr(ParamChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnProgressChanged(object sender, Uno.EventArgs args) [instance] :488
void Video::OnProgressChanged(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.Video", "OnProgressChanged(object,Uno.EventArgs)");
    ::g::Uno::UX::ValueChangedArgs* ret2;
    UpdateScriptClass(Duration());
    OnPropertyChanged(Video::_positionName_);
    OnPropertyChanged(Video::_progressName_);

    if (::g::Uno::Delegate::op_Inequality(ProgressChanged1, NULL))
        uPtr(ProgressChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[100/*Uno.UX.ValueChangedArgs<double>*/], uCRef(Progress()), &ret2), ret2));
}

// private void OnRenderParamChanged() [instance] :376
void Video::OnRenderParamChanged()
{
    uStackFrame __("Fuse.Controls.Video", "OnRenderParamChanged()");

    if (::g::Uno::Delegate::op_Inequality(RenderParamChanged1, NULL))
        uPtr(RenderParamChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnSourceChanged() [instance] :388
void Video::OnSourceChanged()
{
    uStackFrame __("Fuse.Controls.Video", "OnSourceChanged()");

    if (::g::Uno::Delegate::op_Inequality(SourceChanged1, NULL))
        uPtr(SourceChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnVideoSourceChanged(object sender, Uno.EventArgs args) [instance] :155
void Video::OnVideoSourceChanged(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.Video", "OnVideoSourceChanged(object,Uno.EventArgs)");
    SetSource(_source);
}

// public generated void add_ParamChanged(Uno.EventHandler value) [instance] :371
void Video::add_ParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "add_ParamChanged(Uno.EventHandler)");
    ParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ParamChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_ParamChanged(Uno.EventHandler value) [instance] :371
void Video::remove_ParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "remove_ParamChanged(Uno.EventHandler)");
    ParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ParamChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public void Pause() [instance] :429
void Video::Pause()
{
    uStackFrame __("Fuse.Controls.Video", "Pause()");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::Pause(uInterface(uPtr(Playback()), ::TYPES[102/*Fuse.Triggers.IPlayback*/]));
}

// private Fuse.Triggers.IMediaPlayback get_Playback() [instance] :466
uObject* Video::Playback()
{
    return _playback;
}

// private void set_Playback(Fuse.Triggers.IMediaPlayback value) [instance] :467
void Video::Playback(uObject* value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Playback(Fuse.Triggers.IMediaPlayback)");

    if (_playback != NULL)
        ::g::Fuse::Triggers::IProgress::remove_ProgressChanged(uInterface(uPtr(_playback), ::TYPES[104/*Fuse.Triggers.IProgress*/]), uDelegate::New(::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/], (void*)Video__OnProgressChanged_fn, this));

    _playback = value;

    if (_playback != NULL)
        ::g::Fuse::Triggers::IProgress::add_ProgressChanged(uInterface(uPtr(_playback), ::TYPES[104/*Fuse.Triggers.IProgress*/]), uDelegate::New(::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/], (void*)Video__OnProgressChanged_fn, this));

    if (IsRootingCompleted())
        OnProgressChanged(NULL, NULL);
}

// public void PlayTo(double progress) [instance] :402
void Video::PlayTo(double progress)
{
    uStackFrame __("Fuse.Controls.Video", "PlayTo(double)");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::PlayTo(uInterface(uPtr(Playback()), ::TYPES[102/*Fuse.Triggers.IPlayback*/]), progress);
}

// public new double get_Position() [instance] :452
double Video::Position()
{
    uStackFrame __("Fuse.Controls.Video", "get_Position()");
    return (Playback() != NULL) ? ::g::Fuse::Triggers::IMediaPlayback::Position(uInterface(uPtr(Playback()), ::TYPES[103/*Fuse.Triggers.IMediaPlayback*/])) : 0.0;
}

// public new void set_Position(double value) [instance] :453
void Video::Position(double value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Position(double)");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IMediaPlayback::Position(uInterface(uPtr(Playback()), ::TYPES[103/*Fuse.Triggers.IMediaPlayback*/]), value);
}

// public double get_Progress() [instance] :445
double Video::Progress()
{
    uStackFrame __("Fuse.Controls.Video", "get_Progress()");
    return (Playback() != NULL) ? ::g::Fuse::Triggers::IPlayback::Progress(uInterface(uPtr(uAs<uObject*>(Playback(), ::TYPES[102/*Fuse.Triggers.IPlayback*/])), ::TYPES[102/*Fuse.Triggers.IPlayback*/])) : 0.0;
}

// public void set_Progress(double value) [instance] :446
void Video::Progress(double value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Progress(double)");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::Progress(uInterface(uPtr(uAs<uObject*>(Playback(), ::TYPES[102/*Fuse.Triggers.IPlayback*/])), ::TYPES[102/*Fuse.Triggers.IPlayback*/]), value);
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :461
void Video::add_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "add_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ProgressChanged1, value), ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :461
void Video::remove_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "remove_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ProgressChanged1, value), ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void add_RenderParamChanged(Uno.EventHandler value) [instance] :368
void Video::add_RenderParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "add_RenderParamChanged(Uno.EventHandler)");
    RenderParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(RenderParamChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_RenderParamChanged(Uno.EventHandler value) [instance] :368
void Video::remove_RenderParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "remove_RenderParamChanged(Uno.EventHandler)");
    RenderParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(RenderParamChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public void Resume() [instance] :435
void Video::Resume()
{
    uStackFrame __("Fuse.Controls.Video", "Resume()");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::Resume(uInterface(uPtr(Playback()), ::TYPES[102/*Fuse.Triggers.IPlayback*/]));
}

// public float4 get_Scale9Margin() [instance] :220
::g::Uno::Float4 Video::Scale9Margin()
{
    return _scale9Margin;
}

// public void set_Scale9Margin(float4 value) [instance] :221
void Video::Scale9Margin(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Scale9Margin(float4)");

    if (!_hasScale9Margin || ::g::Uno::Float4__op_Inequality(_scale9Margin, value))
    {
        _scale9Margin = value;
        _hasScale9Margin = true;
        OnParamChanged();
    }
}

// public void SetPlayback(Fuse.Triggers.IMediaPlayback playback) [instance] :504
void Video::SetPlayback(uObject* playback)
{
    uStackFrame __("Fuse.Controls.Video", "SetPlayback(Fuse.Triggers.IMediaPlayback)");
    Playback(playback);
}

// public void SetProgress(double value, Uno.UX.IPropertyListener origin) [instance] :509
void Video::SetProgress(double value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Video", "SetProgress(double,Uno.UX.IPropertyListener)");

    if (origin != this)
        Progress(value);
}

// private void SetSource(Fuse.Controls.VideoSource source) [instance] :169
void Video::SetSource(::g::Fuse::Controls::VideoSource* source)
{
    uStackFrame __("Fuse.Controls.Video", "SetSource(Fuse.Controls.VideoSource)");

    if (uIs(source, ::TYPES[98/*Fuse.Controls.FileVideoSource*/]))
        File(uPtr(uCast< ::g::Fuse::Controls::FileVideoSource*>(source, ::TYPES[98/*Fuse.Controls.FileVideoSource*/]))->File());
    else if (uIs(source, ::TYPES[99/*Fuse.Controls.UrlVideoSource*/]))
        Url(uPtr(uCast< ::g::Fuse::Controls::UrlVideoSource*>(source, ::TYPES[99/*Fuse.Controls.UrlVideoSource*/]))->Url());
}

// public Fuse.Controls.VideoSource get_Source() [instance] :136
::g::Fuse::Controls::VideoSource* Video::Source()
{
    return _source;
}

// public void set_Source(Fuse.Controls.VideoSource value) [instance] :137
void Video::Source(::g::Fuse::Controls::VideoSource* value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Source(Fuse.Controls.VideoSource)");

    if (_source != NULL)
    {
        uPtr(_source)->remove_SourceChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)Video__OnVideoSourceChanged_fn, this));
        ClearSource(_source);
    }

    _source = value;

    if (_source != NULL)
    {
        uPtr(_source)->add_SourceChanged(uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)Video__OnVideoSourceChanged_fn, this));
        SetSource(_source);
    }
}

// public generated void add_SourceChanged(Uno.EventHandler value) [instance] :374
void Video::add_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "add_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(SourceChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) [instance] :374
void Video::remove_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "remove_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(SourceChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public void Stop() [instance] :394
void Video::Stop()
{
    uStackFrame __("Fuse.Controls.Video", "Stop()");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::Stop(uInterface(uPtr(Playback()), ::TYPES[102/*Fuse.Triggers.IPlayback*/]));
}

// public Fuse.Elements.StretchDirection get_StretchDirection() [instance] :289
int32_t Video::StretchDirection()
{
    return _stretchDirection;
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) [instance] :290
void Video::StretchDirection(int32_t value)
{
    uStackFrame __("Fuse.Controls.Video", "set_StretchDirection(Fuse.Elements.StretchDirection)");

    if (_stretchDirection != value)
    {
        _stretchDirection = value;
        OnRenderParamChanged();
    }
}

// public Fuse.Elements.StretchMode get_StretchMode() [instance] :272
int32_t Video::StretchMode()
{
    return _stretchMode;
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) [instance] :273
void Video::StretchMode(int32_t value)
{
    uStackFrame __("Fuse.Controls.Video", "set_StretchMode(Fuse.Elements.StretchMode)");

    if (_stretchMode != value)
    {
        _stretchMode = value;
        OnRenderParamChanged();
    }
}

// public Fuse.Elements.StretchSizing get_StretchSizing() [instance] :308
int32_t Video::StretchSizing()
{
    return _stretchSizing;
}

// public void set_StretchSizing(Fuse.Elements.StretchSizing value) [instance] :309
void Video::StretchSizing(int32_t value)
{
    uStackFrame __("Fuse.Controls.Video", "set_StretchSizing(Fuse.Elements.StretchSizing)");

    if (_stretchSizing != value)
    {
        _stretchSizing = value;
        OnRenderParamChanged();
    }
}

// private void UpdateScriptClass(double duration) [instance] :23
void Video::UpdateScriptClass(double duration)
{
    ::g::Uno::Threading::Monitor::Enter(_durationMutex);

    {
        try
        {
            {
                _outDuration = duration;
            }
        }

        catch (const uThrowable& __t)
        {
            {
                ::g::Uno::Threading::Monitor::Exit(_durationMutex);
            }
                        throw __t;
            goto __after_finally_10;
        }

        {
            ::g::Uno::Threading::Monitor::Exit(_durationMutex);
        }
        __after_finally_10:;
    }
}

// public string get_Url() [instance] :204
uString* Video::Url()
{
    return _url;
}

// public void set_Url(string value) [instance] :205
void Video::Url(uString* value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Url(string)");

    if (::g::Uno::String::op_Inequality(_url, value))
    {
        _url = value;
        OnSourceChanged();
    }
}

// public float get_Volume() [instance] :344
float Video::Volume()
{
    return _volume;
}

// public void set_Volume(float value) [instance] :345
void Video::Volume(float value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Volume(float)");

    if (_volume != value)
    {
        _volume = value;
        OnParamChanged();
    }
}

// private static object getDuration(Fuse.Scripting.Context c, Fuse.Controls.Video v, object[] args) [static] :34
uObject* Video::getDuration(::g::Fuse::Scripting::Context* c, Video* v, uArray* args)
{
    uStackFrame __("Fuse.Controls.Video", "getDuration(Fuse.Scripting.Context,Fuse.Controls.Video,object[])");
    Video_typeof()->Init();

    if (uPtr(args)->Length() != 0)
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition1(::STRINGS[131/*"getDuration...*/], uBox<int32_t>(::g::Uno::Int_typeof(), uPtr(args)->Length())), ::STRINGS[132/*" was supplied"*/]), v, ::STRINGS[133/*"C:\\Users\\...*/], 38, ::STRINGS[127/*"getDuration"*/], NULL);
        return NULL;
    }

    ::g::Uno::Threading::Monitor::Enter(uPtr(v)->_durationMutex);

    {
        try
        {
            {
                uObject* __uno_retval = uBox(::g::Uno::Double_typeof(), uPtr(v)->_outDuration);
                ::g::Uno::Threading::Monitor::Exit(uPtr(v)->_durationMutex);
                return __uno_retval;
            }
        }

        catch (const uThrowable& __t)
        {
            {
                ::g::Uno::Threading::Monitor::Exit(uPtr(v)->_durationMutex);
            }
                        throw __t;
            goto __after_finally_11;
        }

        {
            ::g::Uno::Threading::Monitor::Exit(uPtr(v)->_durationMutex);
        }
        __after_finally_11:;
    }
}

// public generated Video New() [static] :8
Video* Video::New4()
{
    Video* obj1 = (Video*)uNew(Video_typeof());
    obj1->ctor_7();
    return obj1;
}

// private static void pause(Fuse.Controls.Video v) [static] :61
void Video::pause(Video* v)
{
    uStackFrame __("Fuse.Controls.Video", "pause(Fuse.Controls.Video)");
    Video_typeof()->Init();
    uPtr(v)->Pause();
}

// private static void resume(Fuse.Controls.Video v) [static] :51
void Video::resume(Video* v)
{
    uStackFrame __("Fuse.Controls.Video", "resume(Fuse.Controls.Video)");
    Video_typeof()->Init();
    uPtr(v)->Resume();
}

// private static void stop(Fuse.Controls.Video v) [static] :71
void Video::stop(Video* v)
{
    uStackFrame __("Fuse.Controls.Video", "stop(Fuse.Controls.Video)");
    Video_typeof()->Init();
    uPtr(v)->Stop();
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Video\1.7.2\Video.uno
// ---------------------------------------------------------------------------------------

// public abstract class VideoSource :11
// {
static void VideoSource_build(uType* type)
{
    ::TYPES[24] = ::g::Uno::EventHandler_typeof();
    type->SetDependencies(
        ::g::Uno::EventArgs_typeof());
    type->SetFields(0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(VideoSource, SourceChanged1), 0);
    type->Reflection.SetFunctions(2,
        new uFunction("add_SourceChanged", NULL, (void*)VideoSource__add_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_SourceChanged", NULL, (void*)VideoSource__remove_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]));
}

uType* VideoSource_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.DependencyCount = 1;
    options.ObjectSize = sizeof(VideoSource);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.VideoSource", options);
    type->fp_build_ = VideoSource_build;
    return type;
}

// protected generated VideoSource() :11
void VideoSource__ctor__fn(VideoSource* __this)
{
    __this->ctor_();
}

// protected void OnSourceChanged() :15
void VideoSource__OnSourceChanged_fn(VideoSource* __this)
{
    __this->OnSourceChanged();
}

// public generated void add_SourceChanged(Uno.EventHandler value) :13
void VideoSource__add_SourceChanged_fn(VideoSource* __this, uDelegate* value)
{
    __this->add_SourceChanged(value);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) :13
void VideoSource__remove_SourceChanged_fn(VideoSource* __this, uDelegate* value)
{
    __this->remove_SourceChanged(value);
}

// protected generated VideoSource() [instance] :11
void VideoSource::ctor_()
{
}

// protected void OnSourceChanged() [instance] :15
void VideoSource::OnSourceChanged()
{
    uStackFrame __("Fuse.Controls.VideoSource", "OnSourceChanged()");

    if (::g::Uno::Delegate::op_Inequality(SourceChanged1, NULL))
        uPtr(SourceChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// public generated void add_SourceChanged(Uno.EventHandler value) [instance] :13
void VideoSource::add_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.VideoSource", "add_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(SourceChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) [instance] :13
void VideoSource::remove_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.VideoSource", "remove_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(SourceChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls\1.7.2\Viewbox.uno
// -----------------------------------------------------------------------------------

// public sealed class Viewbox :28
// {
static void Viewbox_build(uType* type)
{
    ::TYPES[8] = ::g::Fuse::Elements::Element_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface16));
    type->SetFields(108,
        ::g::Fuse::Internal::SizingContainer_typeof(), offsetof(Viewbox, sizing), 0,
        ::g::Uno::Float2_typeof(), offsetof(Viewbox, _scale), 0);
    type->Reflection.SetFunctions(7,
        new uFunction("get_Content", NULL, (void*)Viewbox__get_Content1_fn, 0, false, ::TYPES[8/*Fuse.Elements.Element*/], 0),
        new uFunction("set_Content", NULL, (void*)Viewbox__set_Content1_fn, 0, false, uVoid_typeof(), 1, ::TYPES[8/*Fuse.Elements.Element*/]),
        new uFunction(".ctor", NULL, (void*)Viewbox__New3_fn, 0, true, type, 0),
        new uFunction("get_StretchDirection", NULL, (void*)Viewbox__get_StretchDirection_fn, 0, false, ::g::Fuse::Elements::StretchDirection_typeof(), 0),
        new uFunction("set_StretchDirection", NULL, (void*)Viewbox__set_StretchDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchDirection_typeof()),
        new uFunction("get_StretchMode", NULL, (void*)Viewbox__get_StretchMode_fn, 0, false, ::g::Fuse::Elements::StretchMode_typeof(), 0),
        new uFunction("set_StretchMode", NULL, (void*)Viewbox__set_StretchMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchMode_typeof()));
}

::g::Fuse::Controls::ContentControl_type* Viewbox_typeof()
{
    static uSStrong< ::g::Fuse::Controls::ContentControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ContentControl_typeof();
    options.FieldCount = 110;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(Viewbox);
    options.TypeSize = sizeof(::g::Fuse::Controls::ContentControl_type);
    type = (::g::Fuse::Controls::ContentControl_type*)uClassType::New("Fuse.Controls.Viewbox", options);
    type->fp_build_ = Viewbox_build;
    type->fp_ctor_ = (void*)Viewbox__New3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))Viewbox__ArrangePaddingBox_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Viewbox__GetContentSize_fn;
    type->fp_IsMarginBoxDependent = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Visual*, int32_t*))Viewbox__IsMarginBoxDependent_fn;
    type->fp_PrependImplicitTransform = (void(*)(::g::Fuse::Visual*, ::g::Fuse::FastMatrix*))Viewbox__PrependImplicitTransform_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Viewbox() :28
void Viewbox__ctor_6_fn(Viewbox* __this)
{
    __this->ctor_6();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :82
void Viewbox__ArrangePaddingBox_fn(Viewbox* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.Viewbox", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    uPtr(__this->sizing)->padding = __this->Padding();

    if (__this->Content1() != NULL)
        uPtr(__this->sizing)->align = uPtr(__this->Content1())->Alignment();

    ::g::Uno::Float2 contentDesiredSize = __this->GetNaturalContentSize();
    __this->_scale = uPtr(__this->sizing)->CalcScale(lp_.Size(), contentDesiredSize);
    __this->InvalidateLocalTransform();
    ::g::Uno::Float2 origin = uPtr(__this->sizing)->CalcOrigin(lp_.Size(), ::g::Uno::Float2__op_Multiply2(contentDesiredSize, __this->_scale));

    if ((__this->_scale.X > 1e-05f) && (__this->_scale.Y > 1e-05f))
        origin = ::g::Uno::Float2__op_Division2(origin, __this->_scale);

    if (__this->Content1() != NULL)
    {
        ::g::Fuse::LayoutParams nlp = lp_.CloneAndDerive();
        nlp.SetSize(contentDesiredSize, true, true);
        uPtr(__this->Content1())->ArrangeMarginBox(origin, nlp);
    }
}

// public new Fuse.Elements.Element get_Content() :33
void Viewbox__get_Content1_fn(Viewbox* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->Content1();
}

// public new void set_Content(Fuse.Elements.Element value) :34
void Viewbox__set_Content1_fn(Viewbox* __this, ::g::Fuse::Elements::Element* value)
{
    __this->Content1(value);
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :74
void Viewbox__GetContentSize_fn(Viewbox* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Viewbox", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 natural = __this->GetNaturalContentSize();
    uPtr(__this->sizing)->padding = ::g::Uno::Float4__New1(0.0f);
    ::g::Uno::Float2 r = uPtr(__this->sizing)->ExpandFillSize(natural, lp_);
    return *__retval = r, void();
}

// protected float2 GetNaturalContentSize() :69
void Viewbox__GetNaturalContentSize_fn(Viewbox* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->GetNaturalContentSize();
}

// protected override sealed Fuse.LayoutDependent IsMarginBoxDependent(Fuse.Visual child) :117
void Viewbox__IsMarginBoxDependent_fn(Viewbox* __this, ::g::Fuse::Visual* child, int32_t* __retval)
{
    return *__retval = 4, void();
}

// public generated Viewbox New() :28
void Viewbox__New3_fn(Viewbox** __retval)
{
    *__retval = Viewbox::New3();
}

// private void OnSizingChanged() :60
void Viewbox__OnSizingChanged_fn(Viewbox* __this)
{
    __this->OnSizingChanged();
}

// protected override sealed void PrependImplicitTransform(Fuse.FastMatrix m) :109
void Viewbox__PrependImplicitTransform_fn(Viewbox* __this, ::g::Fuse::FastMatrix* m)
{
    uStackFrame __("Fuse.Controls.Viewbox", "PrependImplicitTransform(Fuse.FastMatrix)");
    ::g::Fuse::Elements::Element__PrependImplicitTransform_fn(__this, m);

    if (::g::Uno::Vector::Length(__this->_scale) > 1e-05f)
        uPtr(m)->PrependScale1(::g::Uno::Float3__New2(__this->_scale.X, __this->_scale.Y, 1.0f));
}

// public Fuse.Elements.StretchDirection get_StretchDirection() :52
void Viewbox__get_StretchDirection_fn(Viewbox* __this, int32_t* __retval)
{
    *__retval = __this->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) :53
void Viewbox__set_StretchDirection_fn(Viewbox* __this, int32_t* value)
{
    __this->StretchDirection(*value);
}

// public Fuse.Elements.StretchMode get_StretchMode() :42
void Viewbox__get_StretchMode_fn(Viewbox* __this, int32_t* __retval)
{
    *__retval = __this->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) :43
void Viewbox__set_StretchMode_fn(Viewbox* __this, int32_t* value)
{
    __this->StretchMode(*value);
}

// public generated Viewbox() [instance] :28
void Viewbox::ctor_6()
{
    sizing = ::g::Fuse::Internal::SizingContainer::New1();
    _scale = ::g::Uno::Float2__New1(1.0f);
    ctor_5();
}

// public new Fuse.Elements.Element get_Content() [instance] :33
::g::Fuse::Elements::Element* Viewbox::Content1()
{
    uStackFrame __("Fuse.Controls.Viewbox", "get_Content()");
    return uAs< ::g::Fuse::Elements::Element*>(Content(), ::TYPES[8/*Fuse.Elements.Element*/]);
}

// public new void set_Content(Fuse.Elements.Element value) [instance] :34
void Viewbox::Content1(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.Viewbox", "set_Content(Fuse.Elements.Element)");
    Content(value);
}

// protected float2 GetNaturalContentSize() [instance] :69
::g::Uno::Float2 Viewbox::GetNaturalContentSize()
{
    uStackFrame __("Fuse.Controls.Viewbox", "GetNaturalContentSize()");
    return (Content1() == NULL) ? ::g::Uno::Float2__New1(0.0f) : uPtr(Content1())->GetMarginSize(::g::Fuse::LayoutParams__CreateEmpty());
}

// private void OnSizingChanged() [instance] :60
void Viewbox::OnSizingChanged()
{
    uStackFrame __("Fuse.Controls.Viewbox", "OnSizingChanged()");
    InvalidateLayout(2);
    InvalidateVisualComposition();
}

// public Fuse.Elements.StretchDirection get_StretchDirection() [instance] :52
int32_t Viewbox::StretchDirection()
{
    uStackFrame __("Fuse.Controls.Viewbox", "get_StretchDirection()");
    return uPtr(sizing)->stretchDirection;
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) [instance] :53
void Viewbox::StretchDirection(int32_t value)
{
    uStackFrame __("Fuse.Controls.Viewbox", "set_StretchDirection(Fuse.Elements.StretchDirection)");

    if (uPtr(sizing)->SetStretchDirection(value))
        OnSizingChanged();
}

// public Fuse.Elements.StretchMode get_StretchMode() [instance] :42
int32_t Viewbox::StretchMode()
{
    uStackFrame __("Fuse.Controls.Viewbox", "get_StretchMode()");
    return uPtr(sizing)->stretchMode;
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) [instance] :43
void Viewbox::StretchMode(int32_t value)
{
    uStackFrame __("Fuse.Controls.Viewbox", "set_StretchMode(Fuse.Elements.StretchMode)");

    if (uPtr(sizing)->SetStretchMode(value))
        OnSizingChanged();
}

// public generated Viewbox New() [static] :28
Viewbox* Viewbox::New3()
{
    Viewbox* obj1 = (Viewbox*)uNew(Viewbox_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\TreeRenderer.Android.uno
// -------------------------------------------------------------------------------------------------------

// private sealed class TreeRenderer.ViewGroup :15
// {
static void TreeRenderer__ViewGroup_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(::g::Fuse::Controls::Native::ViewHandle_type, interface0));
    type->SetFields(5,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(TreeRenderer__ViewGroup, _content), 0);
}

::g::Fuse::Controls::Native::ViewHandle_type* TreeRenderer__ViewGroup_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Native::ViewHandle_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Native::ViewHandle_typeof();
    options.FieldCount = 6;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(TreeRenderer__ViewGroup);
    options.TypeSize = sizeof(::g::Fuse::Controls::Native::ViewHandle_type);
    type = (::g::Fuse::Controls::Native::ViewHandle_type*)uClassType::New("Fuse.Controls.TreeRenderer.ViewGroup", options);
    type->fp_build_ = TreeRenderer__ViewGroup_build;
    type->fp_Dispose = (void(*)(::g::Fuse::Controls::Native::ViewHandle*))TreeRenderer__ViewGroup__Dispose_fn;
    type->fp_Measure = (void(*)(::g::Fuse::Controls::Native::ViewHandle*, ::g::Fuse::LayoutParams*, float*, ::g::Uno::Float2*))TreeRenderer__ViewGroup__Measure_fn;
    type->interface0.fp_Dispose = (void(*)(uObject*))TreeRenderer__ViewGroup__Dispose_fn;
    return type;
}

// public ViewGroup(Fuse.Controls.Native.ViewHandle content) :19
void TreeRenderer__ViewGroup__ctor_4_fn(TreeRenderer__ViewGroup* __this, ::g::Fuse::Controls::Native::ViewHandle* content)
{
    __this->ctor_4(content);
}

// public override sealed void Dispose() :30
void TreeRenderer__ViewGroup__Dispose_fn(TreeRenderer__ViewGroup* __this)
{
    uStackFrame __("Fuse.Controls.TreeRenderer.ViewGroup", "Dispose()");
    ::g::Fuse::Controls::Native::ViewHandle__Dispose_fn(__this);
    uPtr(__this->_content)->Dispose();
    __this->_content = NULL;
}

// public override sealed float2 Measure(Fuse.LayoutParams lp, float density) :25
void TreeRenderer__ViewGroup__Measure_fn(TreeRenderer__ViewGroup* __this, ::g::Fuse::LayoutParams* lp, float* density, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.TreeRenderer.ViewGroup", "Measure(Fuse.LayoutParams,float)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    float density_ = *density;
    return *__retval = uPtr(__this->_content)->Measure(lp_, density_), void();
}

// public ViewGroup New(Fuse.Controls.Native.ViewHandle content) :19
void TreeRenderer__ViewGroup__New5_fn(::g::Fuse::Controls::Native::ViewHandle* content, TreeRenderer__ViewGroup** __retval)
{
    *__retval = TreeRenderer__ViewGroup::New5(content);
}

// public ViewGroup(Fuse.Controls.Native.ViewHandle content) [instance] :19
void TreeRenderer__ViewGroup::ctor_4(::g::Fuse::Controls::Native::ViewHandle* content)
{
    uStackFrame __("Fuse.Controls.TreeRenderer.ViewGroup", ".ctor(Fuse.Controls.Native.ViewHandle)");
    ctor_(uPtr(::g::Fuse::Controls::Native::ViewFactory::InstantiateViewGroup())->NativeHandle);
    _content = content;
    InsertChild(content);
}

// public ViewGroup New(Fuse.Controls.Native.ViewHandle content) [static] :19
TreeRenderer__ViewGroup* TreeRenderer__ViewGroup::New5(::g::Fuse::Controls::Native::ViewHandle* content)
{
    TreeRenderer__ViewGroup* obj1 = (TreeRenderer__ViewGroup*)uNew(TreeRenderer__ViewGroup_typeof());
    obj1->ctor_4(content);
    return obj1;
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.WebView\1.7.2\WebView.uno
// -------------------------------------------------------------------------------------------

// public partial sealed class WebView :125
// {
// static WebView() :15
static void WebView__cctor_4_fn(uType* __type)
{
    ::g::Fuse::Scripting::ScriptClass_typeof()->Init();
    WebView::_urlName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[134/*"Url"*/]);
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[29/*Fuse.Scripting.ScriptMember[]*/], 7, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::TYPES[105/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[135/*"goto"*/], uDelegate::New(::TYPES[106/*Uno.Action<Fuse.Controls.WebView, object[]>*/], (void*)WebView__setUrl_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[105/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[136/*"goBack"*/], uDelegate::New(::TYPES[107/*Uno.Action<Fuse.Controls.WebView>*/], (void*)WebView__goBack_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[105/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[137/*"goForward"*/], uDelegate::New(::TYPES[107/*Uno.Action<Fuse.Controls.WebView>*/], (void*)WebView__goForward_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[105/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[27/*"reload"*/], uDelegate::New(::TYPES[107/*Uno.Action<Fuse.Controls.WebView>*/], (void*)WebView__reload_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New3(::TYPES[105/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[130/*"stop"*/], uDelegate::New(::TYPES[107/*Uno.Action<Fuse.Controls.WebView>*/], (void*)WebView__stop_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::TYPES[105/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[138/*"loadHtml"*/], uDelegate::New(::TYPES[106/*Uno.Action<Fuse.Controls.WebView, object[]>*/], (void*)WebView__loadHtml_fn)), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New2(::TYPES[105/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[139/*"setBaseUrl"*/], uDelegate::New(::TYPES[106/*Uno.Action<Fuse.Controls.WebView, object[]>*/], (void*)WebView__setBaseUrl_fn))));
}

static void WebView_build(uType* type)
{
    ::STRINGS[134] = uString::Const("Url");
    ::STRINGS[135] = uString::Const("goto");
    ::STRINGS[136] = uString::Const("goBack");
    ::STRINGS[137] = uString::Const("goForward");
    ::STRINGS[27] = uString::Const("reload");
    ::STRINGS[130] = uString::Const("stop");
    ::STRINGS[138] = uString::Const("loadHtml");
    ::STRINGS[139] = uString::Const("setBaseUrl");
    ::STRINGS[19] = uString::Const("");
    ::STRINGS[140] = uString::Const("WebView.loadHtml takes either one url argument, or an url and a baseUrl argument");
    ::STRINGS[141] = uString::Const("C:\\Users\\borde_000\\AppData\\Local\\Fusetools\\Packages\\Fuse.Controls.WebView\\1.7.2\\WebView.ScriptClass.uno");
    ::STRINGS[142] = uString::Const("about:blank");
    ::STRINGS[143] = uString::Const(":");
    ::STRINGS[144] = uString::Const("WebView.setBaseUrl requires 1 string argument");
    ::STRINGS[145] = uString::Const("WebView.setUrl requires 1 string argument");
    ::STRINGS[146] = uString::Const("setUrl");
    ::STRINGS[147] = uString::Const("ScrollEnabled cannot be changed once rooted");
    ::STRINGS[148] = uString::Const("C:/Users/borde_000/AppData/Local/Fusetools/Packages/Fuse.Controls.WebView/1.7.2/WebView.uno");
    ::STRINGS[149] = uString::Const("ZoomEnabled cannot be changed once rooted");
    ::TYPES[28] = ::g::Uno::Type_typeof();
    ::TYPES[29] = ::g::Fuse::Scripting::ScriptMember_typeof()->Array();
    ::TYPES[105] = ::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(type, NULL);
    ::TYPES[106] = ::g::Uno::Action2_typeof()->MakeType(type, uObject_typeof()->Array(), NULL);
    ::TYPES[107] = ::g::Uno::Action1_typeof()->MakeType(type, NULL);
    ::TYPES[108] = ::g::Fuse::Controls::FallbackWebViewClient_typeof();
    ::TYPES[109] = ::g::Uno::String_typeof()->Array();
    ::TYPES[36] = ::g::Fuse::Controls::IWebView_typeof();
    ::TYPES[110] = ::g::Fuse::Navigation::IBaseNavigation_typeof();
    ::TYPES[50] = ::g::Uno::String_typeof();
    ::TYPES[100] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[104] = ::g::Fuse::Triggers::IProgress_typeof();
    ::TYPES[27] = ::g::Fuse::Controls::ISourceReceiver_typeof();
    ::TYPES[26] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[24] = ::g::Uno::EventHandler_typeof();
    ::TYPES[25] = ::g::Fuse::Navigation::HistoryChangedHandler_typeof();
    type->SetDependencies(
        ::g::Uno::Diagnostics::Debug_typeof(),
        ::g::Uno::EventArgs_typeof());
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(WebView_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(WebView_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(WebView_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(WebView_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(WebView_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(WebView_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(WebView_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(WebView_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(WebView_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(WebView_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(WebView_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(WebView_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(WebView_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(WebView_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(WebView_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(WebView_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(WebView_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(WebView_type, interface17),
        ::TYPES[36/*Fuse.Controls.IWebView*/], offsetof(WebView_type, interface18),
        ::TYPES[104/*Fuse.Triggers.IProgress*/], offsetof(WebView_type, interface19),
        ::TYPES[110/*Fuse.Navigation.IBaseNavigation*/], offsetof(WebView_type, interface20),
        ::TYPES[27/*Fuse.Controls.ISourceReceiver*/], offsetof(WebView_type, interface21));
    type->SetFields(117,
        ::g::Fuse::Controls::HTML_typeof(), offsetof(WebView, _html), 0,
        ::TYPES[36/*Fuse.Controls.IWebView*/], offsetof(WebView, _fallbackClient), 0,
        ::TYPES[36/*Fuse.Controls.IWebView*/], offsetof(WebView, _webViewClient), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(WebView, BeginLoading1), 0,
        ::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/], offsetof(WebView, HistoryChanged1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(WebView, PageLoaded1), 0,
        ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/], offsetof(WebView, ProgressChanged1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(WebView, URISchemeHandler1), 0,
        ::TYPES[24/*Uno.EventHandler*/], offsetof(WebView, UrlChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&WebView::_urlName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(43,
        new uFunction("get_BaseUrl", NULL, (void*)WebView__get_BaseUrl_fn, 0, false, ::TYPES[50/*string*/], 0),
        new uFunction("set_BaseUrl", NULL, (void*)WebView__set_BaseUrl_fn, 0, false, uVoid_typeof(), 1, ::TYPES[50/*string*/]),
        new uFunction("add_BeginLoading", NULL, (void*)WebView__add_BeginLoading_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_BeginLoading", NULL, (void*)WebView__remove_BeginLoading_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("get_CanGoBack", NULL, (void*)WebView__get_CanGoBack_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanGoForward", NULL, (void*)WebView__get_CanGoForward_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_DocumentTitle", NULL, (void*)WebView__get_DocumentTitle_fn, 0, false, ::TYPES[50/*string*/], 0),
        new uFunction("Eval", NULL, (void*)WebView__Eval_fn, 0, false, uVoid_typeof(), 1, ::TYPES[50/*string*/]),
        new uFunction("Eval", NULL, (void*)WebView__Eval1_fn, 0, false, uVoid_typeof(), 2, ::TYPES[50/*string*/], ::g::Uno::Action1_typeof()->MakeType(::TYPES[50/*string*/], NULL)),
        new uFunction("get_File", NULL, (void*)WebView__get_File_fn, 0, false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, (void*)WebView__set_File_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction("GoBack", NULL, (void*)WebView__GoBack_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("GoForward", NULL, (void*)WebView__GoForward_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("add_HistoryChanged", NULL, (void*)WebView__add_HistoryChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/]),
        new uFunction("remove_HistoryChanged", NULL, (void*)WebView__remove_HistoryChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/]),
        new uFunction("get_HTMLSource", NULL, (void*)WebView__get_HTMLSource_fn, 0, false, ::g::Fuse::Controls::HTML_typeof(), 0),
        new uFunction("set_HTMLSource", NULL, (void*)WebView__set_HTMLSource_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::HTML_typeof()),
        new uFunction("LoadHtml", NULL, (void*)WebView__LoadHtml_fn, 0, false, uVoid_typeof(), 1, ::TYPES[50/*string*/]),
        new uFunction("LoadHtml", NULL, (void*)WebView__LoadHtml1_fn, 0, false, uVoid_typeof(), 2, ::TYPES[50/*string*/], ::TYPES[50/*string*/]),
        new uFunction("LoadUrl", NULL, (void*)WebView__LoadUrl_fn, 0, false, uVoid_typeof(), 1, ::TYPES[50/*string*/]),
        new uFunction(".ctor", NULL, (void*)WebView__New4_fn, 0, true, type, 0),
        new uFunction("add_PageLoaded", NULL, (void*)WebView__add_PageLoaded_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_PageLoaded", NULL, (void*)WebView__remove_PageLoaded_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("get_Progress", NULL, (void*)WebView__get_Progress_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("add_ProgressChanged", NULL, (void*)WebView__add_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("remove_ProgressChanged", NULL, (void*)WebView__remove_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("Reload", NULL, (void*)WebView__Reload_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("get_ScrollEnabled", NULL, (void*)WebView__get_ScrollEnabled_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_ScrollEnabled", NULL, (void*)WebView__set_ScrollEnabled_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("SetUrl", NULL, (void*)WebView__SetUrl_fn, 0, false, uVoid_typeof(), 2, ::TYPES[50/*string*/], ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Source", NULL, (void*)WebView__get_Source_fn, 0, false, ::TYPES[50/*string*/], 0),
        new uFunction("set_Source", NULL, (void*)WebView__set_Source_fn, 0, false, uVoid_typeof(), 1, ::TYPES[50/*string*/]),
        new uFunction("Stop", NULL, (void*)WebView__Stop_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("add_URISchemeHandler", NULL, (void*)WebView__add_URISchemeHandler_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_URISchemeHandler", NULL, (void*)WebView__remove_URISchemeHandler_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("get_Url", NULL, (void*)WebView__get_Url_fn, 0, false, ::TYPES[50/*string*/], 0),
        new uFunction("set_Url", NULL, (void*)WebView__set_Url_fn, 0, false, uVoid_typeof(), 1, ::TYPES[50/*string*/]),
        new uFunction("add_UrlChanged", NULL, (void*)WebView__add_UrlChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("remove_UrlChanged", NULL, (void*)WebView__remove_UrlChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[24/*Uno.EventHandler*/]),
        new uFunction("get_WebViewClient", NULL, (void*)WebView__get_WebViewClient_fn, 0, false, ::TYPES[36/*Fuse.Controls.IWebView*/], 0),
        new uFunction("set_WebViewClient", NULL, (void*)WebView__set_WebViewClient_fn, 0, false, uVoid_typeof(), 1, ::TYPES[36/*Fuse.Controls.IWebView*/]),
        new uFunction("get_ZoomEnabled", NULL, (void*)WebView__get_ZoomEnabled_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_ZoomEnabled", NULL, (void*)WebView__set_ZoomEnabled_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
}

WebView_type* WebView_typeof()
{
    static uSStrong<WebView_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 127;
    options.InterfaceCount = 22;
    options.DependencyCount = 2;
    options.ObjectSize = sizeof(WebView);
    options.TypeSize = sizeof(WebView_type);
    type = (WebView_type*)uClassType::New("Fuse.Controls.WebView", options);
    type->fp_build_ = WebView_build;
    type->fp_ctor_ = (void*)WebView__New4_fn;
    type->fp_cctor_ = WebView__cctor_4_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))WebView__CreateNativeView_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))WebView__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))WebView__OnUnrooted_fn;
    type->interface18.fp_Eval1 = (void(*)(uObject*, uString*, uDelegate*))WebView__Eval1_fn;
    type->interface18.fp_Eval = (void(*)(uObject*, uString*))WebView__Eval_fn;
    type->interface18.fp_LoadHtml = (void(*)(uObject*, uString*))WebView__LoadHtml_fn;
    type->interface18.fp_LoadHtml1 = (void(*)(uObject*, uString*, uString*))WebView__LoadHtml1_fn;
    type->interface18.fp_LoadUrl = (void(*)(uObject*, uString*))WebView__LoadUrl_fn;
    type->interface18.fp_Stop = (void(*)(uObject*))WebView__Stop_fn;
    type->interface18.fp_Reload = (void(*)(uObject*))WebView__Reload_fn;
    type->interface18.fp_get_BaseUrl = (void(*)(uObject*, uString**))WebView__get_BaseUrl_fn;
    type->interface18.fp_set_BaseUrl = (void(*)(uObject*, uString*))WebView__set_BaseUrl_fn;
    type->interface18.fp_get_Url = (void(*)(uObject*, uString**))WebView__get_Url_fn;
    type->interface18.fp_set_Url = (void(*)(uObject*, uString*))WebView__set_Url_fn;
    type->interface18.fp_get_DocumentTitle = (void(*)(uObject*, uString**))WebView__get_DocumentTitle_fn;
    type->interface18.fp_get_File = (void(*)(uObject*, ::g::Uno::UX::FileSource**))WebView__get_File_fn;
    type->interface18.fp_set_File = (void(*)(uObject*, ::g::Uno::UX::FileSource*))WebView__set_File_fn;
    type->interface18.fp_get_ZoomEnabled = (void(*)(uObject*, bool*))WebView__get_ZoomEnabled_fn;
    type->interface18.fp_set_ZoomEnabled = (void(*)(uObject*, bool*))WebView__set_ZoomEnabled_fn;
    type->interface18.fp_get_ScrollEnabled = (void(*)(uObject*, bool*))WebView__get_ScrollEnabled_fn;
    type->interface18.fp_set_ScrollEnabled = (void(*)(uObject*, bool*))WebView__set_ScrollEnabled_fn;
    type->interface18.fp_add_PageLoaded = (void(*)(uObject*, uDelegate*))WebView__add_PageLoaded_fn;
    type->interface18.fp_remove_PageLoaded = (void(*)(uObject*, uDelegate*))WebView__remove_PageLoaded_fn;
    type->interface18.fp_add_BeginLoading = (void(*)(uObject*, uDelegate*))WebView__add_BeginLoading_fn;
    type->interface18.fp_remove_BeginLoading = (void(*)(uObject*, uDelegate*))WebView__remove_BeginLoading_fn;
    type->interface18.fp_add_UrlChanged = (void(*)(uObject*, uDelegate*))WebView__add_UrlChanged_fn;
    type->interface18.fp_remove_UrlChanged = (void(*)(uObject*, uDelegate*))WebView__remove_UrlChanged_fn;
    type->interface18.fp_add_URISchemeHandler = (void(*)(uObject*, uDelegate*))WebView__add_URISchemeHandler_fn;
    type->interface18.fp_remove_URISchemeHandler = (void(*)(uObject*, uDelegate*))WebView__remove_URISchemeHandler_fn;
    type->interface19.fp_get_Progress = (void(*)(uObject*, double*))WebView__get_Progress_fn;
    type->interface19.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))WebView__add_ProgressChanged_fn;
    type->interface19.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))WebView__remove_ProgressChanged_fn;
    type->interface20.fp_GoForward = (void(*)(uObject*))WebView__GoForward_fn;
    type->interface20.fp_GoBack = (void(*)(uObject*))WebView__GoBack_fn;
    type->interface20.fp_get_CanGoBack = (void(*)(uObject*, bool*))WebView__get_CanGoBack_fn;
    type->interface20.fp_get_CanGoForward = (void(*)(uObject*, bool*))WebView__get_CanGoForward_fn;
    type->interface20.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))WebView__add_HistoryChanged_fn;
    type->interface20.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))WebView__remove_HistoryChanged_fn;
    type->interface21.fp_get_Source = (void(*)(uObject*, uString**))WebView__get_Source_fn;
    type->interface21.fp_set_Source = (void(*)(uObject*, uString*))WebView__set_Source_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public WebView() :192
void WebView__ctor_7_fn(WebView* __this)
{
    __this->ctor_7();
}

// private void applyFallbackCalls(Fuse.Controls.IWebView client) :305
void WebView__applyFallbackCalls_fn(WebView* __this, uObject* client)
{
    __this->applyFallbackCalls(client);
}

// public string get_BaseUrl() :355
void WebView__get_BaseUrl_fn(WebView* __this, uString** __retval)
{
    *__retval = __this->BaseUrl();
}

// public void set_BaseUrl(string value) :356
void WebView__set_BaseUrl_fn(WebView* __this, uString* value)
{
    __this->BaseUrl(value);
}

// public generated void add_BeginLoading(Uno.EventHandler value) :166
void WebView__add_BeginLoading_fn(WebView* __this, uDelegate* value)
{
    __this->add_BeginLoading(value);
}

// public generated void remove_BeginLoading(Uno.EventHandler value) :166
void WebView__remove_BeginLoading_fn(WebView* __this, uDelegate* value)
{
    __this->remove_BeginLoading(value);
}

// public bool get_CanGoBack() :404
void WebView__get_CanGoBack_fn(WebView* __this, bool* __retval)
{
    *__retval = __this->CanGoBack();
}

// public bool get_CanGoForward() :409
void WebView__get_CanGoForward_fn(WebView* __this, bool* __retval)
{
    *__retval = __this->CanGoForward();
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :134
void WebView__CreateNativeView_fn(WebView* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.WebView", "CreateNativeView()");
    uObject* ret4;
    uString* scheme = ::STRINGS[19/*""*/];
    scheme = WebView::PreprocUriScheme(scheme);
    uArray* schemes = ::g::Uno::String::op_Inequality(scheme, ::STRINGS[19/*""*/]) ? uArray::Init<uString*>(::TYPES[109/*string[]*/], 1, scheme) : uArray::Init<uString*>(::TYPES[109/*string[]*/], 0);
    return *__retval = (uObject*)::g::Fuse::Android::Controls::WebView::Create(__this, schemes), void();
    return *__retval = (::g::Fuse::Controls::Control__CreateNativeView_fn(__this, &ret4), ret4), void();
}

// public string get_DocumentTitle() :338
void WebView__get_DocumentTitle_fn(WebView* __this, uString** __retval)
{
    *__retval = __this->DocumentTitle();
}

// public void Eval(string js) :412
void WebView__Eval_fn(WebView* __this, uString* js)
{
    __this->Eval(js);
}

// public void Eval(string js, Uno.Action<string> resultHandler) :417
void WebView__Eval1_fn(WebView* __this, uString* js, uDelegate* resultHandler)
{
    __this->Eval1(js, resultHandler);
}

// public Uno.UX.FileSource get_File() :398
void WebView__get_File_fn(WebView* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public void set_File(Uno.UX.FileSource value) :399
void WebView__set_File_fn(WebView* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// private static void goBack(Fuse.Controls.WebView view) :58
void WebView__goBack_fn(WebView* view)
{
    WebView::goBack(view);
}

// public void GoBack() :422
void WebView__GoBack_fn(WebView* __this)
{
    __this->GoBack();
}

// private static void goForward(Fuse.Controls.WebView view) :68
void WebView__goForward_fn(WebView* view)
{
    WebView::goForward(view);
}

// public void GoForward() :427
void WebView__GoForward_fn(WebView* __this)
{
    __this->GoForward();
}

// public generated void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :447
void WebView__add_HistoryChanged_fn(WebView* __this, uDelegate* value)
{
    __this->add_HistoryChanged(value);
}

// public generated void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :447
void WebView__remove_HistoryChanged_fn(WebView* __this, uDelegate* value)
{
    __this->remove_HistoryChanged(value);
}

// public Fuse.Controls.HTML get_HTMLSource() :182
void WebView__get_HTMLSource_fn(WebView* __this, ::g::Fuse::Controls::HTML** __retval)
{
    *__retval = __this->HTMLSource();
}

// public void set_HTMLSource(Fuse.Controls.HTML value) :186
void WebView__set_HTMLSource_fn(WebView* __this, ::g::Fuse::Controls::HTML* value)
{
    __this->HTMLSource(value);
}

// private static void loadHtml(Fuse.Controls.WebView view, object[] args) :35
void WebView__loadHtml_fn(WebView* view, uArray* args)
{
    WebView::loadHtml(view, args);
}

// public void LoadHtml(string html) :345
void WebView__LoadHtml_fn(WebView* __this, uString* html)
{
    __this->LoadHtml(html);
}

// public void LoadHtml(string html, string baseUrl) :341
void WebView__LoadHtml1_fn(WebView* __this, uString* html, uString* baseUrl)
{
    __this->LoadHtml1(html, baseUrl);
}

// public void LoadUrl(string url) :442
void WebView__LoadUrl_fn(WebView* __this, uString* url)
{
    __this->LoadUrl(url);
}

// public WebView New() :192
void WebView__New4_fn(WebView** __retval)
{
    *__retval = WebView::New4();
}

// private void OnBeginLoading(object sender, Uno.EventArgs args) :318
void WebView__OnBeginLoading_fn(WebView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnBeginLoading(sender, args);
}

// protected void OnHistoryChanged() :449
void WebView__OnHistoryChanged_fn(WebView* __this)
{
    __this->OnHistoryChanged();
}

// private void OnPageChanged(object sender, Uno.EventArgs args) :311
void WebView__OnPageChanged_fn(WebView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnPageChanged(sender, args);
}

// private void OnPageLoaded(object sender, Uno.EventArgs args) :330
void WebView__OnPageLoaded_fn(WebView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnPageLoaded(sender, args);
}

// private void OnProgressChanged(object sender, Uno.EventArgs args) :324
void WebView__OnProgressChanged_fn(WebView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnProgressChanged(sender, args);
}

// protected override sealed void OnRooted() :208
void WebView__OnRooted_fn(WebView* __this)
{
    uStackFrame __("Fuse.Controls.WebView", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
}

// protected override sealed void OnUnrooted() :213
void WebView__OnUnrooted_fn(WebView* __this)
{
    uStackFrame __("Fuse.Controls.WebView", "OnUnrooted()");
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// public generated void add_PageLoaded(Uno.EventHandler value) :162
void WebView__add_PageLoaded_fn(WebView* __this, uDelegate* value)
{
    __this->add_PageLoaded(value);
}

// public generated void remove_PageLoaded(Uno.EventHandler value) :162
void WebView__remove_PageLoaded_fn(WebView* __this, uDelegate* value)
{
    __this->remove_PageLoaded(value);
}

// private static string PreprocUriScheme(string inScheme) :129
void WebView__PreprocUriScheme_fn(uString* inScheme, uString** __retval)
{
    *__retval = WebView::PreprocUriScheme(inScheme);
}

// public double get_Progress() :155
void WebView__get_Progress_fn(WebView* __this, double* __retval)
{
    *__retval = __this->Progress();
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :158
void WebView__add_ProgressChanged_fn(WebView* __this, uDelegate* value)
{
    __this->add_ProgressChanged(value);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :158
void WebView__remove_ProgressChanged_fn(WebView* __this, uDelegate* value)
{
    __this->remove_ProgressChanged(value);
}

// private static void reload(Fuse.Controls.WebView view) :78
void WebView__reload_fn(WebView* view)
{
    WebView::reload(view);
}

// public void Reload() :432
void WebView__Reload_fn(WebView* __this)
{
    __this->Reload();
}

// public bool get_ScrollEnabled() :302
void WebView__get_ScrollEnabled_fn(WebView* __this, bool* __retval)
{
    *__retval = __this->ScrollEnabled();
}

// public void set_ScrollEnabled(bool value) :295
void WebView__set_ScrollEnabled_fn(WebView* __this, bool* value)
{
    __this->ScrollEnabled(*value);
}

// private static void setBaseUrl(Fuse.Controls.WebView view, object[] args) :119
void WebView__setBaseUrl_fn(WebView* view, uArray* args)
{
    WebView::setBaseUrl(view, args);
}

// private static void setUrl(Fuse.Controls.WebView view, object[] args) :100
void WebView__setUrl_fn(WebView* view, uArray* args)
{
    WebView::setUrl(view, args);
}

// public void SetUrl(string value, Uno.UX.IPropertyListener origin) :376
void WebView__SetUrl_fn(WebView* __this, uString* value, uObject* origin)
{
    __this->SetUrl(value, origin);
}

// public string get_Source() :364
void WebView__get_Source_fn(WebView* __this, uString** __retval)
{
    *__retval = __this->Source();
}

// public void set_Source(string value) :365
void WebView__set_Source_fn(WebView* __this, uString* value)
{
    __this->Source(value);
}

// private static void stop(Fuse.Controls.WebView view) :89
void WebView__stop_fn(WebView* view)
{
    WebView::stop(view);
}

// public void Stop() :437
void WebView__Stop_fn(WebView* __this)
{
    __this->Stop();
}

// internal void UpdateRestState() :368
void WebView__UpdateRestState_fn(WebView* __this)
{
    __this->UpdateRestState();
}

// public generated void add_URISchemeHandler(Uno.EventHandler value) :174
void WebView__add_URISchemeHandler_fn(WebView* __this, uDelegate* value)
{
    __this->add_URISchemeHandler(value);
}

// public generated void remove_URISchemeHandler(Uno.EventHandler value) :174
void WebView__remove_URISchemeHandler_fn(WebView* __this, uDelegate* value)
{
    __this->remove_URISchemeHandler(value);
}

// public string get_Url() :389
void WebView__get_Url_fn(WebView* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public void set_Url(string value) :390
void WebView__set_Url_fn(WebView* __this, uString* value)
{
    __this->Url(value);
}

// public generated void add_UrlChanged(Uno.EventHandler value) :170
void WebView__add_UrlChanged_fn(WebView* __this, uDelegate* value)
{
    __this->add_UrlChanged(value);
}

// public generated void remove_UrlChanged(Uno.EventHandler value) :170
void WebView__remove_UrlChanged_fn(WebView* __this, uDelegate* value)
{
    __this->remove_UrlChanged(value);
}

// public Fuse.Controls.IWebView get_WebViewClient() :223
void WebView__get_WebViewClient_fn(WebView* __this, uObject** __retval)
{
    *__retval = __this->WebViewClient();
}

// public void set_WebViewClient(Fuse.Controls.IWebView value) :224
void WebView__set_WebViewClient_fn(WebView* __this, uObject* value)
{
    __this->WebViewClient(value);
}

// public bool get_ZoomEnabled() :287
void WebView__get_ZoomEnabled_fn(WebView* __this, bool* __retval)
{
    *__retval = __this->ZoomEnabled();
}

// public void set_ZoomEnabled(bool value) :280
void WebView__set_ZoomEnabled_fn(WebView* __this, bool* value)
{
    __this->ZoomEnabled(*value);
}

::g::Uno::UX::Selector WebView::_urlName_;

// public WebView() [instance] :192
void WebView::ctor_7()
{
    uStackFrame __("Fuse.Controls.WebView", ".ctor()");
    _fallbackClient = (uObject*)::g::Fuse::Controls::FallbackWebViewClient::New1();
    ctor_6();
    ClipToBounds(true);
    WebViewClient(_fallbackClient);
}

// private void applyFallbackCalls(Fuse.Controls.IWebView client) [instance] :305
void WebView::applyFallbackCalls(uObject* client)
{
    uStackFrame __("Fuse.Controls.WebView", "applyFallbackCalls(Fuse.Controls.IWebView)");
    ::g::Fuse::Controls::FallbackWebViewClient* fbc = uAs< ::g::Fuse::Controls::FallbackWebViewClient*>(_fallbackClient, ::TYPES[108/*Fuse.Controls.FallbackWebViewClient*/]);
    uPtr(fbc)->ApplyBufferedCalls(client);
}

// public string get_BaseUrl() [instance] :355
uString* WebView::BaseUrl()
{
    uStackFrame __("Fuse.Controls.WebView", "get_BaseUrl()");
    return ::g::Fuse::Controls::IWebView::BaseUrl(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]));
}

// public void set_BaseUrl(string value) [instance] :356
void WebView::BaseUrl(uString* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_BaseUrl(string)");
    ::g::Fuse::Controls::IWebView::BaseUrl(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), (value != NULL) ? value : ::STRINGS[19/*""*/]);
}

// public generated void add_BeginLoading(Uno.EventHandler value) [instance] :166
void WebView::add_BeginLoading(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_BeginLoading(Uno.EventHandler)");
    BeginLoading1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(BeginLoading1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_BeginLoading(Uno.EventHandler value) [instance] :166
void WebView::remove_BeginLoading(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_BeginLoading(Uno.EventHandler)");
    BeginLoading1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(BeginLoading1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public bool get_CanGoBack() [instance] :404
bool WebView::CanGoBack()
{
    uStackFrame __("Fuse.Controls.WebView", "get_CanGoBack()");
    return ::g::Fuse::Navigation::IBaseNavigation::CanGoBack(uInterface(uPtr(WebViewClient()), ::TYPES[110/*Fuse.Navigation.IBaseNavigation*/]));
}

// public bool get_CanGoForward() [instance] :409
bool WebView::CanGoForward()
{
    uStackFrame __("Fuse.Controls.WebView", "get_CanGoForward()");
    return ::g::Fuse::Navigation::IBaseNavigation::CanGoForward(uInterface(uPtr(WebViewClient()), ::TYPES[110/*Fuse.Navigation.IBaseNavigation*/]));
}

// public string get_DocumentTitle() [instance] :338
uString* WebView::DocumentTitle()
{
    uStackFrame __("Fuse.Controls.WebView", "get_DocumentTitle()");
    return ::g::Fuse::Controls::IWebView::DocumentTitle(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]));
}

// public void Eval(string js) [instance] :412
void WebView::Eval(uString* js)
{
    uStackFrame __("Fuse.Controls.WebView", "Eval(string)");
    ::g::Fuse::Controls::IWebView::Eval(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), (js != NULL) ? js : ::STRINGS[19/*""*/]);
}

// public void Eval(string js, Uno.Action<string> resultHandler) [instance] :417
void WebView::Eval1(uString* js, uDelegate* resultHandler)
{
    uStackFrame __("Fuse.Controls.WebView", "Eval(string,Uno.Action<string>)");
    ::g::Fuse::Controls::IWebView::Eval1(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), (js != NULL) ? js : ::STRINGS[19/*""*/], resultHandler);
}

// public Uno.UX.FileSource get_File() [instance] :398
::g::Uno::UX::FileSource* WebView::File()
{
    uStackFrame __("Fuse.Controls.WebView", "get_File()");
    return ::g::Fuse::Controls::IWebView::File(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]));
}

// public void set_File(Uno.UX.FileSource value) [instance] :399
void WebView::File(::g::Uno::UX::FileSource* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_File(Uno.UX.FileSource)");
    ::g::Fuse::Controls::IWebView::File(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), value);
}

// public void GoBack() [instance] :422
void WebView::GoBack()
{
    uStackFrame __("Fuse.Controls.WebView", "GoBack()");
    ::g::Fuse::Navigation::IBaseNavigation::GoBack(uInterface(uPtr(WebViewClient()), ::TYPES[110/*Fuse.Navigation.IBaseNavigation*/]));
}

// public void GoForward() [instance] :427
void WebView::GoForward()
{
    uStackFrame __("Fuse.Controls.WebView", "GoForward()");
    ::g::Fuse::Navigation::IBaseNavigation::GoForward(uInterface(uPtr(WebViewClient()), ::TYPES[110/*Fuse.Navigation.IBaseNavigation*/]));
}

// public generated void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :447
void WebView::add_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    HistoryChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(HistoryChanged1, value), ::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/]);
}

// public generated void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :447
void WebView::remove_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    HistoryChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(HistoryChanged1, value), ::TYPES[25/*Fuse.Navigation.HistoryChangedHandler*/]);
}

// public Fuse.Controls.HTML get_HTMLSource() [instance] :182
::g::Fuse::Controls::HTML* WebView::HTMLSource()
{
    return _html;
}

// public void set_HTMLSource(Fuse.Controls.HTML value) [instance] :186
void WebView::HTMLSource(::g::Fuse::Controls::HTML* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_HTMLSource(Fuse.Controls.HTML)");
    _html = value;
    uPtr(_html)->Receiver = (uObject*)this;
}

// public void LoadHtml(string html) [instance] :345
void WebView::LoadHtml(uString* html)
{
    uStackFrame __("Fuse.Controls.WebView", "LoadHtml(string)");
    ::g::Fuse::Controls::IWebView::LoadHtml(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), (html != NULL) ? html : ::STRINGS[19/*""*/]);
}

// public void LoadHtml(string html, string baseUrl) [instance] :341
void WebView::LoadHtml1(uString* html, uString* baseUrl)
{
    uStackFrame __("Fuse.Controls.WebView", "LoadHtml(string,string)");
    ::g::Fuse::Controls::IWebView::LoadHtml1(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), (html != NULL) ? html : ::STRINGS[19/*""*/], baseUrl);
}

// public void LoadUrl(string url) [instance] :442
void WebView::LoadUrl(uString* url)
{
    uStackFrame __("Fuse.Controls.WebView", "LoadUrl(string)");
    ::g::Fuse::Controls::IWebView::LoadUrl(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), (url != NULL) ? url : ::STRINGS[142/*"about:blank"*/]);
}

// private void OnBeginLoading(object sender, Uno.EventArgs args) [instance] :318
void WebView::OnBeginLoading(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.WebView", "OnBeginLoading(object,Uno.EventArgs)");

    if (::g::Uno::Delegate::op_Inequality(BeginLoading1, NULL))
        uPtr(BeginLoading1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// protected void OnHistoryChanged() [instance] :449
void WebView::OnHistoryChanged()
{
    uStackFrame __("Fuse.Controls.WebView", "OnHistoryChanged()");

    if (::g::Uno::Delegate::op_Inequality(HistoryChanged1, NULL))
        uPtr(HistoryChanged1)->InvokeVoid(this);
}

// private void OnPageChanged(object sender, Uno.EventArgs args) [instance] :311
void WebView::OnPageChanged(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.WebView", "OnPageChanged(object,Uno.EventArgs)");
    UpdateRestState();

    if (::g::Uno::Delegate::op_Inequality(UrlChanged1, NULL))
        uPtr(UrlChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnPageLoaded(object sender, Uno.EventArgs args) [instance] :330
void WebView::OnPageLoaded(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.WebView", "OnPageLoaded(object,Uno.EventArgs)");

    if (::g::Uno::Delegate::op_Inequality(PageLoaded1, NULL))
        uPtr(PageLoaded1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnProgressChanged(object sender, Uno.EventArgs args) [instance] :324
void WebView::OnProgressChanged(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.WebView", "OnProgressChanged(object,Uno.EventArgs)");
    ::g::Uno::UX::ValueChangedArgs* ret5;

    if (::g::Uno::Delegate::op_Inequality(ProgressChanged1, NULL))
        uPtr(ProgressChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[100/*Uno.UX.ValueChangedArgs<double>*/], uCRef(Progress()), &ret5), ret5));
}

// public generated void add_PageLoaded(Uno.EventHandler value) [instance] :162
void WebView::add_PageLoaded(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_PageLoaded(Uno.EventHandler)");
    PageLoaded1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(PageLoaded1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_PageLoaded(Uno.EventHandler value) [instance] :162
void WebView::remove_PageLoaded(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_PageLoaded(Uno.EventHandler)");
    PageLoaded1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(PageLoaded1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public double get_Progress() [instance] :155
double WebView::Progress()
{
    uStackFrame __("Fuse.Controls.WebView", "get_Progress()");
    return ::g::Fuse::Triggers::IProgress::Progress(uInterface(uPtr(WebViewClient()), ::TYPES[104/*Fuse.Triggers.IProgress*/]));
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :158
void WebView::add_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ProgressChanged1, value), ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :158
void WebView::remove_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ProgressChanged1, value), ::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public void Reload() [instance] :432
void WebView::Reload()
{
    uStackFrame __("Fuse.Controls.WebView", "Reload()");
    ::g::Fuse::Controls::IWebView::Reload(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]));
}

// public bool get_ScrollEnabled() [instance] :302
bool WebView::ScrollEnabled()
{
    uStackFrame __("Fuse.Controls.WebView", "get_ScrollEnabled()");
    return ::g::Fuse::Controls::IWebView::ScrollEnabled(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]));
}

// public void set_ScrollEnabled(bool value) [instance] :295
void WebView::ScrollEnabled(bool value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_ScrollEnabled(bool)");

    if (WebViewClient() != _fallbackClient)
    {
        ::g::Uno::Diagnostics::Debug::Log3(::STRINGS[147/*"ScrollEnabl...*/], 0, ::STRINGS[148/*"C:/Users/bo...*/], 297);
        return;
    }

    ::g::Fuse::Controls::IWebView::ScrollEnabled(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), value);
}

// public void SetUrl(string value, Uno.UX.IPropertyListener origin) [instance] :376
void WebView::SetUrl(uString* value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.WebView", "SetUrl(string,Uno.UX.IPropertyListener)");
    OnPropertyChanged1(WebView::_urlName_, origin);
    ::g::Fuse::Controls::IWebView::Url(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), value);
    UpdateRestState();
}

// public string get_Source() [instance] :364
uString* WebView::Source()
{
    uStackFrame __("Fuse.Controls.WebView", "get_Source()");
    return ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(WebViewClient()), ::TYPES[27/*Fuse.Controls.ISourceReceiver*/]));
}

// public void set_Source(string value) [instance] :365
void WebView::Source(uString* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_Source(string)");
    ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(WebViewClient()), ::TYPES[27/*Fuse.Controls.ISourceReceiver*/]), (value != NULL) ? value : ::STRINGS[19/*""*/]);
}

// public void Stop() [instance] :437
void WebView::Stop()
{
    uStackFrame __("Fuse.Controls.WebView", "Stop()");
    ::g::Fuse::Controls::IWebView::Stop(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]));
}

// internal void UpdateRestState() [instance] :368
void WebView::UpdateRestState()
{
    uStackFrame __("Fuse.Controls.WebView", "UpdateRestState()");
    OnPropertyChanged1(WebView::_urlName_, (uObject*)this);
    OnHistoryChanged();
}

// public generated void add_URISchemeHandler(Uno.EventHandler value) [instance] :174
void WebView::add_URISchemeHandler(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_URISchemeHandler(Uno.EventHandler)");
    URISchemeHandler1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(URISchemeHandler1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_URISchemeHandler(Uno.EventHandler value) [instance] :174
void WebView::remove_URISchemeHandler(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_URISchemeHandler(Uno.EventHandler)");
    URISchemeHandler1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(URISchemeHandler1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public string get_Url() [instance] :389
uString* WebView::Url()
{
    uStackFrame __("Fuse.Controls.WebView", "get_Url()");
    return ::g::Fuse::Controls::IWebView::Url(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]));
}

// public void set_Url(string value) [instance] :390
void WebView::Url(uString* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_Url(string)");
    SetUrl((value != NULL) ? value : ::STRINGS[142/*"about:blank"*/], (uObject*)this);
}

// public generated void add_UrlChanged(Uno.EventHandler value) [instance] :170
void WebView::add_UrlChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_UrlChanged(Uno.EventHandler)");
    UrlChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(UrlChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public generated void remove_UrlChanged(Uno.EventHandler value) [instance] :170
void WebView::remove_UrlChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_UrlChanged(Uno.EventHandler)");
    UrlChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(UrlChanged1, value), ::TYPES[24/*Uno.EventHandler*/]);
}

// public Fuse.Controls.IWebView get_WebViewClient() [instance] :223
uObject* WebView::WebViewClient()
{
    uObject* ind1;
    ind1 = _webViewClient;
    return (ind1 != NULL) ? ind1 : (uObject*)_fallbackClient;
}

// public void set_WebViewClient(Fuse.Controls.IWebView value) [instance] :224
void WebView::WebViewClient(uObject* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_WebViewClient(Fuse.Controls.IWebView)");
    uString* ind2;
    uString* url = ::STRINGS[142/*"about:blank"*/];
    uString* source = ::STRINGS[19/*""*/];
    uString* baseUrl = NULL;
    bool zoomEnabled = true;
    bool scrollEnabled = true;
    ::g::Uno::UX::FileSource* file = NULL;

    if (_webViewClient != NULL)
    {
        ::g::Fuse::Triggers::IProgress::remove_ProgressChanged(uInterface(uPtr(_webViewClient), ::TYPES[104/*Fuse.Triggers.IProgress*/]), uDelegate::New(::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/], (void*)WebView__OnProgressChanged_fn, this));
        ::g::Fuse::Controls::IWebView::remove_PageLoaded(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)WebView__OnPageLoaded_fn, this));
        ::g::Fuse::Controls::IWebView::remove_BeginLoading(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)WebView__OnBeginLoading_fn, this));
        ::g::Fuse::Controls::IWebView::remove_UrlChanged(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)WebView__OnPageChanged_fn, this));
        ::g::Fuse::Controls::IWebView::remove_URISchemeHandler(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), URISchemeHandler1);
        url = ::g::Fuse::Controls::IWebView::Url(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]));
        source = (ind2 = ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(_webViewClient), ::TYPES[27/*Fuse.Controls.ISourceReceiver*/])), (ind2 != NULL) ? ind2 : ::STRINGS[19/*""*/]);
        baseUrl = ::g::Fuse::Controls::IWebView::BaseUrl(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]));
        file = ::g::Fuse::Controls::IWebView::File(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]));
        zoomEnabled = ::g::Fuse::Controls::IWebView::ZoomEnabled(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]));
        scrollEnabled = ::g::Fuse::Controls::IWebView::ScrollEnabled(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]));
    }

    _webViewClient = ((value != NULL) ? value : (uObject*)_fallbackClient);

    if (_webViewClient != NULL)
    {
        ::g::Fuse::Triggers::IProgress::add_ProgressChanged(uInterface(uPtr(_webViewClient), ::TYPES[104/*Fuse.Triggers.IProgress*/]), uDelegate::New(::TYPES[26/*Uno.UX.ValueChangedHandler<double>*/], (void*)WebView__OnProgressChanged_fn, this));
        ::g::Fuse::Controls::IWebView::add_PageLoaded(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)WebView__OnPageLoaded_fn, this));
        ::g::Fuse::Controls::IWebView::add_BeginLoading(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)WebView__OnBeginLoading_fn, this));
        ::g::Fuse::Controls::IWebView::add_UrlChanged(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[24/*Uno.EventHandler*/], (void*)WebView__OnPageChanged_fn, this));
        ::g::Fuse::Controls::IWebView::add_URISchemeHandler(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), URISchemeHandler1);
        ::g::Fuse::Controls::IWebView::BaseUrl(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), baseUrl);
        ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(_webViewClient), ::TYPES[27/*Fuse.Controls.ISourceReceiver*/]), source);
        ::g::Fuse::Controls::IWebView::ZoomEnabled(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), zoomEnabled);
        ::g::Fuse::Controls::IWebView::ScrollEnabled(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), scrollEnabled);

        if (::g::Uno::String::op_Equality(source, ::STRINGS[19/*""*/]))
            ::g::Fuse::Controls::IWebView::Url(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), url);

        ::g::Fuse::Controls::IWebView::File(uInterface(uPtr(_webViewClient), ::TYPES[36/*Fuse.Controls.IWebView*/]), file);
        applyFallbackCalls(_webViewClient);
    }
}

// public bool get_ZoomEnabled() [instance] :287
bool WebView::ZoomEnabled()
{
    uStackFrame __("Fuse.Controls.WebView", "get_ZoomEnabled()");
    return ::g::Fuse::Controls::IWebView::ZoomEnabled(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]));
}

// public void set_ZoomEnabled(bool value) [instance] :280
void WebView::ZoomEnabled(bool value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_ZoomEnabled(bool)");

    if (WebViewClient() != _fallbackClient)
    {
        ::g::Uno::Diagnostics::Debug::Log3(::STRINGS[149/*"ZoomEnabled...*/], 0, ::STRINGS[148/*"C:/Users/bo...*/], 282);
        return;
    }

    ::g::Fuse::Controls::IWebView::ZoomEnabled(uInterface(uPtr(WebViewClient()), ::TYPES[36/*Fuse.Controls.IWebView*/]), value);
}

// private static void goBack(Fuse.Controls.WebView view) [static] :58
void WebView::goBack(WebView* view)
{
    uStackFrame __("Fuse.Controls.WebView", "goBack(Fuse.Controls.WebView)");
    WebView_typeof()->Init();
    uPtr(view)->GoBack();
}

// private static void goForward(Fuse.Controls.WebView view) [static] :68
void WebView::goForward(WebView* view)
{
    uStackFrame __("Fuse.Controls.WebView", "goForward(Fuse.Controls.WebView)");
    WebView_typeof()->Init();
    uPtr(view)->GoForward();
}

// private static void loadHtml(Fuse.Controls.WebView view, object[] args) [static] :35
void WebView::loadHtml(WebView* view, uArray* args)
{
    uStackFrame __("Fuse.Controls.WebView", "loadHtml(Fuse.Controls.WebView,object[])");
    WebView_typeof()->Init();

    switch (uPtr(args)->Length())
    {
        case 1:
        {
            uPtr(view)->LoadHtml(uAs<uString*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[50/*string*/]));
            return;
        }
        case 2:
        {
            uPtr(view)->LoadHtml1(uAs<uString*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[50/*string*/]), uAs<uString*>(uPtr(args)->Strong<uObject*>(1), ::TYPES[50/*string*/]));
            return;
        }
        default:
        {
            ::g::Fuse::Diagnostics::UserError(::STRINGS[140/*"WebView.loa...*/], view, ::STRINGS[141/*"C:\\Users\\...*/], 47, ::STRINGS[138/*"loadHtml"*/], NULL);
            return;
        }
    }
}

// public WebView New() [static] :192
WebView* WebView::New4()
{
    WebView* obj3 = (WebView*)uNew(WebView_typeof());
    obj3->ctor_7();
    return obj3;
}

// private static string PreprocUriScheme(string inScheme) [static] :129
uString* WebView::PreprocUriScheme(uString* inScheme)
{
    uStackFrame __("Fuse.Controls.WebView", "PreprocUriScheme(string)");
    WebView_typeof()->Init();
    return ::g::Uno::String::Contains(uPtr(inScheme), ::STRINGS[143/*":"*/]) ? inScheme : (uString*)::g::Uno::String::op_Addition2(inScheme, ::STRINGS[143/*":"*/]);
}

// private static void reload(Fuse.Controls.WebView view) [static] :78
void WebView::reload(WebView* view)
{
    uStackFrame __("Fuse.Controls.WebView", "reload(Fuse.Controls.WebView)");
    WebView_typeof()->Init();
    uPtr(view)->Reload();
}

// private static void setBaseUrl(Fuse.Controls.WebView view, object[] args) [static] :119
void WebView::setBaseUrl(WebView* view, uArray* args)
{
    uStackFrame __("Fuse.Controls.WebView", "setBaseUrl(Fuse.Controls.WebView,object[])");
    WebView_typeof()->Init();

    switch (uPtr(args)->Length())
    {
        case 1:
        {
            uPtr(view)->BaseUrl(uAs<uString*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[50/*string*/]));
            return;
        }
        default:
        {
            ::g::Fuse::Diagnostics::UserError(::STRINGS[144/*"WebView.set...*/], view, ::STRINGS[141/*"C:\\Users\\...*/], 127, ::STRINGS[139/*"setBaseUrl"*/], NULL);
            return;
        }
    }
}

// private static void setUrl(Fuse.Controls.WebView view, object[] args) [static] :100
void WebView::setUrl(WebView* view, uArray* args)
{
    uStackFrame __("Fuse.Controls.WebView", "setUrl(Fuse.Controls.WebView,object[])");
    WebView_typeof()->Init();

    switch (uPtr(args)->Length())
    {
        case 1:
        {
            uPtr(view)->Url(uAs<uString*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[50/*string*/]));
            return;
        }
        default:
        {
            ::g::Fuse::Diagnostics::UserError(::STRINGS[145/*"WebView.set...*/], view, ::STRINGS[141/*"C:\\Users\\...*/], 108, ::STRINGS[146/*"setUrl"*/], NULL);
            return;
        }
    }
}

// private static void stop(Fuse.Controls.WebView view) [static] :89
void WebView::stop(WebView* view)
{
    uStackFrame __("Fuse.Controls.WebView", "stop(Fuse.Controls.WebView)");
    WebView_typeof()->Init();
    uPtr(view)->Stop();
}
// }

// C:\Users\borde_000\AppData\Local\Fusetools\Packages\Fuse.Controls.Panels\1.7.2\WrapPanel.uno
// --------------------------------------------------------------------------------------------

// public sealed class WrapPanel :34
// {
static void WrapPanel_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface7),
        ::g::Fuse::ITemplateSource_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface9),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface10),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Panel_type, interface11),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface12),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface13),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface14),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface15),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface16),
        ::g::Fuse::Drawing::ISurfaceDrawable_typeof(), offsetof(::g::Fuse::Controls::Panel_type, interface17));
    type->SetFields(117,
        ::g::Fuse::Layouts::WrapLayout_typeof(), offsetof(WrapPanel, _wrapLayout), 0);
    type->Reflection.SetFunctions(13,
        new uFunction("get_FlowDirection", NULL, (void*)WrapPanel__get_FlowDirection_fn, 0, false, ::g::Fuse::Layouts::FlowDirection_typeof(), 0),
        new uFunction("set_FlowDirection", NULL, (void*)WrapPanel__set_FlowDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::FlowDirection_typeof()),
        new uFunction("get_ID", NULL, (void*)WrapPanel__get_ID_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_ID", NULL, (void*)WrapPanel__set_ID_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_ItemHeight", NULL, (void*)WrapPanel__get_ItemHeight_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ItemHeight", NULL, (void*)WrapPanel__set_ItemHeight_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_ItemWidth", NULL, (void*)WrapPanel__get_ItemWidth_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ItemWidth", NULL, (void*)WrapPanel__set_ItemWidth_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction(".ctor", NULL, (void*)WrapPanel__New4_fn, 0, true, type, 0),
        new uFunction("get_Orientation", NULL, (void*)WrapPanel__get_Orientation_fn, 0, false, ::g::Fuse::Layouts::Orientation_typeof(), 0),
        new uFunction("set_Orientation", NULL, (void*)WrapPanel__set_Orientation_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::Orientation_typeof()),
        new uFunction("get_RowAlignment", NULL, (void*)WrapPanel__get_RowAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_RowAlignment", NULL, (void*)WrapPanel__set_RowAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()));
}

::g::Fuse::Controls::Panel_type* WrapPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Panel_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 118;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(WrapPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Panel_type);
    type = (::g::Fuse::Controls::Panel_type*)uClassType::New("Fuse.Controls.WrapPanel", options);
    type->fp_build_ = WrapPanel_build;
    type->fp_ctor_ = (void*)WrapPanel__New4_fn;
    type->interface17.fp_Draw = (void(*)(uObject*, ::g::Fuse::Drawing::Surface*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableDraw_fn;
    type->interface17.fp_get_IsPrimary = (void(*)(uObject*, bool*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_IsPrimary_fn;
    type->interface17.fp_get_ElementSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::Panel__FuseDrawingISurfaceDrawableget_ElementSize_fn;
    type->interface12.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface14.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface13.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface16.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface15.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface15.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface15.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface15.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseVisualGetEnumerator_fn;
    type->interface10.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface10.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface11.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface10.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_FindTemplate = (void(*)(uObject*, uString*, ::g::Uno::UX::Template**))::g::Fuse::Visual__FindTemplate_fn;
    type->interface10.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface10.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int32_t*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int32_t*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int32_t*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public WrapPanel() :94
void WrapPanel__ctor_7_fn(WrapPanel* __this)
{
    __this->ctor_7();
}

// public Fuse.Layouts.FlowDirection get_FlowDirection() :81
void WrapPanel__get_FlowDirection_fn(WrapPanel* __this, int32_t* __retval)
{
    *__retval = __this->FlowDirection();
}

// public void set_FlowDirection(Fuse.Layouts.FlowDirection value) :82
void WrapPanel__set_FlowDirection_fn(WrapPanel* __this, int32_t* value)
{
    __this->FlowDirection(*value);
}

// public string get_ID() :101
void WrapPanel__get_ID_fn(WrapPanel* __this, uString** __retval)
{
    *__retval = __this->ID();
}

// public void set_ID(string value) :102
void WrapPanel__set_ID_fn(WrapPanel* __this, uString* value)
{
    __this->ID(value);
}

// public float get_ItemHeight() :46
void WrapPanel__get_ItemHeight_fn(WrapPanel* __this, float* __retval)
{
    *__retval = __this->ItemHeight();
}

// public void set_ItemHeight(float value) :47
void WrapPanel__set_ItemHeight_fn(WrapPanel* __this, float* value)
{
    __this->ItemHeight(*value);
}

// public float get_ItemWidth() :39
void WrapPanel__get_ItemWidth_fn(WrapPanel* __this, float* __retval)
{
    *__retval = __this->ItemWidth();
}

// public void set_ItemWidth(float value) :40
void WrapPanel__set_ItemWidth_fn(WrapPanel* __this, float* value)
{
    __this->ItemWidth(*value);
}

// public WrapPanel New() :94
void WrapPanel__New4_fn(WrapPanel** __retval)
{
    *__retval = WrapPanel::New4();
}

// public Fuse.Layouts.Orientation get_Orientation() :64
void WrapPanel__get_Orientation_fn(WrapPanel* __this, int32_t* __retval)
{
    *__retval = __this->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) :65
void WrapPanel__set_Orientation_fn(WrapPanel* __this, int32_t* value)
{
    __this->Orientation(*value);
}

// public Fuse.Elements.Alignment get_RowAlignment() :88
void WrapPanel__get_RowAlignment_fn(WrapPanel* __this, int32_t* __retval)
{
    *__retval = __this->RowAlignment();
}

// public void set_RowAlignment(Fuse.Elements.Alignment value) :89
void WrapPanel__set_RowAlignment_fn(WrapPanel* __this, int32_t* value)
{
    __this->RowAlignment(*value);
}

// public WrapPanel() [instance] :94
void WrapPanel::ctor_7()
{
    uStackFrame __("Fuse.Controls.WrapPanel", ".ctor()");
    ctor_6();
    Layout(_wrapLayout = ::g::Fuse::Layouts::WrapLayout::New2());
}

// public Fuse.Layouts.FlowDirection get_FlowDirection() [instance] :81
int32_t WrapPanel::FlowDirection()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_FlowDirection()");
    return uPtr(_wrapLayout)->FlowDirection();
}

// public void set_FlowDirection(Fuse.Layouts.FlowDirection value) [instance] :82
void WrapPanel::FlowDirection(int32_t value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_FlowDirection(Fuse.Layouts.FlowDirection)");
    uPtr(_wrapLayout)->FlowDirection(value);
}

// public string get_ID() [instance] :101
uString* WrapPanel::ID()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_ID()");
    return uPtr(_wrapLayout)->ID();
}

// public void set_ID(string value) [instance] :102
void WrapPanel::ID(uString* value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_ID(string)");
    uPtr(_wrapLayout)->ID(value);
}

// public float get_ItemHeight() [instance] :46
float WrapPanel::ItemHeight()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_ItemHeight()");
    return uPtr(_wrapLayout)->ItemHeight();
}

// public void set_ItemHeight(float value) [instance] :47
void WrapPanel::ItemHeight(float value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_ItemHeight(float)");
    uPtr(_wrapLayout)->ItemHeight(value);
}

// public float get_ItemWidth() [instance] :39
float WrapPanel::ItemWidth()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_ItemWidth()");
    return uPtr(_wrapLayout)->ItemWidth();
}

// public void set_ItemWidth(float value) [instance] :40
void WrapPanel::ItemWidth(float value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_ItemWidth(float)");
    uPtr(_wrapLayout)->ItemWidth(value);
}

// public Fuse.Layouts.Orientation get_Orientation() [instance] :64
int32_t WrapPanel::Orientation()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_Orientation()");
    return uPtr(_wrapLayout)->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) [instance] :65
void WrapPanel::Orientation(int32_t value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_Orientation(Fuse.Layouts.Orientation)");
    uPtr(_wrapLayout)->Orientation(value);
}

// public Fuse.Elements.Alignment get_RowAlignment() [instance] :88
int32_t WrapPanel::RowAlignment()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_RowAlignment()");
    return uPtr(_wrapLayout)->RowAlignment();
}

// public void set_RowAlignment(Fuse.Elements.Alignment value) [instance] :89
void WrapPanel::RowAlignment(int32_t value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_RowAlignment(Fuse.Elements.Alignment)");
    uPtr(_wrapLayout)->RowAlignment(value);
}

// public WrapPanel New() [static] :94
WrapPanel* WrapPanel::New4()
{
    WrapPanel* obj1 = (WrapPanel*)uNew(WrapPanel_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

}}} // ::g::Fuse::Controls
